text,label
import randomcounter = 1while (counter != 50): num,random
"class application(frame): ""main canvas and buttons",tkinter
"if (i=='0x0f'): stat = int(log[i+1],16)",int
print 2 and 1-2 !=3,math
"list1 = [[1,1],[2,2]]list2 = [2,3,4]",list
"[['#', '#', '#', '#', '#', '#', '#'], ['#', ' ', '",list
a1 a10a10 b14c1 c14c14 c8,parsing
"[[a,b,c],[a,b,c],[a,b,c]]",list
"i/p = &gt; [2,5,1,4,7,3,1,2,3]",sublist
templist.append([on[1]-1]),list
"cursor = con.cursor()  cursor.execute(""select * fr",r
"add_numbers( ""a1"", ""element 560234 65952 6598881 2",string
"def mult(n, m): """"""mult returns the product of its",recursion
"params = urllib.urlencode({'method':'createuser', ",converter
a+=a=a,operators
"l = [('mite', 'time'), ('ant', 'nat', 'tan'), ('es",list
"('i', 'am', 'a', 'test', 'tuple')",tuples
i = 5*(2+2)print (i)#output = 20,math
# function to determine if a string contains three,string
one text file with query texts: (  srr1005851  srr,io
"class iddict(dict): def __getattr__(self,key): ret",dictionary
"x = input(""how many numbers do you have?"")",input
"number = 0number = int(raw_input (""hello, please e",variables
"searchletter = str(input(""enter a letter: "")hulkli",for-loop
TRUE,palindrome
@hwi-st1072:185:c325wacxx:1:1101:8553:1994:1:n:#ca,unix
spicy vegetable moo shu|1|true|140bbq pork|1|false,recursion
i = 10while i &gt; 0: print i*'*' + 2*(10-i)*' ' +,loops
TRUE,csv
1/25/2015 1:511/26/2015 11:221/26/2015 20:331/27/2,date
(ab|bc)* # (| represent or),c
'yhlq380' # must match'yhlq380' # nust not match'3,regex
"a = int(10)print a[""1""]should return &gt;&gt; 10[""",arrays
"$ar1 = array(""bobs"",""sams"",""jacks""); foreach ($ar1",list
function clean($a) { $clean_a = trim($a); $clean_a,regex
1 00 1,arrays
def is_buyable(n):''' return whether amount n mcnu,recursion
in [57]: aa = 123123.123213in [58]: aa/12out[58]: ,floating-point
range,range
list_len = 5,generator
user_input,set
"hash_eg={}hash_eg[10]= ""name1""hash_eg[10]= ""name2""",hash
x = 'beef please'new_dic = {x.index(y):y for y in ,dictionary
"schooldata = [] for x in range (0,3): #the number ",sorting
def hundredscheck(): if till.hundreds &gt; 0: till,function
mylist,list
"[1/1/9-1/1/13, 1/1/20-1/1/22]",list
import random #this module implements pseudo-rando,sql
"def merge_lists(head1,head2): if head1 is none and",list
string = '1234567890'splitted = []prev = 0while tr,split
".......ng0@gmail.com,ok.......ad@live.com,fail....",email
python.exe,command-line
@,regex
n = 10a= 20sum = 0i = 1while i &gt;= n and i &lt;=,integer
"foo = int(input(""number""))bar = int(input(""number""",performance
importer.py,python-import
9 73316991 73352391 del 99 354019 96058269 9605940,regex
"input_file = open('input.txt', 'r')output_file = o",io
"""aaaaaaa bbbb ccccc ddd""",string
[['8' '4' '2'] ['7' '6' '1'] ['6' '8' '1']][['87'],numpy
"x = 4name = ""josh""y = 3.2guess = truestuff = [""gui",variables
c,integer
"{""results"":[__ __ __{""text"":""@twitterapi __http:\/",json
"&gt;&gt;&gt; t=(0,0,3)&gt;&gt;&gt; t(0, 0, 3)&gt;&",list
"int main(){ int m, n; long long int x, y, z, j; lo",c
192.168.1.1,linux
number = raw_input('what is your answer?')if numbe,string
"class bird(object): def __init__(self, height, wei",class
"dict1 = {'a':1, 'b':2, 'c':3, 'd':4, 'e':5, 'f':6,",dictionary
"""self.unsupported_cmds = [r'\s*clns\s+routing',""",regex
"&gt;&gt;&gt;t=[2,2,3,3,3,4,3,4,2,2,2,2,2] # in thi",list
#!/usr/bin/env python##title: calculator.py#author,calculator
"file = open(""demo.txt"",""r"")text = file.read()def f",regex
"{0:[(1, 4, 5), (1, 7, 4)], .001:[(4, 6, 8), (3, 8,",dictionary
"def reverse_section(alist, start, end): """""" revers",list
"dummy = 10os.system(""cls"")x = input(""""""you use you",if-statement
"sdata = ""789c9d953d56c52010856363696d49e90aac73ecd",image
def fpol(x): y=x**4 return(y),return
import random# set the basic parameters of the gem,function
a,list
y = (x^2 + x)/2,math
"""foldgroup.registerimage({ domid: 'listimg7', srcu",regular-language
begin = int(input('enter begin: '))end = int(input,palindrome
"from goto import goto,labelfor i in range(1,10) : ",multithreading
"data_list = [['bob', [4]], ['jimmy', [8]], ['reece",list
"[[(u'hello@hello.com',)], [(u'hello@hello.com',)]]",list
"nums = [5,17,21,29]result = [12,16,24]",list
tclsh oommf.tcl avf2odt -average space -axis z -on,command-line
"random_list=[""h: 100"", ""g: 57"", ""k: 1"", ""p: 200""]",list
"a = [1, 2, 4, 3, 2, 1]",list
studentname,loops
def calculate(a): a = int(a) return a # or yield a,function
"pergunta5 = int(input(""que op†_†£o escolhes: "") if",syntax
"""('-1259656819525938837', 598679497)\t0.036787946""",string
binary search,c++
def main(): name = input('enter your first name: ',string
&gt;refaaaaaaa&gt;seq1bbbbbbb&gt;refaaaaaaa&gt;seq,bash
['lady'] ['hen']['horse'],list
"print ('rock, paper, scissors! the game of random ",debugging
"month = input(""\nplease enter the month\n"")if mont",if-statement
"owners detailsmuammmar gaddafi,1 alison driveidi a",random
"&lt;dt class=""col2""&gt;&lt;p&gt;rs. 2691.00__&lt;/",regex
import osdef rename_files(): #get all the files fr,file-rename
"def game(): # story background print ""you decide t",if-statement
json.loads,json
"def replace_all(text, dic): for i, j in dic.iterit",control
def newwords(): newgamewords.append(input('enter n,variables
"get_value(dictionary, key)",dictionary
"pattern.compile(""\\(*https?://[-\\w+&amp;@#/_?=~()",c++
"q = [w[i:i+6] for i in range(0, len(q),3)]for x,y,",list
"""{u'contributors': none, u'truncated': false, u'te",json
"p1 = raw_input(""player 1 ?"")p2 = raw_input(""player",string
"number = []if __name__==""__main__"":x = int(raw_inp",arrays
def multiply(num): (num1 * num2) num1 = random.ran,nameerror
"file=open('file.txt','r')for i in file: 'for evry ",string
"numbers = [12, 23, 26, 54]",numbers
"print '""hello""'",string
"result1, result2, result3",if-statement
&gt;&gt;&gt; right_justify('allen') allen,function
import turtleimport timewn = turtle.screen()wn.bgc,syntax-error
"data=open(""fk.txt"",'r')for i in data: print i",file
&gt;&gt;&gt; import tweepy&gt;&gt;&gt; dir(tweepy),twitter
select * from $wpdb-&gt;posts ,html
8 a8 a6 c7 b9 a,loops
"1,2,-3,3,-7,5,4,-1,4,5",list
"class window(frame): def __init__(self, master=non",tkinter
"&gt;&gt;&gt;import re&gt;&gt;&gt;string = ""ola eu ",regex
{{ }},regex
class user(object): def __init__(self) self.user_s,oop
import sysfrom sys import argvif len(sys.argv) == ,list
for(int i=1;i&lt;=c;i++){ for(int j=i; j&lt;=c;j++,for-loop
import randomimport itertoolsfile_name='words.txt',permutation
"dicmydictionary = {michael:jordan, kobe:bryant, le",dictionary
def greater_less_equal_5(answer): if 6 &gt; 5: ret,testing
country_encoded = 'eyjjtsi6iklzbgugb2ygtwfuiiwisfi,django
from pandas import dataframefrom itertools import ,windows
"class1 = { max: 10, 3, 5 michael: 4. 4, 8 jack: 0,",dictionary
def my_func(),oop
"s2 = ""fast and furious series from one to seven""pr",string
"w = 97items = [[17, 19], [22, 19], [65, 64], [21, ",arrays
solution: (ùÛù?Ëéù?Ëåù? kataba) [katab-u_1]  pos: ,regex
([^/\s]*)(/([^\s]*))?(\s*\[[a-za-z][a-za-z]\])?\s*,regex
fred smith -&gt; 25tree -&gt; 34frog -&gt; 0fred s,c++
"a = int (input(""your numbre :""))b = range(1,a+1)if",primes
"while 1: text_file = open(""write_it.txt"", ""w"") wor",file-io
iter,iteration
subprocess,subprocess
"nest = [[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]]",list
"encrypt = input(""enter your string: "") encrypt = e",listview
"def basis(i,x): if i == 0: b=math.exp(-x**2/(2*hba",physics
"def run(): smiths = {""father"": ""mike"", ""ex-wife"" :",http
"import randomrandomnumber=(random.randint(0,100))g",loops
"""stringtext sometext wwwwww someothertext othertex",regex
"with open('qwerty.csv', 'rt')as f: reader=csv.read",csv
"arr = [[2,6,8],[1,4,7],[3,3,4],[2,4,9],[3,3,7]]arr",lambda
cipher = 'a14e71a6f4e8d8e465c3c302c2a96bd2'aes = a,string
aaaxxxbbbxxxcccxdddxxxxxexf,string
"def findchannel(): rc_program_up = ""ch+"" rc_ok = """,loops
import csv csvbestand='inlog.csv' csv = open('inlo,csv
# &lt;init&gt; (lorg/cyanogenmod/audiofx/activitym,regex
.ani,animation
"answer = [('dodo', 'do'), ('sturdiest', 'st'), ('e",regex
"print(""help rick p. choose a car to drive."")print(",interactive
"['elvis','elo','eels','acdc']",string-comparison
"a 10,5,3,66,50b 2,10,1,88,5,8,9c 4,60,10,39,55,22d",awk
dictionary,list
"ll=[]for i in range(3): ll.append(""a""+str(i))print",list
"03420&amp;nbsp;&amp;nbsp;&lt;a href=""/kegg-bin/sho",html
"en = [1,2,3,4,5,6]",list
hereissometext thereisspacepreceding,regex
"print(""welcome to healthometer, powered by python.",error-handling
2-100,primes
1-x+(x^2)/2!-(x^3)/3!+(x^4)/4!-..............up to,series
"a=1for match1 in re.finditer('""id"":([^,]+)', lnkmo",loops
borla630000000,function
"list1 = [""x"",""y"",""z""]list2 = [1,2,3] ",list
"mydict = {'carl':40, 'alan':2, 'bob':1, 'danny':3}",sorting
abcdef,string
"nested = [{}, set([]), []]",list
# compute and display the customer bill for water ,loops
"try: with urlopen(""http://my.domain.com/get.php?id",if-statement
"import rer = re.compile('^([048]$)|([-]{0,1}[0-9]*",regex
"...createnode transform -n ""pcylinder1"";createnode",regex
import randomimport timedef mergesort(mylist): if ,function
for i in range(len(x)): globals()['string%s' % i] ,string-formatting
howareyou,string
&lt;l,sockets
"2, 4, 8, 16, ... , 1024",loops
n,algorithm
pygame.midi,pygame
for page in pdf.pages: pdf = page.extracttext() # ,regex
def show(x):a = 1b = 2if x == 12: return true ,return
expected result: joe foeactual result: joe foe no ,loops
"date +""%y""-""%m""-""%d""t""%h""-""%m""-""%s""",shell
sync,file-io
from lxml import htmlimport requests# you can use ,xpath
"f1=open(""foodp.txt"",""r"")word_features =[]words = [",sentiment-analysis
"&lt;div class=""yui3-u-5-6"" id=""browse-products""&gt",extract
chars_dict = {}chars_dict[0] = {'hp':750}chars_dic,renpy
0.105785959943 9.75133617601e+150.111906693211 9.0,bash
"f = open('quiz.txt','r')for line in f: line = wiss",linux
if a == b: # do somethingelif a == c: # do somethi,if-statement
0x01,string
import shutilimport getpassu=getpass.getuser() # t,syntax-error
my_string.split(),string
while number1error == 1: try: number1 = float(inpu,error-handling
c:\testc:\test\2009c:\test\2009\files\artistsc:\te,algorithm
introduce the number of lists you want to have: 3i,list
"var m_thisexample,",regex
pseudocode:// start codevar str = get['string']ins,c
100200 5978...59013,file-io
"traceback (most recent call last): file ""path"", li",xml
for x in somefunc():  print x,c++
"l = ['hello', 'hello', 'hi', 'hello', 'hello']",dictionary
"print l #first iteration will print :[1,1,1,1,0,0,",list
if length == 10 if boolean is false or length == 1,if-statement
def login(request): if request.method == 'post': u,django
"import jsonjson_data = open(""app.json"")data = json",json
n=input('enter number of terms')a=1print ab=1print,fibonacci
"def my_function(s): """"""size = s.size()"""""" print ""a",function
"i = 0while i &lt; n: print(""hello"") i += 1",redundancy
string.find(),regex
"string1 = ""27.86.80.76.83.45.66.71.80.45.76.68.80.",regex
"tax1 = input(""you may now tax your city. will you?",string
gif,google-app-engine
"if(match($option_enabledetails, ""1"") or match($opt",compare
"ip-1 = [40, 8, 48, 16, 56, 24, 64, 32, 39, 7, 47, ",list
from collections import counterwordlist = open('my,frequency
"&lt;div style=""background-color:#a7a7a7;text-align",regex
"urllist = ['http://www.google.com','http://www.yah",json
"pairs = [(1, 'one'), (2, 'two'), (3, 'three'), (4,",lambda
"a = [{'name': 150,'number': 100},{'name': 190, 'nu",list
"print (""{0:5s} {1:7s} {2:9s} {3:6s} {4:25s} {5:s}""",ruby-on-rails
re,regex
"import print_text echothis(""this is text"")exit()",class
2015-10-22t22:24:00.000,date
"def summultiples(num, limit): sum = 0 for i in xra",lambda
"number_plate = input (""number plate of car :"")vali",regex
"u'[ [ [ [""hello"",""w_0"",""w_0,w_10"",1], [""."",""w_1"",""",string
value1 + value2 + value3 ,md5
def bas(t): basket = np.zeros((t)) streaks = 0 for,probability
"['apple','cherry','coffee','apple','coffee','coffe",algorithm
myuser = 'username' myserver = 'http://api.url.net,url
import numpy as npimport matplotlib.pyplot as pltn,plot
while,while-loop
"x=501 while x&lt;1 or x&gt;500: nonos=int(input(""n",syntax-error
italic,closures
"list1 = [""hello"", ""goodbye"", ""ohai""]",list
for b in blocklist: if b.rect.left&gt;=0: if b.rec,pygame
"for letter in 'python': print 'current letter :', ",for-loop
regex = re.compile('name (\w)\w*') # what i mean b,regex
"['aa', 'ab', 'aaaa', 'ggg', 'agaga', 'a']",string
transpose_test_feature,list
class newclass{ int i;},class
"num = str(input(""please enter 7 numbers""))length =",multiplying
"class random &lt; dictionary def get vowels = [""a""",ruby
9300.1 9600.6 9300.2 9300.1 9600.5 9600.7,string
iterm,shell
import osrootdir = r'c:\users\hemant\desktop\testf,filenames
1.00 0.659 2.00 0.608 3.00 0.578 4.00 0.557 5.00 0,perl
my $host =~m/([^.])(\.swiss\.ch)/),regex
"print (""syntax %(name,name,name)"",sys.stderr)",sys
"[3, 5, 48][5, 9, 16][3, 15, 16][3, 3, 80][2, 5, 72",algorithm
pandas,linux
.txt,dictionary
0,list
def noalpha(s): noa = '' for c in s: if not (c in ,string
"def a(s,k):",function
def sort_list(unsorted_list): return unsorted_list,function
"for anum in range(10,20): for i in range(2, anum):",for-loop
"({15: none}, {7: none}, {2: none, 3: none, 4: none",performance
photo,regex
"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]",list
"numbers=[1, 2, 3, 4, 5, 6, 7, 8, 9]",list
#print (this is what it needs to output)#[last nam,string
"logfile = open(""logfile.log"",a)print &gt;&gt;logfi",logging
.py,class
"def fromdata(headerdata, offset = 0): """"""return a ",syntax
'tataaaaaaatgaca',algorithm
# variables supposed to work across rooms.havekey ,variables
paths[0],list
error: the password you entered for the username a,wordpress
print var8102&gt;&gt;&gt;,list
"sum = 0for x in [1,2,3,4,5] sum = sum + xprint(sum",for-loop
def main(): print('welcome to the wulfulgaster enc,user-input
"{1: 2, 3: 4, 4: 3, 2: 1, 0: 0}",sorting
import numpy as pyimport itertoolsfrom itertools i,arrays
"#variable inputname = input(""enter your name: "")pl",loops
"dicta = {f1 : [""s"",""r""],  f2 : [""p""],  f3 : [""w"",""",list
"list = [[1, 0], [2, 0], [3, 0], [4, 2], [5, 2], [6",list
"def self.threaded_with_field(story, field_name='vo",ruby-on-rails
exampledictionary = {'thing on ground': 'backpack',string
result.txt,string
"fun_string = """"""in ___0___, crazy ___1___ with ___",zip
"matrix = [[['23'],['47'],['35'],['-']], [['45'],['",loops
"{0: account(13, 1), 1: account(15, 5), 2: account(",dictionary
"somearray = [[""0"",""1"",""1"",""0""] [""0"",""1"",""0"",""1""] [",arrays
&lt;td&gt;mylink.com&lt;/td&gt;,html
"a = [{ 'a':'z', 'b':'x', 'c':'w', 'd':'v'}, {{ 'a'",list
"name = raw_input(""full name: "")",user-interface
#controlled assesment taskimport sysimport osdef r,assessment
[1-2],regex
"from python32_lja import*init_window(""menu"",600,60",nameerror
if choice == 2: actor = input('enter actor:') acto,if-statement
from random import *from graphics import *class my,recursion
"linea = [1,2,3,4,5,6,7]linetwo = [1,33,40,44,45,1,",loops
"import randomdef test(): w = [""dog"", ""cat"", ""cow"",",regex
"student,score1,score2,score3 elliott,12,2,12 bob,0",csv
re,regex
"print(""unendlicher fibonacci-generator rekursiv"")d",fibonacci
"input_list = ['a','aa','aba','abb']",list
defaultdict,list
"def balance(): balance=7.52 return balance print(""",undefined
"string = ""speaking in the commons, labour leader j",regex
&gt;&gt;&gt; def counter(start_at=0):... count = [,closures
.txt,dictionary
&lt;div class='head'&gt; article text &lt;div&gt; ,regex
nl20ingb0001234567,string
"""ëø,ë?,_ø,_?,†?,†“,†_,†_,†_,†ö""",windows
"given text = ""abc123xyz""",regex
"word=""patata""indeces=[]for letter in word: i = wor",indexing
def hashable(): a = dict() list_entered_by_user = ,list
from string import ascii_lettersimport reimport it,string
"a = [1, 2, 3, 4, 5, 6]for i in range(a[2], len(a))",iteration
gnu nano 2.2.6 #!/usr/bin/pythonprint 'activated'i,if-statement
"def round(x,n):return round(x,n)",rounding
[[1]] [[2]] [[3]] [[...]] a b f b c a c d b f z j ,r
a = [ 1 2 3]; b = [ 1 -2 3]; c = a==b; % c = [1 0 ,arrays
class rectangularprism(): length = rectangularpris,inheritance
">>> mylist = ['a', 'b', 'c', 'd']",string
x.setdata(),class
if is not 100 or is not 101: do something:,if-statement
"lst = [ 'acer', (['1000.0'], none), 'acer', (['100",list
"[volume:vol-xxxxxxxx, volume:vol-yyyyyyyy]",json
len,string
"a = [1, 1, 2, 2, 3, 3, 4, 4, 5, 5]b = [1, 2, 3, 4,",list
"class myclass(): def printer(name=""abc"", descripti",objective-c
"l = [[i, i, 1] for i in range(1,1000000)]def colla",performance
"#importing pygameimport pygame, sysfrom pygame.loc",pygame
"def chunks(l, n): for i in xrange(0, len(l), n): y",list
"myfile = open('log.txt', 'r')count = 0while 1: lin",eol
"s = ""700""parts = s.split(""."")",string
"[{ ""tr"": [{ ""name"": ""#for5rs"", ""promoted_content"":",json
initial = 0 or 1;final_value = (initial + 1) * -1;,math
"""tag: tie, tag: ball, tag: honey""",regex
configure/make,bash
"def viewdetails(): os.system('cls') print ""|______",sqlite
"print ""movie ratings""printprint ""you will be asked",user-input
"# values = [[0, 1], [2, 3]] to [[0, 2], [1, 3]]",arrays
please enter five numbers separated by a single sp,string
"&lt;div id=""tags""&gt;blah-blah&lt;a href=""http://u",parsing
"""""""write a function stats() that takes one input a",file
for currentdata in data: currentstate = '' count =,loops
import randomdef createpass(): num = str(random.ra,random
"[(a,3), (b, 4), (c, 5), (d, 1), (e,2)]",list
"print (""what is your username"")name = input () .ti",math
for char in lst:if len(char) == 3: print(char),loops
"def mystery(n): a, b = 0, 1 while a &lt; n: print(",function
"mylist = [var,var1,var2,var3]anotherlist = [var,va",list
"a =((248500353l, 11, '4', '248741302', 633, 7321l,",regex
"import jsonwindow_screen = {""window.screen"": {""ava",json
c:\\\\users\\\simon\\\\desktop\\\\file.jpg,csv
date:ip num#1 num#2 2013.09:142.134.35.17 10 12201,arrays
"['dinakar','indiana','python','python'].",list
"def screengrab():box = (347,170,1130,713)im = imag",text
"traceback (most recent call last): file ""scrapepro",loops
"def newchar(usrfile,usrlist): for line in usrfile:",recursion
begin = int(input('enter begin: '))end = int(input,palindrome
"traceback (most recent call last): file ""./nametim",linux
"mi_navif.c, mi_navif.c svd_state_check_sqif.c acq_",arrays
"cat1 = {""sam"":[4,9,7], ""jeff"":[3,3,6], ""ben"":[9,8,",list
"print(getcorrespondingvalue(""python"", [[""java"", ""s",function
js_data = session.query(tbl_users).create({'name' ,json
#write a line of code to produce a barchart of wei,r
"def travel(): totrate=0 def guide(): print""due to ",variables
"a = [""one"", ""two"", ""three"", ""four""]b = ""three""if b",list
"list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]list2 = [0,",list
"&gt;&gt;&gt; test = ['aaa','bbb','ccc']&gt;&gt;&gt",list
"#!usr/bin/pythonclass people: def __init__(self, f",file
"class song(object): def __init__(self, lyrics): se",object
+,regex
import fnmatchimport osdef listfiles(dir): rootdir,rename
{{ name = name prodcuer =producer writer = writer ,regex
findall_localizacao_tema = re.compile (':.? (*)' +,regex
"list1=[[1,2,3,4],[5,6,7],[8,9,0,11]]",list
"maxmin(f, a, b, n=1000)",max
def f(i): return i*idef g(i): return 1.0/(1+i*i)se,list-comprehension
print(re.escape('text;text')),regex
charge 1 of type 6 = -1.058011charge 2 of type 6 =,csv
"user = int(input(""input a number: ""))factors = []w",factorial
from tkinter import *root = tk(),tkinter
"if var1 != row2: print ""status 1: %s"" %var1 print ",if-statement
"f.write(""g3"")f.write("" "")i = raw_input(""enter the ",loops
for .. in,for-loop
from tkinter import * import tkinter# calculator i,tkinter
"lst1=[ ""(tower 3rd fl floor_window corner : option",regex
"import ossubprocess.call(['xterm &amp;'],shell=tru",linux
"a = input(""enter number : "") s = 3w = 1 while a&gt",algorithm
"import mathprint (""f(x) = ax2 + bx + c"")# #get a, ",math
"val houses = list(1, 2, 3, 4, 5) val orderings = h",scala
if index[y] == index[x]: continue else index[y] !=,if-statement
"def only_evens(lst): """""" (list of list of int) -&g",list
'http://www.virginiaequestrian.com/main.cfm?action,web-scraping
python3 -m venv flasksudo easy-install virtualenv,bash
"for i in range(len(b)-1): for j in range(i+1,len(b",arrays
"def ping_host(self,host_name): """"""ping host to che",boolean
"t1 = ('a', 'b')t2 = ('c', 'd', 'e')",tuples
"plt1=some_series.plot(marker='o', title='count dis",matplotlib
"name_input = str(input(""please enter your name""))n",string
"mylist1 = ['moi.alpha', 'moi.red']<br>mylist2 = ['",list
import stringupper = string.ascii_uppercaseupperne,string
a,list
"lst = ['thu apr 04', ' weigh in', 'sat apr 06', ' ",list
everything,regex
newfilename = str(file.key),linux
"import eyed3audiofile = eyed3.load(""19 calvin harr",mp3
"a = [1, 2, 3, 4, 5]print a[::-1][0] #method 1print",list
"for i in range(1,10): if i % 2 == 0: continue prin",loops
filename = input(msg),search
"l=[2, 5, 6, 7, 10, 11, 12, 19, 20, 26, 28, 33, 34,",list
"people = [ {""age"": 22, ""first"": ""john"", ""last"": ""s",list
import sysdef indexsearchstring(): ''' this functi,function
var = foocmd = '/etc/openvpn/easy-rsa/pkitool --se,bash
import collectionss = raw_input()k = (collections.,tuples
"&gt;&gt;&gt; test = json.dumps('{""content"":{""searc",json
"def calculatetuitionincrease(cost, increase, years",function
declare maze as array of array of integer initiall,arrays
#!/usr/bin/python# -*- coding : utf-8 -*-from math,arrays
(simple routine or function compiled or assembled ,c
def get_args(): '''this function parses and return,variables
"items = [""beef"", ""pork"", ""ham""]",list
"def countsubstringmatchrecursive(key, target): if ",recursion
"alist = [123, 'xyz', 'zara', 'abc']alist.append(20",list
string,return
"def n_times_print(c, n) s='' for i in range(n): s+",string
10may2013 3.1 http://ncbi.org p.sojae_aafeatureimp,mysql
"file = open('./blah.html', 'w')sample = ""in litera",html
"dict_users = {1 : { ""name"" : ""mtaqi"", ""email"" : ""t",list
"&gt;&gt;&gt; my_list = [(1,2,3,4),(5,6,7,8)]&gt;&g",list
"username = ""mo\nty""password = ""py\thon""f = open(""a",fwrite
"class archerdown: def draw(self, x, y, direction):",class
#!/usr/bin/env python#chooseadoorfrom random impor,random
4316,integer
"my %linebuffer; #with a ""%"" sign$linebuffer; #to c",regex
line = 'a but tuba!',split
"x : 11 (key, value pair)y : 5z : 6",list
import redef pigify(): user_input=raw_input() sent,regex
"for name, number in phonebook.iteritems(): print """,dictionary
"re.search(r'c\.t', 'c.t abc')",regex
"def merge_sort(arr): def merge(sub_arr,p,q): l = [",mergesort
"i = 0while i &lt;= 8: a = ['samsung', 'elctronic',",list
"aid: ""1168577519"", cmt_id = 1168594403;",regex
std::cout&lt;&lt;2.2f*3.0f&lt;&lt;std::endl; //pri,multiplication
"import randoma = open(""10.txt"", ""r"")#print (a.read",file
g_counter = 1j = im = 1plantotal = 0planmonth = 0d,loops
re.match(\w),regex
"z = []r = [""a"", ""b"", ""c"", ""d""]z.append(r)",list
"class person: def__init__(self, first, middle, las",class
# write a program that asks the user to enter name,indexing
"x = [13, 15, 27, 11, 13, 27]&gt; dict = {13:[0,4],",list
"a,b,c1,3,5c,d,e4,1,10",algorithm
"[('curly',35,'new york')]",arrays
"{""run_at"":1818086502,""quantity"":295092,""queue"":""un",json
"x = range(4, 7)y = range(2)x[2] = yprint x[2][0]pr",list
"def cut(self, cats, dogs): self.cats = cats self.d",self
x**1,regex
0244872...6186,list
" ['0', '0', '0', '-'] ['0', '0', '-', '0'] ['0', '",algorithm
"traceback (most recent call last): file ""emmmoisce",indexing
count = 100while count &gt; 0 : print(count) count,loops
"denaryno=int(input(""write a number from 1-64 ""))if",defined
"[{'parentguardianid': 'pg001'}, {'parentguardianid",list
"releases = [""11.3.0"", ""8.0"", ""1.0.6"", ""1.0.5"", ""1.",string
sample input (in plaintext) 1 1 2,input
"[u'posted by kendra e. on 3/17/2016', u'posted by ",regex
"class mystack(list): def __init__(self,a=[]): list",function
import jsonimport requestsdef getprice(request): t,json
def my_list (list): list=[] if list.sorted() == tr,list
"for i in range(1,7): if matrixa[i][1]&gt;0: print ",formatting
"file1=open(""casual.m3u"", ""r"")text=""""for lines in f",file
"[false, false, false, variable, false, false]",list
"txt_file = input(""text file: "")f = open(txt_file,""",user-input
name|age|address|phone|||||||||||..etc,parsing
**,math
"def code(self): for line,lists in enumerate(permut",list
asd22961ec04_asd22961eb04_asd22961ea04_asd22961ed9,string
"word = [""p"", ""y"", ""t"", ""h"", ""o"", ""n""]status = []fo",list
webapp.requesthandler,html
"(0, 0, 0)",pygame
"['1','2','3','4']",string
client.py aaron 12000 helloworld.html get,sockets
expect an indented block,functional-programming
iiiiiinnnnnnaaaaasssttteehhllppyymr,string
"num = []for i in range(2, numrows): row = [] for j",list
window.*},regex
"print('welcome to the daygram, the program that te",arrays
content = urlopen('http://www.kickstarter.com/proj,html
"class forest: def __init__(self,p,a): self.alive=""",class
import requestsdef call():payload = {'apikey':'945,json
"import rewith open(""in.txt"") as f: lines = f.read(",regex
def read_score_file(score_dic): #open file f = ope,dictionary
def reverse(text): length = len(text) while length,string
"n = [""andy"", ""warhol""]def littery(word): total = '",function
"list_1 = [('h', 'e', 'l', 'l', 'o'), ('w', 'o', 'r",list
"myjson = [{""linkid"":""changedrivelink"",""url"":""/driv",json
#!/usr/bin/env python# -*- coding: utf-8 -*-import,regex
"dict = { 44 : ( 43 , 34)}list.append(dict[44]);",list
"a_list = ['1, lastoë?ski', '2, kupala', '3, kolas'",list-comprehension
"rot(c,n)",add
def setup_framebuffer(surface): #create texture if,opengl
"def find_words(file_name, delimiter = "" ""):""""""a fu",string
"firstname = """"middlenamesurname = """"title = """"ppsn",class
k = (j + 13) / 27loop:if k &gt; 10 then goto outk ,c
dir(urllib),shell
"f = open('classa.txt', 'r')dictionary = {}for line",dictionary
dict,list
"s1=str(""aabcdabcdabcd"")x=0z=""""for i in range (1,le",string
"string = ""username: how are you today?""",regex
from urllib.request import urlopen import json req,api
"""abcd""",string
i don_—Èt like this book,regex
root = tk()prompt = (string)label1 = label(root.at,tkinter
del,class
def printboard(currentboard):#prints out the game ,function
name : siddata : lazy developer%description this i,parsing
"&gt;&gt;&gt; ['a', '3', '4']['a', '34']&gt;&gt;&gt",list
input: 'hgfd 0022222233333 4444 5556555 0000000'ou,regex
def randomly_pokemon_select_function(): from rando,list
"mylist=[('usd',1000),('thb',25),('usd',3500)]",list
^.+,regex
"[[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, ",arrays
3 5 2 1 3 4 2 3 4 22 1 32 1 8 7,arrays
"public static byte[] sendrequest(string url ,objec",optimization
"'""isn\'t,"" she said.'",escaping
"import remy_source = re.sub('\', '', my_source)",regex
"""an : gshj488gl67 customer : sh3893 acnt no : cgk3",regex
l_size,list
id abcd ac efg rf hij id klmno ac p rf q ,string
"lst = ['a', 'b', 'c', 'd']",list
"user_input = int(input(""please enter a multiplier!",string
x = raw_input('enter a numerator:')y = raw_input(',int
|=,bitwise-operators
"71751412, abamectin",csv
@required_admindef get(self):,google-app-engine
"['c','c','c','c','c','h','h','h','h','h','e','e','",list
"string = '41_1,41_2,41_3,44_2,44_4'",arrays
"mystring = ""function(macro(param)) { a = call(1)};",regex
the blue carthe yellow carthe red car,text
class main(): def __init__(): passdef main(): pass,oop
"text_file = open (""class1.txt"", ""r"") data = text_f",text-files
x xx xxx xxxxxxxxx,function
&gt;&gt;&gt; import simplejson&gt;&gt;&gt; data={',simplejson
public message(string content) { length = new int[,sockets
x,numpy
a = 'hello',string
var = 2if var == 2 print('yes')else: print('no'),syntax-error
"mylist = [['20120903', 'melon', 'shelf1', '05:31',",list
"[ '&lt;td&gt;1&lt;/td&gt;', '&lt;td&gt;2&lt;/td&gt",sorting
"enter code here""""""write a function that takes a li",loops
"list1=[12,25,45], list2=[14,69], list3=[54,98,68,7",list
my_date_time = json.dumps(list_of_objects),mysql
python,json
"#descriptionprint(""costs of ems responses"")print(""",string
from tkinter import*class myclassx: def __init__(s,function
#setbirthday sets their birthday to a date def set,try-catch
import mysqldb# open database connectiondb = mysql,mysql
atom 4 c4 unk x 1 7.747 4.310 5.563 1.00 0.00 cato,shell
def anti_vowel(text): text = list(text) vowel = 'a,list
strcmp(),string
"import pygame,sys,os,timefrom pygame.locals import",pygame
userinfo.put()u_id = userinfo.key().id(),google-app-engine
"price = '20,355' ",string
import randomrandom.seed()i = 0ii = 0iii = 0iv = 0,formatting
"test = ""3%, 7%, 10%, 11%, 50%, 75%, 77%, 82%, 91%,",progress-bar
{nokia}_b {lumia 640 xl}_m {lte}_o {8gb}_s,regex
//************************************************,algorithm
"for x in range(0,8):",arrays
n,function
ab56 tyr,string
"((apple,a1,a2,a3,a4), (durian,d1,d2,d3,d4), (cherr",list
"id = { 'name': { 'first',  'middle',  'last' }, 'a",dictionary
"t = [(""x"", ""1"",""11""),(""x"", ""2"",""22""),(""x"", ""3"",""33",dictionary
"from tkinter import *a = tk()canvas = canvas(a, wi",tkinter
apache,mysql
"def delete(elem_l, del_e): n_del = 0 for e, i in z",loops
"order=input(""please enter the name of the product ",text-files
"""ss in a dark room""true",string
"import restrength = ['you didnt type anything','te",colors
def function_four(): # does stuff function_one()de,function
"# -*- coding: utf-8 -*-import reweekdays = [""nedje",xml
#!/usr/bin/python2import multiprocessingimport sub,input
note: variable variable_s1 already exists on file ,sed
te,list
#calculate all the primes below 1000 result = [1] ,data-structures
"print (""welcome to the calculator"");print (""enter ",windows
from django.db import modelsclass summator: def su,django
qs_new = model_obj.objects.all(),django
1_306500682 2_315577060 3_315161284 22_315577259 2,perl
str = insert 0 9,string
"a=[[a1,b1,c1],[d1,e1,f1]]b=[[a2,b1,c2],[d2,e1,f2]]",nested-lists
def input_guess(guess): .... print 'you guessed: ',if-statement
v1v1v1v3v4v1v1,perl
[::-1],syntax
".replace("" "","""")",string
"a = [1,2,3,4,1,2,3,4,1,2,3,4]foo(a) ",list
"lorem ipsum dolor sit amet, consectetur adipiscing",regex
"command=raw_input(""j;/"")command1=""help""command2=""j",variables
"cursor_1 = conn.execute(""select cost from test whe",sqlite
#this function is to get the user to input the dat,function
select * from table where arg1=value or arg2=value,sql
django@linux-l94a:~/desktop/myblog&gt; ./manage.py,django
"import os,timedef child(pipein): while true: num1 ",fork
"import stringoriginal = ""g fmnc wms bgblr rpylqjyr",caesar-cipher
trojantrojanredirectsexploitstrojan,percentage
"&gt;&gt;&gt; import ex25&gt;&gt;&gt; sentence = ""a",import
"#set upimport pygame, sys, random, time, mathfrom ",function
chr1 38045559 38046059 chr1:38045559-38046559_nm_0,perl
"def signup(request, form_class=signupform, templat",django
"import randomdef game(): capitals={""england"":""lond",random
def upload_file(request):if request.method == 'pos,django
"traceback (most recent call last): file ""/home/hos",regex
common=[]for item in a: if item not in b: common.a,list
"import re, systry: file = open(""ttl.txt"", ""r"")exce",sorting
"list.sort(key=lambda (k, v): (-v, k))",sorting
"mylist= [ ['why', 'was', 'cinderella', 'late', 'fo",sorting
self.sock.close(),twisted
math,math
"im = image.open(""comocasto"")",image
"def move(self,to_send): photos = ['example1'] vide",list
"str = ""abcdefg12345""for ch in str: if ch in ""ab34""",swift
"[_—È2014-01-29_—È, _—È1119.12_—È, _—È1121.75_—È, _",string
"[[0, 2], [1, 3], [2, 5], [3, 2], [4, 5]]",arrays
"'[["" up to 300 g "", "" 900 yen "", "" 1,200 yen "", "" ",json
from random import*bye=[]teams=[]while true: team=,list
create,class
"x = ""hello world !""x[6:2:-1]",string
"import numpydef primesfrom2to(n):"""""" input n&gt;=6",numpy
accountsid=ac03e13571d5434152f33553f6&amp;messages,regex
"a = [6, 8, 12, 17]b = [2.0, 0.5, 1.2, 3.33]",list
from random import randintdef func1(my_list): for ,list
==,string
five sqlquery,sql
"list_of_lists = [ ['a', 'b', 'c'] , ['b','c'] , ['",list
address = ('http://www.somesite.com/article.php?pa,regex
set python = 1print (python),variables
"['persona', 'banana']['personb', 'banana']['person",list
self.hive_loc = set()for expected in self.expected,set
file = open('filename')word_list = file.readlines(,file
def _train(self): # prepare theano variables for i,machine-learning
self.__str__(),string
"list = [{""foo"": ""a"", ""bar"": ""1"", ""baz"": ""a_code""},",list
i = 2.,algorithm
quantity = int(input('enter the the quantity:'))if,if-statement
wethepeopleoftheunitedstatesinordertoformamoreperf,string
d-dddd-dddd-d,input
1.002.007.0018.00,dictionary
ben | 2 | 40germany | 6 | 60,parsing
"'1','2','3' '1,1','2,2','3,3' ",csv
"parameters = { 'a': 1, 'b': 2 }urllib.urlencode(di",ruby
ce,perl
a = 3 * b + c,loops
"import math print(""this is the program for the kni",chess
"str=""0xdeadbeef""",string
"url = ""https://www.abcde.com/api/""post_data = ""met",ruby-on-rails
"class permutation(object): def __init__(self, maxi",algorithm
"mylist = [0, 1, 2, 3, 4, 5]",list
jpg_paths,list
for i in range(list): number1 = number63*number99 ,list
fozz,for-loop
typeerror: cannot concatenate 'str' and '_sre.sre_,regex
+1 57166..61908 4743. ,bioinformatics
&lt;wordbook&gt; &lt;item&gt; &lt;name&gt;engrossm,xml
responsereport = urllib2.urlopen(requestreport)jso,regex
"[53,2]",string
from math import *import numpy as npimport scipy#i,numpy
"print text '\n', sentiment '\n', score",newline
"selection_points = [(( 1, 2, 3), ), (( 4, 5, 6), )",list
"""house"" == 1 (any single number) ",pandas
gears of war 3gears of warassassin creed..........,pandas
"x01, x02, x03, x04, x05, x06, x07, x08, x09, x10,x",list
"createnode transform -n ""bar1_1"" -p ""bar1"";",regex
from math import cos x = 2while x != cos(x): x = c,osx
"s1 = input(""enter in first word:"")s2 = input(""ente",list
"master =[23,5, 6, 34,11]list_check = [23, 6, 11]",list
for word in file: if type(word) == int: ...... if ,string
"typeerror: string indices must be integers, not st",json
"my_dict1 = {'a':1, 'chk':{'b':2, 'c':3}, 'e':{'chk",dictionary
"a=[]for i in range(0,10): a.append("" "")def table()",algorithm
"uint24=struct.unpack('&gt;i', '\0' + self.read(3))",struct
FALSE,numpy
#imports: none#defs:def userinput1(): x = int(inpu,function
"&lt;?xml-stylesheet type=""text/xsl"" href=""http://w",regex
"8.0025.14271.612,367.8252,124.099,37,159.82",regex
#!/usr/bin/python3import sysdef fopen(fname): try:,list
"welcome to the game, hangman!i am thinking of a wo",raw-input
import ref = open('c:\users\ziad\desktop\combinati,if-statement
python,list
"def lower_case(): file_name = input(""enter the fil",file
"mylist=[52,67,-8,-43,-20]&gt;&gt;&gt; m=0&gt;&gt;&",list
import randomnames = [about 150 names]print([names,random
list(),django
"for a in range(1,449): for b in range(1, 449): for",math
"def lu(a): n = a.shape[0] k in range(0, n-1): if (",syntax-error
"if ('sct', 'ovc', 'clr') not in words[i]: list_sta",list
#connect to db and stuffcheck_against = [] #list o,mysql
"int a; system.out.print("" numero de vezes: ""); a=s",for-loop
"tre = re.compile(""///--string text one. ends with ",regex
from sqlite3 import *$sqlite3 testdb.dbsqlite vers,database
# -*- coding: utf-8 -*-def dice(): import random n,function
box = boxwithoranges()print box['color']print box[,object
"countries=['usa','mexico','canada']#ignore militar",loops
"int checksum(char *str) { int i, sum = 0; for (i=0",string
import psutilp = psutil.process(7055)&gt;&gt;&gt; ,datetime
"module uart (inputs, outputs, etc)",regex
"linapprox((0,0),(1,1),(2,1.9),(3,3.1))&gt; y = x",numpy
"['2,alex', '5,james', '3,ben']",sorting
sumall(n),function
"&lt;button onclick=""grablatestrecord()""&gt;refresh",refresh
"msg[""x-recip-id""] = emaildata['campaignid'] + ""-"" ",arrays
for ( int i = 0; i &lt; count; ++i ){ for ( int j ,c
for noofgamesplayed = 1 to noofgamesinmatch,for-loop
input_file='input_'+case+'.in'os.system('./a.out i,fortran
"a = [[""ge"", ""us"", ""uk"", ....], [12, 11, 29, ...]]",list
"name = input(""what's your name?\n"")",nameerror
"difficulty = int (input ( '""1"" for easy \n""2"" for ",loops
"limit=100def calculate(num,denom): result=str(num/",algorithm
create table `queries` (`qry_id` int(11) not null ,mysql
def get_specials(): monday = {'b': 'horseradish om,list
101|something|something|2|something102|something|s,file
if x == 2: if y == 3: x = yelse: y = x,if-statement
if os.c:\users\\casper\desktop\headfirstpython\cha,path
"def convert_to_ascii(file,output): f = open(file, ",ascii
s = 'zwxpziblbm8gbmkgzwigdhn1tsapaxygicag's = s.de,base64
"import randomusers_name = input (""what is your nam",math
t = 'iirfke2rjtg96aulucqvdngozd2+w3fakuxtx9q6ttieo,escaping
"import urllib.request # example url url = ""http://",audio
"# -*- coding: utf-8 -*-import lxml,cookielib,urlli",py2exe
3 bham hoover - vestiva 123 234 1 456 876 1 876 74,parsing
"import randomimport timea = open(""settings.txt"", """,file-io
fw:.*(\s+).*,regex
"socket.create_connection(address[, timeout[, sourc",sockets
"2,2,23,3,34,4,46,6,6.,.,..,.,.",csv
mysqldb,mysql
"lyrics = re.sub(r"" a (a|e|i|o|u|y){1}([a-z]+|[a-z]",regex
def modify_field(param): #...model.objects.update(,django
import pyodbcimport csv# create connectioncnxn = p,pyodbc
"d = [(u'code', u'us'), (u'country', u'united state",list
from django.views.generic import listview,django
key,sorting
"list = [2, 5, 4, 1, 3]",list
"import randomx = random.choice([9, 10])def loop():",list
"{ ""stuff"": [ { ""name"": [ ""frfer"",  ""niddsi"",  ],  ",sorting
class ii(ldata) .....  self.mn() def mn(self) ....,class
'http://www.stackoverflow.com',urllib2
"str = ""i am an avid user of pandas""str_split = str",string
47 90 43 8 41 39 97 18 36 35 64 45 56 47 25 100 27,list
imgurl:,regex
def main(): command = raw_input('cmd#').lower()if ,linux
from pil import imageimport numpy as npimport math,evaluation
"for example enter elements for a list, one at a ti",list
"ans2=input(""are you ready???"")if ans2==""yes"" or ""y",if-statement
"lists = [[5, 8, 2, ""banana""][3, 6, 9, ""apple""][7, ",list
1,list
numberplate: bn30cwstime in: time in: 11:11:3time ,file
saes_fromstatematrix,sage
for word in sentence.split(): if word[0] in vowels,function
"xxx=""asdff"" yyy=""qwernlk"" zzz""jsfhla""xxx=""asdff"" y",csv
"def love6(a, b): if a==6 or b==6 or a+b==6 or abs(",if-statement
j o sh,for-loop
import xml.etree.celementtree as et#initialize xml,xml
lambda xxxx: a/b,lambda
res = requests.get(self.urlbase)soup = beautifulso,unicode
#starting flask#!flask/bin/pythonfrom app import a,json
"""fgmask_frame_20.jpg"",""fgmask_frame_40.jpg"",...""fg",regex
/usr/share/openstack,openstack
"import randomattempts=0secret=random.randint(1,49)",random
"list = [a, b, c, d, e, f, g, h, i, j]print max(lis",list
"print array[[1, 2, 3, 4, 5, 6, 7]]",numpy
fault-filtertime 5(.*)! th,regex
"dictionary = {'t':'1','u':'2','v':'3')",dictionary
"hashtag,frequency#car,45#photo,4#movie,6#life,1",numpy
indentationerror: expected an indented block,indentation
"spent = 0order = []menu = [ ['course', 'dish', 'pr",string
"array = [ [4,6,2,5], [7,9,4,8], [6,9,3,7] ]def rev",arrays
"def marriage(husband, wife): count += 1 node1 = py",variables
from random import randomclass pursuer(): x_tally ,class
--------------------------------------------------,regex
12211,extract
import randomemotelist = [bored]emotechosen = rand,list
"d = dict()key = 1, 2if key in d: d[key]['idx'] += ",append
"d = {'t': 1500, 'l': 1000, 'p': 1500, 'g': 6500, '",sorting
"findips('111.111.111.0', '111.111.111.3')",ipv4
warning: user mockbuild does not exist - using roo,centos
"print ""1 stands for paper, 2 stands for rock, 3 st",function
string a (stra):ns1-ns2-ns3-ns4-ns5-ns7-ns8-ns9-ns,regex
#define,c
"def merge_sort(a, p, r): if p &lt; r: q = int((p+r",variables
"class loginscreen(screen): def __init__(self,**kwa",kivy
"def detail(request, poll_id): p = get_object_or_40",django
def returnsomeobject(file): . . . someobject = loa,function
i=0while i&lt; len(urls): htmlfile = urllib.urlope,while-loop
"x 0 1 2 3 0 1, 1, 1, 11 1, 1, 1, 02 1, 1, 1, 13 1,",dictionary
"my_list = range(min_val,max_val,step_val)my_list.a",list
python myscript.py&amp;,shell
"[{'key':'value'},{'key':[{'key':'value'},{'key':'v",loops
"bif=""bg.jpg""lit=""little.png""import pygame, sysfrom",pygame
os.listdir(path),django
"attrs=""{'invisible': [('special_deduction_type', '",xml
class answer(models.model): question = models.fore,django
"list1 = [""1.10"",""1.1"",""1.23"",""2.20"",""2.2""]",sorting
"#!usr.bin/env pythonwith open('honeyd.txt', 'r') a",file-io
try to run this command from the system terminal. ,osx
chunksize = int(ceil(len(mystring) / float(numofch,string
"('2275.1', '1950.4')",regex
&lt;status&gt;,regex
import numpy as npx = np.arange(100),numpy
&gt;&gt;&gt; my_list = []&gt;&gt;&gt; my_list[:] =,list
"if row[0] == """": empty1 = ""true"" print ""row[0] nee",arrays
"'[1,2,3]'",string
"r = requests.get(urlas, params=params)r.json()",list
"x = [""ajk"",""exit"",""down"",""world"",""happyasd""]max(x)",list
"def sethp(self, hppercentage, curhp, maxhp): if no",int
# globaldata = []# classfoo: def __init__(self): s,class
2323.23.23.234545.45.45.4510034.34.54.13,loops
"choice = input(""would you like to decrypt or encry",encryption
"s1 = au,singh is ""ki,nng"",2005,,,no,,,",regex
"class property: def __init__(self, square_feet='',",oop
def get_lines( file ) pattern = r'.*[a-z]' lines =,regex
class fileupload(models.model): cstr = models.char,django
a,dictionary
"lista = [5,6,2]listb = [7,1]listc = [5,3,6]",sorting
h(n) = 1 + 1/2 + 1/3 + ... + 1/n,math
"import pygame,sys, random, timey = 0x = 0keepgoing",pygame
"import timeimport urllib.request, urllib.error, ur",pandas
"traceback (most recent call last):file """", line 18",methods
"def generate_testcase(testcase,path) path=os.path.",function
220,bits
def main():n= input('the size of the diamond :: '),c
your score for this lab: 20/20,parsing
print math.sqrt(int(h1)**2 + int(h2)**2),measurement
#!/usr/bin/pythonimport threadingdef function1(): ,linux
"def next_word(request): if request.method == ""get""",django
y = list(range(11))for x in list(range(11)): if x ,list
"&lt;span id=""target_text""&gt;  sample text &lt;spa",html
class readerthread(threading.thread):  def __init_,class
course = blaroom number(1)url http://foobar,bash
"sorted_event_types={} for key,value in sorted(even",string
"(foo, bar) = foobar()",syntax
while,while-loop
"class baseclass: def __init__(self, number): self.",class
a = input('enter your first name: ')b = input('ent,ordinals
"numcpu = sub.popen(""($(cat /proc/cpuinfo | grep 'p",int
p http://codeproject.com/kb/silverlight/convertsil,bash
#!/usr/bin/pythonimport stringimport reimport rand,file-io
"def choose_winnerpvsp(p1,p2):",variables
"classdict = {'g1': ['v1', 'g3', 'v2'],  'g2': ['g4",dictionary
def is_ladder(block): for i in range(len(block)-1),string
arr = [(line.rstrip('\n').split(';')) for line in ,arrays
list_1 = [[the guy was plaguy but unable to play f,arrays
"strings = [""and"",""the"",""woah""]",string
"import pygame, sysfrom pygame.locals import *pygam",pygame
log file created: 9/10/2014 4:03:21 pm------------,parsing
matplotlib,matplotlib
"def game(digits): five_digit = """" for x in range(d",function
|,regex
"random.sample(population, k)",random
"x = [1,2,3,4,5,6,7,8,9]y = [10,4,3,7,7,3,1,8,98]",arrays
"def find_fully_correct(answer, guess): """"""(list,li",list
"import rea=[]maxline=""i have a prof.john and as ma",regex
from email.mimemultipart import mimemultipartfrom ,syntax-error
list,tree
'&lt;h1&gt;test&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;,html
import randomcount = 0while count &lt; 10: attacke,syntax
"cur.execute('create table count(value1 text, value",sql
"hey = {'a':67, 'b': 98}&gt;&gt;&gt;a-67&gt;&gt;&gt",dictionary
min=0max=100firstguess = max - minfirstguess = fir,logic
both_ends,string
ca1ca2ca3,nltk
"['a, b, c, d, e, f, g, h, i', '1, 2, 3, 4, 5, 6, 7",list
"['a', 'c','a','b','b'] -&gt; ['a', 'c', 'b']",algorithm
"from re import compile list=compile(""(\w[\w']*)"").",numbers
"l=0a=1b=1i=int(input(""how many iterations?"" )def m",syntax-error
re,string
"wr = csv.writer(f,csv.quote_nonnumeric)wr.writerow",csv
numpy.ndarray,numpy
"x=input(""enter number: "")python xyz.pyenter number",counting
"teststring = """""" my name is %sand i am %s years ol",string
"# my version print ""geben sie eine zahl ein"" print",int
n,algorithm
1.8+36,math
#NAME?,generator
"import randomimport timename=input(""what is your n",loops
"@periodic_task(run_every=crontab( minute='5', day_",django
"food = ""apple""taste = ""sweet""dict1 = {}dict1[food]",list
"result = {key:value} dict = {key1:{value1:value2},",loops
stopiteration,list
file1,bash
"import itertoolsfor x, y in itertools.product([1,2",loops
"mylist1 = [ 23, 13, none, 65, none, 966, none, non",list
def list_printer(name): frame = sys._getframe(1) p,string
temp = 0 # temperaturevalve = 0 #control temperatu,loops
"@xmlelement(namespace = ""urn:ietf:params:xml:ns:ic",regex
print hourarrayif hourarray[0] or hourarray[1] is ,arrays
class stack(): def __init__(self): self.items=[] d,queue
"class _fonction_use_: def __init__(self,pos,functi",function
n,algorithm
"if text.find(""blah"")!=-1:",list
p1;1bgxtsequencemrgmlplfepkgrvllvdghhlayrtfhalkglt,parsing
for i in range (10): f=0 s=1 t = f + s print t f =,fibonacci
"arr1 = [25, 26]",arrays
pip install -u selenium,selenium
"[0, 2, 6, 12, 20, 30, 42, 56, 72, 90]",math
import requestsfrom bs4 import beautifulsoupr = re,beautifulsoup
&lt;h1&gt; - &lt;h2&gt;,algorithm
syntaxerror,list
django-admin,django
1020,stdin
"import math r_out = int(input(""insert rings outsid",nameerror
"""/table[1]/tr/td[2]/table[2]/tr/td[2]/p/b/text()""""",string
#checks user inputdef checkinput(): while true: tr,string
x,add
"#problem 4choice = ()while choice != 4: print ""1. ",list
"datafile=open('new.txt', 'w')extension = np.arange",numpy
markdown: [this link](http://example.net/),string
for example:for 10 in range(100):returns =&gt; [10,integer
&gt;&gt;&gt; d = 10&gt;&gt;&gt; float(d)10.0&gt;&g,decimal
if,arrays
"&gt;&gt;&gt; find_changes(4,[1,2,3])[[1, 1, 1, 1],",list
"def is_triangle(a, b, c): """""" :param a: length of ",automation
"x1 = [1, 5, 7, 9, 13, 17, 24, 30, 35, 46, 51, 60]",list
imran - 8joeseph - 5test1 - 6test2 - 4joeseph - 10,file-io
pass_loop += 1 #print 'the password is not correct,login
test_energy = []calculated_std = float('inf')absol,while-loop
var express = require('express');var app = express,node.js
"page=""village""while(page==""village""):os.system('cl",windows
name smith city boston country usaname meier city ,csv
"['html', 'header', 'title', 'body', 'div', 'div', ",list
"ordereddict([(u'catalog', ordereddict([(u'book', [",dictionary
str='this is the string that luci want to parse fo,string
"{ u'response': { u'username': u'robo', u'first_nam",json
"def keyword(): w=[7,3,19,5] x="""" g = 0 i=0 w2=inpu",encryption
"[111, 112, 113, 121, 122, 123, 131, 132, 133, 211,",list
#!/usr/bin/env pythonimport urllib2import jsonimpo,csv
"&lt;data1&gt;,&lt;data2&gt;asdf,&lt;data3&gt;asdf,",parsing
def queens(n): ''' how many ways to place n queens,function
class a(object): id = 1 def __init__(self): self.i,oop
"def quiz () : for i in range(0,1): import random f",sorting
"(show, (channel,views))",join
telnet 1.1.1.1 (no password or login required)#con,linux
"aggarwal, dr rakesh om",regex
unboundlocalerror: local variable 'pid' referenced,list
edern 38pellam 34ban 32lionel 30geraint 30brangain,sorting
if any (myword in s for s in listeword): print myw,regex
(first),list
"dict = {'hello':'world', 'hi':'again'}x = (str(dic",string
"my_funcs = {}for i in range(len(data)): def foo(x,",loops
"{ ""contestants"": [{ ""sid"": ""53d88ec46fb1721307f3a1",json
import tkinter as tkfrom tkinter.filedialog import,tkinter
map &lt;f5&gt; :w&lt;cr&gt;:!python %&lt;cr&gt;,vim
open(),file
"def function(a, indicators): print a[indicators[0]",list
report complete.on: e01a040e.xmledid raw data:--- ,perl
1 116969 116969 2 116973 116977 3 116977 117000 4 ,file
"re.compile('^.*(?=.{6,})(?=.*\d)(?=.*[a-za-z]).*$'",regex
"xarray([ 3.5, -3, 5.4, 3.7, 14.9, -7.8, -3.5, 2.1]",arrays
yield,list
"my_currentlist = [[a,b],[c,d],[b,e]]my_desiredlist",list
listica = []for p1 in org.bukkit.bukkit.getworld(n,list
int(),attributes
import beautifulsouphtml = '''http://www.kumby.com,beautifulsoup
re.compile('((.*)?=&lt;bangalore&gt;)'),regex
command,function
\t,text
class company(models.model): company_id=models.int,django
"name='admin'array=[['joseph', '03', '01', 'nn'], [",arrays
members_by_groups = { 'group0': { 'nestedgroups': ,cocoa
"#!/usr/bin/python"""""" description this script will ",function
hwi-st995:105:d0fy2acxx:2:2114:1764:93785 99 sl2.4,regex
def num_r(t): for x in t: if x&gt;tx: return num_r,numpy
tier_d[test - 1] = data[summoners[test - 1]['entri,json
import timeitcounter=0def fibhelper(n): global cou,function
def multiplynums(list1): result = 1 for element in,ipython
import mysqldb import urllib import urllib2 clone=,mysql
"&lt;l&gt;...&lt;/l&gt;, ",xml
# full part1 30 10,csv
'\t',dictionary
import mathdef mean(values): average = sum(values),math
"print ""hello!""print ""i\'m charlie and i\'m going t",indentation
"""[a,b,c]""",string
if len(interval) &lt;= 2: return 1,performance
s,unicode
a00a10a21,csv
"r={'a':'aa','b':'bb','c':'cc'}print(r[a])#this giv",dictionary
"def bin_criticality(): global gbv_bin_criticality,",runtime-error
for x in xrange(40): def functionname + x(): print,function
"elif text == '/image': img = image.new('rgb', (512",telegram-bot
class queue: def __init__(self): self.items = [] d,queue
"strings = ['abc123', 'bd45', 'ef1234']",string
"import os#os.system (""bash -c 'ls /home/'"")script ",html
"a=[0,1,2]#a's max size if a=[0,] a += [1] --&gt; [",list
"""parker,peter,wayne,bruce,wilson,wade""# i want the",while-loop
(nameerror: name 'join' is not defined),join
def find() : global addressbookall success = false,string
increase = 0def adder(number): number+=1 return nu,global
"page_data.replace(each, neweach)",replace
def averagefunc(): global new_d avgdict = {} for k,sorting
iteration = 0count = 0while iteration &lt; 5: for ,for-loop
1:name12:name23:name3...,text
"base = int(raw_input(""pick your base: ""))base = st",function
"import reresult = []with open(""text2.txt"", ""r+"") a",regex
"my_list = ['a7_1_1', 'a7_2_1', 'a7_3_1','a7_1_2', ",string
ok 17ok 9bkk 17ok 16ok 12bkk 16,if-statement
class,function
[x.upper() for x in b] ,list
"list = [['bike', 50], ['truck', 1000], ['microwave",list
'*',string
"alist = [2, 1, 4, 3, 5]alist.sort()=[1, 2, 3, 4, 5",list
"class employee(): def __init__(self, first_name, l",unit-testing
"[('at', 'tg'), ('gt', 'tg'), ('tg', 'gg'), ('gg', ",list
copy.copy temp = list(actuallist)temp = actuallist,list
"&gt;&gt;&gt; from decimal import decimal, getconte",integer
"#-----!!!!space invaders!!!!-----import pygame, sy",pygame
"def main(): name=raw_input(""what's your name?"") pr",shell
python somepythonfile.py arg1 arg2,bash
"_dict2 = { 'this.is.an.example': 2, 'this.is.anoth",dictionary
"id,image001,han.jpg001,leia.jpg001,chewie.jpg002,s",csv
email_accounts = emailaccount.objects.filter(user_,django
"n = eval(input(""how many student do you have to en",loops
a,list
aaa 0.0520852296 0.1648703511 0.1648703511 bbb 0.1,numpy
for i1 in [xrange(567)]: w = x1[i1] z = y[i1] zw =,arrays
"final_name = ""changes by"" + str(name)+"" ***""",fonts
"print(""{0[0]:10s} {1[0]:20} {2[0]:5} _£{3[0]:6} _£",list
valueerror: time data '2012-03-15 9:45:00 am' does,datetime
"['iad-cgnt:248.600000,ord-cgnt:319.301775,iad-mci:",list
import requestsfrom pattern import webimport reimp,python-requests
"a = [""bob"", ""joe"", ""eric"", ""frank"", ""john"", ""matt""",list
"def add(x, y): return x + ydef subtract(x, y):retu",restart
"def sem1sort1(semester1, selectionsem1): list = []",arrays
"ordereddict([('david', 63), ('adamz', 10), ('daloe",list
"from collections import counterliste = [1,2,3,5,10",list
#include&lt;iostrea&gt;#include&lt;fstream&gt;#inc,perl
"import randomprefix = ""05""print prefix + #all poss",random
"543,674,345,547,a788,474,687,290,b44,567,1,89,c...",csv
"def anonid(a,b): a = a.split('.')[0] if len(a) &gt",ruby
"file ""myfile.py"", line 184, in dpn_worker count +=",scope
# metaclass methodsclass meta(type): def show(cls),class
"import os, sys, repdf = re.compile(r'.*shandeep.*\",automation
.py,parsing
[^@]+@[^@]+\.[^@]+,regex
urllib2,urllib
for,if-statement
1x1x3,matrix
"&lt;parent&gt;  &lt;child attribute1=""100"" attribu",xml
"email,division,department",ruby
"def change_sign(list,n): if n in list1: return lis",function
"from bs4 import beautifulsoupurl = ""http://www.ber",beautifulsoup
'asdf123acx*23 #',regex
"import os, re, csvimport email, email.message, ema",syntax-error
"def hello(): print (""hello there python!!"")",web
"class loop: def __init__(self, exit=0): print ""loo",class
__init__.py,twitter
pageid,json
"import pygame, random, sysfrom pygame.locals impor",pygame
"def a(x,y,z): if x: return y else: return zdef b(p",function
"import randomcounter = 0flip = random.randint(1,2)",random
a.sort(key= lambda marks: marks[1]),lambda
from tkinter import *from random import randrange#,tkinter
chr3r 4000000 4005000chr3r 4005000 4010000chr3r 40,csv
www.ncbi.nlm.nih.gov/entrez/viewer.fcgi?db=nucleot,regex
option #1,performance
1 x2 r3 f4 t: :: :1000 k,bash
#frame dih_00000 1 -92.6371 2 -97.9913 3 -91.1572 ,linux
for i in kofai: pav = get_main_pav(i) body = i.fin,dictionary
"a = {'a':1,'b':0, 'c':5}b = {'d':4,'a':2}",dictionary
"def obtener_canales(): for i in range (1,3): url =",return-value
from urllib.request import urlopenurl_getallfolder,urllib
'lololol \r asdfasdf r\ gfhfgr',string
"import stringfile = open ('a.txt','r')txt = file.r",replace
"import numpy as npa = np.array([[1,2,3,4], [4,5,6,",numpy
"new_2 = [['id', 'fk'], ['1', '1'], ['2', '1'], ['5",list
if,list
nonpalidrome=[]for word in lowers: if len(word)&gt,sorting
f(x),function
def donuts(count): if count &lt;=10 : print 'numbe,string
"""s001p001q001""",regex
"import randoma = [random.randint(1,100) for i in x",time-complexity
"// for recivesockrecive = socket(af_inet,sock_dgra",sockets
user=request.useruser=clovek.objects.all().filter(,django
"&lt;item&gt; &lt;field var=""name"" type=""text-singl",xml
from django.db import modelsclass poll(models.mode,django
the man said hi,regex
"#!/usr/bin/pythonimport sys,javafrom java.util imp",unix
"exec(""import re;import base64"");exec((lambda p,y:(",string
g++ -std=c++11 stock.cpp,c++
&lt;tr style='background:#dddddd;'&gt; &lt;td&gt;&,html
"import res = ""hello world""if re.search(r'hello wor",regex
"from operator import itemgetter, attrgetterdata = ",sorting
hh:mm:ss,django
"header: id,indicator,{(pid,days_remaining)}row: id",unix
"import pygame, sys, time, randomfrom pygame.locals",pygame
tag_dic = {}for i in loop: tag_dic[i]return tag_di,dictionary
"in [351]: word_docid_pairsout[351]: [('bear', 1),(",sorting
s[::-1],string
akalistats,function
for n=1:n nbefore=n-1; nafter=n+1; ynew(n)=dt*u(n),matlab
"def versions (k): def variante(x): a=['3', '8'] #p",function
aaaaa aaaaabb bbbbbbbbbbbbbccccccccccccc,string
def api_json(request): try: x101=json.loads(reques,django
"[('1232', '07-10-13', 'yes'), ('1111', '07-10-13',",list
to_secs,time
"class foo(object): def __init__(self, value1): sel",properties
"def bucketsort(arr, k): counts = [0] * k for x in ",list
"from flask import flask, render_template, json, re",mysql
error: no module named blog,django
from __future__ import divisionimport argparseimpo,bash
import urllib.requestpage = urllib.request.urlopen,regex
popen(),performance
"from livewires import games, colorgames.init (scre",pygame
def judge(arg): flag = 1 if arg &gt; 15 else 0 ret,python-unittest
def create(t): if len (t[0]) != len (t[1]): raise ,increment
"divtag = soup.find_all(""div"", {'id':'articlebody'}",screen-scraping
{ cat wordlist.txt ; ls ~/folder/* ; } | wc -l,sh
#4356,regex
list,algorithm
data=f.read() regexp_email = r'(([\w]+)@([\w]+)([.,regex
dim objsfact dim objorun dim mystep set objorun = ,quality-center
t = telefonbok(),class
"a=open(""redchief.txt"").read().split()print ' \n'.j",string
"def sum(a, b) print ""enter sum!"" print ""a is"", a a",debugging
"&lt;a href=""""http://a0c5e.site.it/r"""" target=_blan",regex
"iscorrect = false print(""correct"" if iscorrect els",boolean
"4,85,646,127,548,2",csv
"import itertoolsset=['a', 'b', 'c', 'd', 'e', 'f',",hardware
"def insert(lista, listb, index): for item in lista",list
"num = raw_input(""enter your number : "")def calc():",function
"[100,123,111][010,789,222][001,123,222][230,789,23",list
"def sum(lower, upper, step = 1, func = lambda *x: ",lambda
"a={'vladimirputin':{'milk': 2.87, 'parsley': 1.33,",dictionary
data[i],loops
"def doprint(): print ""hello"", return ""world"" print",return
pprint(),pprint
"a = [[4.5555, 5.6666, 8.3365], [10.4345, 1.574355.",list
"traceback (most recent call last): file ""cntinv.py",typeerror
10 5,string
a = 10def test(): print(a),function
'2015-01-28 03:00:00' ,django
&gt;&gt;&gt; s = 1234&gt;&gt;&gt; s[0:3]123 ,string
"location = ""myhome""iprange = [""10.0.0.3"",""10.0.0.9",csv
__str__ returned non-string (type operator),django
"a = [1,2,3]for i in a: global a a = [4,5,6] print ",for-loop
if( int(array_y[counter2]) == int(round(float(elem,printing
from sys import argvfrom os.path import existsscri,branch
"limit = 1000def is_prime(n): for i in range(2, n):",algorithm
"old_list = [ ['id0', 'id1'], ['4', '8'], ['5', '6'",list
"print("" description product id price"")import csvf ",function
def func(alist): if len(alist) == 1: return arg * ,function
please enter an integer number (0&lt;=number&lt;10,string
user word : qeen,regex
95 cpd-1 -3.21 ooo56 cpd-1 1.21 ooo77 cpd-1 2.2 oo,bash
"x= [('a',1),('b', 2)]",list
enter the height:5 5 44 333 2222 11111,loops
subprocess.popen,exception-handling
list = [],list
#file cf.pya=1 import cfprint(cf.a),import
"str = 'str1','str2'dict={str:1}str1 = 'str1'str2='",string
"if plug in range(1, 5): print ""the number spider h",range
"class a(): def __init__(self, attr1): self.attr1 =",class
"import randommatches = random.sample (range(1, 20)",string
"[('thorough', true), ('bliss', true), ('earnest', ",dictionary
nums = [square_odds**2 for square_odds in nums if ,list
"import randomn=random.randint(1,50)playing = truew",if-statement
import scipy as spimport numpy as npimport pylab a,scipy
"[{'apr': 567.82, 'aug': 567.82, 'dec': 0.0, 'feb':",list
"l = ""thanks you for the help""",list
"[['1', '1', 'tall', 8.425169446611104], ['1', '2',",list
"def print_nested_list(input): """"""prints out every ",recursion
import nltkfrom nltk import *from nltk.tokenize im,file
"""spams spam and spam""",string
"words = [""please"", ""do"", ""loop"", ""in"", ""order""]for",next
"import mathdef getpoint(): x,y = eval(input(""enter",windows
train,apache
"values = ['1','2','-','-3','n/a','4','5']",string
linux command,linux
total = 0.0while true: try: total =+ float(raw_inp,loops
"a = [2, 3, 1, 4, 6, 8, 5, 9]b = [3, 8, 9, 4, 10, 1",list
from tkinter import * from tkmessagebox import *ro,tkinter
"cursor = db.execute(""select text from mytable wher",list
"def main(): string=input(""string"") pattern=input(""",pattern-matching
list,arrays
"adict = {'a': [1,2,3], 'b': [2,3,4], 'c': [3,3,6],",dictionary
line.split(),split
"def exe(a,b): if a == b: return 1",function
"datem = datetime.today().strftime(""%y-%m"")datem = ",datetime
#define welcome as the main menu page for editing ,function
"# define a procedure, find_last, that takes as inp",while-loop
"[1, 3, 5, 7, 10]",list
"b = [ {'id':'e1'},{'id':'e100'},{'id':'e3'},{'id':",sorting
url = 'http://www.example.com/wps/portal/!ut/p/c1/,parsing
re.sub,regex
def player():player 9 mike m 180 90 6 2 3.81 .283,xml
"l = [2,3,4,4,5,6,3]c = (10001)*[0]for i in l: c[i]",list
def new_option1(self): self.labelvariable3 = tkint,user-interface
"&lt;font face=""arial"" font-size=""16px"" color=""navy",web-scraping
import socketimport structimport timehost = '192.1,byte
import randomimport timedef randomcalc(): ops = {',random
s = [ 6.72599983 -7.15100002 4.68499994],numpy
seats = [] #each row has ten seats available atmpr,list
"s1000005 = s1000005,s1000006,s1000010s1000007 = s1",regex
"class environnement: def __init__(self, n, dic={},",class
837unnm9abcb9hfrhcop24cd,random
a = 3 2 1 4 5 7 6 9 7 8s = 30,algorithm
"human = {'name':'bogdan','age':'21','sex':'male'}a",json
"&gt;&gt; rna_strand_count('aaaa', ['aa']){'aa': 3}",string
"print(""please type in a username"")username = str(i",arrays
123 456 7 8,list
prints = []#imports and initsimport pygamepygame.i,variables
"s='123223423424,1982379879343'",regex
"import pygame, sys",import
"hello = ""hello""world = 'world'hello_world = hello ",concatenation
"brackets = [""("","")""]char = ""abcdefghijklmnopqrstuv",list
d:\zjm_demo\app&gt;appcfg.py upload_data --config_,google-app-engine
"def get_file(start_file): #opens original file, re",list
"wordlist = ['cat','dog','rabbit']letterlist = [ale",list
bbfreeze,executable
"def render_blog_topics(request, topic): categories",django
import scapypktlist = list() #create a list to sto,http
"code_digit(n, key)",encryption
#monthsjanuary=0february=31march=60april=91may=121,string
"name = str(input(""enter your name: ""))score = str(",file
"print (""what is your username"")name = input () .ti",math
hedge,string
$ python&gt;&gt;&gt; from ***.***.***.*** import *,objective-c
"a = ""hello""b = falsep = ""python rocks""q = true",string-formatting
def partitions(n): # base case of recursion: zero ,algorithm
"mrange(10**16,10**17)",list
"class a: def __init__(self,name,l1):  self.name=na",object
"namelist = sorted([""jan"", ""frank"", ""kim""])commontr",list
"list_1 = [""hi"",""hello"",""nice""]",string
"for i in range(len(x) // 4): a, b, c, d = x[i*4: i",function
"""elizabeth, 2, 7, 3, anna, 9, 6, 4, jenny, 8, 1, 5",sorting
"def concatlist(l1,l2) #&lt;--error in this line l3",list
re.findall(),regex
"import randomp= []for a in range(random.randint(5,",list
data = int(data),list
"x = int(input(""how many cities? ""))",algorithm
class room(object): #new style classes def __init_,class
"_—¢def shift(): value=eval(input(""please enter the",shift
"valid_chars = ""0123456789-+/* \n"";while true: x = ",calculator
np.linspace,matplotlib
line_re = re.compile(r'(\d{4}-\d{2}-\d{2}\s+\d{2}:,regex
python manage.py runserver ,json
0039-7806rrvlak,string
"code:list=['1','85863','432','93','549834']list.so",list
228;u;ali;129;cr;daan;730;c;arton;466;cr;frynk;314,sorting
"import randomimport stringwordlist_filename = ""wor",function
def distance_from_zero(x):  if type(x) == int or f,function
import time as tfrom os import pathdef createfile(,builder
def rec_fac(n): if n == 1: return n else: return n,recursion
"&lt;div class=""blalbal""&gt;&lt;h2&gt;data5&lt;/h2&",html
"exec(""def f():print 123""); f();",perl
"when [python] or [html ] demo ""css html"" -[javascr",regex
"urlpatterns = patterns('', (r'^$',index), (r'^admi",django
"&gt;&gt;&gt; open('foo.py','r')&gt;&gt;&gt; open('",file
def travelmanagement(): trate=[] totrate=[] finrat,function
"print(""welcome to the currency converter"")print(""t",function
&lt;function fhd at 0x7f52d72ceaa0&gt;&lt;function,match
forall ${dir} in ${parent_dir}if ${dir} is modifie,bash
"according to james, ""we do not know"" the source of",expression
def getappnames(): for app in service.apps: print ,return
"a=5b=6c=-3d=-8lista = [a,b,c,d]lista.sort()lista.r",list
import randomclass quicksort(object): def _choose_,algorithm
"a = [[1, 1, 1, 1, 1], [2, 2, 2, 2, 2], [3, 3, 3, 3",numpy
word = raw_input('your word: ')if len(word) == 0: ,language-translation
"import numpy as npx = np.linspace(1e10, 1e12, num=",arrays
'life.state.step',object
__author__ = 'jun'# -*- coding: utf-8 -*-import sy,file
"cpu = dict [{'ts':""00:00:00"",'values':[3,4,5,67,3,",json
"def main(): while taketurn(word,shield) == false: ",maze
"data_small = [ ['a','b','c'], ['d','e','f'] ]data_",list
"s = "" what is my name""def reversstr(s): for x in r",reverse
"import osimport syssys.path.append(""c:\pysec-maste",django
super,django
"data-price=""4.7056""",web-scraping
"result.insert([1][0], 'o')",dictionary
for,qt
def removedots (input): for i in input: p = i[2] p,arrays
"&lt;td&gt;xxxxxxx&lt;/td&gt;&lt;td style=""display:",html
"#################def getresults(name, price):# whe",list
"&gt;&gt;&gt; a = [1, 2, [3, 4], 5]&gt;&gt;&gt; pri",list
x y 1467153 12309 1466231 21300  . .  . . 1478821 ,list
for elem1 in mylist: def function1(): for elem2 in,function
"(a, b, c, d, e)(a, b, c, e, d)(a, b, d, c, e)(a, c",combinations
1 1 21 2 32 2 31 1 3,file
year/month/day,date
import randomimport timeprint('this is a guessing ,break
"y = [{'faz': 'baz'}, {'foo': 'bar'}]",list
#!/usr/bin/python import sys fname = sys.argv[1]ha,barcode
for,arrays
struct xyz { uint64_t a; uint32_t b; uint16_t c; b,struct
"class someclass: def __init__(self, arg1, arg2..):",class
response = urllib2.urlopen (url) image_file = resp,urllib2
pip uninstall tidylib,package
"class par(object): def __init__(self, chip, fig): ",oop
'file.txt',string
sqlalchemy,mysql
"var = 1vars = []if var &gt;= 1: # add it to ""vars""",list
"file ""c:\python34\lib\site-packages\selenium\webdr",selenium
discriminant = (b ** 2) - 4(a * c),error-handling
"list = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]num_sublists ",list
"[0, 0, 0, 1][0.1, 0.8, 0.1, 0][0.2, 0.2, 0.2, 0.4]",math
d:\sarfaraz\python&gt;python assignment_01.py trac,oop
"[u'first ', u'second ']",pandas
for line in infile: line = line.strip() m = re.fin,regex
"x = [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, ",numpy
"(0,0)(0,1)(1,0)(1,1)",c
"{'a': { 1: -0.25, 2: -0.2} 'b': {1: 'foo', 2: 'bar",dictionary
month total rainfall----- ---------------jan 10feb,indexing
none,kivy
"""nameerror: name 'a' is not defined"".",function
"def main(): sss = 0 oa = 0 calc (sss ,oa) print (""",function
"listone = ['33.325556', '59.8149016457', '51.12894",arrays
"import jsonwith open ('dataforms.json','r') as f: ",json
"#program beginsx = raw_input(""give me the first nu",tuples
time.sleep(),file
"import shutil, os",import
"def evolve(): global pop,fvals for g in xrange(0,g",file
"#collects user inputatomic_number = raw_input(""inp",variables
img = imread('');grayimage = rgb2gray(img);kernel1,matlab
399.6097561,numpy
return,printing
"def __init__(self, *args, **kwargs): super().__ini",django
"['""442116.503118"",""442116.251106""', '""442141.50286",arrays
&gt;&gt;&gt;s='shrubbery'&gt;&gt;&gt;l=list(s)&gt;,delimiter
sequence1: atgcaccgtsequence2: gacctagca,file
"['one', 'two', 'three', 'four', 'five']",string
class customer(models.model): name = models.charfi,django
sudo,passwords
k,optimization
#define let def,syntax
wget -o numpy_27_64.exe -c http://www.lfd.uci.edu/,numpy
data_in =\{'map': {'command_line': u'command goes ,list
"dict1 = [{'date': 1, 'name': 'xyz', 'qty': 100}, {",functional-programming
letters = 'abcdefghijklmnopqrstuvwxyz' encryption_,encryption
"names = 'john foo and baz, mike tom and bar foo, s",split
"obj = {classname(""cust""),classname(""address""),....",dictionary
"file = input(""enter a filename: "")try: a = open(fi",file
__init__,oop
"import pandas as pddata = pd.read_csv(fp, sep='\t'",datacolumncollection
"traceback (most recent call last): file ""c:\users\",loops
"x=[a,b,c,d,e]",list
from lvl import lvlfrom get import getfrom image i,linux
"$var='text';'$var' _æê $var""$var"" _æê text",string
"def retrieve_input(self): input1 = self.txt1.get(""",file
"def toenglish(s): words = s.split("" "") ; # split b",wxpython
abs,built-in
a = 'blueberry'print a[-1:-3],indexing
&lt;issuer&gt;fotokem&lt;/issuer&gt;&lt;creator&gt,xml
def loadoldxml(path): global ppszjsonstackperdev p,mysql
"'class=""a"", class=""b"", class=""ab"", class=""body"", c",regex
"files = os.listdir(""2014/"")",ubuntu
12insert 0 5insert 1 10insert 0 6print remove 6app,string
getname = []for word in args room.usernames.get(ar,list
"userin = ""h""",string
"print(""enter the homework scores one at a time. ty",loops
from datetime import datetimenow = datetime.utcnow,timestamp
"var = """"",variables
0,list-comprehension
import sysimport tracebackfrom catch_errors.my_fun,exception
-0:,regex
"listdict =[{'name':'a', 'fun':'funa',  'childs':[{",list
"class command(noargscommand): help = ""this will up",xml
classnames = studentname and scoreif studentname n,list
get_int_input,class
1;2;0.0008131 1;714;0.0001097 714;715;0.0016285 71,file
"{'1': 2, '0': 0, '3': 4, '2': 4, '5': 1, '4': 1, '",dictionary
"f = open(class_name + "".csv"", 'rt') file_ = f.read",csv
"charone=input(""please input your first character's",speech
name = 'john'location = 'new york'print('my name i,input
from flask import flaskfrom flaskext.mysql import ,mysql
"while true: x = raw_input(""enter &gt; "") xl = [] x",list
decision2,list
class equipment(object): __id = 0 __type = 0 __bra,inheritance
gawk,bash
"def challengerplayers(region, types, apikey): url ",json
"my_list = [""this"" ""is"" ""an"" ""example"" ""list"" ""hehe",list
"file = '/home/ec2-user/abc.txt'paths = open(""file""",linux
"{ ""newcaselist"": [ { ""registereddate"": ""2015-07-10",list
all_rooms,list
wget -o example.xml http://gdata.youtube.com/feeds,xml
/html/body/span/section/main/article/header/div[2],selenium
"[ [ [ { 'a': 'b' }, { 'c': 'd' } ], { 'e': 'f' } ]",list
"class card(object): """""" creates a playing card fir",class
"""you need function shoe_size at 0x030236f0&gt; siz",function
time = int(input('how many minutes were you exerci,loops
"import randomcards = ['ace', 'ace', 'ace', 'ace', ",simulation
import smtplib fromaddr = 'myemail@gmail.com' toad,email
import copyimport cv2from matplotlib import pyplot,image
1----- = x  1+x,math
"""https://www.sometime.com""",coding-style
"import matplotlib.pylab as pltplt.axhspan(0, 1, fa",charts
yowsup,whatsapp
x = ['p: 7678643 f: 123456 e: ttt@jhj.in'],dictionary
"def keyword_searcher(): user_query = input(""enter ",keyword
"user_code = eval(input(""hello please enter a coupo",input
"if '(' in obj.value or ')' in obj.value: city, cou",regex
import numpy as npfrom matplotlib.pyplot as pltx =,syntax
#!/usr/bin/python# -- coding: utf-8 --import xlwti,html
0 24 10 35 43 2,sorting
o213yb = '1111 2222' b443th = '3333 4444' data = [,list
"""this is a string with the value of #{variable} sh",string
dot -tpdf somefile.dot -o somefile.pdf,bash
a,class
"#variablesdestination = "" ""milesdest = 0mpg = 0gal",syntax
import itertoolsfrom itertools import izip_longest,list
drop table if exists stocks;create table stocks ( ,sql
"d={'s1':{'a':[1,2,3],'b':[4,5,6]},'s2':{'d':[77,88",dictionary
enter code here,perl
class player: ''' actions directly relating to the,class
fasta,unix
0 pyrobaculum aerophilum thermoproteaceae<br>1 myc,sorting
width=input('please input width')price_width =10it,string
[line.strip() for line in lines],string
"def quicksort(alist, start, last): i = start + 1 j",quicksort
1234567 89 'if its 7(length of sub-string) and 2(n,perl
"title , rating [('""$weepstake$"" (1979) {(#1.2)}', ",printing
"num1 = int(input(""enter number 1:""))num2 = int(inp",class
"elif a == ""other"": numbers = [randrange(33, 126) f",list
files.txt,list
"dict = [{'author':'joyce', 'novel': 'dubliners'},{",dictionary
"unencrypted shared secret = ""my shared secret"" une",encryption
"import restr1=raw_input(""room number(l1 - l5): "")t",regex
email.message_from_string,email-parsing
"[['jhidalgo', 19, u'6,8'],['jhidalgo', 19, u'5,3']",list
"data = [{'1234': [{u'gateway_ip': u'172.20.21.1', ",list
or,pep8
"children=zk.get_children(""/my/example"", watch=my_f",list
data2 = pd.dataframe(data1['kwh'])data2 kwhdate 20,scikit-learn
"# open netcdf filefd1 = nc.dataset(nc_file1, 'r')#",math
windows bat,perl
"dict = {'hello':'world', 'hi':'again'}x = str(dict",string
n=1000,math
grb.quicksum(nx.shortest_path_length for i &gt; j ,gurobi
# -*- coding: utf-8 -*-import randomdef randomlist,random
"class class():  def __init__(self,**kwargs): print",class
def main(): num = int(input('please enter an odd n,boolean
ret = u.run('''echo'''),linux
in [38]: decimal('0.000000000000001')out[38]: deci,decimal
list,list
1 || awdawd@awdawd.com || awlkdjawldkjalwdkda2 || ,regex
import pygamefrom pygame.locals import *pygame.ini,pygame
m_angle = math.degrees(math.atan(float(thing.posit,math
"package mainimport (""fmt"" ""os"" ""bufio"")func main()",performance
"conn = mysql.connector.connect(user='root', passwo",mysql
from __future__ import print_functionimport blockt,if-statement
"import sysa =int( sys.argv[1])print ""\narguments -",argv
"def add_scale_2(l, m, l_scale, m_scale):"""""" add_sc",function
"{""account_balance"": 0,""cards"": { ""count"": 1, ""data",json
"quote=""inquiring the application issues""t=quote.ti",replace
"stack, queue and linked list",linked-list
import sysnum1=int(input('enter your number range:,loops
"girl names,count of girl names,boy names,count of ",csv
"map = { 'a': 4, 'b': 6, 'c': 'a+b', 'd': 'c+a+4'}",string
str = 'fakeline\nfirstline\nsecondline\nthirdline',regex
super(),class
"appname = ""ap01""optna = ""-server""optnb = ""-filenam",cmd
"class vehiclenumber:def __init__(self, name): self",list
1 100 25 t1 101 26 a1 101 27 g1 101 30 a1 102 40 a,perl
class mydoc(document): dictfield = dictfield(),django
class externalfriends(models.model): external_user,mysql
"import mathdef main(): print(""prime number or not""",break
id,if-statement
"line 66, in &lt;module&gt; ting.movefigure(ting, """,tkinter
"primary_system1 = (3531820.440, 1174966.736, 51622",coordinate-transformation
&gt;&gt;&gt; m = 3403&gt;&gt;&gt; 31 % m31&gt;&gt;,modulo
********** ***** ,loops
"&gt;&gt;&gt; a[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]&gt;&g",iterator
"for termid, value in doctermdic[docid].iteritems()",algorithm
"i = path.rfind('.') module, attr = path[:i], path[",django
import numpy as np import mathimport itertoolsdef ,performance
"l1=[1,5,6,9,10,13, ...] l2=['1,5', '6,9', '10,13',",list
re,regex
import scrapyclass oddsitem(scrapy.item): title = ,scrapy
"with open('a') as f: a, b = f a, b = a.strip(), b.",bash
test.py,return
def s(): v = 6 + 4 a() return vdef a(): ace = v + ,function
$ sudo apt-get install git,git
#made by will bishop with help from cdontsimport w,user-interface
file_string = &gt;sp|q1abcd|003r_frg3g(438aa)uncha,regex
"import mysqldbdb_mysql=mysqldb.connect(user=...,pa",postgresql
def remove_adjacent(nums): i = 1 while i &lt; len(,recursion
'(+ (- 5 4) (- 2 1))',arrays
views.py,django
if,function
"400 get internet/results http?=likelyanswer, (loca",regex
import urllib2from beautifulsoup import beautifuls,web-scraping
useranswerlist[],list
"dbh = []string = (""%s/t%s/t%s/t%s"") % (i1, i2, i3,",arrays
"def createpath(self, path, nameoffile ): temp = []",string
import beautifulsoup as bsfrom beautifulsoup impor,beautifulsoup
"name position letter stringbla 123 a ..b.,,,.c..bl",perl
qd-p64-dzp-d64-z8-8nn.q qd-p8-dpz-d8-z1-1nn.q qq-p,bash
"bob: owns(car, v_bmw)john: buying(bike, v_harleyda",regex
dl[vr],arrays
from googlemaps import googlemapsplace1 = raw_inpu,google-maps
mod_wsgi,mysql
return,return
pip,django
"x: [1,3,4]y: [2,4,5]",string-parsing
"def func0():print ""quiz program""print ""-----------",list
from sys import argvmy_file = argv[1]output_list =,string
"myhandle = open('myinput01.txt', 'r') aline = myha",file
def listallcams(): emptlist = [] # an empty list f,flask
gclient sync,ubuntu
"a = [1,2,1,3,2,1,1,1,2,1,1,1,1,1,3,1,2] b = [1,1,2",numpy
"{'state': ['alabama', 'alaska', 'arizona', 'arkans",loops
"b=int(input(""please enter how many people have col",for-loop
"print ""fa"",row[0], ','.join(row[1:])",import-from-csv
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;user key: &lt;/s,beautifulsoup
sum,for-loop
def rand(): displaylist = [] item = print(random.c,list
"[2014-07-22 10:21:06,821] &lt;inform_stat-3&gt; wa",parsing
"def left_chop(key, arr): l = 0 r = len(arr) while ",algorithm
item,django
154-76:~ fdsm_lhn$ python3.5,bash
def run(self): try: pythoncom.coinitializeex(pytho,ioerror
a 1 n met p 1 27.340 24.430 2.614 a 2 ht1 met p 1 ,function
"swap1 = ""abc""swap2 = ""def""def swap(): global swap1",function
&lt;select&gt;&lt;option&gt;&lt;/select&gt;,django
"def alumni_search(request, form_class=find_alumnif",django
"hey = [""lol"", ""hey"",""water"",""pepsi"",""jam""]for item",list
import xlrdfrom time import sleeppassword = 0usern,while-loop
symbolmanager.py,class
"def asdf(var1,var2): varsum = var1+var2 if varsum ",return
indices,list
"alphabetvalues = {""a"":1,""b"":2,""c"":3,""d"":4,""e"":5,""f",list
"return eval(raw_input(prompt))file ""&lt;string&gt;",search
xml.dom,xml
random.choice,list
"write_file = input_file[:-3] + ""bak""read_file = in",parsing
xty1;xty3;xty3;xty3;xty2;xty1;xty1;xty1xty3;xty4;x,file
"def ping(ip): print ""ping"", ipdef port(ip): print ",attributeerror
"one option is, you can create a url endpoint, and ",django
"import pygame, sys, time, random#imports the modul",pygame
"aerospike_dca_client.put(key,bin)......bls_key_a =",segmentation-fault
def multiplicationtable(n): tableprint = [] tempta,list
"{common:{rq:{ct:""""},up:""chg"",down:""chr"",linktarget",json
"names = [""bob"", ""dora"", ""kelly""]numbers = [5, 3, 2",list
"class1 = genfromtxt('example.csv',, delimiter=',')",numpy
import datetime as dtimport scikits.timeseries as ,datetime
def joinstrings(*stringlist): for gallery in strin,string
from ctypes import *num_chars = 8num_rows = 8num_c,ctypes
"&lt;sd title=""a"" flags="""" host=""9511.com""&gt;&lt;t",regex
"&gt;html_sting='''&lt;td class=""status_icon"" rowsp",beautifulsoup
#!/usr/bin/python # sort and unsort using python#t,sorting
li1shi4qin3fat1gon1lin3den1choi3xin1nen3,excel
"int_string = ""1558662:10306104:11038113:7883355""",hex
"'en', 'us', 'usa', ''",regex
v,loops
"input i = 2, 64i1=2, 33=f(2,64), 64i1=2, 33, 64i2=",algorithm
"def aihor(array):global blockwinfor x in range(0, ",artificial-intelligence
number1 = 54378number2 = 54379if number1 (is simil,comparison
for rgb_code in hexcodes_array:,arrays
inth1 = score1_list[intcount] and strhn1 = name_li,arrays
print,list
"list.files(path='/home/test', all.files=true, patt",r
wl,numpy
"registry_regex = re.compile(""((hkey(?:_\w+)+|hk[cl",regex
import jsonfn = 'download.json'data = jsonresponse,json
"import socket, sysprint ""\n"" print ""--------------",security
pycharm 4.0.3.zip,ide
x = 2y = 5z = 9a = array,loops
"&gt;&gt;&gt; compress(""ddaaaff"")'d2a3f2' def compr",compression
"[['i love these vitamins so far', 'and my doctor r",arrays
"datetimeobj = datetime.datetime.strptime(datetime,",datetime
&gt;&gt;&gt; s = 'sliding puzzles'&gt;&gt;&gt; puz,string
"class solution(object): def valid(self,result): cu",algorithm
"(63, 166) - (576, 366)",string
&lt;html&gt;&lt;div contenteditable=true&gt; chang,html
n=100numbers_training_pattern=10for pattern in ran,indexoutofboundsexception
"import refile = open('frame.txt',""r"")for i in file",regex
"line 12, in &lt;module&gt;aux=num_elenameerror: na",function
"list = ['a','b','c','b','d','a'] #then it should r",list
length = len(array) / 2if len(array) % 2 == 1 : le,arrays
def mymin(l): current = l[0] for x in l: if x &lt;,performance
"longsubjectnames = [] #example: ""academy for class",list
"text = open_file.read()grammarlist = raw_input(""en",regex
yield,file
blah1:tvnisq0ydrlxm:16009:0:99999:7:::,regex
"similarity_percent_lst = [""who_is_cmds"", ""50.0"", """,list
"mylist = [['issue id','1.completeness for otc','br",list
"list1 = [[10,[1,4,5]],[40,[1,5,6]],[30,[2,4,5]],[5",list
for,loops
self,syntax
import tkinterdef win1(): # this is the main/root ,while-loop
#NAME?,string
@app.route('/allfile')@login_requireddef allfile(),html
mark brown12 234545 678063 3210peter tailor10 1543,file
"#!/bin/shpython pytest.pyprint(""fe fi fo fum i'm g",bash
"vr={}num=0 for num in range(1,k): print site_count",docx
name 'cursor' is not defined,pyodbc
manage.py validate,django
"f = open(""google-searches.txt"", ""w+"")for item in r",loops
pixbuf,pygtk
"&lt;datei kennung=""4bc78"" titel=""morgen 1"" bereich",file-io
"file=open(input(""please enter the name of the file",string-length
arr = [x for x in vec where x &lt; 2],arrays
"traceback (most recent call last): file ""positive_",excel
st = (int(i) for i in input().split())ls = []for k,list
"input_dictionary= {'a': [{'b1': [{'c1': ['d2']}, {",dictionary
"def main(a,b) some steps",functional-programming
"popen([""c:\users\johannes\documents\a customized j",variables
df.groupby('type').size(),pandas
"elif(op=='+') : size=int(input(""please enter how m",list
if(obj==='undefined'||obj===null),node.js
http://domain.com/trial/1/,django
for i in range(10): //blocks of code,loops
for,for-loop
hg update -c,django
"a = [[""adolf"", ""10""], [""hermann"", ""20""], [""heinric",list
hh:mm:ss,datetime
1a 2a 2b 2c 2d 3a 3b 3c 3d,string
yyyymmddhhmmssfraction,datetime
import jsonimport sqlite3conn = sqlite3.connect('r,json
"[2014-12-22 10:39:54,668] - 1=1,2=2,3=a,4=1,109=53",perl
x = '13',hex
"average = [1, 17, 11, 2, 0, 4, 0, 5, 2, 6, 0, 4, 1",list
import mechanizecj=mechanize.cookiejar()browser = ,mechanize
"&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;&lt;sc",xml
import sysdef hello(a): print(a)a = sys.argv[1:]he,argv
my_value1= 1e-5,numbers
class events(ndb.model): name = ndb.stringproperty,google-app-engine
python manage.py shell ,django
import osimport reimport fileinput#---------------,regex
"np.random.normal(i, 0.05)",r
"def countdown (n): while (n &gt; 1): print('\n',(n",file
"&gt;&gt;&gt; a = np.matrix(np.zeros(2, 3))) &gt;&g",numpy
col1 col2 weight a b 1 a c 2 a d 0 b c 3 b d 0 c d,matrix
"df = {'date': {0: '2014-01-01, 1: '2014-01-01', 2:",pandas
"{'key1': 'list1', 'key2': 'list2', and so on}",dictionary
"a={0:{1,2,3}, 1:{2,3,4}, 2:{6,7,8}, 3:{3,4,5}, 4:{",dictionary
#!/usr/bin/env pythonclass test: def __init__(self,function
"file ""c:\users\classymelon\downloads\mrocedures.py",typeerror
#!/usr/bin/env python# -*- coding: utf-8 -*-filena,csv
if,if-statement
"sozluk_ata = {20225: 17, 20232: 9, 20233: 22, 2023",dictionary
"img_bw = cv2.threshold(img_filtered,127,255,cv2.th",arrays
"ab=[0,0]b_list=[]for x in range(2,1000): fact=1 y=",math
def factorial(n): c=1 re=1 for c in range(n): re =,integer-division
__add__,function
in,sorting
"dict = { 'hello' : [ { 'blah' : 1, 'dodo' : 2 }, 3",sorting
"round(6.2,15) =&gt; 6.2000000000000002",rounding
"a = [(24, 13), (23, 13), (22, 13), (21, 13), (20, ",list
def f1: passdef f2: passdef f3: pass,function
pkts: 215104502 bytes: 202537648280 drops: 1302599,regex
"import socket, sysimport threading# client for wut",sockets
"print ""how much money do i have?"",checking balance",string
{% variablename %},html
"sleep = input(""commander, would you like to sleep ",exit
"list_a = [1,2,3] list_b = [4,5,6] list_c = [7,8,9]",numpy
"import reline = ""cats are smarter than dogs""matcho",regex
"for name, scores in sorted(class1.items(), key=lam",dictionary
"x = [2, 4, 7, 12, 3]",list
from bs4 import beautifulsoupimport requestscompan,beautifulsoup
"myrev = [positive, negative, neutral]",append
"d={""p1"": {""d1"":{""python"":14,""programming"":15}}, ""p",dictionary
lookupdictionary = input()dictionarytest = { lambd,lambda
import sysimport stringfrom collections import def,syntax
import osimport timeimport randomimport cryptofrom,encryption
"import osfor filename in os.listdir("".""): if filen",csv
import numpy as np import matplotlib as mplt data ,numpy
"def area(input_number1, input_number2): variable =",function
enter code here`line 16470: pcdata invalid char va,xml
&lt;person&gt; &lt;name&gt;someone&lt;/name&gt; &l,loops
"# pass temps &amp; status to dbinsert_temp = """"""in",syntax-error
"def remove_range(s,f): #this is the function  for ",list
"{""movies"": { ""drama"": { ""main"": { ""actor"": ""mr x"",",json
"indexofcloseddoc = temp.find(""&lt;/doc&gt;"",indexo",lxml
(?:),regex
"outfile = input(""what would you like the text file",counter
"item=['i','want','this','output']i=[1,2,3,4]for x ",loops
"list = [(""this"", 4), (""is"", 2), (""a"", 1), (""string",string
"class immo_assurance(osv.osv): _name = ""immo.assur",copy
"import smtplibcontent = [""zero"",""one"", ""two"", ""thr",email
for x in soup.findall(attrs={'valign':'top'}): pri,html
ret,git
import osimport globfrom nltk.tokenize import rege,nltk
"class course(object): def __init__(self,cnum,name)",eclipse
isbn= input('please enter the 10 digit number: ')w,numbers
ubuntu,url
"i have an approach 1.start with the top-left cell,",c
"hello bla &lt;br&gt; &lt;img src=""/media/photos/10",regex
from world import *from dialogue import *from even,python-import
line1line2line3,merge
"getitemid=cursor.execute(""select id from shop_cart",django
"[{""url"": [""instrumentos-musicales-126030594.htm"", ",json
"l1 = ['a', 'b', 'c']l2 = [22, 21, 23]",list
import unittestfrom selenium import webdriverclass,selenium
"dictionary = { ""sys_info"": { ""uname"": { ""msg"":""ker",json
d1,pandas
"['[u""&lt;p&gt;i want to use a track-bar to change ",apache-spark
"{""id"":""1"",""name"":""smokey mountain ski club"",""terra",arrays
c,numpy
a,database
"def retrieve():global datasave,y ###don't know whe",sorting
car one500hp180mph15mpgcar two380hp140mph24mpgcar ,dictionary
if src in mac_dict:,osx
"with open(__file__, 'r+') as f: f.write('abc')",file
&lt;ul&gt;,html
"[1,2,3]",list
"def playlist_item_added(self, _): temp_playlist = ",libvlc
a,binary
class linkedlist: def __init__(self): self._head=s,singly-linked-list
"import numpy as npnames_a = ['david', 'mark', 'bri",numpy
"wordlist=[]with open('file.txt','r') as f: for lin",file
^(?=(.*\d){1})(?=.*[a-za-z])(?=.*[!@#$%])[0-9a-za-,regex
"words = [""x"", ""mouse"", ""looloo"", ""google"", ""foo""]t",list-comprehension
"['abc','defg',xyz','lmnopqrst']",list
break,loops
"for x in range(0,10): url = ""http:www.eluniversal.",typeerror
locals(),scope
gu|8gt|5gr|5gp|1uk|2gr|20gp|98uk|1me|2support|6,dictionary
alex:3john:6sam:8,dictionary
user_id item_id 1 item10 1 item11 1 item12 1 item1,mysql
"inv = stock(""tsla"")print inv.tickerprint inv.datum",pandas
"8/3/2015,1,f&amp;b,l,05_&gt;50 yrs,08_&gt; 50 mio,",regex
"""x * (x - 32 ( 2 /x) )""",matplotlib
def calc(request): try:  i1 = int(request.get['i1',html
c:\users\blah\&gt; program.py first second thirdth,windows
"(\w{1,})",regex
import cv2import numpy as npcap = cv2.videocapture,opencv
"import requestss = requests.session()r = s.post(""h",web-scraping
globals()['a%s' % int(x+1)] = someclass(some_thing,variables
"@app.route(""/uploadcsv"", methods=['get', 'post'])d",flask
pickle,pickle
"[{""user_id"": null, ""name"": ""image"", ""resource_id"":",list
loan:0unpaidfees:-3510000total:585677088.5,string-formatting
'bobsdetails.txt',file
username:id:name:hash:::,file
for k in range: delta = array(range(n_stack)) whil,list
"class cal2: def __init__(self, a, b): self.f = a s",calculator
! comment text,loops
import blah blah balhdef main(): blah blah blah  b,windows
"def quizscores(): quiz1 = int(input(""enter quiz 1 ",function
"add(1,2) # 3add(1,2,3,4) # 10def add(numbers): ret",addition
enter code here ,list
"def countlinks(url): urlcounter = {""dummy"":[0,0]} ",dictionary
"0.088888888888888892,0.044444444444444439,0.0,-0.0",text-files
"class user(usermixin, surrogatepk, model): __table",flask
from django.db import modelsimport numpy as npclas,django
"env.command(versionfile, allsrcs + ["".git/index"", ",shell
"[2,3,-3,-2]",list
"c=100while c&lt;100: c=input(""size: "") if c == 1 o",loops
wrong_data_type is not one of the allowed values `,regex
"def fib1(n, cache = {}): if n &lt;= 1: return 1 if",recursion
"[(x, y) for x in [1,2,3] for y in [3,1,4] if x != ",function
"sl = []for i in range (1, iti): sl = [1] sl[i+1] =",for-loop
unicodedecodeerror: 'ascii' codec can't decode byt,django
"mylist[] = [""1"" : ""2"", ""3"" : ""4""]",list
"[['a', '1', '2', '3'],['b', '7', '8', '1'],['c', '",list
"numbers = [1, 2, 3, 4, 5]minimumnumberofelementsre",list
import sqlite3import cldimport langidlanguagedata ,sqlite
test,dictionary
"def not3(string2, string1): if len(string2) &lt; 3",string
"import randomopl = [*,-,+]def mathsquiz(number1,op",list
r = re.compile('2100 | (20((0[1-9])|([1-9][0-9]))),regex
"import osdisk = os.statvfs(""/"")print""""print ""~~~~~",linux
"from math import sqrt,powdef perfect_sqr( n ): if ",next
if d.get('foo'): func(d.get('foo')),design-patterns
"import pygame, random, os, syspygame.init()pygame.",pygame
"for jindx in xrange(1, 10):",if-statement
function newlineeveryfive($str){  $array = explode,converter
try: objecttobeused = func1()except: objecttobeuse,exception
"list_value = [ 1, 2,0,-1,-9,2,3,5,4,6,7,8,9,0,1,50",caffe
q = mymember.query(mymember.user==user) u = q.get(,jinja2
from numpy import *,numpy
#!/usr/bin/python2.7### regitration#import osimpor,file
&lt;a&gt;,urllib
rule = re.compile(r''),regex
"import randomprint (random.randrange(0,4))def rand",function
"{  ""key1"": ""value1"", ""key2"": { ""random_value"": { """,json
answerbox = [] * 10 #this will set the array to [ ,arrays
"for name, age in read(file, ('name','age')):",syntax
def create_mydict(mylists):  mydic = {} for t in m,dictionary
apple_group,csv
"# print http/html header stuffprint """"""content-typ",html
import numpy as npimport matplotlib.pylab as pltpi,algorithm
def donuts(count): if count &lt; 10: return 'numbe,printing
def rolldice() : dice = [] for i in range(5) : dic,function
"{""07/01/2015-08/01/2015"":  {""abc"": [ [""12015618727",json
"#!/usr/bin/python""""""socket client""""""import socket ",file
/-- am here/one/some/dir/two/three/has/many/leaves,filesystems
"var quotedataobj = [{""symbol"":"".djia"",""symboltype""",regex
#!/usr/bin/env pythonimport csvimport mathemp_id =,csv
from tkinter import *#start code for the introduct,tkinter
c:\mysite&gt;python manage.py shellpython 2.7.3 (d,django
"&lt;p class=""openclosemonth"" id=""may2014""&gt;may, ",beautifulsoup
"['product', '98', '100k', 'fifa15-ps-100k', 'k', '",regex
"class calculation(object):def multiply(self, a=5, ",class
def applyharriscornerdetection(): image1 = cv2.imr,opencv
"from twisted.internet import reactor, protocol",twisted
"a = []nums = raw_input(""enter input- "")for n in nu",max
"sales=models.decimalfield(max_digits=12,decimal_pl",django
"my_list = [(a1,b1),(a2,b2),(a3,b3),(a4,b4)]",list
django_comments,django
"def invalidsyntax(a): if max(a)&gt;20: print(""the ",sorting
path.contains_points,matplotlib
"class _listnode: def __init__(self, value, next_):",linked-list
"str1 = ""numberone=1,numbertwo=2,numberthree=3""newn",variables
try: if something1 == something22:except: breakif ,if-statement
#4. increment grade count by 1gather_intel(grade_l,function
"r = [{ ""id"": ""fhjgjj"", ""oneid"": ""sjgkhkshgkfh"", ""n",string
"(15,20) (17,30 ) ( 40 , 25)",regex
t = {}t['bush_mod']={} # toplevelana1 = {}ana1['an,dictionary
"&lt;html&gt;&lt;body&gt;&lt;link rel=""stylesheet"" ",google-app-engine
client = mongoclient()data_base = client.hkpr_rest,pymongo
"correct_answers = ['a', 'c', 'a', 'b', 'd']user_an",list
"biglist = [2, 1, 0, 2, 2, 1, 2, 1, 0, 3, 0, 1, 3]",list
"with open('test.txt', 'r') as listfile: lines = li",string
from selenium import webdriverimport autoitfrom se,web-scraping
k1|v1|k2|v2|k3|v3|k4|v4,regex
"[(1, 'item1'),(2, ""item2""),(2, ""item3""),(3, ""item4",html
# function to check if the password is a valid one,string
x,logic
"import mathskippie=raw_input(""if you know how to d",vb.net
"for p in range(1,10): r = [] r.append(p)print r",list
cur1 = g.db.execute('select id from students')stud,sqlite
"s = '456+123' # separate the two strings, convert ",string
"233.43 usd634,233 euro",regex
"import pickleimport shelvef = open('p.pickle', 'wb",io
m1sxs-2839mcs-28s9213,regex
import pygameimport sysclass application(object): ,pygame
if race == 'orc': if class == 'worrier': stats = [,dictionary
"c = [1,2,3,4,5,6,7,8,9,10]for a,b in func(c): doso",list
"def view(request, x or y)",django
&lt;&lt;eof?,ruby
"z[i-np.arange(0,(i-1))",matlab
i += 1,string
&lt;p&gt;,elementtree
"from itertools import iziptimestamp=[1,2,3,4,...]#",performance
"outfile = open('text.txt', 'r')m=outfile.readline(",rewrite
"old_list = [1, 2, 3]first_int = 3second_int = 5new",list
"n = int(input(""please type a code: "") x =['a','b',",encryption
"alist = [1,2,3,4,5,6,0,9,9,4,5,0,0,2,3,0,9,6]test ",list
"&lt;form action=""/addproductgroupinsert_fun/"" meth",django
usersnotauth=0users=server.getusers()for key in us,if-statement
"os.system(""'{0}'"".format(path))",git
"[('us-west-2', 'vol-xxxxxxxx'), ('us-west-2', 'vol",list
sorted(),sorting
nswindow.initwithwindowref_(nshi_object)traceback ,objective-c
"save_file(filename, new_list)",overwrite
leo@leo-virtualbox:~/development/pki-client$ curl ,ssl
&gt;&gt;&gt; import itertools; import string&gt;&g,dictionary
dictreader,csv
shortest(),string
"row = int(raw_input(""enter the first row number: """,algorithm
#!/bin/bashlogfile=history.logoriginal=lstouch ${l,bash
&gt;&gt;&gt; math.floor(8.2-0.21)7.0&gt;&gt;&gt; m,math
&lt;p&gt;nuclear ek:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;,pcre
def test_alarm(self): self.setup_some_test_data() ,exception-handling
player(),function
print 'the average amount of words in the sentence,list
"values = data.split(""\x00"")username, passwordhash,",unpack
"profile_list = [{'name':'suzy','gender':'female'},",list
"[[1,2,3,4,5]]",list
"alist = ['dog', 'cat', 'fish']",itertools
"tokens = content.split()topics = [e for (n, x) in ",list
def getkey(item):return item[0]list = [('new york',list
"&gt;&gt;&gt; a = [1, 2, 3, 4]",list
"directorylist = ['path', 'to', 'directory', 'file.",list
def main(): import argparse parser = argparse.argu,argparse
"void expand (char s1 [], char s2[]){ char c; int i",c
1,table
var1 = {'name': 'alice'}var2 = {'name': 'bob'},dictionary
"x=get(x) for i in range (start, end): if x==0: x=1",performance
self.speed = 10 self.racedistance = 100def update(,pygame
core().run(),syntax-error
.txt contents = html_log:bob -1.2 -0.25 4:53 1 0:0,performance
tree = { 'b': { '1': { 'e': { '1': { 'd': { '1': ',dictionary
mike = 1\n john = 2\n cam = 3\n,sorting
"line = ""a12b1234123456 misc text""re.split('^([a-h]",regex
"for fan_set in range(0, len(self.vertices) / verte",numpy
"class player: def __init__(self, hp, dmg): self.hp",pickle
collection,collections
"def foo(arg1,arg2,arg3=some_val,arg4=some_other_va",function
"data= ['hello','world','# ignorethis','xlable: som",string
play_golf if sun_shines else stay_dumb,c
import os import sys base_dir = os.path.dirname(os,html
"def separatewords(self, text): splitter = re.compi",expression
total=sum(prices[k]*stock[k] for k in prices)for k,dictionary
"def right_binary_search(input, value): if input is",search
import requests # http://docs.python-requests.org/,json
class dailystatement(object): def __init__(self): ,dictionary
def condfunc(myvar): if myvar == single: something,conditional
time_format = '%h:%m'time1 = datetime.strptime('20,postgresql
"list1 = ['contact: hamdan z hamdan, mbbs, msc', '\",regex
from bs4 import beautifulsoupimport requestsurl = ,beautifulsoup
"import chilkat# open a zip, locate a file containe",zip
import rpi.gpio as gpioimport timeimport cv2import,opencv
def reverse_list(list1): length = len(list1) for i,list
.zip,python-requests
"&lt;a[^&gt;]* href=""([^""]*)""",regex
"for (end_timeout=1, i=0; i&lt;time_out; i++) { bit",loops
"def xslx_to_csv(): files = os.listdir(r""~\files to",regex
id item444 anemia444 liver444 anemia444 anemia222 ,iterator
n,algorithm
while,while-loop
'c',c
"path_one_images = ['p1d1.jpg', 'p2d2.jpg', 'p3d3.j",django
"transaction([time_stamp, time_of_day, day_of_month",count
#===========================# lorem ipsum#========,numpy
"class coordinate:  def __init__(self,x,y): self.x ",class
"#what i wantlistofobjects=[obj1, obj1, obj2, obj2,",pointers
ad groupannuity calculatortax deferred annuityannu,csv
000000aaaaaarob alsod ## notice multiple 0's and a,regex
"list1=[""watch"",""hour"",""time""]list2=[""new watch rol",string
typeerror: readfromfile() takes exactly 2 argument,class
## numlist = some listarray_size = 20for row in xr,syntax
"for i in range(0, len(testinglist)): testinglist[i",lambda
regular expression,regex
arraylist&lt;object&gt;,object
find the sum of all the primes below two million.,algorithm
"import socket, sysfrom struct import *from flask i",post
"import time import random question = ""0"" score = """,string
"def user_choice():  while true: choice = input(""ch",loops
"import random, timeitrandom_num = random.randint(1",random
def changetouppercase(text):for i in text: i = ord,ascii
"iphone6-16gb-black,40000,10000,10000,20000iphone6-",match
daytona 500,r
"a = ""[{'index': '1', 'selected': 'true', 'length':",regex
for i in reader: for j in empstbl: if i[0] == j.in,for-loop
@app.route('/contact/')def contact(): flash('we ar,flask
"file ""/home/uwp/widgets/contentfreshness/freshmap.",json
"[08.10.17,d,520,08.11.01,w,20]",for-loop
"""\t\t"" + number (between 1-999) + ""\t\t"" ",regex
designpoint1.setparameterexpression(parameter=para,user-interface
"filename = input(str(""what is the new file going t",windows
"w=100h=200im=im.resize((w,h), image.antialias)for ",image
"for i in range(253, 2): print iwould print 253, 25",loops
project -module1 -module2 -module3 -module4 -modul,perl
1 #valid 1-1 #valid1-1-1 #valid (infinite \d-\d)1-,regex
"['xxxx-xxxx', '0']['xxxx-xxxx', '0']['xxxx-xxxx', ",csv
"cities = [""new york, ny"",""chicago, il"",""denver, co",algorithm
what is the 10 001st prime number?,html
import itertoolsimport timeimport stringnumbers = ,permutation
"fname = raw_input(""file name: "")import revars = di",regex
"import turtle#headdef headfunc(headtype, headcolor",turtle-graphics
"angle_1 = input(""what is the degree of the first a",string
"[ {'name': 'peter', 'age': 41, 'value': 1}, {'name",sorting
1 - 1/2 + 1/3 - 1/4 + 1/5 -... 1/n,for-loop
"open nickname, $nicknamefile or die ""$nicknamefile",regex
"pf = 2*stdtr(dof, -np.abs(tf))pval = 2*stats.t.sf(",statistics
#creates entry inputs for answersentry=entry(maste,tkinter
"&gt;&gt;&gt; a = {'q':1, 'w':2, 'e':3}&gt;&gt;&gt;",loops
a = 'word',string
import sysfrom student import studentclass student,indexing
"system_list= ['cassandra', 'flume', 'hbase', 'hdfs",string
def get_queryset(self): pista = self.request.get.g,sql
gsub,ruby
"string = '""first, element"", second element, third ",regex
"[ array([[2,3,4,5,6,10]]) array([[7,3,9,1,2,3]]) a",numpy
"import osimport timeprint ""starting""os.system('cls",metasploit
"&gt;filter_words(['how', 'about', 'i', 'go', 'thro",list
import numpy as npfor i in range(10): im = np.rand,numpy
"reduce(lambda x, (y, z): x | (z &lt;&lt; y), enume",lambda
"from itertools import permutationsarray = [""a"", ""b",algorithm
python makereadingsfile.py eichstaett.net.xml test,cygwin
if cond1 and (not cond2 or not cond2),expression
what is your starting balance: $ 1000.00what is yo,loops
#!/usr/bin/env pythonimport rospyfrom geometry_msg,ros
"data = ""{1} {2}""cmd = ""!test""msg = ""!test param1 p",regex
"array([[ 0.28, 0.22, 0.23, 0.27], [ 0.12, 0.29, 0.",arrays
"family = [ {'name': 'a', 'parent': ''}, {'name': '",family-tree
$('#upload').click(function(){ $('#main .right').h,google-app-engine
"""%d""",numbers
# this code will blank the file 'myfile'!with open,file
"list.sort(cmp=lambda a,b:-1 if b==0 else 0)",sorting
a=['2345'],list
from sys import argv,pycharm
"for i in range(0, self.sizex): temp = [] for j in ",list
"def userints(): choices = int(input(""choose studen",syntax
"&lt;nowdisplaying deviceid=""000c8"" source=""ain""&gt",xml
warning (theano.configdefaults): g++ not detected!,g++
"[101,102,105,106,108,111]",list
"&lt;div class=""normallink""&gt;&lt;table cellpaddin",beautifulsoup
"tuple = (65,67,5,67,34,76,67,231,98,67)",tuples
"arr = [10,40,30,326,673]print(max(arr))",function
-bash-3.2$ dir dispatch.cgi stats-bash-3.2$ ./disp,linux
import optparseimport sysparser = optparse.optionp,optparse
raw_input,input
10.1.1.10 144111048910.1.1.15 144111049010.1.1.10 ,search
#commision = 1.125 for later on#bid = 100 part of ,if-statement
xyzzy,class
while teams: if scores[0]&lt;scores[1]: losers.app,loops
"print ""**********************""print ""*the game wil",tic-tac-toe
"a = [(1), (7), (3), (1)]b = [(2), (4), (7), (4)]c ",list
"foo = ['a', 'b', 'c', 'd', 'e'] from random import",list
f = urlopen ('http://ichart.finance.yahoo.com/tabl,csv
a= 1000 0.22222 aa bb 22 55 44 77 10 1.0a1= 1000a2,split
"with open(""my_rotation_matrix.bin"", ""wb"") as outpu",json
box1,variables
ast,json
"import refile = open('input_file.txt', 'r')file = ",regex
"x = [['219'], ['220'], ['218']]# find combosprint ",arrays
"def traverse_dir(fd):  for dir_path,subpaths,files",directory-structure
"traceback (most recent call last): file ""mysqlconn",raspberry-pi
"def solveone (array, posr, posc):possible = ['1','",sudoku
helllo mototoooooo http://moto.com yes,string
data['dogecoin'].head() market_cap_by_available_su,memory
pyinstaller --onefile mylogger.py,django
1 2 34 5 67 8 9,algorithm
limit,variables
"rollno,name,age1,abc,152,def,18",csv
"def getdecision(): getdecision = raw_input(""what w",function
def scanbarcode(self): barcode = self.lineeditscan,qt
"ex = ""/volumes/obelix/5215.tif, /volumes/gemeinsam",replace
&gt;&gt;&gt; entry.objects.filter(... headline__st,django
df1,r
u,database
"class1=['andy j:6','nick p:7','bob g:1','evie f:5'",sorting
"regex = re.compile(""\d{0,3}"")",regex
"i=2for i in ""1234"": print i*2 break",for-loop
"nested = { 'a': { 'b': { 'c': 'c val', 'g': 'g val",recursion
class systemadmin(modeladmin): form = systemadminf,django
import osimport randomimport operator score=0 ops=,loops
os.system,install
"def f(ham: 42, eggs: int = 'spam') -&gt; ""nothing ",colon
"df = pd.dataframe({""refined__some_id"":some_id_list",pandas
"output_data[1] == ""s""",output
"[1, 2, [3, 4, [5, 6]], [7, 8], 9]",list
"def insert(self, index, item): """""" (linkedlistrec,",recursion
"&lt;audio uri=""a852""/&gt;",shell
"result = {'lat': u'-7.798668', 'lng': u'110.369487",list
"class graph(object):""""""a simple undirected, weight",shell
"c = ""a string is like this and roberta a a thanks""",text
for il in ignore_list: if il.word in title or il.w,django
http://weibo.com\/p\/aa\/weibo?from=bb&amp;wvr=5.1,url
main program || \/imported function || \/imported ,function
response = urllib.request.urlopen('http://openexch,dictionary
"paragraphs = re.match(r'&lt;p&gt;.{1,}&lt;/p&gt;',",html
"m = re.search('(?&lt;=abc)def', 'abcdef')&gt;&gt;&",regex
"def sourcemedia(request, stream_id): stream = get_",django
"d1={""tables"": {""k1"": {""columns"": [""val1"",""val2"",""v",list
"9/2 results in 4,57/2 results in 3,4",integer
"def grabber3(datafile):with open(datafile, 'rb') a",dictionary
"p=[(0, 2), (2, 6), (6, 7), (7, 3), (3, 7), (7, 6),",list
#kind of like this import math # this is what i tr,import
"def isprimenumber(self, num): i = 2 while (i &lt;=",algorithm
access_token=aaabbbb&amp;expires=5173539,json
"[] - # normally used for dictionaries, list items(",brackets
"a = 12,3k b = 1,84mif b &gt; a : print b ",numbers
a = int(raw_input())b = int(raw_input())c = int(ra,list
"num1 = int(input(""please enter a number between 1 ",loops
dfs,c
{{ question }},django
"def addition(float1,float2): '''(float,float)-&gt;",code-formatting
"['name surname', 'email', 'type', 'name surname', ",list
"table = [ time: 01:09:25.258, o:localhost, r:192.1",regex
"a = 'a d c'a'a d c'a.split()['a', 'd', 'c']",function
"def random_color(): colvar=random.randint(0,10) l=",turtle-graphics
first=[]second=[]third=[]first.append([int(i) for ,list
"def solve(numlegs, numheads): for numchick in rang",function
"import mechanizeurl = ""http://www.taliesin-arlein.",html
"[[(1,2), (3,6), (5,3)], [(1,5), (3,5)], [(2,1), (1",list
self.response.write,json
a = 10b = 4c = 2d = 3if ((c+2&lt;d)) or ((c*d)==(a,interpretation
class a: a='a'class b(a): a='b'class c(a): a='c'cl,multiple-inheritance
"def conflicts(list1,list2): numit = 10 for i in li",performance
xml.dom.minidom,xml
"tcase=6sum=0def a(m,n): m=m n=n if m==0: return n+",algorithm
solutions = []def backtraking(state) for new_state,distributed-computing
"i = 1def printm(n): while i &lt;= 6: print n*i, '\",table
repeat_middle,string
{},string
0 overcast 1 overcast 2 overcast 3 overcast 4 rain,pandas
r = requests.get('https://graph.facebook.com/v2.3/,json
key,sorting
"[[{'a': 2,'b': 3}],[{'a': 1,'c': 3}],[{'c': 2,'d':",numpy
class a: def __init__(self): if a.var is null: # t,static-members
"def f([a,b,c]): d={a:'like'} for x in [a,b,c]: d[x",dictionary
"[[20, 21, 22], [17, 18, 19, 20], [10, 11, 12, 13]]",duplicates
from nltk.sem.logic import *lexpr = expression.fro,nlp
if,if-statement
"d = { 'case1' : [18, 17, 497, 298, 57, 82, 1], 'ca",list
"import randomdef main(): print(""welcome to fight c",variables
"y = np.empty([1,len(test)]) count = -1 for feature",numpy
"installed_apps = ( 'django.contrib.auth', 'django.",django
"['0.125', '0', 'a']['0.5', '0', 'b', ' a']['0.75',",list
"m doing a very simple piece of code, and it keeps ",int
from __init__(self),django
message(),terminal
class simplestring():  popsize = 1000 #should be e,oop
"email = driver.getpagesource().contains(""@"")",facebook
finalprice = quantityofx1 * priceofx1 + quantityof,list
"chars = [""0"",""1"",""2"",""3"",""4"",""5"",""6"",""7"",""8"",""9"",""",list
key valueaa aab aac aad bae baf bag bah b,excel
def get_json(url): opener = urllib2.build_opener(),json
"def store_results(class_number, name, score): clas",function
isinstance,type-safety
smtp connection raises non-integer base36 conversi,django
l,list
x_list,list
len(),list
"def primes(n):  array = [i for i in range(2,n+1)] ",algorithm
name_list = int(4)namecount &lt;= name_listfor nam,string
from google.appengine.ext import blobstorefrom goo,google-app-engine
"import jsonwith open('./gui-config.json','r+') as ",json
"{u'data': [{u'time': 1422000000, u'value': u'3.462",json
"cryptograph = {""a"":""b"", ""b"":""c"", ""c"":""d"", 'd': 'e'",encryption
class myclass: def get(self): #get the passed in a,command-line
"var = 1,2,3,4,5,6,7,8,9",replace
"{a: 3, 45, 34, 4, 2, 5, 94, 2139, 230345, 283047, ",list
fib 0 = 1fib 1 = 1fib n = fib (n-1) + fib (n-2)gen,haskell
"codes(lst,cods)",list
df_all['search_term'] = df_all['search_term'].map(,pandas
"math.easeinexpo = function (t, b, c, d) {return (t",c++
"import signalimport timedef sigint_handler(signum,",exit
aed|784|2|united arab emirates dirham|united arab ,regex
"def startpop(pop,job): i = 0  l = [[[(random.unifo",brackets
group type fraction1 a 0.11 b 0.61 c 0.32 a 0.72 c,text
"name = input(""enter your name"")first_letter = ____",letter
xyz,regex
import subprocess cmd = 'ifconfig -a'p = subproces,file
a=1while a&lt;100: if a%2 == 0: a+=1 else: for i i,list
"429, 'too many requests'",beautifulsoup
"filename = ""/users/fis/desktop/installation_guide.",osx
array = [] y = array.append(str(words2)) &lt;-- an,python-idle
import pwdpwlist = pwd.getpwall()#perform operatio,linux
"import sqlite3 as liteimport sysnames = ( ""john"", ",loops
${outbox_details.details['declined']} ${outbox_det,arrays
"print (""want to play a game? add numbers until you",sum
"import os, syspath = ""c:/output/""file = ""bob.zip""m",html
col1 col2 col3 col4 col5 1 0 0 1 na 2 3 5 1 na 1 1,numpy
"{1: {1: '[]', 2: '[1]'}, 2: {1: '[]', 3: '[1]'}, 3",dictionary
legendnames = [volumenode1.getname()+' - '+rulerno,typeerror
"{hello|hi|howdy}{ ,i {really like|absolutely adore",regex
for a in list1: for b in list2: for c in list3: pr,loops
"&lt;a href=""anything"" class=""anything"" title=""size",regex
functionlibrary,module
11235...,file
#NAME?,django
def busca(self): conn = sqlite3.connect('teste.db',sqlite
"{ ""data"": [ { ""category"": ""organization"",  ""name"":",json
#include&lt;stdio.h&gt; int print(){ return 4; } ,c
def get_links(url): html = urlopen(url) bsobj = bs,web-scraping
sol_00000001 h2o2 knmo4 naclsol_00000002 nacl nacl,unix
negtrain = neg[:n]postrain = pos[:n] negtest = neg,sentiment-analysis
"&gt;&gt;&gt; [[2, 0], [0, 0]][array([5, 7]), array",arrays
class entry(models.model): .... slug = models.slug,django
"student 1 = {profa, profc, profh, profd, profe, pr",sorting
"question = str(input(""what is"",randomnumber1,""+"",r",typeerror
"def cube(x): """"""  &gt;&gt;&gt; cube(2) 8 &gt;&gt;&",syntax
"a = ['zbc','2.3']for i in range(0,5): exec('e%d=%s",variables
abcd-efgh-ij,regex
s = 'line $sin(2*x) $x*cos(x) $x',regex
"u'[u\'{""opt_id"":2949,""answer"":""true""}\', u\'{""opt_",json
name,variables
mir_seq,perl
# a not so amazing game.import time#define invento,scripting
"import random f=open('z:/desktop/keywords.txt','r'",text
lang_selection_list,django
quick service,nltk
"year_list=[yyyy,yyyy]while true: year_int2 = int(y",list
f,function
keyerror: 'tags',sorting
"list = [0, 1, 2, 8, 2, 9, 2]",list
typeerror: stringcounter() takes exactly 1 argumen,function
"import datetimebday=input(""enter your birthday as(",date
"input1='sam,geti,1234'input2='jhon,somwhre,676966'",dictionary
"ifs='-' read -r -a tests &lt;&lt;&lt;""${test_type}",bash
import smtplibcid = raw_input()cmd = #output from ,email
"xp,yp = 400,400 pantalla = pygame.display.set_mode",pygame
"temp = re.findall('.*[^\{*][^\}*].*', 'sega e-r. a",regex
os.listdir('http://chymera.eu/data/facert'),remote-access
"tuples = [('a', '1'), ('b', '1'), ('c', '2'), ('d'",dictionary
"import sysf=open('purchases.txt','r')#format date ",if-statement
"data[0] = ['46.09', '24.76', '0.70', '0.53', '27.9",arrays
"can not open resource ""https://www2.oxxo.com:",django
00:00:29:02 00:00:35:00 text 1text 200:00:36:04 00,regex
"variablehere = ""mytoken""import json,httplibconnect",string
"a = [1, 2, 3, 4]",arrays
a = b = 3,variable-assignment
import tkinterclass ticwindow(tkinter.tk): def __i,button
"101 ok, with warnings - statistics at mon jun 30 1",regex
"if name in [""john"", ""rick""]: print ""your name is e",syntax
thu apr 10mon mar 28,date
"get_hundredth(a, b, c)",tuples
ps -f -u vinish | sort -k5,linux
"foo = [['12345'],['abcdefg']]",string
exception in tkinter callbacktraceback (most recen,user-interface
import redef get_number(element): re_number = re.m,input
num_samples,closures
temp.py,raspberry-pi
"a={'ab':3, 'bc':4, 'cj':2}b={'ab':2, 'cd':2, 'ed':",dictionary
class something(): boolean iscomputeravailable(): ,static
"import urllibfor x in xrange(1,5): url = 'http://a",urllib
variable1 = 5variable2 = 5variable3 = 10def refres,variables
# -*- coding: utf-8 -*-,encoding
"- &lt;a:p&gt; - &lt;a:r&gt; &lt;a:rpr lang=""en-us""",list
"&lt;div class=""goog-inline-block goog-custom-butto",selenium
"import mathn = 50000000exponent = (2, 3, 4)prime_n",algorithm
"block 15, type a, key 05a3e664414a :00 00 00 00 00",regex
import xlwtimport xlrdworkbook_page = xlrd.open_wo,excel
class stream(models.model): step = models.integerf,django
"def quickselect(lines,k): if len(lines)!=0: pivot=",sorting
"class_number = prompt_int_big(""before your score i",excel
"&lt;record model=""product.product"" id=""product_to_",openerp
"foo = { '.0': [ {}, {}, {}, {} ], '.1':[ {}, {}, {",dictionary
data_upload.py,mysql
def min(self): node = self.head #1st element  min ,list
"['aaa', 'bbb', 'ccc', 'ddd']['aaa']['bbb', 'ccc', ",list
mysql_fetch_array,mysql
"{""trees"":{""tree1"":{""name"":""tree1"",""tt1"":""1"",""ul"":""",json
"toappendlst= [[[62309, 1, 2], [62309, 4, 2], [6222",list
"mylist=[43,21,12,80,3,2,35]end=len(mylist)-1while ",sorting
"def split_by_n( seq, n ):""""""a generator to divide ",string
"# -*- coding: utf-8-*-array=[""†_"",""†ç"",""†¢"",""†£"",""",unicode
"variables = [0, 0, 0, 0]while (variables[2]&lt;4):",file
"name"": ""power school"", ""count"": 10, ""frequency"": """,json
"{""modules"": [ { ""outputs"": { ""adminaz1"": ""value1"",",dictionary
"mylist = ['apples', 'oranges', 'bananas']newstring",list
from string import *def countsubstringmatch(target,string
"tags=[ { id: 1, post_id: 155, term: 'python'}, { i",list
"1) def xyz(self, cr, uid, ids, vals, context=none)",odoo-8
^get/(?p&lt;lowercase_string&gt;[a-z]+)/(?p&lt;int,django
rank: 4 2 3 2 2 1 3 6,algorithm
"file ""line_sort.py"", line 24 for entry in l: ^synt",sorting
x = 4y = 9repeatlist = []abc = str(x)+str(y)repeat,string
"list1 = [0, 2, 1, 3, 4]list2 = [0, 2, 3]",list
"test = {0: {'nom': 'toto', 'id':1}, 2: {'nom': 'tu",dictionary
super().__init__(),class
a = '(abcd: fgh 234) (abcd: d89 7j6) (pqrs: ..1000,string
"traceback (most recent call last): file ""c:\users\",file
@xcoords = ();@ycoords = ();@zcoords = ();,perl
"print (""welcome to my calculator"")print (""calculat",cmath
def bubble(arr):swap = true while (swap == true): ,bubble-sort
red 0.01111blue 0.96333green 0.05112,multiple-columns
"def stemmer(word): [(stem,end)] = re.findall('^(.*",regex
"balance = int(input(""enter initial balance: $ ""))w",loops
"file = open('save.txt','r+')saved = file.read()fil",function
"def updateuserdbdates(): global userdb, currentdat",datetime
"class synset(object): def __init__(self, synset_id",inheritance
name price sales views avg_rating votes comments m,pandas
"result = 121.0 # initialized in code, assigned in ",decimal
"""tue 24 dec 2013 5:53 am utc""",datetime
"ls = [1,2,4,3,6,18,10,60,70,40]",arrays
"[['e', 'f', 'j', 'a',], ['s', 'd', 'g', 'k], ['a',",list
(?&lt;=\(\\\\).*(?=\)),regex
n,math
raw_input(),file
"data = {u'city': {u'name': u'pittsburgh', u'countr",json
"def application(environ, start_response): try: co.",cookies
************************************ test scenario,regex
from tkinter import *root = tk()button = button(ro,tkinter
"def quicksort(arr, size): partition(arr, size)def ",quicksort
def newuser(): usernametemp = entrynew.get() passw,tkinter
"residents=input(""how many people live in your hous",variables
"[('aaa', 1), ('bbb', 1), ('ccc', 2), ('ddd', 2), (",list
input_str = raw_input()dimensions=[int(x) for x in,arrays
"dictionary = {a='alpha', b='b', ,='=', '='}' }",dictionary
&amp; ./myscript.py argumentishere,arrays
1 2 34 5 67 8 9,algorithm
"#!c:\python32class character:def __init__(self, na",pygame
import tkinter as tkclass app(tk.tk): def __init__,oop
"movie['metascore'] = self.get_text(soup.find('h4',",beautifulsoup
https?://[^/\s]+/\s+\.(?:jpg|jpeg|gif|png),regex
"myfruits = {'fruit':4, 'color':11}",django
"l1 = ['a','b','c']l2 = [1,2,3]",dictionary
"def adder(l1,l2,op): if(op == 0): carry = 0 result",traceback
list,list
self.response.out.write(template.render('templates,django
def char_freq(x): d={} for i in x: d[i] =+ 1 print,operators
"mylist = ['this\n', 'is\n', 'sparta\n']",list
import osimport sysimport pygamefrom pygame.locals,pygame
"u_cols = [""inv. date"",""customer name"",""model"",""var",pandas
file1.py,oop
if,if-statement
"import time#welcome messageprint(""welcome! have a ",loops
"printf(""%c%c"",-108,109);",string
class snake(): def draw(): for k in snake.position,list
"dict = {'name': ['bob', 'bob, 'james', 'jeff'], 'l",list
column a: column b: column c: column d: column e:1,csv
"var_dump($myarray);array(2) { [""a1""]=&gt; array(2)",arrays
"l1=[3,5,6]l2=[0,2]l3=[3,4,3,1,2]l4=[2,3,2]",list
if a == arg: if arg not in a_list: do_something(ar,logic
"for y in range(0, height, 4):",jes
"dict={'a':[1,2,3],'b':[4,5,6],'c':[7,8,9]}",pandas
"cars = {'2012':'bmw', '2013':'ford'}new_cars = ['f",dictionary
mprm*,bash
"a = np.array([1,2,3,4,5,6,7])b = np.array([1,2,10,",numpy
"file ""proyectil.py"", line 23, in &lt;module&gt; fr",if-statement
"def menu(): print ""\t welcome\n\n calculator =&gt;",compiler-errors
"re.match(""libstdc++"", ""time 1.7-23build1"")",regex
&gt; -5^2[1] -25&gt; # now let's use parentheses&g,c
"print change_alphabetical(""abc"",2)",function
pip,pip
4fe6c343554c51454e503249393954564837304d4c32333051,string
class student: b = 78 @classmethod def foo(var): r,ruby
"""&lt;p&gt;hello&lt;/p&gt;not&lt;p&gt;world&lt;/p&g",findall
from pil import imagefrom pytesser import *image_f,python-imaging-library
"# -*- coding: utf-8 -*-""""""created on mon nov 16 18",syntax
import urllib.requestimport rehtmlfile = urllib.re,regex
pits,performance
"import sysprint 'number of arguments:', len(sys.ar",argv
"{'x1': 2, 'x0': 1, 'x3': 3}",list
"x = [1, 2, 3, 4, 5, 3, 4]",algorithm
&amp;+^'&lt;&gt;123abcdiiiiiiiiiiiiii iiiiiiiiiiii,regex
"for x in range(0,times):###but maybe a while loop?",loops
"import numpy as np111 x = np.array([[20, 20] [20, ",numpy
3.766204987418e+00 3.016098278453e+00 2.8821286256,numpy
url = 'http://data.mtgox.com/api/2/btcusd/money/ti,json
"{ ""13234134"": [""some"", ""strings"", ...]}{""34545345""",string
((?&lt;!\w)(january|february|march|april|may|june|,regex
"while true:  print ""welcome to consequences"" print",random
"s = ['boy', 'girl', 'toy']",list
sub reverse_hex { my $hexdate = shift; my @bytearr,perl
"def main(): print(""this is a chaotic function"") # ",loops
"['-50.00', '60.00', '-63.00', '50.00', '-57.00']",list
py.plot(x) py.show(),linux
"main( int argc, char *argv[]) {  char a[] = ""ds ds",c
"from euler import primesieve,sumdigdef powersieve(",syntax
123[4-6][1-2],string
[nn]issan(?=[^&lt;&gt;]*&lt;)(?!(?:(?!&lt;/?(?:a|s,html
image = pyagme.image.load(image),pygame
"mydict = {'a':'hi','b':'bye','c':'hi'}",dictionary
"outfile = open(tempfilename, 'w')outfile.write('\t",xml
from scipy import linspacefrom scipy.integrate imp,numpy
def isasciialphabyte(c): return ((c&gt;96 and c&lt,performance
a=1,user-interface
import mathclass point(object): #includes coordian,inheritance
1,list
a = 'add {new} sentence {with} this word',regex
"{'apples' : 'red', 'pears' : 'green', 'bananas' : ",csv
"marks = hxs.select('//*[@id=""produit_liste_marque""",scrapy
"&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=""con",html
"def all_math(number,goal): ""not sure what to put h",math
"{'os_type': 'linux', 'my_subtype': 'abc', 'build_i",dictionary
from __future__ import divisionimport sysfrom math,qt
"t = ( (1, -1, 'python'), (2, -1, 'ruby'), (3, -1, ",dictionary
"{ ""app"": { ""gardencategory"": { ""label"": { ""flower""",arrays
[['this is an example of an answer to question 1 b,excel
pipelines.py,mysql
__str__,string
c:\temp\my pictures,image
1000,loops
def my_view(request) data = data['my_data'] if req,django
import csvfrom collections import counterout=open(,order
def extract_names(filename): names = [] f = open(f,sorting
"snumber,full_addre822,822 e ash ave1012,1012 briar",list
"import ref1 = open('text.txt', 'r')for line in f1:",regex
import osos.chdir('my directory')data = open('text,file
find_element_by_idfind_element_by_namefind_element,selenium
"#listlis=[1,2,45,223,1,23,546,488,223,5688]print(l",list
kt = 'b'urk = '1234567'code = kt+urk.ljust(15)+'me,html
headername,json
"brands= [[""mercedes""], [""bmw""], [""ferrari""]]",file
"sheet.range(""a1"", ""a24"").value = somelist #i.e. []",excel
list,matlab
"list1 = [[ip, hostname], [ip, hostname], [ip, host",list
"items = [ (""item1"", someobj1), (""item2"", someobj2)",data-structures
'ioerror: [errno 2] no such file or directory',web-scraping
import sysimport randomimport mechanizeimport cook,string
elif v == 4: if event.type == event_250ms: if ml =,pygame
"traceback (most recent call last):file ""./openerp-",openerp
"traceback (most recent call last): file ""manage.py",mysql
import mathdef is_primes(number): if number &gt; 1,generator
enter first name: x enter last name: y x y,string
"def three(): op = """"  num = int(input(""input a num",variables
"def optiona(): estimatenumber = input (""please ent",list
num0=lambda f: lambda x:xsucc=lambda n: lambda f: ,lambda
from datetime import *import tweepyconsumer_key = ,datetime
"word = raw_input(""enter the word: "")length = int(r",repeat
"time = str(time) time = time.split(""."") time[1] = ",date
__author__ = 'apcs'from tkinter import *class fare,tkinter
account_activation_days=7email_host = 'smtp.gmail.,django
"def recursion(n):if n == 0: list=[""lelvel 0""] retu",recursion
"input: [25,28,11,10,9, 8,17, 23,20,19,14] output:[",list
"&gt; s = [1,8,93,3,8]",arrays
"[(12,12),(1,23),(43,12)]",list
"while 1 &lt;= 5: for num in range(1, 10): print ""t",nested-loops
"file = open(input(""please enter the name of the fi",integer
"while(active == true): print(""\n*** movie title ex",list
"[(word, sym) , (word, sym)....]",list
def random_answerlist(self): self.li = [] self.win,loops
"type_recherche = ""recherche""une_formation = [ [ ty",list
"l = [[1,2,3], [3,4,5], [1,2,3]]",list
nameerror: name 'python' is not defined,terminal
"for d in data: for (date, details) in d['nightlyde",json
"a = ""[1, 2, 3]""",string
"class screen_seat: def __init__(self,screen,show,n",class
"mylist = numpy.random.uniform(size=(m,n))",list
r=287.04 #jkg^-1k^-1cp=1005 #jkg^-1k^-1p0=1000 #hp,matplotlib
list&lt;customer&gt; customers; //orlist&lt;invoic,list
def voicerecognition(self): &lt;a bunch of voice r,function
benchmark\r\n\trunning for engine innodb\r\n\taver,string
"print calcfun.calc(x1coordinates, x2coordinates, y",function
"('hnsps150', ['19.41', 19.72, 18.64, 18.53, 20.36,",csv
qstat,bash
string,regex
"range(x,y)",range
&lt;root&gt; &lt;child1&gt;&lt;/child1&gt; &lt;chi,xml
collections.counter(),collections
c++,oop
&gt;&gt;&gt; from datetime import date&gt;&gt;&gt;,string-formatting
"string = ""restaurant_review-g503927-d3864736-revie",regex
"a =[[""1"",""2""], [""3"",""4""]]",list
value1 value2key1value3 value4key2,parsing
"list1=[""a"", ""b"", ""a"", ""c"", ""a"", ""b"", ""c"", ""d"", ""e""",list
python myfilename.py 2 3,input
"file ""/usr/local/lib/python2.7/dist-packages/flask",flask
timed_events,oop
student(model): photo = models.imagefield(upload_t,django
field,django
def main(): a = float(input('enter the length of t,geometry
car_object = {} cursor = self._db.execute('select ,list
"a = [1,2,3,4,5,6,7,8,9,1,3]b = [3,4,5,2,1,7,8,9,1]",pattern-matching
"'/a' : [10, 22, 12]'/a/b' : [10, 22, 12]'/a/b/c' :",dictionary
"[(1,2),(3,4,1),(7,5,6,9),(3,)]",sorting
"class drvcrystalfontz: def __init__(self, model, v",subclassing
please enter a sentence: this is a testa : 1e : 1h,loops
molecule=ammonia n 0.0000000000 0.0000000000 10.00,bash
"code=open(""comm.txt"",""r"")for line in code:if (line",comments
"class job(object): def __init__(self, jobname = ''",file
"class my_class def is_same(self, arg1, arg2): retu",if-statement
if curseword in typed or curseword2 in typed or cu,loops
# -*- coding: utf-8 -*-#!/usr/bin/pythonfrom os.pa,unix
b_articles = tc.tc_buch_articles.all()j_articles =,django
[&lt;_wmi_object: \\my_server\root\virtualization:,list
"dictlist = [{0:1,1:1,2:1,3:1}, {0:1,1:0,2:1,3:0}, ",list
"import systest_cases = open(sys.argv[1], 'r')for t",string
for jj=1:data_length %for each symbol in the input,matlab
"del var1[,var2[,var3[....,varn]]]]",list
"{'id': 1, 'name': 'studio pierrot'} {'id': 29, 'na",loops
elements(),function
"a = [(string,[(string,integer)])]",list
django-summernote,html
"from struct import packstring = pack(""&lt;i"", 0x11",c
.txt,osx
"list = [['t=-40f a=0k', 't=-15f a=0k', 't=59f a=0k",string
&lt;span class=jamalsinred&gt;h.s. ahmed ally&lt;/,html
"def accumulating(): list = [] strings = input(""ple",list
"[[1,2,3], [1,3,2], [1,2,3], [3,1,2]]",arrays
"myfile = open(""studentscores.csv"", ""a+"")newrecord ",csv
"print ""completed: %s % "" % (100*loops/totalloops)",string
"""about doctortardi""",string
public string contremarque{ get { return scontrema,regex
"import randomimport operatorprint(""welcome to the ",error-handling
aaaaabbbbbccccc,text
class a(object): def say_hello(self): print 'a say,multiple-inheritance
"ratings={'shane': {'127 hours': 5.0, 'avatar': 4.5",dictionary
# define a class inherit from an exception typecla,error-handling
"fname = ""file.csv""import pandas as pddata = pd.rea",pandas
"dict1={'fx245': 2, 'gt345': 12, 'vf251': 1, 'js921",dictionary
"x=[""apple"",""orange"",""orange"",""apple"",""pear""]",pandas
"a = [{'abc': 'top cin\u03b9ma 2011'},{'abc': 'd\u0",data-structures
foo(),function
"a,b,c,d,ea,b,ca,b,c,ec,d,ec,d,e,b,a",string
import randomimport stringchars = 'abcdefghijklmno,node.js
"clear= join(('string', seed ,'aviesta'));",django
"find(list, object)",list
"def main(): print() print(""program to determine if",math
from django.db import modelsclass category(models.,django
$apschanconfignumber,list
"my_dict = defaultdict(lambda:([],[],[]))",dictionary
tota_additional_bonus(),function
def main(): num1 = int(input('enter the first inte,syntax
"{'root':['value','path','type'],.......}",ajax
class classname: # and so on,class
"if input1 == 1: cipher1 = str(raw_input(""what woul",encryption
valueerror: dictionary update sequence element #0 ,string
"['math is cool', 'eggs and bacon']",string
7,loops
"l = []for i, obj in enumerate(queryset): if querys",django
"text_to_read = """"""{ ""tts_type"": ""text"", ""tts_input",arrays
hello,string
class transfers(models.model): amount = models.dec,django
"inventory = { 'gold' : 500, 'pouch' : ['flint', 't",dictionary
tri = '''\ 75 95 64 17 47 82 18 35 87 10 20 04 82 ,algorithm
def letterscore( let ): let.lower() if let in 'aan,debugging
!@#123myname --&gt; myname!@#yourname!@#123 --&gt;,string
"s = subprocess.popen([""../../run.py"", ""cat"", ""../.",cat
"{'human': human instance, 'mosquitoes': [mosquito ",dictionary
"z = 1zz = 11def x(): global z,zz print 'xxxx' y = ",if-statement
import golly as gimport random as rcoilsinp = g.ge,conways-game-of-life
for f in files: with open(f) as f: f.next() rows =,list
-bash: /users/username/library/enthought/canopy_64,osx
'abcdefg',string
"class a: def __init__(self): print ""in constructor",class
"import randomwords = (""python"", ""jumble"", ""easy"", ",loops
"def mix_up(a, b): if len(a and b)&gt;1: b=str.repl",string
"import matplotlib.pyplot as pltx,y = np.random.mul",numpy
"text = re.split(stop_char, (row[0]+"". ""+row[1][0:n",arrays
"def findroot1(x, power, epsilon): low = 0 high = x",square-root
a,string
lambda,lambda
class room: global x1 global x2 global y1 global y,class
"float = 7.434list = [7, ""."", 4, 3, 4]",list
def func(x): res=0 for i in range(x): res += i ret,loops
from tkinter import *from tkinter import ttkimport,tkinter
"function [xc,yc,r,a] = circfit(x,y)%% [xc yx r] = ",matlab
"example : if hello in file.txtthen print(""yes"")",file
math,recursion
"from functools import reducec=[[[0],[1]],[[2],[3]]",list
"mystring=""""""ab\r\n\r\n--_=_swift_v4_13613629825124",regex
try: pattern=r'&lt;tr&gt;&lt;td&gt;&lt;a href='(?p,regex
"[('category1', 'blablablabla'), ('category2', 'bla",tuples
"sendbuf = ""2011@"" + readthisfile(""c:\\0x3z4.jpg"") ",sockets
"mylist=[411211, 1234404, 5711427, 13600442, 136006",csv
"save_data = open('data/mapdata.bullet', 'wb')save_",pickle
"table=[{'device': 'a', 'iface': 'i1'}, {'device': ",list
file = self.sc1.getvalue(),wxpython
"def returnslideracceleration(a,b,theta_1,omega_1,a",numpy
curses,keyboard
str,command-line
gt:10,lambda
"['new:kim:operator', 'delete:joe:user_role_guest']",list
n,random
def main:#declare variables size=7people=[any 7 co,parallel-arrays
"[{""username"": ""ashish.mishra"", ""password"": ""hxmnwf",typeerror
import datetimedef validate(date): try: datetime.d,datetime
def confirmit():#======== confirm selection and mo,image
import chess.pgnimport chess.uci# ??? board().is_w,chess
"import random def area_code(r): print ""your new ph",phone-number
"listone = ['blue', 'red', 'green']listtwo = [1, 2,",list
"no_image = pygame.image.load(""ideot.png"").convertx",pygame
"x = {'a':1, 'b': 2, 'c':5}y = {'b':10, 'c': 11}z =",dictionary
"test = request.post.get('test', '').split(',')",database
import xlwtfrom tkinter import * from tkfiledialog,tkinter
"a= [1,2,3]b= [1,2,3,4,5,6]",list
"a = 3b = 4c = 0d = 1e = 7f = 6g = 5y = (0,1,2,3,4,",graph
"def func(fizzbuzz): value = """" for x in range(0,fi",fizzbuzz
"level = [ 'xxxxxx', 'x x', 'x i x', 'x x', 'x x', ",class
self.response.write(main_page_html.replace('___ema,google-app-engine
"class type: def __init__(self): self.name=""fire"" s",oop
def compareresult(): if giveresult(dice) &gt; give,list
import randomtotal_inheritance = 1587654administra,math
s = [[str(e) for e in row] for row in matrix]lens ,list
print,debugging
"eg_dict={}for row in iterable: dict={row[1],row[2]",dictionary
def agilent_e8361c_pna_read(file_loc): ''' load th,csv
"f([1, 2, 3], 4) = [[1, 1, 1, 1],[1, 1 , 1, 2],[1, ",itertools
"mw = range(1,1000)def cuter(mw): if len(mw)&lt;20:",recursion
import socketimport osimport shutilimport pygamefr,image
import nltk from collections import counter import,nltk
"import randomimport operatorop = {""+"":operator.add",random
from random import random while true: for i in ran,debugging
#=================================================,stack
import socketfrom threading import *import timehos,multithreading
1 &gt; 1.0,excel
class categorydetailview(detailview): model = cate,django
class a: def a(self): some argument def b(self): a,class
import numpy as npimport matplotlib.pyplot as pltx,matplotlib
"stringvar = ""one;two;three;four""",arcpy
"tempstring = ""?var1=somevalue1&amp;var2=somevalue2",string-parsing
"[""file1"",""a"",""b"",""c"",""file2"",""d"",""e"",""f"",""g"",""h"",""",regex
proclamation: 7constitution: 1people: 6authority: ,output
type item struct { somefield string},generics
&gt; keyerror traceback (most recent call&gt; last,dictionary
c:\users\pengsir&gt;d:\mingw\bin\gcc -vreading spe,numpy
&lt;!-- before: --&gt;this is the text to match.&l,regex
data=pandas.read_json('filename.json') #using pand,json
"def main(): #create list employee = [""ciara murphy",list
coorrr,r
"re.findall('a.*c', 'abcbc')",regex
"[""red"", ""green"", ""blue""]",list
"'awake\nawoke\nawoken\nbe\nwas, were\nbeen\nbeat\n",split
"list = ['herp' , 'derp', 'foo' , 'derp', 'foo', 'f",list
import stringimport randomdef random_characters(nu,string
"'x, y = meshgrid(gammas, psis)'",mplot3d
0,list
"[{'api_calls_per_day': 0.29411764705882354, '_id':",mongodb
"class piece(): r=4 l=5 w=7 k=9ask=input(""which val",class
"traceback (most recent call last): file ""h:\python",encryption
2.42 11.42 13.86 72.3256.59 88.52 4.33 87.7073.72 ,list
import matplotlib matplotlib.use('agg') import mat,matplotlib
============================line of textline 3: po,parsing
"data = [[4,5],[4,7]]search = 4for sublist in data:",list
if x == 2: do somethingif x == 3: do somethingif x,if-statement
short var = (msg[4:5]&lt;&lt;8) | (msg[5:6]),casting
"address = ('', 7777)server_socket = socket(af_inet",sockets
"#key = [4,5,12,6,7,11,8,9,1,2,3,10]key = [4,5,6,7]",c++
"self.send(param, iostatus,'move', 'e', '-1000') # ",while-loop
comunicate(),subprocess
"list[1] = ""some text""list[2] = ""some more text""lis",list
"class gui(frame): def __init__(self, parent): fram",tkinter
"""1"" ""2"" ""3"" ""4"" "" "" ""text1"" ""text2"" ""text3"" ""6"" ""f",string
"#!/usr/bin/env python#standard module, needed as w",printing
"if rectanglerect.collidepoint(mousex,mousey): blab",mouseevent
&gt; python my_application.py -some_flag,eclipse
def reverse(): s3 = '' for char in reversed(s3): s,function
"import numpy as npdata = [np.ones((300,1)), np.one",numpy
"super(someclass, self).__init__()",oop
def multiprocess(sentences): responselist = [] #ca,multiprocessing
"re.compile(r""(pattern1)|(pattern2)|...|(patternn)""",regex
"conn = httplib.httpconnection(""10.30.111.13/view"")",httplib
"[u'alpha beta gamma', u'delta-espilon phi', u'alph",arrays
"{ {1:{2:3.4, 3:5.6, 4:7.8}}, {2:{3:6.4, 4:66.6, 5:",dictionary
"def read_m_by_rating(first_year,last_year,top_numb",while-loop
"&lt;div id=""listing-details""&gt;&lt;div id=""listin",beautifulsoup
"squares = [[1,5,9,13], [2,6,10,14], [3,7,11,15], [",arguments
import turtle#i need to fix the positions of the x,function
# grab each file.date = datetime.date.today().isof,directory
25.0 25.0 25.0 025.0 25.0 75.0 025.0 25.0 125.0 02,file
"import remy_source = re.sub('\(','',my_source)",regex
"select * , if( `word` = 'sim', 1, if( `word` like ",sqlalchemy
mohammedahmedmansoursamisameerukhlofasfarvirusamee,copy
"{'game night': 19:00 2013-06-29,'3cb vs st3 match'",events
import osimport sysimport webbrowserfrom bs4 impor,web-scraping
"color_lst= ['ff333399', 'ffffff00', 'ffc0c0c0', 'f",list
string = ''' t network questionsis there something,regex
for k in id1: #id1 is a list of nodes for l in id2,networkx
"list = [[1,2,4,5], [1,2,3,4,5,7], [1,4,5,6], [2,3,",list
def foo(item): global thing thing = item return it,while-loop
1.1.1.12.2.2.23.3.3.3...5.5.5.5...10.10.10.10,replace
freq= {} # empty dictwordset = set() # empty setwh,set
id candy - fruit index 101 banana 1 102 chocolate ,mysql-python
"{'chemistry': 97.27, 'civics': 100.0, 'history': 7",json
for loop,django
def main(): num1 = int(input('enter an integer: '),performance
"{ 'name': 'jack', 'age': 24, 'friends': ['bob', 'a",dictionary
"'id,obj1,""string, etc"",obj2'",csv
multiline_string_final = []for match_multiline in ,regex
"a=['b',['c']]",list
"import json j=[{""city"": ""kuala lumpur"", ""populatio",json
"import csvwith open('uspto.csv', 'rb') as csvfile:",csv
"a = input(""and the answer is..."")if a == ""answer1""",if-statement
"import reresult = re.match('a.*b', 'aabab')result.",regex
"while true: ch = getch() print ""queue: "" + ch # do",linux
.replace,pandas
with open(filename) as f: lines = f.readlines(30)p,file
self.book = book,class
python,file
numpy.fromfile,binaryfiles
"def is_programmer(): if name.lower() == ""gregg"": i",return-value
"date_filename = datetime.datetime.now().strftime(""",string
"candidates = ['a', 'b', 'c', 'd']",for-loop
mod_wsgi (pid=8270): target wsgi script '/var/www/,apache
globals()['z'] = 8,function
dna,string
import pickleimport osif not os.path.exists( 'c:\p,dictionary
dataframe,merge
"import csvimport mathwith open(""train.csv"", ""r"") a",csv
"&lt;div class=""col-sm-8"" data-pdf-class=""column8""&",beautifulsoup
"list=[] list1=[] list2=[] def merge(list,list1,lis",recursion
from bs4 import beautifulsoupimport reytchannel = ,html
n,algorithm
import randomimport pygameimport images_rawfrom co,function
facebook_app_id,facebook
"r = 0b = 0cars = []car = input(""cars: "")cars.appen",list
"function test(){ request = $.ajax({ url: ""test.py?",ajax
**heart rate pattern**82 82 87 87 89 90 89 89 89 8,vector
for i in range(n): # the math goes here.  sumrfact,loops
"for item in feed.entries: print(item[""summary""], i",function
"import csvimport sysexport = csv.dictreader(open(""",csv
d:\python34&gt;pip install mysql-pythoncollecting ,mysql
"aa= ""qddddqdtdqtd"" bb = ""qdt"" cc = ""tdqdqqdtqdq""",regex
@app.route('/downloads/&lt;string:yt_id&gt;')def d,flask
"a=[1,2,3,4]b=a[:2]c=[]c[b]='sss'#error",django
.js,django
python manage.py runserver 0.0.0.0:8888,django
"service = build('fusiontables', 'v1', developerkey",dictionary
"def omssa(a,b):new=[]for x in b: boolean=true whil",list
&gt;&gt;&gt; v=set(['letters'])&gt;&gt;&gt; v{'let,string
"tmplist = [[0,-10,0],[0,10,0],[0,5,0],[1,0,0],[0,0",arrays
"answer:[[ 44. 1. 0. ..., 12. 13. 2.] [ 51. 7. 0. .",numpy
"from random import randintclass_list=[0,1,2,3,4,5,",random
"subprocess.popen(...skript details...)(output, err",bash
"{'state1': {'city1': ['dict1', 'dict2']}, 'state2'",algorithm
"replaced = re.sub(""[^http://*/s](dss[a-z]{2}[0-9]{",regex
"for ind in range (0,len(the_list)): if ind%10==9: ",list
"dict_1 ={'a': 'a', 'b':'b', 'c': 'c', 'd':'d', 'e'",dictionary
"&lt;tr&gt; &lt;td class=""zeit""&gt;&lt;div&gt;03.12",html
"number = ""12346546""summ=0for i in number: summ+=in",sum
"a = np.array((121011,121020,121025,121030,121032,1",time
#!/usr/bin/pythonimport urllib2import urlparsefrom,beautifulsoup
&lt;h3&gt;,html
[22/jul/2014:10:41:01.91] --- {'cookies': {'_sdsds,regex
import threadingimport timet1 = threading.lock()co,multithreading
ans,numpy
"def foo(a): b = a + 1 c = a + 2 return b, cfoo(1)",function
"old_file = open_workbook(_—“c:\\the_file.xls_—,for",excel
"def splitter(input, inc=0): if inc == len(regex): ",list
m_array,arrays
1-&gt;march2-&gt;april3-&gt;may11-&gt;january12-&g,date
if [[ $(ls -d $dir1/* | grep test) ]],linux
"[[0000],[0001],[0002],[0010],[0011],...]",math
friend_update=friends.objects.filter(user_me=self.,django
"['c:\\data\\example1.txt','c:\\data\\example2.txt'",cmd
list,boolean
{rdflib.term.uriref(u'&lt;http://purl.org/net/onto,dictionary
monday tuesday wednesday thursday fridaymarsbar 9 ,table
alias vim='~/vim74/bin/vim'~/vim74/bin/vim,vim
"with open('a') as f: a, b = f a, b = a.strip(), b.",awk
&gt;&gt;&gt; from bs4 import beautifulsoup&gt;&gt;,beautifulsoup
"('e', 'k', 'y') # &lt;- don't get the values from ",list
ssocr,json
(exp(-((-mx + x - y)^2/(2 s1^2))2x - 2y (-my + y)^,regex
"imports......[setattr(__main__, 'f', [1, 2, ..]), ",markov
from tkinter import *window = tk()canvas = canvas(,tkinter
t=input()dp1=[]dp3=[]dp5=[]dp7=[]dp1[0]=0dp3[0]=0d,arrays
"#!/usr/bin/pythondef merge(a,p,q,r): n1=q-p+1 n2=r",algorithm
while(1): import eg2.py,import
list(*arguments),list
"import osdirname = ""/users/marcusj/test/pngfiles""p",syntax
class myclass(object):,class
"textbox.delete(0.0, end)textbox.insert(end, name)t",user-interface
"input = raw_input (""what is your number"")",int
with file as f: for line in file: chars = len(line,string
subprocess.popen,linux
"""hostmac"":""112233445566""log here""hostmac"":""23aa23a",perl
urllib,urllib
#f a 1 1 1 3 3 22 1 0.002796 0.000005 0.000008 -4.,data-extraction
"class a: def __init__(self:a,size:int): self.size=",class
cat $mydir/* |grep abcd |grep zip |grep -v idx |aw,bash
from bs4 import beautifulsoupimport csvx = int(raw,csv
"""""""#django settings for realtimenotif project.gene",django
"def name():j=open('file.txt', 'r', encoding='utf-8",file
"results = label(window, text = ""here i want the re",tkinter
def isitbinary(mystring): for ele in mystring: if ,string
"file ""f:\samuel's python.py"", line 86, in code use",nameerror
def foo(a): return a * a.t,numpy
# minqlbot - a quake live server administrator bot,random
def travel(): travel.s=0 travel.frate=[] travel.tr,list
vector center;for(point p in points): center += p;,c++
"class requestform(forms.modelform): """""" online req",django
for entry in mydictionary: if entry != '*' do some,dictionary
print(ofiles)atoms=[[] for x in range(len(ofiles)),list
"procinfos = {""f1"": f1, ""f2"": f2, ""f3shell"" : (wrap",generator
"&lt;node name=""a"" position = ""4""/&gt; &lt;node nam",xml
string0 would be cell a1 or row[0] string1 would b,csv
"def list1(): numinput = input(""enter numbers separ",list
"def choosebest(s): if len(s) == 2: c = cmp(s[0], s",recursion
"np.append(list1,list2)",numpy
"import csvwith open('links.csv', 'rb') as input_fi",sorting
from django.contrib.auth.models import abstractbas,django
types = {}# auto-register all already defined subc,dictionary
import reimport jsona = open('test.txt').read()a =,json
dict,csv
"movies = [[""sixth sense""],[""austin powers 2""],[""te",list
5.times do ... end,loops
"with open(""test.txt"", ""r"") as test, open(""table.tx",input
http://www.tripadvisor.com/hotel_review-g60763-d80,scrapy
"&gt;&gt;&gt; list_of_list = [ ['a', 2], ['b', 3], ",list
x=object()x_list=[x]*5print x_list.count(x)5print ,methods
sha-256,encryption
prody10000003000,windows
"['x1', 'p1(0, 0, 0)', 'p2(0, 0, 0)', 'p3(0, 0, 0)'",list
"import re, osmykey = open(""text.txt"", ""r"")take = o",if-statement
"df = pd.dataframe(np.random.randn(10, 2), columns=",pandas
"a=((""a"",2),(""b"",2),(""a"",1))",sorting
from datetime import datetimefrom tkinter import *,tkinter
def total_ups(): j=json.loads(reddit_front) return,json
"import sys, glob, os, stringheader = ''check = 0pa",readfile
"(key, value)",django
snapdate instance waitevent avgwaitinms0 2015-jul-,pandas
"def speed(self, max, now): self.min = 0 self.max =",arguments
"def compose(x): digits = ['', 'one', 'two', 'three",numbers
f.read(1),encryption
"import rep = re.compile(r""""""foldername.* ,null"""""",",regex
#snp a1 a2 i1 j1 i2 j2 i3 j3 chr6_24000211_d d i3 ,perl
crontab,linux
"""step down""",function
"import randomimport ostextinput = """"while textinpu",compiler-errors
"import numpy as npfrom mayavi import mlabdt = 10x,",numpy
grade=[]names=[]highest=0#taking number of caluesc,statistics
"raw = ['a','1']for i in raw: if i.isdigit() == tru",string
"[1, 2], [[], 1], [[1], 2], [[1], [1]]",recursion
&lt;html&gt;&lt;head&gt;&lt;p&gt;some code&lt;/p&g,regex
"ascii_lowercase = ""abcdefghijklmnopqrstuvwxyz""asci",function
diskarr=(`lsblk | grep 'disk' | awk -v col1=1 '{pr,arrays
python,brackets
"from path import *import paramikoif __name__ == ""_",path
"lst = [ [ ['userid','amount','email','week1',1], [",list
"""a""""a.b""""b.c.d""",string
"[[1, 1, 2.2, 1.3, 9.6], [1, 2, 2.1, 2.2, 7.6], [1,",list
"in [1]: import rein [2]: a = re.compile(""example\.",regex
object.getsubcomponentids(),recursion
"def schechter_fit(stellarm, alpha=-1.35): schechte",function
"print '{0} lands by turn {1}: {2}'.format(lands, t",string
"import redef validate(passwd):  reg = r""[a-z0-9]{6",regex
sales,algorithm
"allusers={user1: {'film1': vote1, 'film2': vote2}u",dictionary
"name = ""nice name""name = ""bad name""",data-structures
from ab import abclass xyz: def __init__(): self.a,events
&gt;&gt;&gt; site.addsitedir('/python27/tools/scri,2to3
from __future__ import print_functionclass employe,class
price_feet=[data['price']/data['sqft_living']],pandas
"a=[[[(1, 2), (3, 4)], [(5, 6), (7, 8)], [(9, 10), ",product
import requestsfrom bs4 import beautifulsoup# conn,string
biographytexttextplace of birthtexttextlife stylet,text
"food = (""bread"")bread = {""name"": ""bread"", ""foodval",dictionary
noticetime,django
import requestsr = requests.get('http://www.dli.er,python-requests
function,function
from distutils.core import setupimport py2exesetup,pip
"if ""addition"": easygui.msgbox (""please enter the c",string
"prices={'banana':4,'apple':2,'orange':1.5,'pear':3",dictionary
database: [url_parsed] file name: e:\url parser\ur,sql
def inverseindex(strlist): d={} for x in range(len,indexing
"query = post.query(post.tags.in(['python', 'ruby',",google-app-engine
"from flask import flask,request,redirectfrom flask",flask
"# bkm( [500, 1024, 2000, 1100000] ) &lt;- input# [",nameerror
items,list
"from abc import abc, abstractmethodclass operator:",contains
document.lastmodified,html
"a = c.writer(class)data = [[row[1],row[2],row[3],a",csv
names,class
requests,sql
for x in list:  dostuff(),performance
"&gt;&gt;&gt; a = [1,2,3] # create a list&gt;&gt;&g",string
def clear(tup): if len(tup) == 0: return tup else:,recursion
logfile=open('/home/prasanna/downloads/processed_f,regex
import datetimeimport csvfrom tkinter import *from,user-interface
def get(count=none):  if count &gt;= 1:  a = count,if-statement
range count0 0-2 1721 02-05 822 05-10 1173 10-15 1,matplotlib
"tup=input(""enter tup:"")start=0length=len[tup]end=t",binary-search
"(a,b)",arrays
enter code herefrom array import *# set up arrayfi,arrays
dict,memory
httpurlconnection,rest
[0] ppt: (non-cluster) 4294967295 1 1.9.1.25timest,fileparsing
id item color01 truck red02 truck red03 car black0,pandas
x = range(5) x[2:3] = range(5) print x[5],list
"import pygame, sys, randomfrom pygame.locals impor",pygame
"new mexico,santa fealabama,montgomery",list
"curl -h ""public-api-token: 049cxxxxxc026ef7364fa38",json
"while y != 100: dice = random.randint(1,6) print('",loops
4.12. -115.12. 246.12. 1927.12. -348.12. 921,string
"def selection_sort(list): for index in range(0, le",algorithm
"list = ['a', 'b', 'c', 'd']",list
"if mydict[""list""][user_index] is none: mydict[""lis",list
import some_module ?,python-import
"@app.route('/api/pdl/&lt;int:task_id&gt;', methods",get
"[{""x"": ""23""}, {""x"": ""14""}, {""x"": ""9""}, {""x"": ""19""}",json
"ks = (5, 7, 9, 11, 13, 15)lo = list([(s**2-1) for ",list-comprehension
dsafjukfa.abcdfgdsafdsf_0.abceatada-gfda_fdagfda_a,regex
&gt;&gt;&gt; pattern(1)1&gt;&gt;&gt; pattern(2) 11,design-patterns
"dict_1 = ({'a':1, 'b':2,'c':3})dict_2 = ({'x':4,'y",dictionary
"a = [1,3,5,657,78,43,7,2,123, 43, 321, 4531]",list
"class bag(): __slots__=('name', 'weight', 'value')",int
"s = ""&amp; how are you then? i am fine, % and i wa",list
"data = [""long"",""short"",""fanouts""]app = []for da in",arrays
"alphabets = ('a','b','c',.....)",enumeration
#reading an input file x=open('graph .txt')data=[l,dictionary
"d = [('c', 1), ('a', 2), ('b', 3)]",list
"&gt;&gt;&gt; q = question(question_text=""what's ne",django
def playeragefunction(): valid = true while valid ,function
"room1_commands = ['help', 'look']",list
a = ['blue' 'red' 'green'],numpy
zipfile,loops
jarrod:0 jarrod:1 jarrod:2 jarrod:0 jarrod:1 jarro,file
regex0 = re.compile('foo')regex1 = re.compile('bar,function
2016-04-01 04:27:30.6216 (2283721) (more text)2016,readfile
"some_list = [5.43, 12.01, 10.23, 3.33]",list
class usertest(testcase): user = userfactory() def,testcase
if variable == 'string1': do_stuffelif variable ==,if-statement
def fun(): n = 300 features = [[0 for i in range(0,numpy
"import randomx = int(input(""how many times? ""))y =",random
user_bin = (input('\nplease enter binary number: ',validation
random.randint,random
"epitope,id,frequency,assayavnivgysnaqgvdy,123431,2",csv
x0+x1*x2+y40+y1,regex
"{'sentences':  [{'indexeddependencies': [], 'words",json
"f = open ('file_name.txt','wb')",arrays
text=some aliens try to run into the fieldstext=so,regex
def clean_file(self): file = self.cleaned_data.get,django
error: python.h: no such file or directory,c++
frame1,user-interface
"num_threads = 50file_name = ""some/file""def read_ch",multithreading
import jsonfinal = []count = 0postid = 224 while p,json
count = 0while count&lt;12: count +=1 if practiceb,infinite-loop
"playerinfo = [(ansonca01,4,1871,1,rc1),(forceda01,",list
"circle(201.5508,387.68505,2.298685) # text={1}circ",numpy
while len(pw) &lt;= 6 and len(pw) &gt;= 12 is true,while-loop
"['this','is','list one'] ,['and','list two','combi",string
"def __send_command(self, endpoint, action, body): ",syntax
one_ = 0two_ = 0three_ = 0one_operator = 0second_o,debugging
import urllib2 import time import datetime import ,arrays
[errno 13] permission denied: '/library/python/2.7,osx
urllib,parsing
class flowgraph: g=nx.digraph() i=[ ] #input o=[ ],graph
__add__,class
"[ {'price': 100, 'product_id': 30089, 'grade_id': ",list
class main: def __init__(self): global lol self.ri,tkinter
{{value.item_total }},django
"products=[['1','product 1'],['2','product 2']]arr=",arrays
"import urllib2therequest = ""http://finance.yahoo.c",yahoo-api
"with open('big_file.txt', 'r') as f: for line in f",windows
"class foo(): def do_stuff(self, name): self.new = ",class
/team/*/euro_2012,regex
"guess1_easy_removed = raw_input(""which word do you",if-statement
"traceback (most recent call last): file ""novaapicl",unit-testing
cd trilinos-buildcmake -d trilinos_enable_pytrilin,pytrilinos
@opponentfeature: fight or flight in order to incr,bdd
r = q.all() # for getting the values of sql obj fo,json
r'test string',string
class testingconfig(config): debug = true testing ,postgresql
import pygamefrom colors import *pygame.init()file,pygame
#!usr/bin/pythonimport randomseg1='''_________'''s,while-loop
0x7ff,unicode
# initialisationsfilename='/home/admin/desktop/nca,linux
"6,3,54,4,83,7,21,8,99,0,6",list
"def cipher(plaintext, arr): import math ciphered =",encryption
nwchem,regex
self.session.response,tornado
"pairs = [('cheese', 'queso'), ('red', 'rojo'), ('s",list
"['diffuse systemic sclerosis', 'back', 'public on ",string
example.exe --dosomething -i random.txt -o random1,windows
def func(list_name): #check for nested list,list
import solar_system as ssimport pymel.core as pmim,indentation
import ui.interface.interfaceobj = ui.interface.in,import
"**file 1**123423245342351643**file 2**643, 30, , ,",search
"list1 = [""they"" , ""are"" ,""really"" , ""angry""] list2",list
"x=raw_input(""enter word: "")x=define(x)print x",words
"with open(file,'r') as f: reader = csv.reader(f) h",csv
aheat.py,oop
"import mmapsharedmemory = mmap.mmap(0, 512, ""local",c++
begin 644 filename.extension,uuencode
http://127.0.0.1:8000/polls/search-form/,regex
"task = raw_input(""would you like to encrypt or dec",osx
choose(),tkinter
class books(models.model): user = models.foreignke,django
def index(request): context_dict = {}  #products_p,django
"import randomstudentname = input(""please enter you",function
robot framework,htmlunit
typeerror: rect argument is invalid,pygame
os.system(),os.system
import urllib.requestimport rewebpage= urllib.requ,loops
"dt_start_time = ""2014-09-23 11:00:00""dt_end_time =",datetime
"if all(x&gt;0 for x in array([-10,1,2])): print su",arrays
"def foo(i, l): i = 5 # this creates a new variable",immutability
"dicts=[]tempdic={}for i in range(0, len(self.info)",dictionary
"[0,0,0,1,1,1,0,0,0,1,1]",list
"filename = input(""enter a filename: "")try: open(fi",file
layout.html,html
from twitter import *t = twitter(auth=oauth(oauth_,twitter
"1, 1, 1, 1, 1, 12, 2, 2, 2, 2, 23, 3, 3, 3, 3, 3",file-io
"{4:6, 6:9, 7:6, 5:6, 8:9, 11:9, 10:9, 12:10, 13:10",dictionary
def best_moves(): # get_possible_moves() returns a,depth-first-search
import osimport shutilimport globdir_src = r's:/no,glob
for x in orderedlist: if x in resultlist1: print x,for-loop
dict_temp = {}logs = {}for d in e: count +=1 dict_,dictionary
import urllib2from bs4 import beautifulsoupfirst=u,table
ben cat 15john dog 17harry hamster 3,file
from threading import threadimport timedef runa():,sleep
"move = input(""&gt; "")",variables
"&lt;/td&gt;&lt;/tr&gt; &lt;input id=""hiddenloginur",html
while 1:1,infinite-loop
rem(),list
"def log(user, successful):if successful == true: w",if-statement
1.1 title: title1 line1line2line31.2 title: title2,regex
tue feb 24 17:51:10.835 srv02 notice event loop - ,regex
import xml.etree.elementtree as etimport osfor yrc,loops
"url(r'^articles/(?p&lt;year&gt;\d{4})/$', 'news.vi",django
conf.py,python-sphinx
"start_list=[[(blah1,123)],[(xblah2,123)],[(somethi",regex
"[1][2][3][1,2][2,3][1,2,3]",algorithm
"initial_list = ['c2', 'da', 'da', 'c6', 'd6']",list
abc[3:0],perl
"idict={'1_key':'abcd','2_key':'abcd','3_key':'bcde",join
"myfile=open('example.txt', 'wt')myfile.write('i ha",file
for,time-complexity
import urllib2from beautifulsoup import beautifuls,csv
png_files_r.csv,list
variable += a_single_statement,syntax
"dic = {'a':10, 'b':9, 'c':11, 'd':12}&gt;&gt;&gt; ",dictionary
"environment: python 2.6path=""/this/is/an/example/""",linux
"a = {""green"":{""small"": 5, ""medium"": 10, ""large"": 1",dictionary
while true: clock.tick(75),timer
${any sequence of characters},regex
&lt;script type=text/javascript&gt; $(function() {,html
"{% extends ""bootstrap/base.html"" %}",twitter-bootstrap
rpm -vhu https://nmap.org/dist/nmap-6.49beta2-1.i3,linux
"&lt;h5 id=""foo1""&gt;title 1&lt;/h5&gt; &lt;table c",html
"['one', 'two', 'three', 'four']['five', 'six', 'se",string
player.sendmessage() #sends message to playerplaye,list
&gt;header1actggcta&gt;header2gattaca,fasta
"array([2, 0, 0, 1, 0, 1, 0, 0])",numpy
"citylist = open(os.path.join(folderpath, 'clipped_",list
.56494480.56494448,tkinter
&gt;&gt;&gt; import re&gt;&gt;&gt; s = 'aaaaabbbbb,regex
percentthisyear = (disputesfythisyear/invoicesfyth,matplotlib
import cv2class crop: #constructor def __init__(se,opencv
wb = openpyxl.load_workbook('example.xlsx')sheet =,excel
"response1 = requests.get(url, headers=headers , ve",json
import osimport timeimport shutilimport smtplibfro,email
"list_1=[(1,22),(1,22),(2,29),(2,16),(3,56),(4,32),",sortedlist
#!/usr/bin/pythonimport rer = re.compile('(?i)m(|[,regex
| a | b | c | 1 2 3 4 5 6  7 8 9 10 11 12,arrays
"import sysimport osoutput=[]f= open(smart.txt, 'r'",linux
"getit = [{u'company': u'', u'customerid': u'qwert'",django
"import globread_files = glob.glob(""*.txt"")with ope",text
import jsonfrom pprint import pprintwith open('c:\,json
import randomdef main(): i = 0 num = 0 #while loop,random
$ ping 135.251.157.2pinging 135.251.157.2 with 32 ,shell
"post = cgi.fieldstorage(fp=environ['wsgi.input'],e",wsgi
table_sql = ('create table %s (' % name_table 'gid,sql
chunk = re.sub(b'-----------------------------(.+),regex
if bestx!=1 or starcount!=1: x=catif bestx==1 or s,boolean
"&lt;div class=""title"" onclick=""ta.setevtcookie('se",html
&lt;your_app_directory&gt;,osx
"import csvusers_csv_file = self.request.get(""users",google-app-engine
ss = pexpect.spawn(ipaddr) print ipaddr  ss.logfil,pexpect
"s1=str(""hello world"")l1= list(s1)print type (l1)li",list
people 0.508931508057 -0.280345656093 -0.031819910,text
1) normal distribution of it. (i don't have the si,numpy
"{'new': 'old', 'bright': 'dark', 'on': 'off'...}",dictionary
d1 = {u'from':{u'dn':'topology/pod-1/node-101'}}d2,dictionary
"""could not find a version that satisfies the requi",django
from tkinter import *def asdf(): print('test')tk =,canvas
np,regex
"lst1 = {1: {""a"": ""x"",""b"": ""y""}, 2: {""b"": ""y"", ""c"":",dictionary
yara_rule1: rule match: problem:yara_rule2: rule m,spaces
if mile &lt; 300: mileinfo['miles'] = 1elif mile&g,if-statement
&amp;(?!(?:[a-za-z][a-za-z0-9]*|#\d+);)(?!(?&gt;(?,regex
"s,['[""[\'2\']""', "" '3']"", '10']",layout
"class readmags: def __init__(self, fname): self.da",class
"a = [1,2,3,4,5,6,7]b = [1,2,3,4,5,6,7]",list
"[{hst, akst, pst, mst, cst, est, ast, wat, cet, gm",regex
"x1 = [0.0, 0.3, 0.8, 1.1]y1 = [5, 6 , 4, 1]period ",transformation
"screen = [""display"", ""screen"", ""broken"", ""glass"", ",file
"def p(n,c): s = 0 if c &gt;= n: return n if n % c ",sum
"is, are, was, the, he, she, fox, jumped",function
"body = {'--':'2bbcee47b4e94819a3a47eeb8967e244', '",django
(.*)-&gt;(.*),regex
finditer(),regex
&amp;quot;/base/data/home/runtimes/python27/python,google-app-engine
name,dictionary
class player(pygame.sprite.sprite): def __init__(s,pygame
reading my book... hate it... the childs is good r,regex
{'ibm': date 2014-01-02 nan 2014-01-03 0.006004 20,pandas
print (''' &lt;!doctype html&gt;&lt;html&gt; &lt;h,html
ur'(?u)[a-z]+ing',regex
"def test(self,uniprot_id): ''' same as the uniprot",syntax
'str' object has not attribute 'subs',sympy
countone = 0counttwo = 0countthree = 0countfour = ,variables
cj = cookielib.cookiejar()opener = urllib2.build_o,http
"membership_data = open(""c:\\users\\user\desktop\pr",for-loop
def isnot_prime(x):if x == 1: return trueif x == 2,algorithm
xxd command,file
from selenium import webdriverfrom selenium.webdri,selenium
//typeerror: 'unicode' object is not callable,function-call
o(log n) complexity,algorithm
"arg = data.split( )  args = ''  for index,item in ",sockets
"def draw(canvas): global time, started global live",global
"class user(db.model):__tablename__ = ""users""id = d",flask
unindent does not match any other indentation leve,syntax-error
$_get,wsgi
python -i,while-loop
c:\python34\scripts\mysite&gt;python manage.py mak,django
"sub_pos_list = []for i in range(0, len(pos_list)):",list
"def bigger(x, y): if x &gt; y: return x return y",if-statement
meow(),class
"from tkinter import *root = tk()root.title(""curren",user-interface
testresults(),list
&gt;&gt;&gt;mydict = {'numbers':[]}&gt;&gt;&gt;myd,list
"self.partinputframe=frame(self.parent,width=self.p",tkinter
"from django.conf.urls import patterns, include, ur",css
if len(first) &gt; 1 and first[0] == '*' and len(s,algorithm
def main(): packets_sent = 0 c_range = ip_ranges(),performance
regex,regex
print std::setfill('0') &lt;&lt; std::setw(2) &lt;,c++
import serialimport rpi.gpio as gpiogpio.setmode(g,raspberry-pi
"892,3,""kelly, mr. james"",male,34.5,0,0,330911,7.82",numpy
from tweepy import streamfrom tweepy import oauthh,neo4j
def num_pal(nums): for x in nums:  w=def pals(x): ,palindrome
"os.system(""taskkill /f /im microsip.exe"")os.system",double-click
geocoderserviceerror: &lt;urlopen error [errno 100,error-handling
"l.testsample(1, ""goog"")",lambda
a = {} #empty dictb = somefunc() # this returns a ,dictionary
"import numpy as npx, y = np.mgrid[0.1:0.15:3j, 0.1",for-loop
date_a,datetime
"r = 0list = ['apple','lime','orange']def list_list",function
'eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjpyxqioje0,compression
"traceback (most recent call last): file ""c:\docume",django
data = ast.literal_eval(''.join(ptdata['partnerlis,list
"self.tracks = [[p] for p in features.reshape((-1,2",numpy
beerseach = totalbeers / guestsspiritseach = total,function
"&gt;&gt;&gt; keyorder = ['a', 'c', 'b']&gt;&gt;&gt",list
def maxgrossfinder(c): for film in year: maxgross ,for-loop
from checkbox.lib.text import splitclass point: x=,class
from check import checkfunction,function
"&gt;&gt;&gt; ulist = [1,2,3,4,5]&gt;&gt;&gt; ulist",list
1 2 31 3 22 1 32 3 13 1 23 2 11 21 32 12 33 13 212,algorithm
http://www.hannaford.com/thumbnail/produce/fruits/,html
jpeg,jpeg
"urlpar= { 'd':'%s', 'e':'%s', 'f':'%s', 'a':'%s', ",dictionary
"color = {'blue': 1, 'red': [], 'green':[]}",dictionary
macros = { 'date': os.environ['notify_shortdatetim,dictionary
userfile.c,stdout
import urllib.requestimport json##define json api ,json
import urllib.requestimport jsonimport iofrom urll,json
--boundary--id 1234567date 2/26/13type xclass abc-,ascii
"from xml.etree import elementtreefile = open(""xmld",xml-parsing
"def a_func(parent_node, child_node): parent_node.a",function
temp,variables
"import os,sys,re,string,typescved = [ u'python\u66",list
"&lt;a href="" ""&gt;",html
"from fabric.api import run, sudo, cdprefix = ""ssh ",ssh
like hate loathe 1,csv
&lt;textarea&gt;,html
%pysparkimport datetimefrom pyspark.sql import sql,apache-spark
fname1 lname1 id1 num1fname2 mname2 lname2 id2 num,string
ll,regex
"metadata = { ""string"": ""value1"", ""string2"": ""value",attributes
process_queue = []total_wtime = 0n = int(raw_input,loops
"list=['\opt\mydata.cab','\my\ginger','\my\garbage'",string
"test_list1 = [['happy', 'dog'], ['sad', 'dog'], ['",string
"my_list = [( [a1, a2, a3, a4, a5, a6, a7, a8, a9, ",list
a | a&gt;b | a&gt;b&gt;c | a&gt;b&gt;c&gt;d,list
$ pip install xonsh,ubuntu
"('aapl', timestamp('2012-10-22 16:00:00'), 669.789",list
"from selenium import webdriverdriver.get(""http://w",selenium-webdriver
"&gt;&gt;&gt; papa = ""papa is a good man""&gt;&gt;&g",string
66135 - a65117 - b63301 - c63793 - d,sorting
"cursor = db.model.find({'time': {'$gte': start, '$",mongodb
the problem was not listing the entire file listin,file-io
"move /-y ""%~dp0itself.py"" ""c:\folder\folder2\""",windows
| | 14-22-36 +0800 | || 1.1.1.1:2020 | software 1.,bash
"""guests"": [{ ""age"": ""18"", ""birthdate"": null, ""emai",dictionary
"nested_list = [[""a"", ""b""], [""c"", ""d""], [""e"", ""f""]]",list
exception in tkinter callbacktraceback (most recen,listbox
"self.bind(wx.evt_button, self.onclose, id=cancel.g",wxpython
result = getstring(argument_x)print result # it re,syntax
class chart(object): def __init__(self): pass def ,class
"my_list=[1,2,3]def my_function(environ,start_respo",wsgi
"month_id = calendar.timegm(datetime(year, month, 1",objective-c
"st=""""def but1(): v.set(""1"") global st=st+""1""",global-variables
"class base(object): def setattributes(self, data):",inheritance
f.read(),unicode
"def play(a, b): state = start_state #player = none",scoping
"(r'^login/?$','django.contrib.auth.views.login',{'",django
"a = np.array([10,20,30]) b = np.array([100,200,300",dictionary
myvariable = myclass(),class
"totalpair = [[350, 1], [731, 1], [1441, 985], [327",list
"trans.to_csv('study10.csv' , encoding='utf-8', col",pandas
"[{'text': 'this is the text', 'filed1': 'something",list
1 32 33 34 38 39 312 314 318 319 320 325 326 327 3,perl
"file =open('words.txt', 'r')word_list = file.readl",list
"[{""linkid"":""changedrivelink""",regex
"def check_for_row_in_list_table(self, row_text): t",django
class mybasemodel(models.model): #some common attr,django
"for i in range(n): jobs.append(mp.process(none,g_s",process
import urllibimport jsonserviceurl = 'http://pytho,json
exit(0),indentation
"a = input(""letter: "")b = input(""input: "")a=a.lower",string
#file: mymodule.pydef __init__(val): global value ,module
"matches=[ (""team name1"", 120, ""team name2"", 56 ), ",list
atom 954 n asp 1 97.850 62.880 40.170 1.00 0.00 at,linux
chr12 10954262 10962540 chr12 10880241 11502235 10,string
import tkinter as tkp_width = 1000p_height = 600pb,tkinter
"query = (""insert into movies"" ""(movie_id,movie_nam",mysql
nameerror: name 'lru_cache' is not defined,lru
pip install numpy,numpy
"f = open(""e:\ascii\data.txt"", ""r"") for line in f: ",csv
"l = [ [[(1, 2)], [(1, 2),(1, 3)]], [[(2, 3)]] ]",algorithm
df = pd.dataframe()for sym in sorted(snapshot): fo,pandas
snow treestarwreath,function
"@node_coords = ($x, $y, $z, $zyx[$z][$y][$x][0]); ",arrays
flask.request.get_json(),json
a b aaakpc d bbbz,tab-delimited-text
if((int(len(lstshadow_log_table[index_shadow_log][,list
in [308]: dfout[308]:  a b0 1 11 1 22 2 33 2 44 3 ,pandas
from collections import defaultdictclass peptide(),class
"""1977 1,048.20 1,039.40 894.10 694.70 664.20 1,031",regex
"def cond(a,b): if (a&gt;2 and 99+a&lt;b): return t",function
a = (r'''\n1''')b = (r'''2''')print(a)print(b),string
class controls(boxlayout):  delta_value=numericpro,kivy
while,tkinter
12,list
"(1, 2, 3)",list
json.dumps,json
def recursive(data): for i in data: if condition: ,recursion
"&lt;div&gt; &lt;ul class=""main class""&gt; &lt;li&g",beautifulsoup
"def function(string): string = string + ""a""",logic
"import sys, subprocess, globmdbfiles = glob.glob('",linux
"&lt;div id=""data_2014-06-12"" class=""dates""&gt; &lt",beautifulsoup
if,if-statement
0,table
"{'numberofexercises': {'quimica:d': 13, 'quimica:e",database
raw_input,loops
"x=0y=1while (y!=0): x,y=y+1,x+1 print(x)",printing
class application(): def func_a(self): self.x = en,function
import maya.cmds as cmdsdef replace(char): locator,maya
"\s+\\((\s+|\s+|,)\\)",regex
db = sqlite3.connect('c:\users\siva sakthi velan\d,sqlite3
from collections import defaultdictd2_dic = defaul,arrays
#fetching data train = pd.read_csv(os.path.join(di,pandas
abcdx ppp [att:a01ad05 b01ac06 n02ba01] [kp:ccc ll,regex
#!/usr/bin/pythonimport mysqldbimport cgiimport cg,mysql
def convert(input)[int(float(x))*8 for x in input],arrays
f = lambda x: xin [8]: f is trueout[8]: falsein [9,boolean
www.domain.com/page?id_eve=479989&amp;adm=nowww.do,url
playername: 8,list
import pycuda.driver as cudaimport pycuda.compiler,cuda
"def add(): b=input(""how many inputs? : "") print b ",list
"[[(2l,)], [(3l,)]]",list
"p1 &lt;- c('a','a','a','a','a','b','b','b','b','c'",r
"words = [""give"", ""a"", ""pearl"", ""to"", ""the"" ""elepha",list
"text=""0000001011001100""",bytearray
bson.errors.invalidstringdata: strings in document,string
(a^4 - 8a^2 -16a + 16),math
"left_dict = {""n"":""w"", ""w"":""s"", ""s"":""e"", ""e"":""n""}ri",class
"list = [1 , 2 if 1==1 else 0, 3]",list
self.,self
"numberslist1=sum([range(1, 1000)]) for x in range(",list
"int main(int argc, char *argv[]){ if (strlen(argv[",c
parameter value,list
"[2,6,7,9][5,6,3,2][2,3,5,9][2,4,2,5]",list
browser.find_element_by_css_selector('#bet').send_,selenium
"mylist=['one','two','three']mystring='the number %",string
- e_jets cutflow: cut events 1 initial 13598 2 grl,table
with open(ima) as file: for linea in file: . . .,file-io
n1,list
private static integer shortsignedatoffset(byte[] ,binary
"today = date.today()m,d,y = today.month, today.day",string
"import maya.cmds as cmdsdic={}print(""dictionary is",maya
class a: def __init__(self): self.v = b(),class
"import urllib2f = open('bc', 'r')output = open('ou",urllib2
k = 'a_Äkkk cdkkk a_Ä xskkk'odp = re.sub('(?&lt;!a,regex
"name,age,heightjoe,14,65sam,18,74sarah,21,62",csv
nameerror: name 'c' is not defined,if-statement
def create_post(request): if request.method == 'po,django
&gt;&gt;number,regex
"&lt;a href=""http://stackoverflow.com/questions""&gt",html
"&gt;&gt;&gt; a=[1,2,3,4,5,1,2,3,4,5]&gt;&gt;&gt; a",list
"&gt;&gt;&gt; def func(params): return "";""if 1 + 1 ",syntax
"code, title, lec, lab, cr, prereq, year, semestera",dictionary
variable_a = ''variable_b = ''....,variables
"def split_pointer_part(self, line): self.before_at",pyunit
"location_uid, count = np.unique(data['locationid']",numpy
 cnxn = pyodbc.connect('driver={sql server};server,sql-server
"str = 'abcd=""efgh""'",string
"i = image(entry = e,\ image = request.files['file'",django
"regex_split(u'(?&lt;![a-z?-?À?])([.!?]""?)(?=\s+\""?",regex
if myjson[row]['languages'] == '' | myjson[row]['l,dictionary
"number=input(""enter your number "")num=int(number)c",list
"cur.execute('update stud set(fname,mname,lname,cou",sqlite
class threadclass(threading.thread): def __init__(,multithreading
"###while i&lt;81 : j=0 for value, j,k in dict.valu",machine-learning
"lowers_letters = ""abcdefghijklmnopqrstuvwxyz""upper",character-encoding
pip install happybase,hadoop
def test_was_published_recently_with_old_poll(self,django
-60,regex
dataframes,pandas
import sysimport imaplibimport getpassimport email,if-statement
# enter your code here. read input from stdin. pri,runtime-error
response = sendcommand(beep)if response == '0d6010,if-statement
"newyork - 2 + 1 = 3 (city1,city4) barcelona - 2 (c",arrays
"class subclass(superclass): def __init__(self, arg",class
&lt;span class=info&gt;&lt;/span&gt;,regex
"text1,data,class,uniqueclass1,data1,data,2,data2,d",csv
super coolfun,string
query,list
if __name__ == '__main__' : datafile = sys.argv[1],argv
def pythonresubdemo(): inputstr='hello 111' def ad,regex
set,database-design
import datetimenow = datetime.datetime.now() attri,datetime
from twill.commands import *from bs4 import beauti,beautifulsoup
output[item] = f[i+1],dictionary
import cursesfrom contextlib import contextmanager,c
index=7 print(len(mylist)) #print 16sortedlist = s,sorting
/dev/input/event0: 0003 0035 000002ac /dev/input/e,loops
import tarfilefrom multiprocessing import poolfile,multiprocessing
"d3.json(""/data"", function(error, graph)",json
x=-4x=5x=6x=7,regex
_—È_—…_ÈÀ´?ä_—“_—´?æ´?“,unicode
class loginhandler(basehandler): def get(self): if,google-app-engine
"canvas = canvas(app, width=300, height=250).pack()",user-interface
r,django
&gt;&gt;&gt; d8[0]{u'lix_edu_dev_override': u'cont,sorting
"re.findall('', text)",regex
"&gt;&gt;&gt; data = {'jsonkey': 'jsonvalue',""title",json
"&lt;root&gt; &lt;record id=""123""&gt; &lt;text&gt; ",xml
"[x, 9, 2, 1, 8, x, 8, 7, 0, 8, 8, 0, 5, 0, 8, 9]",list
gname,django
"[['0', '1', '1', '1', '0', '0', '0', '1', '1', '0'",string
'my_table',mysql
abs(result - my_expect) &lt; 0.001,numpy
"plt.figure(figsize=(8, 6), dpi=80, markersize = 2)",matplotlib
"nil = none # empty nodedef cons(head, tail=nil): """,functional-programming
input_ids,csv
{% if not user_tld_entered %} #html here{% endif %,django
"traceback (most recent call last): file ""&lt;stdin",dictionary
if,if-statement
"&lt;a href=""/providerredirect.ashx?key=0.16198127.",html
fname lname marksalice brown 8.5francine walters 9,csv
import sysimport timeimport randomfrom tkinter imp,user-interface
lineitems = []for q in itemdetails: myitemname = q,arrays
http://localhost:8000/api/v1/open/?name=/ficheiro#,json
"[[[1, 2], 3], 4]",list
def update_config(val): config = configparser.conf,tkinter
"file = open('/file.txt','r') string = file.readlin",file-io
ne5 2ny ne49 9pb,regex
def main ():  a_reader = open ('c:\users\filexxx.c,function
"valueerror: (1, 4) is not in list ",list
"{a: {b: c}, d: e}",algorithm
easy_install-2.6 psycopg2,psycopg2
import tkinter as tkimport tkinterclass navbar: me,tkinter
"((1,2),(2,1),(2,2))",list
import nltkfrom nltk.corpus import wordnet as wnw ,string
string name = connection.runreadaction(new readact,jython
"a = [[1,4], [2,5], [3, 6]]def op(x): return x[0] -",list
"{ 'run_log_1': 'syntax error on abc', 'run_log_3':",dictionary
if..elif,if-statement
test.py,debugging
"((?!(pic))[\w\-_]+(?:(?:\.[\w\-_]+)+))([\w\-\.,@?^",regex
"file ""/home/acne/acne/acne/settings.py"", line 57 '",django
git clone https://github.com/a_python_module &amp;,module
"# autobiographical numbersa = input(""number: "")abn",numbers
potato prices as of 24-sep-2014idaho brownspuds so,regex
"case 1: a = ""node1 ip up ether 40 46 server low"".s",list
"traceback (most recent call last): file ""c:\users\",variables
s= '&lt;file_name&gt;857173423paramount_funeral_in,regex
*import osprint('what game do you want to play?')p,pygame
jsh.py,debugging
def repeatedwords(): with open(fname) as f: wordco,function
"alist = [u'this is a test', u' ', u'something', u'",arrays
"charset=""iso-8859-1""body {}td {}th {}h1 {}table,im",regex
python manage.py startangularapp djangulartest,angularjs
configurebridge(),object
file1column1 file1column4 file2column4 file3column,merge
$ sudo python app.py ,flask
packagesetup.py,debian
json_content = json.loads(page_content)likes = jso,json
this is *some text*.,regex
kwargs,django
import operatorimport numpy as npb = 0a = 1for a i,loops
i.like.footballsky.is.blue,string
"print (""(x %s)(x %s)"") % (var_p1, var_p2)",variables
count = 0for word in newwordlist: newwordlist= wor,loops
"{'origin': u'hw', 'department': u'intern', 'ticket",loops
"num1 = ""lol""var = ""1""print(var.(print variable wit",variables
"&gt;&gt;&gt; x[{'sby_0': 'sb0'}, {'sby_1': 'sb1'}]",list
class fleet_inventory_line(osv.osv): . . . def fin,postgresql
"[ 'sin', '(', '1', '+', '2', '*', 'x', ')', '+', '",math
import urllib2def djangoview(request): data = '&lt,django
"import csv, easygui as egkeywordscsv = dict(csv.re",csv
"data = [{'count': 3}, {'day': '2013-07-14'}, {'cou",dictionary
def something(a):if a == 0: return 0else: return 2,recursion
"a = []a.append({'c': 1, 'v': 10, 'p': 4})a.append(",recursion
# initialize the state capitals dictionarynum_stat,list
store,django
"name=[]value=[]readfile=open('csvmat.csv','r').rea",matplotlib
#!/usr/bin/env pythonfrom sys import argvfrom subp,osx
"result = input(""what was the result?"")",list
## checking for the existence of jaasauthdata and ,unix
delete_foo,django
"""&lt;userdata: userdata object&gt; is not json ser",json
"traceback (most recent call last):file ""/volumes/h",list
"[""home"", ""office"", ""shopping""]",pandas
a. filename: a color image (test color image is in,opencv
"while mode != ""encrypt"" and mode != ""decrypt"": mod",encryption
"lines =  [['client', 'name', 'phone', 'address', '",dictionary
"digit_array=[] for i in range(0, 10): # range(10) ",performance
__author__ = 'zac'from tkinter import *from random,tkinter
up = falsefor i in x: if up: i=i.upper(),string
./beginners tools/hello's -trojans-/bif43243./linu,recursion
"root = tkinter.tk()root.title(""shuffle colors"")# t",function
from lxml import etreeurl = 'http://www.google.com,xml
"def sss(request): handle=open('b.txt','r+') handle",django
device.label = xxxdevice.name = xxx_yy,bash
x = os.system('openssl rand -hex 10'),string
save data_for_training -ascii train_data,perl
"&lt;element aria-label=""like this video along with",html
class marblesboard: '''define the board game''' de,attributes
class pointmodel(models.model): x = models.integer,django
"os.system(pythonpath+""serialwait.py ""+dev+"" ""+brat",linux
sklearn,scikit-learn
"data1 = np.loadtxt(""testprofil5.txt"",float,delimit",arrays
"import rep = ['&lt;img class=""alignnone size-full ",regex
"import random as rdmlist = [1000, 100, 50, 25]def ",list
"import tkintertop = tkinter.tk()def add(x, y): ret",tkinter
if variable.checked == 'yes' return 1elif return 0,django
"test.csv = [['a','1'],['b','2']]",csv
from datetime import datetimenow = datetime.now()p,if-statement
events: raidvolume set information volume set name,string
7803214567;94 7801234567;602 7801234567;910 780876,dictionary
"from datetime import datetime, timedelta, timenow ",django
hh:mm:ss mm:ss ss,regex
"&gt;&gt;&gt; a = re.finditer(""(?p&lt;char&gt;\w)"",",regex
word1-word2word1 word2word1+word2--word1--word2-wo,regex
phone: 3396222,regex
"""{\""type\"":\""id\"",\""entries:\"":[[\""a\"",91],[\""b\"",",json
if formset.is_valid(): values = formset.save(commi,django
servers for deployment:for bt test:mer1-batcht3mer,regex
views.py,django
"class smaug(scene):def enter(self): print ""smaug i",oop
14:54:45 cpu %user %nice %system %iowait %steal %i,bash
stack_a = stack()stack_a.push(1)stack_a.push(2)sta,stack
"a = [['header1', 'header2', 'header3'], ['apple', ",sorting
file1.txt file2.txt a a propertya b z propertyz c ,list
#!/usr/bin/pythonimport osimport wximport wx.lib.a,wxpython
try: while true: blockhits = mc.events.pollblockhi,raspberry-pi
"def parte(): e = 3 * 10 // 3 + 10 % 3 print(""e)."",",math
"import tkinter as tktitle_font = (""helvetica"", 18,",menu
"data = {'x':[0,1,2,3], 'frame':[0,1,2,3], 'particl",dictionary
"from (a1,[b1,b2,b3]) (a2,[b2]) (a3,[b1,b2])to (b1,",list
//*[@id='content-primary']/table[3]/tbody/tr[td[1],html
# b is a list with 10000 items threads = [threadin,multithreading
"l = [1,1,1,1,1,1]b = ['-', 2, 2, 2, '-', 2]",list
int,list
"struct.pack(""{}f"".format(len(float_array)), float_",bytearray
#files directory contains four text file with firs,regex
Ë__“ùæ-_“ì©-Ëé_“ËéË±-Ë_Ë?Ëé,django
172.22.200.5 -&gt; 200.5.0.0 (octect #1 [172] and ,perl
from scapy.contrib.ospf import ospf_hdrimporterror,linux
204 jack sparrowhttp://testlink.com/test123123 dou,file
def g(): def f(): return(true) # i want g to retur,tkinter
s1,string
"def post_order(node,order,father): order_of_node =",recursion
"def get_section(self, address): for section in sel",loops
def computerplayer(): #randomly selects a rock pap,return
while do != 'hit rat with sword' or 'run away': en,variables
2015-11-21t15:30:00,datetime
"a = [-1, 1, 66.25, 333, 333, 1234.5]print a[4][1];",perl
"#!/usr/bin/env python# usual range (0.002390,0.002",tar
string.lower(),class
"d = { 'x1' : (.....) , 'x2' : (......) ,'x3' : (..",dictionary
$char_map = ('!.' + '0123456789' + 'abcdefghijklmn,ruby
"def text_to_rect(text, name='default'): try: font ",exception
"def find_ips(ip): ip_str = '\b\d{1,3}\.\d{1,3}\.\d",regex
from tkinter import *import ttkx='disabled'def rak,tkinter
0.01323910390.0097909093-0.00285791010.0245043133,arrays
inpath = 'd:\\maddy'outpath = 'd:\\maddy\\corpora',sqlite3
def main(): print '1 - sha1 decrypter'print '2 - m,function
"['aa11','aa11','aa22','aa33','aa44','aa44']",string
import time str(int(time.time() * 1e6)),datetime
"import datetimen = raw_input()print ""aaa""a = datet",datetime
"&lt;div id=""id1"" &gt; ""contents here""&lt;/div&gt;&",html
"[aa2, ab2, bb1, bc1, ab3, aa3, ba2, ba1, aa1, ac1,",string
"&lt;form method=""post"" action=""/maxverif/0"" name=""",forms
"data = ""[[1,'00007',0.19],[2,'00008',0.29],[3,'000",list
*|foo|*,regex
"my_txt(""hello to you all"" , 3)all",string
ml int .10 534.15 0:00ml ext .25 654.23 3:00ml int,csv
"{  u'application':{  u'platform':u'iphone', u'loca",json
import mathdef mean(values): average = sum(values),math
sql1 = '''select *from dogs inner join ownerson do,sql
tomorrow = datetime.date.today() + datetime.timede,datetime
[[ 2.48983949+0.j 0.51935128+0.j 0.50851186+0.j 0.,numpy
"""501.92secs: iphone 5s_downstream http_tcp_downlin",string
[ 8.85145037e+02 -1.24294207e+02 -1.42830519e+01 -,numpy
"['a','b','c']['x','y','z']",list
"password = input(""enter a password: "")import redef",passwords
mesolve,numpy
def sum_nt(input): for line in input: line=line.rs,function
"def find_word_horizontal(crosswords,word): word=st",list
"input = [""one"", ""two"", ""three"", ""four"", ""five"", ""s",letter
re.unicode,regex
class a(object): #def __init__(): #pass def do1():,object
from random import randintplayercount = 2maxscore ,random
os.sytem,command-line
for,string
"proc=subprocess.popen([""rscript"", ""modelcriteria.r",r
"params1 = [1,2]params2 = []params3 = [3,4,5,6]# ..",list
"""13:02"",10""13:03"",30""13:04"",15""13:05"",12""13:06"",3",sorting
"class a: def add_f(self,a,b): return a+bclass b: d",class
\w+\s+\w+? ,regex
"stext =""""""&lt;firstname name=""hello morning"" id=""2",regex
'hello',string
b = [y | sqrt(y) in x],set
def dcrawl(link): #importing the req. libraries &a,string
c,c
oslo_db,import
"import randomdice = int(raw_input(""what sided dice",random
from sys import stdoutfrom time import sleepimport,function
cmd = 'c:\program files\visualsvn server\bin\svnlo,windows
"file ""c:\users\administrator\desktop\new folder\fi",xlrd
e,if-statement
"def deauth(mac_roteur,mac_victime,essid): os.syste",linux
&gt;&gt;&gt;form_data={'roll_no':'01751202712'}&gt,urllib2
"gen1=(random.sample(range(33,126), 8)) conv=(gen1[",convert
alt+enter,pycharm
"traceback (most recent call last):file ""e:\users\x",int
bool_three = not (not false) == true,boolean
"select a.foo, colx, coly, colz from tbla ajoin tbl",sql-server
"x = input(""enter your string: "")while not set(x).i",loops
'p^',for-loop
"fo = open('outp3.txt','w')with open('c-small-pract",function
from datetime import datetime,datetime
myarray = np.random.rand(500000).astype('s18')toco,performance
&gt;&gt;&gt; a = {1:1}&gt;&gt;&gt; print(a){1: 1}&,dictionary
from stringio import stringioimport pandas as pdim,pandas
class a: def loadposition(self): file = open('a.tx,nameerror
"python 2.7.6 (default, mar 22 2014, 22:59:38) [gcc",string
.dat,parsing
c:\users\max&gt;python base-install.pypython: can',django
istanbul = timezone('europe/istanbul')created_at =,django
"self.dict = {'compressed files':  {'7-zip': [ ""777",dictionary
"class productspider(spider): name = ""debug1"" start",selenium-webdriver
"client,addr = server.accept()",sockets
for opinion in opinionsarray: if smiley_emoji in o,grouping
"lst = ['3min', '9min', '16:21', '16:36', '16:51', ",sorting
"&lt;example&gt; &lt;name id=""{{2}}""&gt;{{1}}&lt;/n",xml
"{'username': u'tester1', 'age': 0l}",json
"[' (* 100.856 unita', ') [ 98.0%]', ' (* 100.598 u",list
typeerror: writeobject with null file,debugging
"listof([""hello stack overflow community \n"", ""i li",list
john = []mike = []sarah = [],list
"non_unique = [('a',2), ('b',3), ('c',4), ('d',5), ",dictionary
## program written by shane ormonde 7th sept 2013 ,editing
"bitstream = ['011000111001', '100100111001', '1001",binary
"mylst = ['bla,bli', 'blula', 'blabla,bloblu,blibla",list
anna#18#goodmorning! how are you?,file
"a=[(a,b,c),(a,b,c).(a,b,c),(a,b,c)]b=[""a"",""b"",""c"",",iterator
re,regex
"# -*- coding: utf-8 -*-""""""created on fri sep 27 19",algorithm
weight,list
feature_dict['feature_name_1'] = feature_1feature_,classification
"cur = conn.cursor()query1 = """"""select max(date_tim",sql
class windowsector(): global root  def __init__(se,class
"score = raw_input(""enter a score between 0.0 and 1",if-statement
import urllibimport jsonexamplesearch = 'pagerank',json
git push heroku master,django
src ='aaaabbbb'pat ='(a+|b+)b+',regex
getattr(),handler
currtile_x = 0currtile_y = 0singlerun = 1if single,render
# views.pydef notifyurl(request): return httprespo,django
"cursor.execute ("""""" insert into dailylog  (emp, co",mysql
"if answear == ""yes"": do something  pylab.show()if ",if-statement
import inspectdef makegeneratorfunction(f): if ins,typeconverter
while true: import datetime if datetime.time is (1,arduino
from tkinter import *import ttkclass application(f,inheritance
"class myframe(wx.frame): def __init__(self, parent",multithreading
...class stack: def __init__(self): self.list = [],class
import numpy as nimport scipy as simport pylab as ,numpy
"'modes': { 'p': { 's': { u'01': u'some text a.', u",dictionary
"length,width = float (raw_input(""what is the lengt",variables
"mysql&gt; select id, name, users_count from data;+",mysql
"set policy id 1444 name ""#####temp#####"" from ""dmz",regex
&gt;&gt;&gt; _str=' boy'&gt;&gt;&gt; _str.lstrip(',string
x,itertools
data,django
"first = [('a', 1), ('b',2)]second = [('c',3), ('d'",list
"print re.sub(r'""', '', line)",replace
f_k = .5*[f_0 + ((-1)**k)*f_n] + f_j*cos(pi*j*k/n),numpy
"def readswitch(x,y,connn,read): x='create vlan' y=",sqlite
"import numpy as npa = np.array([0, 10, 20])b = np.",numpy
email = email@email.com,string
"first_array = [3, 4, 5]if first_array and first_ar",c
"filemenu.add_command(label=""update..."", command=cr",tkinter
"a = [array([ [6,2] , [6,2] ]),array([ [8,3],[8,3] ",arrays
"urlpatterns = patterns('drummersaransk', url(r'^$'",django
"[10,10,20,20,30,10,40,20]",list
def breakandsum(): if 0&lt;=x&lt;100000: digits=(m,list
original=list(word)temp=list(word)guess=[] #null l,function
"['abc','one,two','12']['dse','five,two','52']",csv
"numbers = ('bob':'322', 'mary':'110', 'joe':'839')",dictionary
"l_dict = [{'start': 2, 'length': 2, 'end': 4}, {'s",list
modern c++ design,policy-based-design
print('format: x-xxx-xxxxxxx')user_input = str(inp,while-loop
"def list_list(x,y):  z=zip(x,y) l=[list(x) for x i",list
datetime.time.now(),time
session.add(a1) # unresolved reference,oop
"strings = input("""")mylist = strings.split("" "")prin",string
"from flask import flask, render_template, request,",flask
"var\s+kaynaklar.*?url\s*:\s*\""([^\""]+)\""\s*,\s*dat",objective-c
/usr/local/lib/python2.7/dist-packages/django/cont,django
"event time, monday:10:01:02,269 to 10:01:08,702(re",string
bar = obj(bar),class
exception: attempt to overwrite cell: sheetname=u',xlwt
import os from datetime import datetime infilename,datetime
"class one(object): def __init__(self, name): self.",oop
def numtokey(num): start = 0x04; i = 0; for i in r,c
import osfrom tkinter import *def viewfile(): path,ubuntu
"def letterscore( let ): if let in ['a','e','i','l'",recursion
"{'s26': [['2016-03-18', '2016-03-28'], ['2016-03-1",dictionary
"python prog.py ""hi there"" hi=hello there=world!",command-line
python.vim,vim
# random.py this program displays a random number#,syntax
runtime r = runtime.getruntime();process p = r.exe,compilation
infile.close()for theitem in totallist:# print the,point
"insert into mytable (campaign_object) values ( {""c",mysql
scrapy crawl dmoz -o items.json,scrapy
"64 theano.printing.pydotprint(predict,65 outfile=""",theano
decorator = oauth2decorator(client_id='ourclientid,google-app-engine
"import randomfrom random import shufflefruit = (""b",loops
"service.files().insert( body=body, ).execute()",google-app-engine
"filename = open(""hello.html"", ""w"")titleandcontent ",html
class utils : def __init__(self) : self.name = 'he,function
"n = 10numbers = []for i in range(1, n+1): numbers.",arrays
"strin:'''foo = 'some',""stuff?"",'that ""could be?"" n",regex
# set total score variabletotalscore = 0# read tab,table
18394-1999.csv . . . //consecutive years18394-2014,regex
"n = raw_input(""enter no of elements to be added in",bubble-sort
def open_catch_down (): file = raw_input('give the,global-variables
@echo offset people=1set handshakes=0set cnt=0:loo,batch-file
#pokemon battleimport randomfrom time import sleep,project
"vowel = [""a"",""e"",""i"",""o"",""u"",""a"",""e"",""i"",""o"",""u""]v",recursion
robotparser,html
"def decorated_function(*args, **kwargs): """""" decor",flask
"traceback (most recent call last): file ""d:\ter\sc",ascii
import numpyimport psutilfv_length = 150000x_list ,numpy
"array1=[""1"",""2""]array=[ [{""a"":""1""},{""b"":""2""}], [{""",json
"import urllib, urllib2, cookielibfrom bs4 import b",urllib2
csv,csv
def ethos(file): f = open(file) raw = f.read() tok,nltk
if string1 in in tuple1: print true,tuples
"unit = ""days""datetime.datetime.now() + datetime.ti",function
"score(""a b"" , {""a"":(1.2) , ""b"":(3.4)})",string
"[['code', 'sid', 'did', 'cid', 'ssid'], ['abcd-00'",list
"def isprime(n): if n == 1: print(""1 is not a prime",function
"def _partition_by_context(self, labels, contexts):",performance
"def _d(): import sys, tty, termios f = sys.stdin.f",function
"def freq(): info = input(""file name"") filehandle =",split
"def hello_world(output): output.write(""hello world",file-io
class project(db.model): __tablename__ = 'projects,flask
import urllib.requestimport refrom bs4 import beau,beautifulsoup
"os.system(""psql -h localhost -u postgres -d mabase",double
def aircraftlistboxrefresh(): sqlconnect=sqlite3.c,tuples
"l = [1,2,3,5,4]l1 = [ ]l2 = [ ]for i in l: l1.appe",list
"1,2,3,4,56,7,89,1011,12,13,14,15",sed
#!/usr/bin/pythonimport csvimport sysimport argpar,list
class room: public mapsite{public:room(int roomno),c++
for ind_list in reflist: for i in ind_list.attribu,dictionary
while,loops
"list1 = [1,2,3]list2 = [4,5,6]...",list
a,function
def hms(s): seconds=[] for seconds in range(len(st,for-loop
&gt;&gt;&gt; import ast&gt;&gt;&gt; a = ast.litera,arrays
"run = subprocess.check_output(['rscript','rundata.",subprocess
"list1 = [(12,34),(12,6),(2,4),(1,3),(34,32),(34,6)",list
class noads(models.model):nadnr = models.integerfi,django
-10 and -5 is 5,bash
"text,text,text,11/03/12,text,text,text,uniquenamec",csv
id,pandas
# read items into dataframe and count the number o,pandas
from charm.schemes.abenc.abenc_bsw07 import cpabe_,cryptography
"[timestamp('2016-01-03 10:38:52'), timestamp('2016",datetime
def fun1():  try:  raw = urllib2.urlopen(pubapi1).,loops
"min1=open(output1,""w"")oh_reader = open(filename, '",text
#text based gameimport timeimport osimport sysimpo,random
import argparseparser = argparse.argumentparser()p,string
"class tree: def __init__(self, charge, left=none, ",console-application
osize = sys.argv[1]o_hres = osize[0]o_vres = osize,list
lang,string
"print(input(""what is the text file's name?""))file ",file
"values = (30.0,30.0,30.0,15.0,30.0])print set(valu",set
"mat = [ [""x""]*10 ]*10for line in mat: print line['",pointers
quickly,bash
word count1 count2 count30 a 30 10 81 the 20 12 02,pandas
"class mynewclass: def __init__(self,mystring): pas",unit-testing
3256-10wyput,regex
python,string
"[{""pk"": 3222, ""model"": ""test.test"", ""fields"": {""f1",django
"b=[0,0,0,0,1,2,5]tob=[0,0,0,0,1,2,6]tob=[0,0,0,0,1",list
aws --region us-east-1 ec2 modify-instance-attribu,node.js
"pos1=0neg1=0all1=0flt1=float(raw_input(""enter a no",loops
44=100,regex
str1 = '0000120000210000',string
"'2273': {'type': 'static', 'port': 'eth1/4', 'mac ",list
"@app.route('/&lt;buildingslug&gt;/members/', metho",flask
ddos_prevention = {'continuous_suspected_times': 0,website
"ips=['10.240.10.5','10.232.10.5','10.200.10.5','10",variables
"try: return [ true, errors[error], error ] # error",exception
def foo(x): if x == y: blah elif x == z: blah1 if ,function
from pyqt4 import uicfrom pyqt4 import qtguifrom p,pygtk
def read_files(): input=entry1.get() with open(inp,get
import random #imports random functionget_int_ = r,eclipse
bothsexes_total,variables
if,datetime
teaser,regex
import randomquestn = 1qnc = 0cs = 0ws = 0while tr,random
pickaxes = { 'adamant pickaxe': {'name': 'adamant ,string
"import kodivariable = ""the value to use in playmed",kodi
"handinformation = [""thumb""[""metacarpal""[""start""[0,",arrays
"{(a,b):c, (a2,b2):c2 and so on}",dictionary
"def primes(m, n, l): # the calling function if m &",function
"[synset('dog.n.01'), synset('frump.n.01'), synset(",algorithm
"graph = {'a': {""b"": 20, 'd': 80, 'g' :90}, 'b': {'",algorithm
"import jsonimport csvwith open(""train.json"") as fi",json
f.write(),function
"matches( user_input=""hello world how are you what ",parsing
while room = '#',loops
"tte2 = data['tweets']['tweet2']['tte']print ""tte2 ",for-loop
int,list
"import reline = ""-p ${config.tab} -sp""rep = re.sub",regex
"l1=['yyyyy', 'open', ' 111', ' 222', 'close', 'xxx",list
current_folder= os.path.dirname(os.path.realpath(_,arrays
import matplotlib.pyplot as pltimport matplotlib.l,matplotlib
xxxxx_&lt;start_time&gt;_&lt;end_time&gt;.logyyyyy,regex
"004,444.444.444.444,448,11:16 pdt,11-24-15004,444.",bash
#!/usr/bin/env python# -*-coding:latin-1 -*import ,ssh
d---- 18/03/2015 12:25 django-1.7.6-py2.7.eggd----,django
('aatt')('aaga')('aaac')('gtag')#the real list hav,list
http://www.scottish.parliament.uk/parliamentarybus,xml
.txt,text
.email_template,string
([^\s+\w+\n\r]*(\d))+,regex
import timefrom random import randintimport sysimp,variables
self.addtext('some text here...'.decode('utf-8'))s,wxpython
"print (""type string: "") + str(123)print (""concaten",string
in [1]: a = 0.1,variables
"from ftplib import ftpftp=ftp(""ftp.ncdc.noaa.gov"")",ftplib
"index = search.index(name=myindex)query_string = """,json
x=5y=int(input('guess the number: '))if y==x: prin,algorithm
u'c:/users/pivo/work/data/pink_exp_2015_12031329\\,file
"int ff7_checksum( void* qw ){ int i = 0, t, d; lon",c
"import random words = (""hello"", ""running"", ""help"",",loops
"rows = 16for i in range(rows): for a,b,c,d,e,f,g,h",for-loop
histogram,dictionary
russia = 'rus'usa = 'usa'germany = 'ger'country = ,django
"data = [[4,3,0],[4,7], [6,3], [9,2], [4,3]]search ",list
"{value: 55550000000},{value: 175600000000},{value:",json
"&lt;meta http-equiv=""content-type"" content=""text/h",decode
"json_string = '''\{ ""vacation"":  [ { ""dates"": [ { ",json
396x+264y = 1980ans :the value of x=5 and y=0396x+,numpy
"payload = {'item': r.json()['account']['item'],'it",json
"line = line,clause = ""line""",string
"str = ""&lt;sec&gt;john&lt;/sec&gt; said hi to a wo",regex
af:vlermuisang:hrea†çemëâsar:ËÂùË_Ë‚an:chiropteraa,regex
import socketimport pywhoisrevip = socket.gethostb,loops
self.app.get('/'),flask
"[cat,dog,bird,duck]",regex
#modulesimport timeimport osimport xlsxwriter#the ,xlsxwriter
"list = ('abcdefg',)len(list) returns 7 instead of ",list
next(),file
from tkinter import *def show_entry_fields(): prin,debugging
"list = [['tuesday', 5], ['friday', 2], ['sunday', ",list
admin.site.register(post),django
item number: [item number]host = [hostname]ping [i,regex
"x = [""/2.ext"", ""/4.ext"", ""/5.ext"", ""/1.ext""]",list
"... html ...[{""url"":""/test/test/url"",""id"":""111111""",regex
i0914 17:37:15.763941 29832 abc.cpp:138] iteration,regex
"mylist = [[3,5,7,10,47,5,11],[6,23,26,38,39,4,11],",loops
[u'$649.99'],regex
"t = [[a, b], [c, d]]",numpy
"{'callooh': 1, 'all': 2, 'beware': 1, 'through': 3",sorting
"counterlist = counter({'they': 203, 'would': 138, ",counter
hg17_chr2_74388709_74389hg17_chr5_137023651_1370hg,regex
from collections import deque#setting up a diction,dictionary
"phonebook = {'tom': '0545345345367', 'john': '0764",for-loop
d['a:b']d['c:d']d['e:f']d['d:c']d['b:a']d['f:e'],dictionary
pip install,wxpython
"dic= {'i-setosa': 8, 'i-versicolor': 2, 'i-virgini",dictionary
"add.pydef add(a,b): return (a+b)",django
projet,mysql
"tallahassee, florida, usadenver, colorado, usawate",arrays
def list_to_number(head): count=0 for i in head: i,linked-list
"import filecmpimport csvv_n_p = input(""enter the v",excel
"dic = {2 =&gt; ""abc"", 3 =&gt; ""def""}",ruby
"class main(wx.frame): def __init__(self, *args, **",class
"#!/usr/bin/env pythoncityfile = open(sys.argv[1], ",list
&gt;&gt;&gt; import re&gt;&gt;&gt; pair_of_letters,regex
&gt;&gt;&gt; ================================ rest,simulator
unsupported operand type(s) for +: 'int' and 'str',sorting
"#here is the example code:label1 = label(app, text",user-interface
b=0. for beta in range(): coeff1=... sum1=0. for b,nested-loops
"x = int(input(""enter a number: ""))y = int(input(""e",fibonacci
"import socketimport os,sysimport timefrom threadin",sockets
"def intercala_listas(lista1,lista2):l1 = [""b"", ""d""",list
"dog1,cat1,5.00dog1,cat2,7.00cat1,dog2,10.00cat2,do",oop
"\s*\(r?[""|\'](?p&lt;pattern&gt;[^\'""]+)[""|\'],\s*[",regex
untitled1.jpguntitled2.jpguntitled3.jpg...etc...,python-imaging-library
"class cl(): def __init(self, a): self.a = a return",class
$ python chatserver.py &amp;,shell
mytest.,list
"&lt;input type=""hidden"" name=""supplier.orgprofiles",selenium
my_function('hello!')&gt;&gt; truemy_function('how,regex
"l = ['abc,def,ghi,jkl']",list
class tradeorder(models.model): #denoted in 2 thre,django
"password = input(""please enter your password: "")pa",function
list = [10],list
"client_socket = socket(af_inet, sock_stream)",sockets
january february march amy 4 3 4 ben 5 2 0  clara ,csv
"lst = [1,2,3,4]",algorithm
reset-db,django
"(options, args) = parser.parse_args()",parsing
"def theirquicksort(list): """"""quicksort using list ",list
hxs = htmlxpathselector(response)sites = hxs.selec,scrapy
f(n),function
pip install mysql-python,windows
stop_words &gt; 0| next_type &gt; 5: x| next_type ,.net
"from flask import flask, render_template, requesta",redirect
"$ cat customer.csvcustomerno, firstname, lastname,",csv
"epitope,id,frequency,assayavnivgysnaqgvdy,123431,2",csv
"def start_thread():  last_time=strftime(""%y-%m-%d ",multithreading
"error: traceback (most recent call last): file ""c:",pygame
self.menubar = menu(self) def about(): messagebox.,tkinter
from tkinter import *import scrolledtextclass entr,tkinter
version.program:program_nameversion.subprogram:sub,regex
"taberror file ""(path)\dets.py"", line 271  res = (i",syntax-error
1.21E+18,text
"def getreqs(interface_text): if(""&lt;van last_load",regex
time.clock(),real-time
itertools.product,permutation
"data = { 'alex': 20, 'jason': 35}",matplotlib
"from multiprocessing import process, queuedef f(q)",multithreading
"def cell1(): loop = 1 while loop == 1: print(""one""",function
"import itertoolsimport testimport test2x = [test, ",cycle
import datetimemylist = []today = datetime.date.to,list
exception in tkinter callbacktraceback (most recen,api
"&lt;div class=""rfloatl text-field""&gt; &lt;img src",selenium
"int getarea(double xcoord, double ycoord , double ",geometry
datetime somewordsdatetime morewordsdatetime somem,regex
no event found.,scrapy
class category(models.model):  image = models.imag,django
"({ 'firstname': 'alexandro', 'title': 'my life', '",dictionary
import fnmatchimport osimport shutilimport datetim,memory
"valueattime(simulaton_01['temperature_05'], 20)",function
"{'during' : 'the', 'the' : 'last', 'last' : 'ten',",file
%chebyshev of second kind\begin{equation}\sum_{\el,regex
"color=section.find(""div"",{""class"":""sfa-pa-product-",web-scraping
&gt;in:12 out:8 john&gt;in:20 out:12 fred&gt;in:8 ,regex
"href=""https://www.johomojo.com/one?fref=pb&amp;amp",regex
"$ pythonpython 2.7.1+ (r271:86832, apr 11 2011, 18",interpreter
from pyalgotrade.tools import yahoofinancefrom pya,numpy
class mystr(string): def __add__(self): return len,string
"{""a""=1,""b""=2,""c""=3,""d""=4}",json
import subprocessdef printersetup(printer): subpro,string
[]person1[]person2[]person3[]person4 ,user-interface
"list = [('the', 'dt'), ('study', 'nn'), ('guide', ",list
"f = int(raw_input(""enter""))for i in range(f): prin",for-loop
dim numbers(6) as long dim target as long,summarization
"{""filename"":""file.txt"",""filesize"":""500kb"",""maxcolw",dictionary
"df = pd.dataframe({'a':[1,2,3,4],'b':['g','h','i',",pandas
from graphics import *win = window()button = butto,button
"def calculatestatisticsfrom():  filename = ""height",jython
middleware_classes = ( 'django.contrib.sessions.mi,django
#this is where i want to get the input from &lt;in,html
"list = [""bird"", ""deer"", ""dog"", ""bat""]list -= ""bird",string
#import &lt;iokit/pwr_mgt/iopmlib.h&gt;...// kiopm,objective-c
"fruitlist = [""pear"",""apple"",""strawberry"",""banana"",",for-loop
django-admin startproject beta,django
api,django
"...class=""question-hyperlink""&gt;",html
for filename in os.listdir(imagepath): if filename,csv
number++number++number++number++number++,addition
my_request = requests.get('https://example.com/tim,linux
this is a this is a  1 2 3 1 2 3,list
mm-dd-yy,date
"sections = ['main', 'errdict', 'excdict']",for-loop
".additem(""item name"", ""my data"")",qt
"with open('dictionary.txt', encoding = 'utf-8') as",performance
"print data[0]{u'cityid': 3969, u'districtcode': 59",json
"class myclass(): @staticmethod def add_group(name,",function
import csvty = 'testy'tx = 'testx'ifile = csv.dict,file
"password = forms.charfield(label=('password'), wid",django
"pc = popen(['chpass',name],stdin=pipe)pc.communica",osx
#space defence#wes l-m#players must defend the cit,pygame
"""1-transaction transfer info segment-f2"":{ ""sellin",json
"a = {}while z: if a[z] == a[s]: print(""correct!"") ",dictionary
def sort_l(l): if l==[]: return [] else: if len(l),recursion
epoch(),attributes
import csvimport sysimport globimport refor filena,date
&gt; blabla|blabla|bla|blabla| blabla [geobacter s,regex
"#!/usr/bin/python# import dictionary of pairs, the",regex
def read_proteome ( filename ): f= open(filename).,list
regexp = re.compile('ttp_ws_sm_(\d)_'),regex
"d = {""room"" : 100, ""day"" : 25, ""night"" : 88}for ke",loops
"print ""max input for today is 30 links""file = open",file
import cv2import matplotlib.pyplot as plt# read si,opencv
var_1 = list[0]var_2 = list[1]var_3 = list[2]var_4,list
"def binarysearch(array, beginindex, endindex, valu",sorting
"&lt;title type=""text""&gt;me850ë«ç_ö_“_ë?—ë•ëÂ?_é“_",unicode
class member(models.model):# member db table useri,django
"f = open(r'file.txt','ru')raw = f.read()",unicode
"def unpickle_im(file, type):import imageim1 = imag",numpy
def login(request): context = requestcontext(reque,django
"import datetime,redate= datetime.datetime.today().",regex
root@ubuntu:~/public_html/todolist# ./manage.py sq,django
"items = {'a': 7, 'b': 12, 'c': 9, 'd': 0, 'e': 24,",dictionary
from urllib import request img = request.urlopen(',utf-8
"letters = list(""123456"")for current in xrange(10):",algorithm
"&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;&lt;us",xml
"dict 1={'d': ['4.4', '4.3'], 't': '2', 'g': ['d', ",dictionary
"dictionary = {'k1': {'a': 'b'}, 'k2': [0, 1]} poin",pointers
"""2 2, 2 5, 3 1; 3 3, 4 4, 1 6; 1 1, 4 0;""",string
import stringimport urllib2from xml.dom import min,rss
42403,parsing
"def remove_tag(s): tag = true for c in s: print ""c",if-statement
"r = somefunction(x1,x2)",sympy
"def paths_rec(path,edges): if len(path) &gt; 0 and",graph-theory
"def arrmerge(a): for i in range(1,len(a), *2): for",c++
"activating client: ('172.51.8.204', 18268)tracebac",shell
__init__,class
"import pandas as pdmytime = pd.to_datetime(""1:30"",",numpy
[[55.0][75.1]],arrays
"{'first': [ {'red': ['six', 'three', 'seven', 'six",dictionary
"string = ""44-23+44*4522"" # string could be longer",string
"{'message': u'data:text/html,\xe9\xe9\xe9&lt;br&gt",json
"for x in range(1,11): print '{0:2d} {1:3d}{2:4d}'.",format
"&lt;__main__.block object at 0x02416b70&gt;, &lt;_",persistence
"conn = pymssql.connect(host='localhost', user='xx'",sql-server-2005
"class tree: def __init__(self, size=2): if size ==",reference
from random import randintimport timefirst_time = ,random
"2009-06-30 23:36:28,483 error appcfg.py:1272 an un",google-app-engine
exception in tkinter callbacktraceback (most recen,tkinter
def setup(self): self.driver =webdriver.firefox()d,selenium
hashlib.md5('my string').hexdigest(),md5
gameloop(),oop
for row in reader:,loops
"abc(a =2,b=3,c=5,d=5,e=something)",regex
76.049515 38.88797420.341053 16.95604772.749557 20,c
cloudinary.uploader.upload('pic.jpg')cloudinary.up,django
python -m simplehttpserver,http
"class division(): def __init__(self, dept, fulltim",class
1 6 11 2 7 123 8 134 9 145 10 15 ...,text-processing
$./smart.exe input.dat,linux
"[[[a, b], [c, d], [e, f]], [[g, h], [i, j], [k, l]",list
from htmlparser import htmlparserfrom htmlentityde,encoding
# number to start withn = 2#functiondef factor(x):,primes
for num in range(20): if num % 4 == 0: print num  ,modulus
none,function
def f(x): return lambda x:x**2f(2),lambda
"try: driver.find_element_by_link_text(""fitment"").c",selenium
"&lt;select name=""ctl00$studenttermclasschooser$cla",html
"urlpatterns = patterns('', (r'^$', main_page), (r'",django
"def orderline_formset(request, id=none): if id: or",django
typeerror: 'int' object has no attribute '__getite,typeerror
python setup.py install --with-c,c
from random import randint while true: correct = 0,math
user adam@adamhi im adamuser tom @tom astronaut ,parsing
"import calendarcal = calendar.month(2014, 7)print(",calendar
[x + transpose(x)],math
"x = [[(u'reads_2.fq',), (u'reads_2.fq',), (u'reads",list
from django.conf import settings from django.contr,django
"import randomroll_dice = random.randint(0,11)playe",class
runserver,django
"l1=[1,2,3,4,5,6,7,8,9,10]",list
"a = raw_input(""enter line: "")space = """"trap_set = ",string
'%y-%m-%d %h:%m:%s',datetime
"[255, 0, 0]",image
import numpy as npimport pylab as pyimport scipy.s,matplotlib
"myarray = {1,2,3,4,5}",numpy
"index(""notes.txt"",[""isotope"",""proton"",""electron"",""",text
import cv2import numpy as np# range for finding sk,opencv
"&lt;?xml-stylesheet type=""text/xsl"" href=""audit_st",xml
.vimrc,vim
"@csrf_exemptdef pay_notif(request, v_transaction_i",django
"random_number = str(random.randrange (1, 1000))ran",string
class products(db.model): #models.py created = db.,django
"def save(request): news = [] links = [] url =""http",django
"wichita, ks[3769,9734]279835308 1002 1270 1068 134",list
[ op | rs | rt | rd |shamt| funct] 0 1 2 6 0 32 de,arrays
def fib(n): if n==1 or n==2: return 1 return fib(n,recursion
"l1 = [['a','b'],['b','c'],[]]l2 = [0,1,3]",list
"def main(): print ""\n welcome to registration. are",variables
"acronym = ['a','b','c','d']full_name = ['full_a','",list
class recipe(models.model): recipe_id = models.aut,django
"for i in range(0,len(schema)): schema[i] = list(sc",unicode
class event(models.model): name = models.charfield,django
"aaa = [2013, 2014, 2002, 4646, 4648, 20, 456, 5623",list
"url(r'^(?p&lt;url_param&gt;[a-za-z0-9_.-%/]*)/$', ",django
logins = []for us in c.win32_logonsession(): try: ,arrays
"def quicksort(alist): quicksorthelper(alist,0,len(",sorting
"[ {""event"":""start"",""eventdatetime"":""2015-09-15t03:",json
"text=""this, and this are test elems""textinfo=[1, 4",string
"file = askopenfile(filetypes=[(""text files"",""*.txt",list
from datetime import datetimenow = datetime.now()p,import
"dates = {201101:{perf:10, reli:20, qos:300}, 20110",dictionary
store in neutral database,mongodb
"tabledata = [['apples', 'oranges', 'cherries', 'ba",string
"fileobj=open(""nonexistent.txt"",""w"")",file
"import redef has_pattern(string, regex): if string",regex
bud abbott 51 92.3mary boyd 52 91.4hillary clinton,sorting
"name = raw_input(""enter name of the file"")if len(n",parsing
"10272,201,halifax,1,3333,1,33,2,33,10272,989,fores",regex
[0-9]+,regex
fig = plt.gcf()sn_map_final = (s_n_map - mean_sn) ,matplotlib
"class myui(frame):def __init__(self, parent): fram",multithreading
newresistances = copy.deepcopy(self.resistances)fo,dictionary
g = 0q = []for s in range(9):  while g &lt; 10: n ,arrays
mywebsitedirectory/ app/ __init__.py setup.py wsgi,web-services
"&gt;&gt;&gt; a_lst = [1,2,3,4,5,6]&gt;&gt;&gt; pri",list
while,loops
a_”äb _”ä 5_”ä12_”ä,csv
"d = dict()d['something'] = ""something""print(d)",dictionary
temps = data['temperature'] #fetching temperatured,arrays
b[:] = [],list
"self.nodes = [[],[],[],[],[],[],[],[],[],[],[],[],",list
"def upload_handler(source): fd, filepath = tempfil",mkstemp
alimit=300blimit=500climit=100aprice=20bprice=15cp,zero
errors:dir/subdir1/log1.log: 23dir/subdir2/log2.lo,linux
any(word in str1 for word in list),string
structureregion = boxblocks = 0for x in xrange(str,mcedit
list1 items: 1 2 3 4list2 items: 1 2 4,list
result4.csv = link nodea nodeb load 4 71001 8427 9,csv
"feed = feedgenerator.rss201rev2feed(title=_(""feed ",django
import serialimport timeimport datetimeimport mysq,rfid
"import beachb = beach(""cocoa beach"",""cocoa beach"")",jython
from collections import userdictfrom collections i,yaml
r = {someone@example.org} n = {1234|12345} t = {ca,mysql
atom 1 n asp p 1 -13.459 3.135 -11.039 1.00 0.00 p,arrays
el-gu-en-tr-ca-it-eu-ca@valencia-ar-eo-cs-et-th_th,list
"d = {'a': [4, 2], 'b': [3, 4], 'c': [4, 3], 'd': [",list
"def letter_guess(): words=""testing"" letter_s = inp",function
nrcomm1-&gt;sendchar,c++
from tkinter import *#def onclick():# passclass my,tkinter
"def my_func(a, b, c): if a &lt; b and b &lt; c: #d",conditional
"json output: { ""status"": 200,  ""type"": ""url"",  ""re",json
sin(12)sin(33)sin(75)sin(125)...,math
"@app.route('/loadnext')def loadnext(): tmp = ""okay",flask
schoolname attribute value 0 xyz school safe 3.44 ,numpy
mystring = '&lt;p&gt;phone number:&lt;/p&gt;&lt;p&,html
width: 32px;height: 11px;top: 102px;left: 36px;wid,regex
hgtval = float(height.get())wgtval = float(weight.,tkinter
"def find_config(self, path): dic = list(path.split",pyqt
def main(): stringkey='' stringvalues='' keys=ccv.,mysql
0 0 1 a paid gave money to0 5 5 a crash stock mark,csv
letters,string
"def main(): numperfects = eval(input(""how many per",loops
cointoss(1000),coin-flipping
@app.route('/')def display_content(): return rende,flask
master_inventory = []def import_catalogue(): with ,class
"reportdate = ""https://secure.logmeinrescue.com/api",python-requests
from django.http import httpresponsedef upload(req,django
"class mm(dict): def __init__(self, indexed, *args,",oop
"""1231,fdkgjdkfj45,294d""",list
matches = re.findall(r'my favorite chili was numbe,string
usage: myprog action [-v | -r | -s]myprog report -,argparse
"(u""(u'[25145, 12345678'"", 0.0)(u""(u'[25146, 254879",apache-spark
&gt;node_1_length_211_cov_22.379147catttgctgaagaaa,linux
re,regex
import mysqldb,mysql
id name content1 matt oirefasd aifsfnib if ib @joh,string
"pickaxes = { 'adamant pickaxe': {'cost': 100, 'spe",dictionary
spoj,algorithm
py2exe,executable
"[1, 2, 3, 4]  [2, 3, 4, 1] [4, 1, 2, 3] [3, 4, 1, ",arrays
"for index, row in teams.iterrows(): _team, url = r",object
"import randomdef roll(sides, dice): result = 0 for",function
"[1, 5, 2, 6, 2, 5, 1]",list
"x=[2,2,2] ",numpy
"{""key name of file"" : ""value name"", ""specs"" : [{""s",dynamic
"[2005, [4, 5, 6, 7], 2006, [4, 5, 6, 4]]",list
&gt;&gt;&gt; a=2&gt;&gt;&gt; id(a)13332800&gt;&gt;,memory-management
"universitylocation(example: lahore, peshawar, jams",indexing
class chess_board: def __init__(self): self.board ,string
print,printing
"import csvprint ""dennis""with open('example1.csv', ",csv
brew install gcc --without-multilib,osx
import cturtleturtle=cturtle.turtle()turtle.pensiz,turtle-graphics
import urllib2url = 'https://www.dropbox.com/s/spl,download
import numpy as npimport matplotlib.pyplot as pltx,matplotlib
"#!/usr/bin/env pythonimport datetime, osfrom time ",linux
"c:\python33\python.exe ""c:/users/koopt_000/desktop",binary-search-tree
round,rounding
"[a, b, c, d][e, f, g, h][i, j, k, l]",csv
listen(1),sockets
"print (""question 1: "")print (questions[0])#asks fo",loops
"s1 =[100,200,400,800]for j in range(0,len(ns1)): n",arrays
"def censor(filename): file = open(filename, ""r"") f",file
"separate(predicate.is_positive,[1,-3,-2,4,0,-1,8])",recursion
"from flask import flask, render_template, request,",flask
b,arrays
while(--pages &gt;= 0) {},loops
'percent_of_surface_area_covered_by_tunicates',numpy
data,json
4.8 3.4 1.6 0.2 4.8 3.0 1.4 0.1 4.3 3.0 1.1 0.1 5.,file
myfunction(from): #some code,function
import bluetoothimport timeclass bthandler(): host,bluetooth
class queue: def __init__(self): self.items = [] d,class
from openpyxl import workbookfrom openpyxl.compat ,range
"list = []def multiples(): for num in range(1, 11):",list
"$ch = curl_init(); curl_setopt($ch,curlopt_url,$ur",curl
"input = ""aaaabbbb""list_a = [""b,c,d""]list_b = [""1,2",list
"[""user_arr"", 100, true]",list
"&lt;a href=""url_pre""&gt;pre&lt;/a&gt; &lt;a href=""",django
"l = [""2d"", ""5h"", ""8s"", ""jc"", ""3h"", ""4s"", ""8c"", ""ad",sorting
"nuke.execute(""write1"", 1, 10, 1)",string
configparser,configparser
class downloads(models.model):date = models.charfi,django
import urllib2import timeimport osimport sysimport,multiprocessing
date16/07/2014 09:15:2816/07/2014 09:15:2216/07/20,time
"import webapp2form = """"""&lt;form method=""post"" act",google-app-engine
haversine(),django
"(r'^domain_com/(?p&lt;page_name&gt;[^/]+)/edit/$',",django
"import random score = 0ops = ['+','-','*']num1 = r",random
"cur.execute(""create table +dnes+ (id int primary k",mysql
str.partition(),string
def cipherhelperfunction():  import random  myalph,encryption
"&gt;&gt;&gt; ex=[1,2,3,4,5,6,7,8]&gt;&gt;&gt; ex[1",list
"for key in word: i = 1 if i &lt; 6: print ( ""%s. %",variables
"#!/bin/bashecho ""enter your name: ""read nameecho """,bash
"x = ""import time""xtime.sleep(1)",string
"value = ['red, orange']",list
"list_=(('[96, 71, 16, 81, 21, 56, 91]',),)",list
import sysimport tweepyimport timeimport threading,twitter
import osdef myping(myip): print(myip) ip1 = os.sy,arguments
"import timeprint (""foo"")time.sleep(0.2) #talking a",time
private void signupuser() { validatedata(); new po,django
__dict__,class
re.findall,regex
qs,arrays
"d = {'abcs': ['12', '12', '113', '12']}",dictionary
249985.0013132.505,awk
"[""a"", ""b"", ""c"", ""d"", ""e""]",list
"a = [1,0,1,0,0,0]b = [0,0,0,1,1,1]c = [1,1,1,0,1,0",standard-deviation
"import csvwith open('chtr_trades.csv','rb') as csv",ubuntu
dataframe.set_index(...),numpy
"moutput += (""&lt;b&gt;""+userinput+""&lt;b/&gt;);",variables
"print fx = ""john""g = ""peter""if re.search(x,f) : pr",html
import urllib2from google.appengine.api import url,google-app-engine
"{file: ""my filename"", line 386 print age_in_days(3",syntax
"def proc(a,b): if test(a): return b return aprint ",printing
"def meshingtools(od_idsurf, trgsurf, pipebodysurf,",arguments
def nonzero(cmod): mydict = cmod.getreactionvalues,dictionary
key:value,json
combine = str(signup)+'_'+signpassjson.dump(combin,file
"[element1, element2, element3, element4, ... ][ele",list
"bpy.ops.wm.save_as_mainfile(filepath = r""c:\users\",variables
httplib.httpconnection,http
alphaforbravo007 102000000010170000000001 susanafo,file
list,dictionary
"def buildcoder(shift): """""" returns a dict that can",dictionary
"print(""----battleships 3.0 by name----"")print("""")p",google-maps
"set1 = {('soda','coca cola',5), ('chocolate','mars",set
"#tictactoe gameimport randomnull = ''new = ['','',",tic-tac-toe
x=0if (turtle.dot()): x+1 ,if-statement
s = bluesky,html
"class student: def __init__(self, name, num, mid, ",class
"dik = { ""dir1"": {},}",dictionary
if,recursion
"d1={1:2,3:4}d2={5:6,7:9}",dictionary
valid_children = set()for focus_genome in a_list_o,multithreading
"curl -h ""x-api-token: &lt;api-token&gt;"" 'http://f",curl
""" {'result':(boolean, messagestring)} """,regex
\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x,ppm
import restring = 'stuff ... &lt;/div&gt; &lt;img ,regex
"foo(""hello"")",string
processing dependencies for yowsup2==2.4searching ,raspberry-pi
"from tkinter import *root = tk()root.title(""power ",tkinter
"line=[u'2001.0,0.88', u'2001.0,0.56564652', u'2001",string
"dictionary = {'group1': ['a', 'b', 'c', 'd'],  'gr",dictionary
def f(): e=raw_input('enter number') if e in range,loops
head 1 bla1bla2bla3head 2blo 1blo 2blo 3blo 4head ,list
product 1product 1product 2product 3product 3,list
"&lt;div class=""results""&gt; &lt;span class=""toggle",beautifulsoup
"import os,sys,randomimport pygamefrom pygame.local",user-interface
class entity(object): #other methods here def kill,class
models.py,flask
text.see(myindex),tkinter
from collections import defaultdictdef count_var(w,dictionary
logger = logging.getlogger(__name__)fh = logging.f,handlers
"abb(""aabbbbabb"")&gt;&gt;&gt;trueabb(""aabbabbb"")&gt",recursion
"for line in f: x = re.search(r'&lt;([^,]+),\s?([^&",regex
&lt;a&gt;,django
def randomfunction(n): return sum([random.choice([,sum
"rows = [ ('a', 'a', 1, '?'), ('a', 'a', 1, '!'), (",algorithm
"[1, 3, 67]",file
a,multiprocessing
"l = ['foo', 'bar', 'baz']",regex
"&gt;&gt;&gt; print soup.prettify()file ""&lt;stdin&",web-scraping
"form: &lt;form method=""post"" action=""""&gt; &lt;inp",post
import stringdef get_input_char(char): char = str.,string
&lt;placemark&gt;&lt;style&gt;&lt;linestyle&gt;&lt,xml
"import urllib2, urllib, jsonbaseurl = ""https://que",json
"headers = ['cpu', 'name', 'id', 'cused', 'callc', ",list
lsu__jumper by #03__robinson iii,regex
crawler,web
c:\users\bradr&gt;python c:/musicrenamer.pytraceba,tkinter
"\b([\d]{1,2}[\/\s-]{0,3}\d{2,4})",regex
[settings]idle restart time=300000minimum free spa,ini
"from flask import request, render_template, jsonif",flask
python-weka-wrapper,machine-learning
mass=[ 0.25877 0.26667 0.26667 0.27488 0.27488 0.2,numpy
class sortedlist(object): def __init__(self): self,doubly-linked-list
&gt;&gt;&gt; import re&gt;&gt;&gt; str = 'finding ,regex
from tkinter import *class application(frame): def,tkinter
"class level(): def __init__(self,lesson, word,lett",initialization
"a = [array([len(20)]), array([len(20)])]b = [array",arrays
readelf,regex
file &gt; open,tkinter
brian oakley's,tkinter
from tkinter import *def cmd(): if var.get() == 1:,import
import pandas as pduser_input = pd.read_csv(raw_in,string
5 01.06.2012 09:45 a a a 01.06.2012 08:00 b b b 21,datetime
"def ave_index(char): passage = ""string"" if char in",frequency
"vowels = ['a', 'e', 'i', 'o', 'u']x = raw_input(""e",list
a-za-z0-9,regex
table: 1 the quick brown fox3 jumped over 4 lazy d,regex
"a = [1,2,3,4]b = [5,6,7,8]for i in a: if i == 1: p",list
"a = [[1, *2, 3] [4, 5, 6*] [7*, 8, 9]]",multidimensional-array
"import reprint re.search(r""[0-255].[0-255].[0-255]",regex
"list = ['categorya.1.file','categorya.2.file','cat",list
import multiprocessing as mpimport numpy as npimpo,multiprocessing
pic,pygame
"from models import *def info(request): yasin = ""te",django
"l = [1, 2, 3]l = [1*2, 2*2, 3*2]",list
200 g torskefilethavsalt og friskkv†?rnet peber8 t,regex
pd.dataframe,dictionary
"idx = ['id','m','x','y','z']a = ['1, 1.0, 1.11, 1.",list
"(a,1),(b,1),(a,1),(b,5),(a,1),(b,2),(a,1),(b,1),(a",algorithm
"in [4]: {'a': ""hello""}['a']out[4]: 'hello'",dictionary
"import dequeclass node:  def __init__(self, data):",class
optionparse= argparse.argumentparser(description=',command-line-arguments
#setting up#--------------------------------------,project
&lt;name:john student male age=23 subject=\compute,string
error=change['errors']print error,json
"time = ""01:30"" # 1 minute and 30 secondstime2 = ti",time
dict ={}for y in df2.cyear.unique(): dict[str(y)]=,dictionary
"getdata = bso.findall('a', attrs={""class"": ""btn bt",regex
conda install -f launcher,pygame
from pandas import dataframefrom numpy.random impo,pandas
"&lt;/td&gt; &lt;td class=""playbuttoncell""&gt; &lt;",tags
import randomimport sysfrom string import whitespa,list
from django.contrib.messages.views import successm,django
"def matrix( numberofcolumns = 3, numberofrows = 3,",list
def main(): grade = getscore() abcgrade = getgrade,list
"f = open(file, 'r')for line in file: value = eval(",eval
"import sys, pygame, mathfrom pygame.locals import ",pygame
"command = subprocess.popen(['sshpass', '-p', passw",split
"class data: def __init__(self, query): self.df = r",oop
%d,integer
"def readdata(): file = open('data.txt', 'r') listi",list
"def gettag(connection, instanceid): reservations=c",return
&lt;--header title--&gt;some body text,regex
(x1 and x2),logic
"[[1,1,0],[1,0,1],[0,0,0]]",list
tags,flask
aice = 1anoice=0.tice =273.tnoice=293.dt = 86400.s,syntax
_‚Ä_‚?_µ_‚?_µö_‚?_‚ä --&gt; _‚Â_‚å_µ_—_‚Â_µ _‚?_‚å,list
"s = ""https://r3---sn-tt17dnel.c.docs.google.com/vi",html
str '3',floating-point
totalbugs = 0.0day = 1for day in range(7): bugstod,for-loop
1 3 52 6 18 9 2,list
"( &lt;frame object at 0x7f92fc032420&gt;, '/home/p",error-handling
"def save_image_to_model(instance, **kwargs): field",django
"s = ""ab""def srs_print(s, n, rules): ''' a function",dictionary
[[ 0 ] [ 0 ] [ 0 ] [ 3 ] [ 4 ] [ 15 ] [ 17 ] [ 87 ,arrays
"traceback (most recent call last): file ""manage.py",django
"a= [10 ,78,""m"",89]",list
from tkinter import*#function for about menu def a,user-interface
"def root(x,n):  if n==0: return x else: return 0.5",recursion
common,regex
"student=type('student',(object,),{}) def getinfo()",inheritance
import randomrandomdict = {}numbposition = {}def r,random
'http://example.com/welcome?user=',post
import re l_side = 'ip prefix-list pl_from_7600 se,regex
import subprocessresult = subprocess.popen('./test,shell
"def is_it_too_large(w_n, max_value): value_1 = abs",if-statement
myarray1 = [0] myarray2 = [1]while myarray2 &lt; 7,list
0 1 0 0 1 0 1 0 0 1 0 0 0 0 1 0 1 00 0 1 0 1 0 1 0,csv
{% for client in clients %} {% if user.client.user,django
"x = os.listdir(""2009"")",popen
"word = raw_input('enter a word')print word.find(""a",string
"#####################[2015/07/03, 13:26:40.368, in",file
name:dob:age name:name2:dob:age,string
/applications/eclipse/plugins/com.google.appengine,eclipse
"def extract(s,start,end): return s[s.index('start'",code-review
dict,json
"duplicates([1, 3, 5, 7, 9, 5, 3, 5, 3])",list
from random import randintfrom random import sampl,arrays
query = &lt;model&gt;.objects.filter(&lt;filter se,django
byte_list.append(bytes[0]),list
"class worker:  def __init__(self, mainproject, vic",class
"class popup_window(qwidget): def __init__(self, pa",qt
"import randomprint(""welcome to rng guesser!\n"")gld",string
"&lt;td class=""border""&gt;aaa&lt;/td&gt;&lt;td clas",html
"import locationsdef print_classes(): for name, obj",class
"x = [""1"", ""2"", ""3"", ""4""]print ', '.join(x[from 0 u",list
class car: make model year,list
"#! /usr/bin/env pythonreader = open(""acsn.txt"")res",dictionary
import randomwinning_conditon = 0no_of_guesses = 0,shell
import cursesstdscr = curses.initscr()for y in ran,ncurses
def chase(self): dx = mouse.rect.x - self.rect.x d,pygame
"{""father_id"":""no.1"", ""a_have_list"":[{""child_id"":1}",json
python 3.5.1,django
class node: feature = list() label = list() def __,variables
test: 0assignentdoneuserdonejohndoeassignment8resp,list
"salary_data = {""john d"": {""wage"":10000, ""gender"":m",sorting
u'04 sep 2013',date
guloss grloss 1 1 2 2 3 3,pandas
from collections import namedtuplebook = namedtupl,list
"d1 = {'a':(1,2,3,4,66,6,6,64), 'b':(3,2,5,3,2,1,1,",dictionary
unsigned char* x = new unsigned char[10];,ctypes
import randomalph = list('abcdefgkijklmnopqrstuvwx,list
if logged_in==true:,login
"myownlist = {'a' : [1,2,3,4], 'b' : [1,2,4],  'c' ",list
"d1 = {'b1': [3, 3], 'c1' : [4, 5]}",dictionary
awk '/string1\/parameters\/string2/' rs= myfile | ,awk
def function(n): n = stored while stored &lt; 0: p,loops
"text = open('samiam.txt', 'r+')replacement = {"" i ",file
"random.gauss(0.0, sigma)",random
"import timeperson=input('hello there, what is your",function
"test_list = [""dog"", ""cat"", 12, 34, ""boop""]#code co",list
def recv_server(): global number global s #the tcp,sockets
absdev_sum,variables
"teams_goals = {'chelsea' : 2, 'man u' : 3,'arsenal",dictionary
"mylist = [dataframe1, dataframe2, dataframe3 ...]",list
k = 0c = 0for inputnode in inputnodes: edge(inputn,neural-network
"&lt;record id=""view_order_form_customize"" model=""i",xml
while no_questions &lt; 10: # creating question an,if-statement
rand(),c++
imz=-4.593172163003imr=-4.297336384845&gt;&gt;&gt;,math
"{'jason': {'a': 200, 'b': 'nan', 'c': 34, 'd': 'na",dictionary
#include &lt;stdio.h&gt;#include &lt;string.h&gt;#,mysql
$ beet import /home/musicconfiguration error: impo,configuration-files
"reobj = re.compile('&lt;a href=""(.*?)""&gt;(.*?)&lt",regex
class a()  def __init__(self)  self.test = [] retu,inheritance
import socketimport timemysock = socket.socket(soc,sockets
"title = str(soup.find('td', {'id': 'bxgy_x_img'}))",regex
#!/usr/bin/python# -*- coding: utf-8 -*-from tkint,user-interface
"my_height = 1.75 #metersprint ""i'm %s meters tall.",variables
user=myuser.get_by_key_name(self.request.get('user,google-app-engine
arcpy.delete_management,sql
"v1,v2,v3,q1,q2,q3,q4....null,null,null,item,item,i",csv
it can be accomplished using the flickr api for py,django
"text = htmlrules = [ { r'&gt;\s+' : u'&gt;'}, { r'",string
"list1 = [1, 2, 1, 2, 3, 2, 4, 1]list2 = [a, b, c, ",list
"#python nba sim engine#started 6-8-2013, 10:59 pm#",class
import seaborn as sns%matplotlib inlineimport matp,matplotlib
"n = 3l = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",list
__str__,pydev
"my_list= [{'id':0,'name':'paul','phone':'1234'},{'",list
`#!/usr/bin/pythonprint 'activated'import rpi.gpio,syntax-error
class userprofile(models.model): user = models.one,django
"def sum_range(x,y): if x == y: return x if x&lt;y:",sum
python,arrays
"def _tot_get_deposit(self, cr, uid, ids, name, arg",function
browser = webdriver.firefox()broswer.get('http://l,unit-testing
"def subtract_custom_value(x, custom_value): return",pandas
08:43:56.558781 ip 192.168.233.128.56779 &gt; 50.1,file
"folder-&gt;log.txt, folder1, folder2-&gt;(txt.txt,",file
"list=[""apple"",""orange"",""car"",""bob"",""jack"",""peach""]",list
"id,count1a,92a,84a,36a,5",csv
__mul__,class
for tup in totalmean: if tup &gt;= 12 and tup &lt;,list
"# perform k-means, data already pre-processedcentr",machine-learning
invalid syntax,highcharts
0.25,rounding
"for x in range(0, len(datalist)-1): globals()['row",arrays
long int: 198381998short int: 19found a match at 0,pattern-matching
"def hours_ahead(request, offset): try: offset = in",django
"with open('file1.txt', 'w') as file1: for thing in",file-io
class person(models.model): fist = models.charfiel,django
from __future__ import print_function import time ,printing
"in_file = open (filename, ""rt"")while true: in_line",file-io
nr. formal rule informal explanation example--- --,algorithm
from re import subinput = request.post['input']sub,eval
"(2016, 4, 4)",date
&gt;&gt;&gt; txt = open(c:\\user\\documents\\pytho,file
"{'tesco': [{'parking': 'true', 'trolleyhire': true",json
# -*- coding: utf-8 -*import numpy as npimport mat,arrays
import xlwtbook = xlwt.workbook()sheet = book.add_,excel
www.thepiratebay.sewww.kat.ph,web-scraping
"sub mymacro() runpython (""import mymodule; mymodul",excel
"input = x[1,2,4,6,3,9]target = 6",performance
#!/usr/bin/env pythonimport gtkclass scalebutton:d,gtk
class one: scope = 'first_scope' class two: scope ,reflection
"try: raise bob()except fred: print ""blah""",exception
"import unoprint (""create document script"")",uno
"def fib(): first, second = 0, 1 start = int(input(",fibonacci
/debate/days/views/(here should be 3 digits),regex
"n1 = int(input(""what interger do you wish to turn ",binary
from bs4 import beautifulsoupimport urllib2import ,regex
timesplithour = int(timesplit[1]) + -5timesplitmin,datetime
"def main():print ""rectangle a:""a = rectangle(5, 7)",function
"def oddn(x,y,z):odd_number_keeper = []for item in ",function
"from django.conf.urls import patterns, include, ur",django
import stuff *class asimov(qwidget): def __init__(,pyqt5
"# a. match_ends# given a list of strings, return t",class
line1: &lt;blank&gt;line2: 0line3: 1,csv
from tkinter import *def show_entry_fields(): prin,tkinter
str(),regex
"p1 = array([xa, ya, za])p2 = array([xb, yb, zb])p3",arrays
csv,binaryfiles
"l = ['one', 'two', 'three']', '.join(l)&gt;&gt;&gt",django
"montly_ratio = [0.046644865594960915, 0.0607082767",list-comprehension
if number ==15 :  category ='tree'elif number ==20,regex
"parm1 = ['x1','x2']parm2 = ['y1','y2']",list
"""tha twilight new moon dvdrip 2009 xvid-amiable""|6",csv
"a = [{'abc': 'kjkjl'},{'abc': 'hjhjh'},{'abc': '78",data-structures
&gt;&gt;&gt; print 1; print 212,syntax
"def drawchart(data,title): p.title(title) p.hist(d",matplotlib
def directory_summary(a_dir): import os from colle,function
level_1 level_2 level_3 user_id user_flaga b c 123,pandas
geopy,multiprocessing
"list1 = list()list1.append({""ip"": '12.12.12.12', '",list
population = 5happiness = 5order = 5import randomc,variables
"import threading, time, sys class listen: def __in",indentation
connection_1= sqlite3.connect('/home/documents/att,sql
sometext[substring1=substring2]somemoretext,regex
number = 96154# replace ??? with a value of your c,loops
"[('76,433', '15.025'), ('99,714', '15.023'), ('44,",arrays
"class foo(): id = '' def __init__ (self, num) self",function
def dataentry(): x = true; while x == true: entdat,list
from tkinter import *import sysimport subprocessim,windows
65000 data1 data2 data365000 data1 data2 data3...6,file
print(value.time() &gt; marketclosed),debugging
import tkinter as tkglobal squareglobal multiplygl,insert
class customuser(models.model):  user = models.for,django
"with open('matches1.json', 'r') as json_file: matc",json
"test ={'line4': (4, 2), 'line3': (3, 2), 'line2': ",dictionary
"import numpy as nparray = [0.29, 0.59, 0.12]na_arr",if-statement
"['s', 't', 'u', 'a', 'r', 't', ' ', 's', 't', 'e',",list
'str' object has no attribute 'close',text-analysis
"from bs4 import beautifulsouppage =  ""&lt;article&",tags
"geocode_addresses address_dict[""error""] = """"",geopy
if condition1 and condition2 and condition3 and co,conditional-statements
ctrl + c,matplotlib
"class song(): def __init__(self, lyrics, x): self.",oop
a = int(input())b = int(input())print(a+b),subprocess
"from django.conf.urls import include, url, pattern",django
"dic = {""aa"": 1, ""bb"": 2,  ""cc"": 3,  ""dd"": 4,  ""ee""",dictionary
string = 'abbbabbaaaaaabaaabaaaaaabaaabaabaaaaabaa,regex
python manage.py shell ,django
list index out of range,list
"a = [1, 2, 2, 2, 3]",list
self.bin,class
import netcdf4dset = netcdf4.dataset('test.nc'),netcdf
#create the container (outer) email message.msg = ,email
"numbers = [1,2,3,4,5,6,7]x = input()if x in number",list
"a = '2015'''.join(format(int(c), '04b') for c in s",hex
"a = {1 : true, 2 : false, 3 : true, 4 : false, etc",dictionary
import getpassimport sysimport telnetlibimport tim,raspberry-pi
1 5 0 1 3 2 1 18 30 50 13 12 24 10 1 0 0 1 1 1 10 ,list
"import random allusstates = ['alabama', 'alaska', ",attributeerror
"input_x = raw_input(""insert #"")print input_x + 1pr",input
import syssys.stdout = open('c:\\users\\suleiman j,file
-------------------id | url | date----------------,numpy
"public jdclient client = new defaultjdclient(""some",jpype
def two_same(): d = [] while len(d) &lt;= 1: d = i,character
three,arrays
"for i in range(begin, end):",loops
"filename, fileextension = os.path.splitext(abspath",string
"ip , byte10.180.176.61,366910.164.134.193,88210.16",regex
&gt;&gt;&gt;s = []&gt;&gt;&gt;len(s)0,list
"def read_grade(gradefile): ''' (file,'r') ---&gt; ",string
"create table persons ( personid int, lastname varc",sql
def playerid(): # asks player if want x or y lette,tuples
"line = [""$20 is your bill"", ""this is your bill"", """,regex
"item_list = (""non-tradable ubersaw"", ""screamin' ea",list
# this is what the file looks like:ryan | 6joe | 5,file
"def main(): nums = [5, 3, 7, 9] myfile = open('num",debugging
"while true: try: strengtha=abs(int(input(""enter st",loops
&lt;head&gt;&lt;!-- use bootstrap --&gt;&lt;meta c,css
input.txt,list
"['15', 'a:b', 'b:c', 'd:c', 'f:a']",list
"success : function(data){ alert(""declaring variabl",html
value value 1lag 2lag 3lag 4lag date 2005-04-01 0.,pandas
"class model(base): field_id = column(integer, fore",flask
"['1 5','2 10 23','214 33 1']",string
x = [0] * 10x[2:8] = [1] * 2,list
"""name of movie"",""starring"",""director"",""release yea",parsing
"one = [(1, 2), (3, 4)]for o in one: print o(1, 2)(",list
"....f = open(""&lt;filename.txt"", ""r"")alltext = f.r",file
import numpy as npgimport pandas as pdoriginal_dat,pandas
"line = ""hello my name is {{ name }} and i am {{ ag",string
from copy import deepcopyclass a(object): def f(se,methods
"letters = ['a', 'b', 'c', 'd', 'e']letters[:3]prin",string
"x = [[[3,5,10,7]],[[5,4,4,20]],[[9,100,56,7]]]",list
"inedit = raw_input(""change hex value &gt;"")open.wr",editor
course = 87finalproject = 75exam = 82,numbers
"color1 = input(""choose your first color. (red, blu",if-statement
"variables = {'var1' : 0, 'var2' : 'some string', '",variables
"self.canvas.bind(""&lt;w&gt;"", lambda event: self.c",tkinter
if 'database_url' in os.environ: url = urlparse(os,mysql
syntaxerror: non-ascii character '\xe2' in file bl,linux
&lt;coordgeom&gt;&lt;/coordgeom&gt;,xml
"import csvifile = open (""c:\users\bka4abt\desktop\",csv
"list1 = ['#model1','path1','path2','path4','path5'",list
[12345678910111213141516171819...],list
list_ = [4],arrays
13480 aaa bbb ccc,string
12104c06134e5709140f104f02521b0a0442020c4d070b184f,hex
"for j in range(numstations): allstations.insert(j,",jython
if,linux
"import numpy as npd=((2,3,5,6),(4,6,7,9),(8,4,7,3)",numpy
"webdrivrwait wait = new webdriverwait(driver, time",selenium
"\n &lt;--- there's really just a new line, here, n",text
['dsafjhsafjkhefhajwejh;nr;123;dfgdsrhgjhdfgjhdsfj,regex
"regexinput = ""a-z0-9"" #regexinput = ""a-za-z0-9!@#$",regex
def post(self): cases=self.request.get('cases') wh,google-app-engine
"today=datetime.datetime.now()todatoday.weekday(),",datetime
/usr/lib64/python2.6/site-packages/crypto/util/num,regex
"class a: def getdatetimestat(self,datetimeobj): pr",map
"class post(db.model): id = db.column(db.integer, p",flask
def localx(): if localpick == 1: riddle() if local,function
the quick brown fox jumped over the lazy dog,unicode
program_2 = truewhile program_2 == true: bnum = in,overflow
"str = ""alskdfj asldfj 1234_important_what_i_need_1",regex
"my_dict = {1: [1], 2: [1, 2], 3: [1, 3], 4: [1, 3,",list
"c,o,t=open('input.txt').read().splitlines(),{},ope",split
"def parse_me(self, response): for info in response",scrapy
class complex: real = 0.00 imag = 0.00 def __init_,class
some_text;database;file_namesome_text2;database2;f,file
t = test(),oop
import os  def shut(): return(os.system('tasklist',command
expand,class
1000 1 2 31000 1.5 2.5 3.12000 4 5 63000 7 8 9,pandas
datetime,pandas
class myint(int): # some code there,class
def download_file(block): global sizewritten start,upload
world_boundaries = false,pygame
import urllib as url2import jsonf=open('ids.txt')f,facebook-graph-api
"def code_block(text, key): itext = int(text) rkey ",encryption
# open an html file on my own (windows) computerur,variables
"class block: def __init__(self,canvas,color): self",tkinter
import randomdef generate_random_haploid(haploid_l,genetic-algorithm
#!/usr/bin/env pythonimport pikaconnection = pika.,rabbitmq
from twitter import *consumer_key = ''consumer_sec,twitter
from tkinter import *root = tk()root.configure(bg=,tkinter
"import pygame, math, random, sysfrom pygame import",pygame
"&gt;&gt;&gt; bigrams_list = ('hi', 'ya'), ('see', ",nltk
"import sys;inp=sys.stdin.read().split(""\n"");t=int(",runtime-error
.txt,string
for,for-loop
thank you for registering an account at example.co,django
"import os d_name = raw_input(""enter drive name:-"")",dialog
"list1 = [('gi1','1','2'), ('gi1','1','2'), ('gi1',",list
"if ""aaaa"" in ""bbbaaaaaabbb"": dosomething()",string
"def isprime(n): for i in range(2,math.sqrt(n)): if",runtime-error
"[[""2014-5-29"", 19], [""2014-5-28"", 16], [""2014-5-30",list
def windchill():row = 0col = 0i = 0wchill = round(,table
b=binascii.a2b_hexdata('#hexadecimal string#')quer,string
circle.set_color('b') ,matplotlib
"2, 10, 10, 130, 130, 130, 130, 130, ..., a_ä_äÄ=13",recursion
"b = dog(""buddy"")e = dog(""spot"")b.namee.name",class
import requestsfrom bs4 import beautifulsoupimport,mysql
"#creates html pagef = open(""oceaneering_server_sta",json
while true: ln = p.stdout.readline() if '' == ln: ,regex
"&lt;form enctype=""multipart/form-data"" id=""formfil",django
"def fibonacci(n): terms = [0,1] i = 2 for i in ter",loops
"29: ['15', '26', '16', '24', '4'], 30: ['25', '16'",dictionary
"{ ""boolean"": true, ""null"": null, ""number"": 123, ""v",json
"dict_items([('date', ['2011-10-31', '2012-05-08'])",dictionary
"[{'domain': 'www.google.com', 'visits': 100, 'sess",dictionary
4564-1234-4325-2146,regex
[1170],regex
karel@suske:~/home_shared/develop/airnav_db$ pytho,regex
easy_install ipython[all],windows-8
import osimport sysimport re# configurationtodo_pa,sorting
win32ui,printing
"import sysimport itertoolsnodes=input(""enter the n",graph
from bioservices import keggparserclass retrieve_d,class
"insert into volumes (volumeid, name, type, serveri",mysql
def parallel_lines(number): #help me write the bod,lines
# get treedef get_tree(url): r = requests.get(url),html
requests,python-requests
"{""one"": ""a"", ""three"": ""b"", ""eight"": { ""twelve"": ""c",json
msgid,sqlite3
"import mysqldbdb=mysqldb.connect(host=""localhost"",",mysql
"class foo: def __init__( self, value ): node = nod",field
class customer(ndb.model): name = stringproperty(),google-app-engine
"traceback (most recent call last):file ""c:\program",hash
import math(2*math.sqrt(2)/9801)*math.fsum((math.f,math
list_name.order_by('date'),django
"[ date, open , high, low ]a1=['2015/11/26', 9861.4",pandas
"&gt;&gt;&gt; dat = open('blue.csv','r')&gt;&gt;&gt",csv
"double grades = -32.33f;system.out.println(""grades",hex
"src=""http://img.hb.aicdn.com/3e32a8b101e515b9e7dbe",html
"# trumania v. 0.0.2def square(): print ""you exit f",raw-input
computer 2015-11-26 08:47:00 86computer 2015-11-26,matplotlib
input = urllib.urlencode({_—…plaintext_—È: _—…some,rest
ssh,pexpect
"mylist = [('a', [(0,1), (1,2), (2,3)]), ('b', [(0,",arrays
kmeans,google-app-engine
"def sendemail(logfile, password='somepassword'): #",email
"class verdo(boxlayout): defualtval = """" tarih = st",kivy
age range: 9 - 12 yearsgrade level: 4 - 7......,web-scraping
import subprocess from subprocess import pipep = s,subprocess
def fibonacci(n): first = 0 second = 1 count = 0 w,function
import sysprint('the command line arguments are:'),ubuntu
#!/usr/local/bin/python2.7import csvimport sysimpo,csv
"""[{""months"": 12, ""product"": ""car""}, {""months"": ""12",json
"alphabet= ""abcdefghijklmnopqrstuvwxyz0123456789 ""d",encryption
c:\users\ali\desktop\pygpu\pyrit-0.4.0&gt;python s,boost
"abc = [['date1','number1'],['date2','number2']...]",indexing
while,if-statement
"data = (130, 150, 200, 100, 130, 147)def find_elev",function
"import jsonfrom flask import flask, render_templat",flask
x,math
"x={""information"":{""xyz"":123},""received"":true}",dictionary
import nltkfrom nltk.tokenize import sent_tokenize,class
1/1/20101-2-3-411/2/20101-5-6-7111etc.,file
mylist[n]. shift mylist[k:l] to the left by s.,data-structures
"puzzle = [[' 1', ' 2', ' 3', ' 4'], [' 5', ' 6', '",list
data = []user_input = int(raw_input('how many subj,arrays
&gt;&gt;&gt; import numpy as np&gt;&gt;&gt; a = np,numpy
"def myfunct(mylist): print(mylist) # display [0,1]",list
"for j in range(lastrow,firstrow): print 'rows', ra",list
&gt;&gt;&gt;a = [b if len(b) != 0 else 'lambda'],list-comprehension
"a1 =[35.947, -54.045, 75.418] a2=[36.467, -53.041,",arrays
class collection_of_word_counts():'''this class ha,class
class typecheckingexception(exception): def __init,exception
"import socketimport base64filename = open(""receive",sockets
myfile,arrays
from django.db import modelsclass office(models.mo,django
"flist = [""mary smith"", ""kevin bacon""]",arrays
/* */,string
def find_country(df): df.loc[((df.area &lt; 200).m,pandas
"fill_rgn_pts = [[0,1,2,3,4,5,6,7],[0,1,2,3,4,5],[0",list
"text = ""text1 text2 text3 text4 text5\n here comes",csv
create or replace function scalesmyone (thename te,postgresql
class myregistrationform(modelform): class meta: m,django
"print ""hello world!""print ""hello again""print ""i li",osx
y=y+xy=y-xy=y*xy=y/xy=y**xy=y**1/x...,math
for y in item: print '%s %s %s' % (item[y]['light',sorting
"$url = ""http://example.com/"";$params = ""?param1="" ",curl
0 1 2 3 4 5 6 7 8 90 1 2 3 4 5 6 7 80 1 2 3 4 5 6 ,loops
"/### lastcommand = input(""c-gen@h//vilius #opdesc:",loops
['meyfdahchlncepllseieksianfklinlkanvvgtdldnskiave,list
keywordlions tigers bearsdog catfishshark guppie,csv
from sklearn.feature_extraction import dictvectori,machine-learning
"from tkinter import *root=tk()two=button(root,text",tkinter
"horsemen = [""war"", ""famine"", ""pestilence"", ""death""",list
dialogmain.close(),dialog
"dict1 = {""bear"":3,""wine"":3,""spirits"":7,""no"":0}",dictionary
"file ""port.py"", line 229 port = (int) a ^syntaxerr",syntax-error
./this_script.py -p 3 -s servera,string
a_list,arrays
c++ -&gt; exe,compiler-construction
"noprob=[""nothing"",""none"",""no damage""]while true: q",function
"# what each person pays, catch errorsdef payments(",loops
import redef get_number(element): re_number = re.m,list
a = 5,django
"import csv with open(""testclaims.csv"") as file1, o",csv
return,function
#!/usr/bin/env pythonimport randomimport sysimport,canopy
"[[1, 3, 4, 5, 6, 7, 8, 9], [0, 2, 3, 4, 5, 6, 7, 8",json
chr17 1 1 t c c 5chr13 2 2 a a g 4,dictionary
"zbcdexc, 0011222, ryan, luke",csv
"listtest = ""listtest.txt""def opentestfile(listtest",list
import requestsfrom bs4 import beautifulsoupquery=,web-scraping
"codons=['ctc','agg','ttt']",dictionary
fill:#00ff00;fill-opacity:1;stroke:#000000;stroke-,css
a = input('enter an integer: ')b = input('enter an,duplicates
execeptions.py,exception
fight,oop
"&lt;text id=""1403"" year="""" url_source=""http://www.",perl
"for i in range(0, 1000): if i % 3 == 0: print i el",sum
"a = {6323: [169635, 169635, 169635], 6326: [169634",dictionary
"post, posted_by_user, comment_by, comment,""hi guys",pandas
"for line in open('check.txt',""r""): line=line.repla",text
"""\w{1,}@\w{1,}.\w{1,}""",regex
"from pil import image, imagetkfrom urllib import u",regex
import osos.system('cls')#************************,sorting
s = 'the fox jumped over a big brown log.'k = func,string
class manager(empsalaried): #inherits from empsala,testing
sep 15 04:34:31 li146-252 sshd[13326]: failed pass,string
import pygameblack = pygame.color.color('black')ye,pygame
"for(t=1:nmax) thiscell{t} = zeros(i,j,k)end ",matlab
"x = [10,10,20,20,20,30]",list
"def lang(text):  alist=text.split()  kons=""nrmg"" n",list
page = requests.get('www.google.com/page'),web-crawler
* ** ** *,int
"numbers = [1,2,3, '4', '5', 6, 7]for number in num",shell
def logout(request): auth.logout(request) return r,django
'a' &lt; 'ab' true'b' &lt; 'ab' true'z' &lt; 'ab' ,string
"my_list = ['a', '=', 'x+y', '//', 'moo']if '//' in",list
from django.http import httpresponseimport datetim,django
1,regex
&gt;102l:a mnifemlrideglrlkiykdtegyytigighlltkspsl,table
"ademo[int][""string""] = ""test""",arrays
"points = [np.random.multivariate_normal(means[i],c",arrays
def f(n): return (n%2 != 0) def square (n): return,typeerror
"function gettestmode(){ // if ""/test/"" exists in u",html
"a, b = 0, 1print (a)print (b)i = 2while i&lt;=50: ",integer
db.session.commit(),sqlite3
from users.models import statusfrom django.utils i,django
"hil_text = [[u'man', u'is', u'not', u'a', u'issue'",unicode
df code 0 f5031032 1 f5546810 2 f117225534 3 f1777,pandas
[' '],regex
/users/sreekanth,pyramid
python myscript.py filename.csv,argv
phone_numbers,int
"infile = ""file path""gps_track = open(infile, 'r')c",gis
"one_list = [{'true black': ['aa1', ['bb']]}, {'whi",list
"&lt;item1 id=rt name =""th""&gt;&lt;point1&gt;1254&l",xml
microsoft lync,c++
"lista = ['spanish', 'english', 'chinese', 'italian",list
#NAME?,bash
bibtexparser,file
"[a-za-z]{2,}-\d+",regex
"subset_columns['one','two','three']df[[subset_coli",pandas
#new recipe screendef click(key): new_recipe = tk(,file
3.4.3,xml
"[(107, u'ella', u'fitzgerald'), (108, u'louis', u'",sqlite3
import sysimport osfrom helpingdata import *class ,error-handling
"list=[[], [9, 10], [1, 2, 8, 13], [0, 3, 6, 14], [",list
"&lt;table cellpadding=""0"" cellspacing=""0"" border=""",html
import win32com.clientoutlook = win32com.client.di,regex
from decimal import decimal,function
"abscissa = range(1, 4)graphs = [ (abscissa, [1, 2,",graphics
"def fun: val1=re.findall(pattern1, html_stuff) val",list
\n(\d*[a-z]?-\d*[a-z]?-\d*[\.\d]*[a-z]?[-\d*[\.\d],regex
def square(x): x = 2**x x = 2.0 while x &lt; 100.0,function
"def main(): file = input(""enter a filename: "") fil",list
"from pyqt4 import qtcore, qtguitry: _fromutf8 = qt",qt
matplotlib.image,arrays
"start = input(int(""starting number: "")) ending = i",syntax-error
d = {}def buildindex(m): m = m.lower()  words = m.,dictionary
"import telnetlibimport timehost = input(""ip addres",telnet
"#import ""pstorec.dll"" no_namespacevoid foo(){ipsto",c++
"[(34,55),(44,66)....]",opencv
"mylist = [('abc', 'def'), ('ghi', 'jkl'), ('mno', ",list
range,tkinter
1. #begin_drugcard db000012. # generic_name:lepiru,regex
trip_cost,variables
1.11E+168,regex
"def mainmenu(font, windowsurface, x, y): while tru",pygame
"traceback (most recent call last): file ""parsejson",json
"{""2015-03-08"": {""www.ndtv.com"": [{""traffic"": 100,""",json
import numpy as npa = np.arange(10)b = np.array([5,numpy
"# 10 3# 3 2 1 2 3 1 1 1 1 3# [1, 0, 0]# expected: ",list
i need to first reverse the list and then take an ,function
"class a(object): def wrapped(self, func): func.str",python-decorators
"import sysfrom pyqt4 import qtcore, qtguitry: _fro",pyqt4
setdefault(),ruby-on-rails
"x={'1':100,'2':200,'3':300}print(""i scored %(1)s""%",string
def problem8(): x = [] num = [73167176531330624919,arrays
| text1 | text2|  | 23 | 43 |  | 44 | 23 |  | 23 |,mysql
matplotlib,matplotlib
1080p,regex
'hello ' + ('there' if name is none else name),if-statement
lion eats zebra lion eats gazelle lion eats wildeb,file
# meanlist(nums) returns the arithmetic mean of th,while-loop
"def epoch(): for i in range(0,varb.run_number): pr",function
"import randomnumber = random.randint(1111,9999)try",windows
kk=dict()print dir(dict)print dir(kk)output of the,class
"text_file = open('output.txt', 'w')for i in xrange",image
"&gt;&gt;&gt; move([1,2,3,4])[2,3,1,4]",slice
python.exe src\bitmessagemain.py&gt;file.txt,windows
"&gt;&gt;&gt; a=[0,1,2,3]&gt;&gt;&gt; b=a&gt;&gt;&g",list
"list1 = [""a"",""b"",""c""]",list
"#importsimport os#change directoriesos.chdir (""m:\",append
stime = '2015-08-20t06:43:18.733z'start_time = tim,datetime
from tkinter import*...,image
"import randomfrom math import ceil, logdef geometr",indentation
"def myprint(d): for k, v in d.iteritems(): if isin",xml
"svm20average = []def order_function(price_x, price",algorithm
"sample_dict = { ""matchings"": [ { ""indices"": [ 0, 1",json
"a = [1,2,3,4,5]for i in a: if a[0] == 1: a[0] = (""",loops
"from sys import argvscript, filename = argvlong_st",string
"for n in range(0, len(plaintext)): if plaintext[n]",encryption
diffusion-isomalto-thermo1.dat_x.xmgrdiffusion-iso,perl
def inspection(): inspect.stack() ...class a(objec,override
class enemy(pygame.sprite.sprite): def __init__(se,class
xrb,pandas
"def listcleaner(lst): if isinstance(lst[0], int): ",recursion
"b=[['1','2','3','4','5'],['11','12','13','14','15'",list
&lt;new article&gt;take a look at what i found.&lt,list
ind1 a1 b1 c1 ind2 a2 b2 c2 ind3 a3 b3 c3 ,awk
time1hr= 13time1min= 32time2hr= 13time2min= 36min_,datetime
"file.write(""hello {0} hello1 {0}"".format(""world""))",string
"var = 95for items in range(0,100): if var &lt; 10:",range
165475 0:246870 1124384:2 342593:7 1141651:1 29758,machine-learning
import requestsdata = 'text=great'print(requests.p,dictionary
mystring.join(a + b + etc),string
"while input_ok==false:  try:  print ""enter the num",input
"list = [1,3,5,7,9,11]",numpy
"studentdictionary = {""156"" :{""name"":""steve"", ""last",dictionary
"dict1 = {'name1': 34, 'name2':45, 'name3': 98, 'na",dictionary
import os.pathdef dict_fromfile(): fn = os.path.jo,graph-theory
from tkinter import *class main(object): def __ini,list
"def players (): for i in range(0, n): name = raw_i",menu
"def spdreg():print(""speed limit is 20m/s"")words = ",csv
0x4c1906,minecraft
"token=[aaa,bbb,ccc,ddd,0,eee,40,ggg,5]",string
my_list = [sensor1...sensor4] = [hum1...hum3] = [v,list
class gamestate: # represents a game of othello bo,class
"[labeledpoint(2001.0,[0.884123733793,0.61045425907",apache-spark
'''python trilulilu downloadersupport for video an,download-speed
try: import idlelib.pyshellexcept importerror: # i,python-idle
&lt;itertools.izip object at 0x029e5080&gt;,list
"def all_word_pairs():""""""return list of word + file",list
"t10n-y9c-?: (111.699, 172.003, 26.159) l23cg/l50cg",bash
"for(i=0; i&lt;n; i++) { /* foreach particle ""i"" ..",c
"dict = {0: ['2', '6'], 1: ['2'], 2: ['3']}print(""o",list
"if answer in (""y"", ""yes"", ""y"", ""yes"", ""of course"")",if-statement
"import win32com.clientread = open('out.txt','r')cu",winapi
"&lt;div id=""fbbuzzresult"" class.....&gt; &lt;div c",html
test #456test #783test #990test #123test #560test ,string
"{% for record in records %}var gpslocation = ""(37.",google-maps-api-3
"import randomdef fuse(a, row, col): a[row][col] = ",list
"datetime.date(2014, 9, 30).isocalendar()[1]",datetime
subprocess.call(myfile.sh),amazon-web-services
list.sort(),sorting
"from flask import flask,jsonify, requestfrom model",database
text1=list(text)pattern1=list(pattern)for q in ran,indexing
setup.py,flask
"def rearrangelist(list): lst = input[""list""] lst =",lambda
"f=open(""blah.txt"",'w')#i log the output of a progr",subprocess
"charfield('name',max_length=100)",django
"bookseats = [0,1] print""what seats would you like ",sqlite
"n = int(input(""type a number between 1 and 100 inc",while-loop
"10.5.5.81=apache,php,solr 10.5.5.100=oracle,cohere",string
"&lt;select name=""project-team"" id=""search"" class=""",django
private byte[] addparity(string _in){byte parity =,hex
&lt;space&gt;&lt;space&gt;line1&lt;space&gt;column,file
a1998237.tif,date
outxx: g++ -i/usr/include/python2.7 -l/usr/lib/ pu,c++
"list = [[['a','b','c'], [1,2,3], [7,8,9]],[['e','f",list
stackoverflow is best ,regex
#this program uses the return value of a functiond,syntax-error
[11000] [01100] [00110] [00011] [10100] . . .,list
no. ids date 1 4678 2012-11-30 23:59:59 2 4703 201,pandas
s.send((y)),sockets
"class objectd(object): def __init__(self,val1,val2",class
typeerror: render_page() takes exactly 2 arguments,django
class userprofile(models.model): user = models.one,database
str,string
hellohellohello...hello...hello,string
"my_problem = [(1,20,400), (1,30,450), (2,40,525), ",list
"a = [1, 3, 5]",list
max = 1 min = -1 -&gt; dist = 2 max = 2 min = 1 -&,numpy
&lt;orgnr&gt;&lt;/orgnr&gt;,xml
def home(request):form = signupform(request.post o,django
"f = ""makimak-cg_mk_mokarmi""pattern = ""([a-za-z][a-",regex
futurescode = futures[futures_row]['futures_code'],file-io
"class color():def __init__(self,color):def __str__",class
"string = ""123456781234567812345678""",string
"sql = ""insert into meldingen(melding_title, meldin",mysql
pprint,json
"def main(): infile = open ('correctanswers.txt','r",format
"[(1,2),3,4,5,6,7][1,(2,3),4,5,6,7][1,2,(3,4),5,6,7",algorithm
n=4,algorithm
openpyxl,excel
&gt;&gt;&gt; searcheverything(object_thing)found i,search
"[u""name1"", u""name2""]",django
"vec_1, vec_2, vec_3",shell
"leftear = polygon(point(158,218), point(160,208), ",windows
"{""test1"": ""database"",""testinfo"": { ""memory"": ""0.1 ",json
"`&lt;rating action=""set""&gt; &lt;details&gt;12345&",xml
"1 names = ['louisa', 'mean girl star wars fan', 'o",list
class a: foo = 'f' baa = 'b' @property def foo(sel,properties
python,datetime
#-*-coding:utf8;-*#qpy:console#qpy:2numone = 1numt,qpython
from tkinter import * root = tk() content = string,tkinter
"str=""abc-def""",special-characters
"""this is a string of variable length (561401)""",regex
3ad544532f-272|5sd32332s-f72|5fd2124l-y21|4wa32332,regex
"if re.search(""(\[b\])"", m, re.ignorecase): r = re.",regex
"global wordswords = [""hi"", ""hello"", ""bye"", ""his"", ",list
"with open(""class1.csv"") as f: columns = f.readline",csv
"list = ['12','8','3']",list
evaluation.log_loss(..),graphlab
"dic_a = {}dic_b = {}dic_a[""a1""] = ""1""dic_a[""a2""] =",dictionary
x.csv,csv
variablex = 5somevaluey = 6,max
def spawn_window(self): top = toplevel() top.title,tkinter
"string ='''{% emoji 'money_bag' %}&lt;span style=""",regex
.find(),list
"df= pd.dataframe({'subject': [1, 2, 2, 3,4,1,1,2,3",pandas
"a_list = [1,2,3,4,[42,'meaning of life']]def some_",list
def setup(self): self.driver=webdriver.firefox(),firefox
"my_list= [{""name"": ""my name"", ""timestamp"": {""$date",json
"read(const char *path, char *buf, size_t size, off",linux
"import randomx = random.randint(2,10)y = random.ra",variables
"x = 'asdf(a)asdf.com'found = re.sub(r'\s(a)\s', '@",regex
15/12/2015 15/11/2015 15/10/2015stock aa 10 11 11b,pandas
"my_list = ['a','b','c','d','e']",for-loop
diamond sword enemie0 0 010 1 215 2 36 4 5,list
def showcards(): #sum sum = playercards[0] + playe,blackjack
'ccccccccccccccccccccccccccccccccccccccccccccccccc,bioinformatics
exif brightnessvalue: 10 exif colorspace: srgb exi,image
@a @a /@a @a,regex
"with open(main_path+i_bu_name+""/""+str(snapshot_id)",excel
class something: def buttons( self ): self.button1,function
#char = ord(message[i])-96#key = ord(keyword[i])-9,syntax
id alpa 1 a 1 a 1 b 1 b 1 c 2 a 2 a 2 b 2 b 2 c 2 ,linux
"dict_list = [ {'key1':1, 'key2': 2, ...}, {'key1':",list
nonsense = 'faxoyk'r = {chr : 'afokyx'.index(chr) ,dictionary
"class board(object): def __init__(self, json, imag",json
type of data[name]['money_receive']is vividict cla,math
line =abcsdfs?a=name&amp;ab=fsdfsd&amp;c=sfssfpatt,regex
"[ {'restaurant': ..., 'lunch_menu': ..., 'dinner_m",dictionary
fhand=open(file)n2=0for line in fhand: if line .st,for-loop
&gt;&gt;&gt; import numpy as np&gt;&gt;&gt; standa,numpy
import script1import script2import script3#import ,function
"inputfile = open(""pets.txt"", 'r') # makes file obj",file
"score = {""a"": 1, ""c"": 3, ""b"": 3, ""e"": 1, ""d"": 2, """,loops
permissionerror: [winerror 32] the process cannot ,csv
"def add(a, b): if isinstance(a, (float,int)) and i",function
"var m = new array();var i,j;for (i=0;i&lt;6;i++){ ",arrays
\and,join
"s=""&lt;div&gt; this is a text with mathjax like $1",lxml
def matrixdimensions(m): test = [] y = len(m) for ,matrix
"&gt;&gt;&gt; list = ['a', 'b', 'c', ['d', 'e'] ]",list
"list1 = [-1, 2, -3]list2 = [4, -6, 3]print(get_neg",list
from django.utils import simplejsonfrom django.cor,django
&gt;&gt;&gt; mydict['clusteridentifier']traceback ,dictionary
"import rewith open(""in1.txt"") as f: lines = f.read",regex
2014-04-10 arjun 22 class 10 60 anil 23 class 09 8,file
"def is_perfect(num,power): root = 0.00 p = 0.00 fl",nth-root
//prototypedo python protoypingwritehello() //give,function-prototypes
"def subs(string,substring): lista=[] i=0 while i &",string
$ python my_script.py -f &lt;input_file.txt&gt; -k,bash
25-may-1504:20client0000000010127.0.0.1payiso20022,shell
"{  ""type"":""metamodel"", ""attributes"":[  {  ""name"":""",json
import sysfrom pyqt4 import qtguiclass example(qtg,qt
runshellcommand(),linux
"l = [[hello,world],[i need help, python]] l [0] = ",list
num1=int(raw_input())num2=int(raw_input())num=int(,ruby
import facebook as facebooksdcookie = facebooksd.g,django
"traceback (most recent call last): file ""./test"", ",ubuntu
contenthandler,sax
"class query def __init__(self, keyword, **kwargs):",oop
"web_pages = {1:('google scholar','website1'), 2:('",dictionary
"student_name,7another_person,5",dictionary
jan f m a m j \2000 -7.894737 22.387006 22.077922 ,pandas
import urllib import os sock = urllib.urlopen('htt,module
"from bio import seqioid = []for line in open(""shor",biopython
+,list
#!/usr/bin/pythonimport fileinput;import csv;def r,csv
"with open ('/home/desktop/hello.txt', 'r') as f: f",ubuntu
"def numbers_string1(count): result = """" for i in r",for-loop
from unidecode import unidecodecv2 = unidecode(cv),regex
ids.txt,dictionary
def test1(n): for i in range(n): for j in range(n),big-o
"res12 = form.getvalue('opt_12', '')res27 = form.ge",cgi
def evenlis(lis):  n=len(lis)  if n==0:  return no,recursion
2.40E+43,regex
"import requests print ""enter a city"" city = raw_in",xml
"abc:123,def ghu",regex
&gt;&gt;&gt; import pprint&gt;&gt;&gt; import sys&,svm
sudo pip install http://pypi.python.org/packages/s,mysql
"app ""shop_simplevariations""installed_apps = ( 'dja",django
class class1: def __init__(self): pass def func1(s,class
"import subprocesscommand = ['sudo', '-s', 'iwlist'",linux
'key1',dictionary
"mylist = [98, 10, 12]w = 85c = 90for i in mylist: ",list
class basedao: def __init__(self): self.connection,oop
from kivy.app import appfrom kivy.uix.popup import,kivy
"[{""us"": {""intial0"": 12.515},{""ge"": {""intial0"": 11.",dictionary
class monster(): def __init__(self): self.hp = 25 ,function
"def main():#left dashboard ld = raw_input(""left da",function
"def create_matrix_1(n,m,force=0.0):  """"""  create a",numpy
reportlab,templates
"file ""/projects/f6f895ae-ee58-4e39-9ebc-34b6285d9d",syntax-error
"&lt;/div&gt; &lt;/div&gt; &lt;div id=""image-canvas",regex
"pipeline = [{ '$unwind' : '$ispartof'},{ ""$group"":",mongodb
from xml.dom import minidomimport urlliburl_str = ,xml
col1 col2 col3 col4 0 5 -2 1  -5 2 -1 9 3 -7 3 5,list
while true: now = datetime.datetime.now(); if now.,linux
['go shopping @h'],list
"file ""c:\python27\lib\distutils\msvc9compiler.py"",",pip
"{""siri"": {""servicedelivery"": { ""responsetimestamp""",for-loop
"def path(self, interface): p= str(qfiledialog.gete",qt
my_list,list
"from dice import pairofdiceprint(""now let's play w",if-statement
"inventory = [[""item"",""quantity""][""credits"",""5000""]",list
"$city==""paris"" and $country==""france"" and $price&l",pattern-matching
siege -b -c 100 -t 30s,sockets
"traceback (most recent call last): file ""&lt;stdin",exception
elif,logic
"import osos.chdir(""c:/users/any/desktop/test"")for ",windows
"class time: """"""the time class defines the time wit",class
__getitem__,dictionary
#!/usr/bin/python3.3try:  import pygtk  pygtk.requ,gtk
"import math loanamt=int(input(""enter the amount (g",range
"&lt;form action=""/final"" method=""post""&gt;{% csrf_",django
"import sysdef hello(): print(""hello"")class parser(",function
"filea = [[100,1],[101,1]]fileb = [[100,2],[101,2]]",dictionary
ls * | xargs python myscript.py,linux
skp3_chu;20160101;0.0;reproceso;skp3_chu;20160102;,sorting
"&lt;a href=""""/&gt;",regex
"chr1 29901 c t 0/0:0,21,143:7:36 0/0:0,3,35:21:18 ",bash
"from numpy import savetxtsavetxt('a.txt',range(10)",numpy
"l=['1','2','3','4.5']",string
fig = plt.figure()ax = fig.gca(projection='3d')ax.,graph
http://www.edsa-project.eu/adzuna/eyjhbgcioijiuzi1,data-processing
yield,yield
s='elem1 elem2 elem3 elem4 elem5',dictionary
? - ?,sql
import easygui as guiimport smtplibchoice = gui.bu,if-statement
int,dictionary
product: netatalk version: 2.2.0 extrainfo: name: ,string
"a = np.ones((5,5))",arrays
"file = open(""test.txt"", ""rb"")data=file.readlines()",string
"def readcountries(): open_file = open(""countries.t",format
"x = {a,b,c,d,e,f,g,h,i,j,k} y= {8,8,15,13,12,17,18",sorting
class person(models.model): name = models.charfiel,django
alvas@ubi:~$ datewed may 20 01:04:43 cest 2015,date
// the regular expression comes from an older // a,django
apt-get install booktype,django
"def order_list_service(request, type_id = 1): orde",html
"ammo_amount = 1ammo = raw_input (""shoot?"")if ammo ",if-statement
"file = open('test2.txt', 'r')for line in file: #fi",file-io
"class a: def __init__(self, a): self.a = a",class
&lt;a&gt;/numbers&lt;td&gt;,table
"#!/bin/bashcat $1 |cut -d "","" -f 7 | sort |uniq &g",bash
"import pygame, randompygame.init()screen = pygame.",pygame
"my_list = [[0,1,2,3,4,5],[6,7,8,9,10,11],[12,56,86",list
"def percentletters(string): string = 'a','b' print",string
"in [7]: file ""/tmp/ipython-4302iun.py"", line 26 fo",for-loop
amount = int(input('how many packs do you want?')),dictionary
objs = accessinfo.objects.filter(~q(weblink=''))re,json
fd = open('results.txt')lines = [line.strip() for ,lambda
import urllib2from ntlm import httpntlmauthhandler,function
"image_url = models.imagefield(upload_to=""uploads/s",django
ln -sf /usr/bin/python2.6 /usr/local/bin/python,linux
def button1click(self): self.top = toplevel(width=,tkinter
"balance=7.52print(""hi, welcome to the atm."")print(",loops
"plt.plot(y1, marker='o', color='b')plt.plot(y2, ma",pandas
datetime,datetime
print '... building the model'# reshape matrix of ,theano
weekday,boolean-logic
1 import multiprocessing2 from threading import th,twisted
newfies-dialer,django
final_destination_8e8a-0760-5b06-68e0-68aa-7_featu,regex
------------------ | web | | page | --------------,xlrd
"freq[x] = freq.get(x,0) + 1",function
for i in range(len(self.corpses)): for j in range(,list
"a=[[1.02,-0.25,-0.30,0.515],[-0.41,1.13,-0.15,1.55",user-interface
root@bt:~# ./phemail.py -g0@*******.comgathering e,beautifulsoup
"def where(maindicts, filterdict): passmydicts = [{",dictionary
lat = self.request.get('lat'),google-app-engine
"&lt;div class=""form-group""&gt; {{ form.email.error",django
(gmapenv)teruun@ubuntu:~/gmapenv$ python -c 'impor,linux
make_great(),list
#finds the image descriptions and saves to a listu,tkinter
"mul = lambda a,b: a*badd = lambda a,b: a+bres = {f",list
.venv/lib/python2.7/,sublimetext2
"&gt;&gt;&gt; re.sub(r'[\w]+', '', ':lot002_temp&lt",regex
if zpspin == 0 and antiice == on and tospin == 250,pyqt
"['data','oracle','typical']",list
"ppp=input('enter a, or b. or exit to exit')while p",if-statement
#!/usr/bin/passwdimport cryptdef testpass(line): e,linux
largest19 15 1012,list
"from flask import flask, render_templateimport mar",class
#NAME?,variables
"commands = { ""view mail"": view_mail(), ""send mail""",variables
class country(models.model): name=models.charfield,django
id date aid table2_id message1 2014-03-19 16:21:02,mysql
"000001,375.99000002,212.89000003,175.12000002,543.",list
import csvfrom collections import defaultdictsumma,string
&lt;html&gt;&lt;head&gt; &lt;title&gt;peak hell&lt,file
showdeck,list
"in [65]: arf=(0,1,[1,2,3])in [66]: arf=(arf[0],arf",list
"from django.conf.urls.defaults import patterns, in",django
in [17]: data[45:73]out[18]:  global data item 201,pandas
len(x) = 50len(y) = 200,sql
# -*- coding: utf-8 -*-import scrapyfrom scrapy.sp,xpath
"in [5]: mout[5]: [{0: ['a', 'b'], 1: '1', 2: '2'},",dictionary
this is a test token and it is a test to see if it,regex
"traceback (most recent call last): file ""c:/python",json
"def do_siteserver(self, line): import paramiko par",cmd
y_and_n.csv,csv
"def onbuttonclick(self): self.labelvariable.set(""e",tkinter
returnmlargest,list
"data = """"pattern1 = re.compile('')pattern2 = re.co",list
from stephen.marquard@uct.ac.za sat jan 5 09:14:16,parsing
the 8512and 7759i 6182to 6027a 4716of 4619he 2873i,list
"class products(resource): """"""the collection of pro",json
pyg = 'ay'original = raw_input('enter a word:')if ,string
"a = ['s','u','v']b = ['u','s','a']",list
import numpy as np,import
lst,function
"def computepay(h,r): if h &lt;= 40 : p = r * h pri",conditional
"[[[1, [2, 3], [3, 2]]], [[2, [1, 3], [3, 1]]], [[3",list
"int* m_11 = 5, int* m_12 = 2, int* m_13 = 0, ... i",matlab
with data_file as f:,file
"import sysfrom pyqt4 import qtgui, qtcore#this set",mouseevent
3 4 1 1 14x = 3y = 41 = startfromjump = 1until = 1,algorithm
word1 = 'index.php/1'word2 = 'index.php/2'try:  te,loops
suppose x = [1 3 0 8  1 4 6 0  2 0 7 8 ] mask = (x,arrays
from tkinter import *from time import sleepimport ,arrays
os.path.getsize(),file
$ elements and element properties for region : rfa,regex
syntaxwarning: name 'roicounter' is assigned to be,scope
mysite/ manage.py mysite/ __init__.py settings.py ,django
"myarray = [('31.10', 'john', 'smith', 'zk'),('01.1",list
names = app.getclipboard();,split
import urllib.requestimport timefrom lxml import e,xml
"import rephonenumregex = re.compile(r""\d\d\d-\d\d\",class
"import urllibimport jsonsymbolslist = open(""c:/use",json
&gt;&gt;&gt; import image&gt;&gt;&gt; img = image.,python-imaging-library
.csv,loops
"a = [['abc', 9], ['def', 10], ['ghi', 6]]",list
"myfile = ('_%s_mail_%s.txt' % (timestr, emailid))u",regex
/foo/pup/m^@o^@u^@n^@t^@i^@n^@g^@,unicode
"file ""c:\users\nicholas\pycharmprojects\mortalkomb",pygame
t = get_template('htmlprojectfolder/index.html')ht,html
from tkinter import *def clicks(event):  print(eve,user-interface
"first = dict(a=1, b=2)second = dict(b=2, c=3)",dictionary
a-bomb -&gt; a-bombsabacus -&gt; abacusesabandon -,preprocessor
&gt;&gt;&gt; x = 1.7320508075688772&gt;&gt;&gt; f(,math
boolean x = a? b : c;,boolean
def updateitem(self): name1 = self.itemidlabelline,sqlite
"class c(): passfor count in range(1,3): ""node""+str",oop
def byfreq(pair): return pair[1]def ratio(file): #,text
channel_views.take(20),apache-spark
obj_list.sort(),sorting
* * ** * * * * *,nested-loops
python,django
[-1. -1. -1. -1. -1. 1. 1. 1. 1. 1. -1. -1. -1. -1,list
"if ""\x00"" in item: pass",csv
for address in master_locations: try: search = geo,for-loop
"""oh god please some advice ´“"":",unicode
"for column_name, column in df.transpose().iterrows",pandas
typeerror: 'unicode' object is not callable,unicode
1 one 2 two 3 three 4 four 5 five,numpy
#dice random number generationdiceroll = random.ra,pygame
sudo pip3 install reqests,ubuntu
html = '''&lt;html&gt;&lt;head&gt; &lt;title&gt;- ,html
tuple_list,list
'0',string
failed: exception thrown in login flow loginuser f,parsing
"coll.find({""coordinates.type"" : ""point""},{""coordin",database
"if not bingo_num in player_1_num: print(bingo_num,",list
"for i in range(0, items): print('x{0} = {1}'.forma",linear-programming
putc(128); putc(0); putc(40); putc((128 + 0 + 40) ,serial-port
componentid subcomponent measurementx030 a1111111 ,csv
from datetime import datetime import time  now = d,time
setup.py,easygui
jack john jimgeorge colin stan,regex
is a good boy,regex
fname = '/volumes/database/interpro/data/'+uniprot,file
import sysimport tkinterimport datetimeimport cale,date
"list1 = [1, 2, 3, 4, 5, 6]list2 = [1, 2, 3, 4, 5, ",list
"{-4,-2,1,2,5,0}",permutation
"ppcode = 'something' createnode = {""statement"":""cr",string
"import timeimport randomlist = open(""nouns.txt"").r",random
for i in range(len(x)): if i &lt; 4: x =(alp.repla,string
"&lt;?xml version=""1.0""?&gt;&lt;a&gt; &lt;b&gt;text",xml
def createlab(size=16):maze = createmaze()answerpa,list
"def warpbar(text, linelength): if len(text) &lt;= ",regex
python db_create.py,flask
from tkinter import*global clickableplayerxturn = ,variables
"a=['g','d','r','x','s','g','d','r']",list
"class treenode: def __init__(self,key,val,left=non",binary-search-tree
bob.ps,c++
from sympy import *import numpy as npimport networ,networkx
traceback (most recent call last): print(list(word,nlp
import urllib  import re import lxml.html start_li,xpath
import whois w = whois.whois('google.com')print w,email
"{ ""innerset"": [ { ""clusteruid"": { ""id"": 3585057579",json
"dict = {'x': [645, 469,456,790,850],  'y': [599, 5",list
"def main_func(): chunk= [[""ababa"",""aca""],[""agaga"",",list
"print ""welcome to madlibs! py v1.2.1""print """"print",loops
"&lt;root&gt;- &lt;book category=""children""&gt; &lt",xml
"[('#example', 92002), ('#example', 65544)]",list
"[[""195"", ""106"", ""100"", ""95""]]",list
parameter1parameter2parameter3parameter4...,csv
"['2', '3', '1', '4', '1', '4', '2', '3', '3', '2',",list
sources.py,ipython
example.json,json
"rand = [0, 12, 5]ll=[]for x in enumerate(mylist) i",enumerate
def purify(numlist): imp = [] #list that receive t,list
for i in list(range(size)): j=0 for j in list(rang,list
for,for-loop
# custom function checkvaliddef checkvalid(chooseg,list
custommenu,qt
a = 3260b = 0.000075c = a * b # // (0.244499999999,excel-vba
from two import *adoodah = doodah()something = thi,scope
"num1:fields.integer('number1', digits=16,2)),num2:",openerp
ctrl+c,python-multithreading
import datetimeimport csvdef get_stock_name(prompt,function
(charactername).char,file
1.0 &lt;type 'float'&gt;,types
import randomwords = random.sample(open('letters.t,random
"l=[[1,2,3],[0,13,6],[9,10],[3,4,5],[10,11],[6,7,50",list
"update scrapeddatatable set productdesc=,  morepro",mysql
10.113.12.40,ip
from __future__ import unicode_literalsfrom bs4 im,web-scraping
def input_files(file): s=0 #word=raw_input('enter ,file-io
[[0 0 0 0 0] [0 4 0 0 0] [0 1 0 0 0] [0 1 2 0 0] [,matrix
def print_multiplication_table(n): a = 1 b = 1 whi,loops
if (startsquare % 10 != 0 and startsquare % 10 != ,syntax-error
"alphabet = ""abcdefghijklmnopqrstuvwxyz""or alphabet",string
"cprob={(letters[0],):0, (letters[0],letters[1]):0,",list
"list = [[('a',4),('b',2),('c',7)],[('a',5),('b',1)",list
# error message printed if player types gibberish ,if-statement
 import requests params = {'username': 'testuser'},curl
"dic= { 'a' : {'x':1,'y':1,'z':1}, 'b' : {'q':1,'w'",merge
x % y,modulo
def alllocations(request): mydb = client.sdklocati,django
def main(): winners = [] winnersnd = [] readdata(),list
"list = [[11, 12, 13, 14] [15, 16, 17]]",list
"numlist = [601, 601, 601, 602, 602, 603, 1245, 124",list
if ($sums.containskey($skey)) { $sums[$skey] += $s,perl
"d = { x: [1,2,3,4] y : [5,6,7,8] }",list
class connect: # create the database def __init__(,sqlite
†_†?†_†?&lt;81&gt;i&lt;82&gt;ran&lt;81&gt;&lt;83&g,decode
"&lt;div class=""panel-body""&gt; &lt;form role=""form",html
import datetimedt = datetime.datetime.strptime('20,datetime
evolution?,linux
df['ids'] = df['ids'].values.astype(set),numpy
"&lt; img src=""{{static_url}}img/2003/p1q71.jpg"" &g",django
"re.match(rex, s)",regex
x y z 35.013930 048.775597 0.22  42.015619 368.803,numpy
class temp: def __init__(self): self = dict() self,class
"for line in source: newline = ""+"" + line #write ov",file
### loop ###while :dopythonsh ${ramdisk}/script.py,bash
i=0while true: if flag==true and i=i+5: func() . .,if-statement
01jan2014:08:22:0001jan2014:09:01:0001jan2014:10:0,datetime
"#generate some sample datas = [('yellow', 1), ('bl",dictionary
"{u'marketid': u'1.112422365', u'marketname': u'1m ",dictionary
python,google-app-engine
doc.build(parts),reportlab
"for line in lst: nline = line.split(',') m = [i fo",performance
# imports from flask.ext.sqlalchemy import sqlalch,shell
typeerror: 'float' object not callable,floating-point
import tkinter as tkclass application(tk.frame): d,tkinter
"&gt;&gt;&gt;x = [transactional,promotional] &gt;&g",matplotlib
from tkinter import *import datetimeclass applicat,loops
"n=range(1,101,2)if n == 55: print ('fifty-five')el",range
"def checker(n): p = [[7,3,5,6,1],[2,6,7,0,2],[3,5,",dynamic-programming
&lt;field name='selected_tea_workers_line_ids' nol,xml
aaaooaloorazurblackbluechurchcroccolidarkden...zic,dictionary
"two1=[1,2,10,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2",loops
url = 'https://www.xkcd.com/info.0.json'response =,json
def skidoo(): dingo ={} chain = iptc.chain(iptc.ta,dictionary
"import numpy res = zeros((len(range(0,5,1)),2)) #a",for-loop
"states = """""" alabama alberta alaska arizona arkans",string
"list1 = [1,2,3]",arrays
remove = 0 while remove &lt; 2:  a = random.choice,random
"def iswordin(secretword, lettersguessed): for i in",string
def switchtodstsystem(systemno): grub_util.switcht,linux
hidden = '^' def blah(r): r = hidden * len(r) retu,string
'rock',function
"numbers(1,100,5)",distribution
location_id name latitude longitude,json
"set types {{""text file"" "".txt""} {""all files"" ""*.*""",tcl
---or1host1: - interface: 1/1 description: or1-ser,networking
google form,django
int,string
http://127.0.0.1:8000/category/blah/ -&gt; blah is,django
"error traceback (most recent call last): file ""/ho",pygame
"import osdef createfile(): if os.path.exists(""high",scope
parent directory/ - directorygame1.tar.gz 2010-may,regex
l = list()l[2] = 'two',list
"a=[2,5,3]b=[8,1,6]c=[7,4,9]outlist=[]for i in a: f",algorithm
import osimport globmy_dir = 'insert your own data,csv
print ('give your weight in kg: ')weight_kg = floa,visual-studio-2015
"dic = {'hipster': ['john', 'thomas','peter'],'geek",dictionary
index(),function
ultramagnetic mc's,regex
def log(string): # this does stuffdef functionname,namespaces
"examplelist=[[1,2],[3,4],3*[5,6,7]]&gt;&gt;&gt;[[1",list
"&lt;?xml version=""1.0"" encoding=""utf-8""?&gt; &lt;p",xml
somesite.com,perl
"['\n 62\n ', '\n 178\n ', '\n 7,800\n ']",arrays
"sout[537]: ['a', 'g', 'xyz', 'b', '6', 'g', 'v']'x",string
"data = { 'date': kwargs['this_number'], 'number': ",django
'keyword',tkinter
1 one2 two3 4 three5 four,algorithm
"def startup(): print ""welcome to the text based ho",variables
1376328501.285|1166703600|0|simcontrol|4|command 7,text
"for a in range(1, 5): print ""values of a is :""prin",string
foreach(steps as step){ aret_eles = xpath-&gt;quer,xpath
find and replace,regex
__eq__,documentation
"class engine(object):players = {""arjuna"":arjuna(""s",class
"class binaryrule:def __init__(self, child1, child2",genetic-algorithm
&lt;div &gt; &lt;span &gt;first element to select:,xpath
"a = [1, 2, 3, 6, 9, 10] ",list
[info ] kivy v1.8.0[info ] [logger ] record log in,download
"if difference &gt; 0: difference_string = ""the com",if-statement
"letters = { ""m"":1, ""n"":1, ""r"":1, ""m"":1, ""n"":1, ""r""",dictionary
moving_average,class
"[[""e1"", ""[{""l1"": ""a"", ""l2"": ""b""}, {""l3"": ""c"", ""l4""",json
import sysclass test(object): def __init__(self): ,sys
import sklearn,numpy
"i = 0numbers = []while i &lt; 6: print ""at the top",for-loop
"lorem ipsum dolor sit amet, consectetur adipiscing",regex
"def provera(): komanda = input(""\n&gt;&gt; "") whil",function
"[""aaa 1"", ""aaa 2"", ""bbb 2"", ""ccc 3"", ""ddd 4""]",arrays
def get_information(): names_list=[] coursework_ma,return
count_element_has_1 = 0count_all_0 = 0 my_list = [,list
tkinter,tkinter
from tkinter import *import tkinter as tkimport co,input
from beautifulsoup import beautifulsoupimport requ,html
"ret, thresh = threshold(img,127,255,cv2.thresh_bin",opencv
"score_filename = ""class1.txt""max_scores = 3try: sc",limits
"a,b,c,drna,lung cancer,15,biotinrna,lung cancer,15",regex
"my_data = ((1234l,), (23456l,), (3333l,))",tuples
now = datetime.now(pytz.utc) disables = self.sssvc,datetime
"""name""; ""town""""johnny aaaaaa""; ""bordeaux""""bbbb tom",database
"""info"": { ""copyright"": { ""imagealttext"": ""\u00a9 2",json
"wifite_scan = subprocess.popen('./wifite.py', shel",raspberry-pi
"a = ['12', ''34]",map
aaabcaaa,regex
"def processrgb(item, matrix): threshhold = 229 red",syntax
"functions = [function_a,function_b,square,...,last",arrays
0.6002500057220.6010000228880.6010000228880.601875,list
*|first_name|*,regex
"words = {'abandon':-2,'abandoned':-2,'abandons':-2",loops
"testing=['how','are','you',['how','is','life','goi",list
"number = int(input(""enter a positive number to tes",loops
import sysimport timeimport osdef typer(x): for i ,file
"[('1', '12,12'),(2,'30,30')]",list
send_mail(),django
"import os, sys, platform, webbrowserdef main() tem",linux
"&gt;&gt;&gt; a = [[1,1],[1,1]]&gt;&gt;&gt; b = [[1",arrays
def even(n): if n%2==0: print('number {} is even'.,function
"class helloworld: def index(self): return ""hello w",cherrypy
number = 9.3while number % 0.5 != 0: number -= 0.1,math
"x=1 for items in hero.basics: print(x, "". "", items",dictionary
def define_vartest(): vartest = 1 return vartestde,function
"c1,c2,c3,c40.1,y,1,n0.4,n,1,n0.3,y,2,n0.6,y,1,y",csv
"['the', 'ant', 'basket']",numpy
class employee(models.model): name = models.charfi,django
print len(list1)print len(list2)dikt = dict(zip(li,list
"c = reshape(a(b.',:).', 6, []).';",matlab
def index():,apache
time = '2014-03-05 07:22:26.976637+00:00'type(time,string
"print('{""type"": ""feature"",""geometry"": { ""coordinat",json
__init__,recursion
"align set a and merge into set b ... seta, 4 image",text-processing
"file1 = open ('filea.csv', 'rb') reader1 = csv.rea",csv
"eaters = input(""how many people are attending the ",math
"class fastaseq: def __init__(self, name, sequence)",class
flickrapi,flickr
print('you beaten all three levels and reached the,windows
TRUE,algorithm
os.system('reboot') ,linux
"[['3','1','2','4'], ['2','1','3','4'], ['3','1','2",list
class block(pygame.sprite.sprite): def __init__(se,pygame
"'921,\u201d'",string
sorted(),sorting
import numpyimport cv2from tkinter import *from pi,function
&lt;p&gt;,regex
n x d,arrays
itemname = e0.get()quantity = e1.get()manufacturer,sqlite3
"buttonparameters = [ (""button1"", ""button1.png""), (",data-structures
"outfile.open(""some_file_1.txt"",ios::out);",c++
"""^[a-za-z0-9]+$""",regex
len(text.split()),string
ctypes,repository
with open(input_f) as input_data: print input_f # ,line
#tronfrom tkinter import *from pil import imagetki,tkinter
\b,regex
6/-132,integer-division
&gt;&gt;&gt; a = 'three'&gt;&gt;&gt; b = 'four'&gt,debugging
css,xpath
"mylist = [u'name:', u'john', , u'doe', u'address:'",list
while true: # 1. input = get sys.std if input == ',shell
"q, w = 1, 2 if 1 &lt; 2 else 2, 1valueerror: too m",if-statement
x y z,csv
"lbcoord = [[1195,456],[1324,674],[5644,687],[4679,",list
fraction,while-loop
"def longestcommonseq(x,y): lcs = [[0 for z in rang",data-structures
import pandas as pdfrom stringio import stringioim,pandas
"handlers = [  (r""/doc$"", dochandler), (r""/doc\.htm",regex
"[(169, 8), (170, 1), (170, 4), (170, 8), (171, 8),",list
"c = numpy.array([a^b for a,b in a,b])",arrays
"{name:{key1:value1,key2:value2},name:{key1:value1,",csv
from tkinter import *import tkinterclass c:def __i,tkinter
"try: wait = webdriverwait(browser, 30) element = w",selenium
"{ ""originalrequest"": { ""category"": {} }, ""totalres",json
"#step 1print(""enter the first digit of your gtin c",rounding
"[[a, b, c], [d, e, f], [g,h]]",numpy
"a=0def reinp(a,b): while true: if a in [1,2,3,4,5,",loops
## x2##0 214##1 234##2 253##3 272##4 291,pandas
"class employee(object): def __init__(self,name,pay",class
from itertools import countimport sysdef b(u): if ,decimal
"def genrangame(self): game = ['bf4', 'csgo', 'gta'",list
"streetname = raw_input(""please enter your address:",input
def double(n): return n*2def halve(n): return n//2,recursion
"h = httplib.httpsconnection(host, port) h.set_debu",regex
"url = """"""http://www.civicinfo.bc.ca/bids?pn=1""""""ht",beautifulsoup
from bs4 import beautifulsoupimport requestsa = in,google-crawlers
"[[1,2], [0,1], [1,2,3], [0,1,2], [1,2,3,4]]",list
"{'123456':{'exam':[97, 98, 45], 'homework': [44,45",dictionary
lambda : popen(.....),queue
"import sys, os, from pyqt4 import qtcore, qtgui, u",pyqt
"import pandas as pda=pd.date_range(start=""2015-06-",pandas
"([1,2,3], [4,5,6], [7,8,9])",arrays
"l = [{'name': 'john', 'age': 23}, {'name': 'steve'",list
decrypt_message1,encryption
public static void processsieve(boolean[] sieve){ ,for-loop
word = input('enter a word: ') count = 0vowels = [,string
"from tkinter import *import sys,math,random,dateti",excel
"url = ""http://anonymouse.org/anonwww.html""posturl ",post
matrix(),numpy
class purchaseorder(models.model): has_responded =,django
@login_required(login_url='/login')def createnetwo,django
"{u'ischecked': {u'49871': false, u'49870': true, u",json
"week_1[55.5,23.1,234.8,,23.6]",arrays
"mwhome=sys.argv[1]wlst=mwhome+""/oracle_common/comm",subprocess
appcfg.py,google-app-engine
pypm,3d
2015-10-22 18:33:58 [scrapy] info: scrapy 1.0.1 st,web-crawler
"fileopen = open(""test.c"") for var in fileopen: if ",excel
"file = open(""smth.txt"",""r"") pom = list() string = ",string
"subprocess.popen(['cut', '-d', '''(''', '-f2', 'fi",bash
# usage# python grayscale_histogram.py --image ../,opencv
import randomimport sysdef get_input_or_quit(promp,list
"startmaze = [""#"", "" "", ""#"", ""#"", ""#""], [""#"", "" "", ",bitmap
# creates a new file for writingnumbersfile = open,file
run,window
"class country(object): def __init__(self, continen",oop
"rasters = ['a','a.txt','b','b.txt']",list
waitgroup,go
def weather_fetch(request): context = none correct,django
defaultdict,performance
"[[4,4,4],[5,5,5],[6,6,6],[7,7,7]......] ",list
"set1 = [1, 3, 5, 7]set2 = [3, 5]...result = [1, 7]",set
"import redditusernames = ['username', 'username1',",reddit
import mathy = 24.019138z = -0.439092print 'using ,scikit-learn
&gt;&gt;&gt; pattern = re.escape('apple.fruit[0]'),regex
b1=[ord(x) for x in l1[i]],string
"plt.xticks([0 , 10 , 20 , 30 , 40 , 50 , 60 , 70 ,",matplotlib
"import numpy as npdef computetf(worddict, doc): tf",tf-idf
"def test_getattr(v0): v1 = ""test1"" v2 = ""test2"" v3",getattr
## x1 x2##0 206 214##1 226 234##2 245 253##3 265 2,pandas
import numpy as npimport matplotlib.pyplot as pltd,numpy
import socket# the public network interfacehost = ,sockets
"text = open('text.txt', encoding='utf-8')lines = [",list-comprehension
df['exr_ln_diff'] = df['exr_ln'].difference(1),pandas
"&gt;&gt;&gt; s = '&lt;link href=""http://www.blabla",regex
class cluster(object): center = none points = [] d,variables
"l=[['a'],[['p','l']]]",list
format_list(items),string
the specified cgi application misbehaved by not re,iis
"data = [inst, degree, major, dates] #converting li",list
random,security
import numpy as np,ubuntu
"dict={0:obj0, 1:obj1, 2:obj2, 3:obj3}",class
def functionthatneedsteam(teamid): team = getteamb,pygame
def convertf2c(f): c = (f - 32) / 1.8 return cnum ,function
conference 1 attendees 2conference 2 attendees 2co,django
1 2 3 4 56 7 8 9 1011 12 13 14 1516 17 18 19 20,text-processing
"10x org il,""[""modiin, israel""]"",""[""no current pric",csv
"date,dur,type2013-10-11,15,ptg2013-10-11,110,pv120",numpy
'jimmy threw his ball through the window.',string
#views.py,django
nicaragua president ends visit to finland .nn(ends,parsing
class proposal(models.model): prop_num = models.in,django
"mylist = ""[{'approver': 'demouser', 'name': 'demo ",json
"a = [1,2,3]b = [3,4,5]answer = [4,6,8]",list
"filename = ""email""mymodule = __import__('actions.'",import
class something(models.model) def exception(self) ,exception
def calculate_intensity_array(): laser1 = zeros((4,c++
select count(*) from ( select distinct imp_diagnos,sql
locations = [] for location in data: filtered_stri,json
"from time import timeprint(""press enter when you s",time
"&lt;a href=""{% url 'admin:old_index' %}""&gt;old in",django
&gt;&gt;&gt; n=4&gt;&gt;&gt; lol=[range(n) for i i,idioms
"while checked == false:for counter in range(1, noo",arrays
"a = is_part(""motherland"", ""land"")",string
picamstringsize_sensorname = picamstringsize_seria,pointers
"cookie = {""sx"": '{""gc"":1,""gsc"":1,""ls"":[{""itn"":""204",json
import swagger_clientclient = swagger_client.apicl,swagger
"df.loc[0] = ['total (2000)', numpy.nan, numpy.nan,",pandas
str,json
import smtplib fromaddr = input('enter your email ,email
string = 'watson represents|watson represents|wats,regex
"str1=""type=gene; loc=scaffold_12875; id=fbgn020741",string
"import pygame,sysfrom pygame.locals import *pygame",variables
list.txt a b c d,combinatorics
sys.stdout,file-io
"shoppinglist = [""banana"",""orange"",""apple""]inventor",function
mongod,database
"2014-05-14,12:16:26,subject,{msgtype=""personal"" na",parsing
def insertion_sort(list): q =0 temp = [] #list to ,sorting
link = 'http://www.bea.gov/industry/xls/io-annual/,pandas
"while true: curr_file = open('myfile',r) lines = c",file
player finish tournament year id------------------,pandas
"getexceeds = open(""1.txt"", ""r"").readlines()[12]out",email
import sqlite3conn = sqlite3.connect('sqlite3.db'),sql
wassup.txt,perl
importerror: no module named backend.libusb10,windows
"'|&lt;completesuggestion&gt;&lt;suggestion data=""(",xml
"import cpickleimport osclass myclass(object): """"""d",caching
march2_march2 2.3 0.1march2_marc2 -0.2 0march2_mar,parsing
"{ ""_id"" : objectid(""54bc38cd02cebca524c4acc6""), ""p",mongodb
row = cur.fetchone() while row is not none:  uniqu,mysql
from gmaps import geocodingapi = geocoding(api_key,mongodb
"import randomimport sysdef play(): print """"""\ ****",loops
computebill,for-loop
"import subprocessloc = ""scselect""srn = ""scselect s",osx
terrain,namespaces
x = 5def func(y = x): return y ** 2&gt;&gt;&gt;pri,function
libtest.sotest.h,c
#add words to this list to include them in the gam,tkinter
"mydic = {'a': [2,3,4,5], 'b': [5,6,7], 'c': [9,10,",dictionary
# coding=utf-8from crypto.cipher import aesfrom cr,encryption
"zfile=zipfile.zipfile(x,""r"")data = zfile.read()zfi",zipfile
class reviewform(forms.modelform): user_name = for,django
"(x,y)",recursion
"traceback (most recent call last): file ""/base/dat",django
"ror = ror + 1""c{0}r{1}"".format(coc, ror) = int(inp",variables
import requestsimport bs4root_url = 'here url to p,parsing
"{ ""status"": ""success"", ""data"": [ { ""notes"": [], ""h",json
"traceback (most recent call last): file ""c:\progra",google-app-engine
class country(models.model): name = models.charfie,django
#!/usr/bin/pythonimport cgiimport mysqldbclass tab,mysql
if len(o)%2: o+='a' #avoid odd-lengthreturn unhexl,numbers
"class emptymap(): """""" emptymap has no slots """""" __",attributes
def init_file(): filename = raw_input('enter save ,sqlite3
len(),list
binary=bin(int(symbol)),binary
file1.csvname type oldcolor length newcolortube1 1,bash
... @app.route('/wanted_delay_response')def delay_,asynchronous
"data matrix = array([[1 2 3],[0 3 5],[1 4 4]]) inf",numpy
"time,location,companyid,metrics,amount2012q1,ak_99",csv
class blog(models.model): name = models.charfield(,django
"#!/usr/bin/pythonimport subprocess,time, timeitfro",linux
input:line_item1 string1line_item2 string2line_ite,list
"file ""c:\tp\python\python34\lib\site-packages\pypl",py++
re,regex
split(' '),regex
[[false] * 26] * 26],list
\u30e6\u30fc\u30ba\u30c9,unicode
self.new_stats[tour] = {}parsed_stats = parse_stat,refactoring
import sqlite3createdb = sqlite3.connect('login.db,sqlite
#creating empty listmovies = []#creating variable ,list
class geo(db.model): entry = db.listproperty(db.ke,google-app-engine
!pip install yapf,ipython-notebook
:::pythonprint('hello world'),markdown
{,loops
myfunc(*iterables),string
"fruit = [ [""apple"", ""round"", ""small"", ""red""],  [""b",list
app=# create table users;error: syntax error at or,postgresql
stat_to_grid_dist = []for a in xrange(99): stat_to,nested-loops
"d = {'ab': 100, 'ac': 200, 'ad': 500}",dictionary
"list1 = [1,2,3,4,5]list2 = list1for i in range(len",list
"f = open(""skins.txt"",'w')for r in range(1,1201): f",file
instances = [classname() for i in range(no_inst)]f,multiprocessing
class product(randomprimaryidmodel): feature1 = mo,django
from itertools import *,numpy
"class setstates: def lm_state1(): global p_lm1, p_",class
def fib2(n): if n == 1 or n == 2: return 1 myarr =,runtime-error
"cleaner('http://www.indeed.com/cmp/akvelon,-inc./j",web-crawler
!!?!,regex
from sys import exitfrom sys import argvfrom rando,variables
'\xf0\x9f\x98\x84 \xf0\x9f\x98\x83 \xf0\x9f\x98\x8,regex
f=sqrt(x**2+y**2) + (2/3) * sqrt(x**2+((5/6)-y)**2,plot
"lambda event: element_click(event, elementinfo[3])",class
"import smtplibfrom_addr = ""...""password = ""...""to_",windows-phone-7
"url(r'^acb/(?p&lt;slug&gt;.*)/$', views.acb.as_vie",django
c:\users\administrator\documents\cfddns\cfddns-mas,windows
"data = [['a','b'],['c','d'], ['e','f']]",list
da$ c0220 -&gt; truedsad458d69 -&gt; false,regex
pyc,dynamic
"import csvname = ""x""score = ""y""with open('some.csv",csv
"shutil.rmtree('/shared/doc') file ""/usr/lib64/pyth",shutil
import urllib2from bs4 import beautifulsoupaddress,unicode
class article(models.model): title = models.charfi,django
class character(object): def __init__(self): self.,list
def createbucket(): while true: c = boto.s3.connec,amazon-s3
"b: references = [a1, a2, a3]",django
&gt;&gt;&gt; def wordlist(text):... input= open(te,list
1324 1322 1323 1326 1327 1328 1329278650 2.15 2.15,pandas
"a,b,c,aa,bb,cc,a bc,aa b,aaa cz,ga l qa,p j asd,n ",regex
import matplotlib.pyplot as pltimport matplotlib.c,recursion
message = ' '.join(line)x = re.findall('^:jtv mode,bots
python pyinstaller.py --onefile script.py,pyinstaller
myclass* myclass::getinstance(){ if(instance==null,c++
"reporthits(playerlist, num)",function
def calculate_total(symbols): maintotalsymbols = [,arrays
"try: f = int(factor) if (factor == 0): print(""no f",if-statement
"x5out[47]: array([[ 0.5, 1. ], [ 0.7, 3. ], [ 1.1,",csv
customerid = efed3a47sensor = dining room motional,mysql
a1,variables
post,python-requests
"import randomplayer_choice = raw_input(""which hand",function
"if filename in filelist: print ""already got file """,csv
"new_list_of_dictionaries = [] b = [{1: 'one', 'sam",list
def isdark(): dark = truedark = isdark()if dark: p,function
"uri website = new uri(""http://venkygcm.appspot.com",json
def has_duplicates(t): for i in t: if i in t.pop(t,list
results = response.json() ,json
import collectionsimport os.pathimport globimport ,dictionary
&lt;input&gt;,html
1 check if the move is valid:2 self.validatedmove ,algorithm
"def mpos(cord): win32api.setcursorpos((x,y))#a bit",winapi
width = 14height = 14import matplotlib.pyplot as p,opencv
seed = {}def search (seed): seed = 0 print (seed)s,function
&lt;type 'exceptions.nameerror'&gt;: name 'self' i,google-app-engine
.aspx,asp.net
numcat1 + numcat2.... = 100,oop
indentationerror: expected an indented block (&lt;,loops
user,flask
2.4,linux
"values = [10.0, 12.0, 14.0, 16.0, 18.0, 20.0]",normalize
socket_send = context.socket(zmq.pub)socket_send.b,zeromq
"a) 10-15 of 25 resultsb) 20-25 of 25 resultsc) 1,2",regex
"match3 = re.sub(""/id=""[0-9]+""/"", ' ', match3)",regex
"def expo_recurs(base, exponent): if exponent == 0:",algorithm
18:67:b0:7c:00:00 - 18:67:b0:7c:ff:ff,bash
print('what do you get when you cross a snowman wi,string
"import datetimefor i in [0,1,2]: print i while dat",datetime
class userorgconnections(models.model): user = mod,django
"cursor.execute('select column1, column2, column3 f",sorting
col1 col2 col3row1 5blue 2green5 whiterow2 white g,r
"my_var = """"""cat, 5, kg dog, 10, kghuman, 50, kg""""""",string
"items = [""alex"", ""bob"", ""charlie"", ""doug"", ""eddie""",list
k,for-loop
"4.5,3.5,u14.5,10.5,u24.5,6,u13.5,10.5,u23.5,10.5,u",forms
import osos.system('pyinstaller main.py')os.remove,cmd
^(?:[\w]\:|\\)(\\[a-za-z_\-\s0-9\.]+)+\&gt;$,regex
for key in e_d: e_d.pop(key),class
"result = [{ ""status"": ""bv"",  ""quarter"": ""2015-1"", ",list
if,if-statement
a = b'\7'op(board).send(a) #this is syntax specifi,arduino
dvar float+ x[]minimize: sum(i in i) c[i] * x[i]su,constraints
elif,if-statement
index,pandas
def prime_program():while true: answer = raw_input,loops
"import numpy as npx = np.array([0, 1, 2, 5, 6, 7, ",numpy
"#!/usr/bin/pythonfrom subprocess import popen, pip",subprocess
"s = ""june 19, 2010""",datetime
"def checkstring(filename, string):input = file(fil",file
"population = [[text1],[text2],[text3],.....[textnu",genetic-algorithm
my_file = open('dna.fa')transcript = my_file.read(,split
"name,time,operationcassandra,2015-10-06t15:07:22.3",csv
class a(object): w='www' def __init__(self): for i,inheritance
"import grab, requests, urllibroot_url = 'https://e",python-requests
import turtlet = turtle.pen,module
argv_tmp = sys.argvsys.argv = []from root import *,import
import sysimport utilimport threadimport socketcla,sockets
mydata = np.normal(what to write in this!)sns.boxp,numpy
from random import randintdef practice(): command ,syntax
thestring = raw_input&gt;&gt;&gt;12345678,string
"plotted_values = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",matplotlib
"def logutb(fl, str):now = datetime.datetime.now() ",regex
def merge(badlist): if len(badlist) == 1:  return ,sorting
make your choice: 1,encryption
2 3 5 6,list
"san francisco, ca",django-models
[],list
shell_start,cmd
"main.py"", line 1278, in post message.body = ""%s %s",google-app-engine
1,list
def search(request): if request.get: form = search,django
3ppptttqpqtqtqttpqpqqqtxtprp,list
"syntaxerror at / invalid syntax (urls.py, line 12)",django
"chi = []def chisqg(ydata,ymod,sd=none):  if sd==no",loops
from pyside.qtgui import *from pyside.qtcore impor,pyside
yyyymmdd hr ariel cat kiki mmax vicky gaolie shiu ,sql
def contar_repetidas(texto): dic={} l=texto.split(,excel
"self.flip = myclass(""flip image"")self.flip.clicked",qt
archivo = open('passwd.txt')for linea in archivo: ,c
"data.loc[:,'weekday'] = data.index.weekday",date
"bins = [(i*bin_width, (i+1)*bin_width) for i in ra",sorting
error: no secret key. create it with:mkdir -p /hom,bash
"with open(file_name, 'ru') as input_file:  result ",list-comprehension
sum_numbers(2)(3)(4)......(n),functional-programming
"curl --cookie-jar /mydir/cookies.tmp -o dev/null """,curl
"""jimmy's home.""",sql
#&gt;seq_1tgctagctagctgatcgtgtcgatcgcaccacannnnnca,perl
annotate,function
gticker='nyse:ibm'import pandas.io.data as webdfg ,pandas
"mystring = ""//command -name two -parent one [...]""",regex
"install_requires=['html2text', 'pystache']",setup.py
from django.db import modelsfrom django.utils impo,django
&lt;html&gt; &lt;head&gt;...&lt;/head&gt; &lt;body,ruby
def register(): form = signupform(request.form) if,flask
458###666###2##111####111or(123)))444###555%%6222%,regex
"quizscores = open(""scores for c1.txt"" , ""r"")readsc",arrays
page_size,sqlalchemy
data_array = np.array(data_list),numpy
"sql = ""insert into info_calc (application, version",sql
$ ipython notebooktraceback (most recent call last,ipython
import urllib2import jsonid = u'asadasd58'if not i,int
import mschapv2import threadingimport binasciiimpo,variables
"a = ['ibm','dell']",dictionary
parch ticket fare cabin embarked 0 0 a/5 21171 7.2,numpy
'a',bioinformatics
collecting requests from https://pypi.python.org/p,pip
&lt;ponggame&gt;:  canvas: rectangle: pos: self.ce,kivy
def register(request): flag = true possible = '012,database
"&lt;field name=""name"" class=""oe_inline"" position=""",openerp
this was return from redisexception in thread thre,linux
"&lt;!doctype html&gt;&lt;html lang=""en""&gt;&lt;hea",html5
"chartnode.addarray(pairs[0], pairs[1], getid())",nameerror
"[[23,34],[43,23]]",list
"sending_mail_listener=$python"" ./rajesh/script.py ",shell
name:number,parsing
"import sysckey = """"clist = []lines = sys.stdin.rea",stdin
trunk.2013.11.13trunk.2013.11.17trunk.2013.12.31tr,regex
{% if order_item.status.ordering &gt;= 60 and is_c,django
"def get_index(self, particle): index = -1 bounds =",pointers
pages = pagepromotion.objects.values('page_url').d,django
"traceback (most recent call last): file ""manage.py",django
import goslategs = goslate.goslate()translate = gs,django
"&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;&lt;ta",xml
unistr= [something::a.b.c][someotherthing::e.f.g],regex
"list_1 = [1,0,0,1,0,0]list_2 = [1,0,1,0,1,0]",list
# test.pyimport threadingimport timeimport randomf,multithreading
from django.db import modelsfrom sorl.thumbnail im,django
from tkinter import *import threading#represents w,multithreading
url = json_api_item['url'],json
class mymodel(models.model): field_a = models.char,django
import randomdef multicaller(x): if x == 0: return,recursion
"user: { ""_id"": .... hats: [{""colour"": ""blue"" }]}",mongodb
{% for post in info %} {{ info.post }} {% i++ %} o,django
"predicted xxx area (nm): 88,0644a 37 2.61 n, 1 12.",regex
heroku pg:psql,django
def left(event): cam1 = 0 cam2 = 0 def render( cam,events
"select favorite.id as favorite_id, favorite.name a",sqlalchemy
"[[1, 2, 2, 1], [2, 1, 1, 2], [1, 1, 2, 2]]",list
user.objects.filter(id__in=users_to_remove).delete,django
"def ondatareceived(bytes, timestamp, address, peer",optimization
def costedit(ncost): ncost = '%.2f'%(ncost*1.25) n,variables
"adi = ""h:/excelfiles/clicks3.csv""k = pandas.read_c",performance
"def twitter_search(twitter_api,q,max_results=200,*",search
"working_file = open('x:/test/test/test_file.csv','",csv
"l1 = [1, 2]",list
"class record(): def __init__(self, **kwargs): for ",sorting
&lt;title&gt;,http
"[22/mar/2016 07:07:44] ""get /store/add/7 http/1.1""",django
"in[600]: np.arange(1,11,1)out[600]: array([ 1, 2, ",numpy
"mycubes = []mycubes.append( vec3(x,y,z) ) # for ea",numpy
failed to parse server's response: expected method,eclipse
datetime.datetime.now(),sqlite3
"&lt;cart&gt; &lt;items&gt; &lt;item id=""1"" /&gt; &",xml
def filecreation(path):  now = time.time()  oneday,logging
next(),generator
textbeingread = f.readline(),io
"def on_change_company(self, cr, uid, ids, company_",openerp
"from pyqt4 import qtgui, qtcore from main_window i",user-interface
t = twitter(...)t.statuses.home_timeline(),twitter
multiprocessing.pool,python-multiprocessing
from threading import threadclass example(thread):,multithreading
syntaxerror: invalid syntax root@collabnet:/home/p,dictionary
"stream = ""carracecowtenhihellocohiwcar ......""",stream
index.py,django
def filtering(a_list): for i in a_list: if re.sear,regex
def perrin(a): if true: #do somethingdef sequence(,function
file1.txt,string
import numpy as np# set up valueskeys = np.array([,arrays
"def makelinelist( fileptr, ptr ): lines = [] while",readline
words = []candidates = {}for line in text:  for wo,list
"land, 3-4,-24,3ocean, 53,4-6,55,6",file-io
"window=tk()window.configure(background=""red"")windo",tkinter
"{'foo': {'bar': {'alpha': [ {'bravo':'charlie'},{'",json
"def __init__(self, items=none): '''post: a heap is",heap
"create table counts (org text, count integer)",sqlite
"precip = precipitation_obs(stid='kfnl', start='201",json
"class card: def __init__(self, inrank, insuit): se",class
127.0.0.1,linux
"s = snippet()s.comm.title = ""jello""s.save()",django
import requests,pydev
import stringioimport numpy as npc = stringio.stri,stringio
nano /usr/local/lib/python2.7/site-packages/sitecu,default
list,list
mytableclass,class
"from operator import itemgetter, attrgetter, metho",list
"@app.route('/', methods=[""get"",""post""])def login()",flask
npm install -g bower gulp cordova ionic tsd@next k,node.js
"for i in range(1,10,1) variable i = 100 / i print ",variables
import wximport wx.lib.agw.aui as auiimport wx.stc,wxpython
"def reversestring(test1): global test2 test2 = """" ",string
client#ofrecords(as an integer)line1ofrecord1line2,list
printer(a),puzzle
"2012021305, 652172012021306, 824182012021307, 7131",datetime
"import csv, sysoutputcsv = open(r""c:\users\out.csv",arrays
from bs4 import beautifulsoup as bsurl = 'http://w,parsing
def raw_disc(make): data_make = pd.dataframe(disc.,sql
syntax error,spynner
"key,languagekeyname1,""nononono _—“%{placeholder}_—",string
"number=int(input(""enter the number""))for n in rang",if-statement
master id,pandas
kept,list
notify_status_change_signal = signal(providing_arg,django
"book = {'key1':'1','key2':'2'}pfile = open(""testfi",file-io
import subprocessfrom flask import flaskapp = flas,flask
if __name__ == '__main__': n = int(input()) #readi,algorithm
import reimport urllib2page=urllib2.urlopen('http:,regex
random,random
..22/05/201422/05/2014022/05/2014..,numpy
"a = [[[3, -4.241], 9][[6, -4.187], 1][[2, -4.215],",sorting
star,arrays
"os.makedirs(""/home/user/newdir"")",permissions
class author(models.model): name = models.charfiel,django
from ast import literal_evalfrom tkinter import *f,file
fonte -&gt; newcodificador -&gt; canal -&gt; newde,command-line
div,beautifulsoup
def testfunction (x): blablblaalbal return c[1],pandas
import itertoolsfor p in itertools.combinations(ra,pandas
"def rmax (ivelocity, itrajectory): rangemax = ((iv",function
a,list
"rows = 4columns = 4square_matrix = [ [0, 0, 0, 0],",matrix
"a = numpy.arange(1,10)b = numpy.fancytricks(a,?)# ",arrays
date|type|zone|value,sqlite3
unicodeencodeerror: 'charmap' codec can't encode c,file-io
"import csvwith open ('mycustomerlist.csv', 'r', en",csv
"class foo(object): def __init__(self, name): self.",magic-methods
csv,linux
"{'total_ex_tax': '11.0000', 'is_deleted': false, '",dictionary
welcome.denied!!!press enter to quit.,passwords
"d1 = {'a': [2, 10], 'b': [-4, 5.5]}",list
import randomimport timefrom random import randran,random
"r.connect(host = 'localhost',port = 28015).repl()",rethinkdb
"prompt = ""&gt; ""print ""welcome to the converter. w",if-statement
"data= [{'week': 'null', 'releasename': 'r2.0', 'ts",excel
/12,regex
"(field){ _rowordinal = ""0"" _frombasetype = ""true"" ",sharepoint
"from random import *def dice1(): print(""+-----+"") ",syntax
"print('good evening sir, i am tippos! please, tell",loops
"_tkinter.tclerror: image ""sixdiamonds.gif"" doesn't",tkinter
"from splinter import browserb=browser()url = ""http",browser
# python code library user interfaceimport sysclas,if-statement
django,django
"&lt;div class=""actions""&gt;{% if user.is_authentic",ajax
"a = np.arange(50).reshape(10,5)idx=np.array([2,4,0",numpy
"def f(a, b): return a + bl = [1, 2, 3]ll = map(f, ",map
typeerror at .............coercing to unicode: nee,django
#* --- papertitle #@ --- authors #year ---- year #,regex
"bands = {'&lt;0.5':[],'0.5-2':[],'2-4':[],'4-6':[]",loops
"def __init__(self, filename): self.df = pd.read_cs",pandas
&gt;&gt;&gt; print int((1.40-.3)/.05)21,rounding
tags.py,django
https://mega.co.nz/#f!xxxxxxxx!xxxxxxxxxxxxxxxxxx-,megaupload
"class test(): def __init__(self, dictionary={}): s",multithreading
/dev/tty/usb0,linux
"&gt;&gt;&gt;ar=[2,4,6,8]&gt;&gt;&gt;2 in artrue",boolean-expression
importerror: no module named 'six',matplotlib
a uhability ae-b-ih-l-ih-t-eeaboard uh-b-oh-r-dabo,regex
"&gt;&gt;&gt; t = template(""my name is {{ person.fi",django
a,csv
"street address, town zip",regex
1.0101E+44,matrix
import unittestdef round_price(price): if abs(pric,math
shutil.copytree,linux
"a = [ [100, 200, 300, 400], [111, 222, 333, 444], ",matrix
pip install gunicorn,django
"s = socket.socket(socket.af_inet, socket.sock_stre",sockets
#-*- coding: utf-8 -*-import imagedef read(ch): re,python-imaging-library
rostopic pub toggle_led std_msgs/empty,subprocess
"id,forname,surname,points",algorithm
"def returnlist(arg=[""abc""]): return arglist1 = ret",default
[finished in 28.0s with exit code -11],pyqt
"turtle.onkeypress(fun, key=none)parameters:fun _—–",turtle-graphics
for payment in cashflow:  npv = 0  for i in range(,loops
import serialimport timeser = serial.serial('/dev/,arduino
"h2_text = d.find_element_by_xpath(""//h2"")listlinke",selenium
vim welcome.py,linux
get 'http://thesite.html',beautifulsoup
"def inpalt(): alt = str(input(""enter altitude abov",validation
"@inproceedings{baz, author={{baz}, {s}. and bar, {",regex
in [79]: print(expected_c)out[79]: 2**(n - 2)*n*(n,math
8=fix.4.2^a9=0126^a35=0^a34=000742599^a49=l3q206n^,regex
"def my_func(*args1, *args2): for i in args1: do st",args
sx = ((min &lt;= x) &amp; (x &lt;= max)).sum() #co,numpy
&gt;&gt;&gt; result = requests.get('http://dotanco,oop
-3.440208377846361e-002 -3.640975490509869e-002 3.,arrays
the.woman.in.black.2012.720p.bluray.x264,file
{{ form }},django
"import os, fnmatchdef find(root, mask): //error fi",file
"[('aag', 'ttc'), ('gat', 'cta'), ('ttg', 'aac'), (",pool
"def forwards(self, orm): the_things = thing.object",database
viewdoesnotexist at / could not import sales.views,django
class class1: def __init__(self): self.dosomething,class
# -*- coding: utf-8 -*-,django
"&lt;html&gt; &lt;head&gt;  &lt;meta http-equiv=""co",django
class testcomponents(unittest.testcase): def __ini,unit-testing
def choices (correct): list=[correct] f=0 cities=c,dictionary
"for result in results: if result[""status""] == ""ok""",json
"import imageim = image.open(""dead_parrot.jpg"") #ca",image-processing
a = 1class b: def __init__(self): self.a = aclass ,oop
"# time t1d1 = pandas.dataframe({""a"": [1,2,3,4], ""b",pandas
"['cat','dog','rabbit']['cat','dog',]['cat']['dog',",arrays
"if self.ehbox.ischecked(): tn.write(""geh,"".encode(",if-statement
"(""tom"",""1""):(""tom"", ""x"", ""r"")(""tom"",""_""):(""matt"", ",dictionary
(1) sort descending based on second element of tup,sorting
import pippip install pandas,pandas
a[start:end],slice
category year group 1983 722 10011983 722 1003 198,pandas
"from pil import imageim = image.open(""image_in.png",ruby
2.02E+11,timestamp
"s1 = ""('element1', 'element2', 'element3')""",string
"def trapezoidal(a, b, deltax, func = none):func = ",replace
fitarray = numpy.array(listoflists)print 'original,arrays
django model class link,django
--amount 100.0 --input_currency _äŒ --output_curre,input
"$ pythonpython 2.7.11 (v2.7.11:6d1b6a68f775, dec 5",matplotlib
import sysimport osimport csvdef writefile(): prin,csv
pd.merge,numpy
disallow,web-crawler
import urllib2import jsonurl = 'http://api.justin.,unicode
#!/usr/bin/env python# -*- coding: utf8 -*-from bs,beautifulsoup
"my_list = ['c1','c2','c3']",list
"regi_ip = db.column(db.string(24), default='???')",flask
"binary,none1,param,none277,2601,54,5570,,25,22471,",arrays
# create and start thread for euclid.q = queue.que,django
"output wire some_net, ",regex
"r = range(1,10)r_squared = []for item in r: print ",c
"from math import sqrtfrom random import randint,sh",chess
arr[:] = []arr = [],list
import urllib.requestimport urllib.parseimport req,http
def bgcalcrgb(img): hist = img.histogram() r=0;g=0,opencv
"with open(oname.text , 'w') as f:",text
print 'some marks are not the same - no match foun,csv
"list1 = [20]print ""list1 = "", listdef change(alist",list
"url = ""location.href='agent_specific_listing.php?s",regex
"s1 = ""12 november 2010 - 1 visitor""s2 = ""6 july 20",ruby
pod,documentation
master_locations,list
my_app manage.py my_app __init__.py models.py view,flask
import osfrom django.conf.global_settings import t,django
"def open_dir(): o_file = subprocess.call([""zenity""",tkinter
"if (array[i][j] == 1 and (i,j) not in app) or (arr",logic
from priorityqueue import priorityqueuepq = priori,priority-queue
"a = ['a','b','c','d']b = ['a','b','c','d']combined",list
"car(skoda,audi)bike(hayabusa)",regex
str(int(l.strip())+1)) # 'l' being a line in the f,casting
"class a(frozenset): def __init__(self, list_id): s",inheritance
"acda(a = %b, ccc= 2r2)",regex
''' (ch) -&gt; chreverse the 'a' to 't' or vice ve,string
david aardsma \ards-mah\david allan aardsma (twitt,web-scraping
def lower_and_remove_spaces(fill_string): ''' func,algorithm
def buildcoder(shift): lettersu=string.ascii_upper,wrapper
"d1 = ""fri, 16 oct 2015 18:06:37 +0530""d2 = ""thu, 1",date
&lt;person&gt; was one of the few &lt;profession&g,regex
"def msort(l1,l2):  new=[] x=0 for item in l1: if l",sorting
"import easyguimsg = ""oh i see m9, choos your diffi",if-statement
"inventory = { 'gold' : [500,50], 'pouch' : ['flint",list
12 (0) 0 4 (0) 38 (3) 0 3 (0) 0 1 (0),string
for,for-loop
"def res(): api = ""http://football-api.com/api/?act",json
from twisted.internet.protocol import factoryfrom ,ios
"def idbuttonclick(self): def column(matrix, i): if",arrays
http://en.wikipedia.org/w/api.php?`action=query&am,url-rewriting
import glob import hashlib files = glob.glob( '*.c,csv
"maledict = {'jason':[(2014, 394),(2013, 350)...], ",dictionary
wizardview,django
from tkinter import *import randomroot=tk()answers,tkinter
"#!/usr/bin/pythonimport realert = raw_input(""copy/",regex
x = 12epsilon = 0.01numguesses = 0low = 0.0high = ,osx
"teams =[]teams.append(team( name=""zebras"" items=[]",xml
"def createprop(fget, fset, fdel): class prop(objec",properties
"from tkinter import tk,menu,top,frame,x,no,both,ye",widget
"0,1,2  -1,0,1 1,2,-1",excel
"['data_el27.dat', 'data.bv256.dat', 'data_bv257.da",regex
0000001435 xyz _Ù? abc0000001438warlaugh _Ù_ç«“,bash
"plist=[[x1,y2,str_1],[x2,y2,str_1],[x3,y3,str_1],[",list
"if ""point_lat-10feet"" &lt;= gps_lat &lt;= ""point_l",gps
"pwok = 0print (""you password must contain lower ca",loops
eval,eval
&gt;&gt;&gt; minimum = int((a + b) - math.fabs(a-b,math
import sysfrom pyqt4.qtgui import *from pyqt4.qtco,progress-bar
curl --proxy-anyauth -p -c cookie -u user:psw -l u,authentication
identify_#,hash
&gt;&gt;&gt;foo = ['abcdefgdfsrf1\tword\tfdsaerg32,regex
"$server= new jsonrpcclient(""http://$serveraddress:",json
"[['5.71666666667', '2.08%', '11.03%', '13.89%'], [",string
"# simplified pseudocodedotlines = [""digraph circui",graphviz
include jsoninclude requestsf = requests.get('http,json
def password(pwd): if len(pwd) &gt;= 10: is_num = ,passwords
value == 3,dictionary
"modelobj = connection.mymodel.find({'t': t, '$or':",mongodb
"f(x, 3*y) * 54 = 64 / (7 * x) + f(2*x, y-6)x + f(2",string
from goose import goosefrom requests import getres,web-crawler
"class player(pygame.sprite.sprite): """"""the player""",image
"def evens(n): evenslst = [] for i in range(1,n+1):",range
"re.match('[ee][tt][hh](\d+)/(\d+)/(\d)', value)",regex
from tkinter import *variable = 1def makesomething,button
a = (1000000000000000000000000),padding
"s = [1,2,3,4]",map
"def separatewordsbycaps(word): """"""this custom temp",string
"def hello(): return ""hello world""",shell
"import randomprint(""hello, what is your name?"")gg ",loops
"def bisect(input, target): mid = len(input)/ 2 if ",recursion
"open(personal, ""personal.txt""); my @pers = &lt;per",facebook
"def rectanglespointmilieu(f,a,b,n): interval = 1.*",math
"template = \"""""" %2s %2s %2s %2s r %2s %2s %2s %2s ",c
"a = raw_input(""do you live in the us or canada?"")i",syntax
1682|scream of stone (schrei aus stein) (1991)|08-,regex
"&lt;a id=""form_week:btn_before"" title=""pr†©cedent""",selenium
"""a@1:100;2:240;...:..""",regex
"class kirurg_gui(qtgui.qwidget, ui_kirurg_widget):",sql
availability_from = cls.query(cls.from == from).or,google-app-engine
options +execcgiaddhandler cgi-script .py,apache
name,django
for loop,for-loop
geometry,tkinter
"def frequence_i_j(s1,s2): fac, fgi, fig, fbd, fad,",string
"from flask import flask, render_templatefrom flask",flask
"import numpy test = numpy.array([9,1,3,4,8,7,2,5,6",numpy
class questions(models.model): name = models.charf,django
[root@localhost daemon]# ls -l ~/boost-pretty-prin,importerror
"def buildview(): value = stringvar() options = [""o",tkinter
"list1 = [('bribe charge'), ('brilliant loss'), ('b",list
team grade cost area size0 man utd 1 52300 5 10451,pandas
str1 = 't**t'str2 = 'tddt'str3 = 'txxt'if str2 == ,regex
#make sure that there is a game listed for them tr,excel
from pygame import *import randomclass sprite: def,pygame
--------------------------------- potentials -----,regex
datadict={}for line in myfile: words = line.strip(,dictionary
"import aimlk = aiml.kernel()#k.learn(""std-startup.",session
"""abc_01.dat"", ""abc_02.dat"", ""abc_03-08.dat"", ""def_",glob
diff2html.py,linux
from tkinter import *class trafficlights: def __in,tkinter
"import requestspassword=""xxxx""username=""sooo27x""fi",html
class tab1 (models.model): id_tab1 = models.autofi,django
"['item','item','item']",list
if self.model_name == 'column': model_objects = mo,django
hello_world,amazon-web-services
start_date,list
if type(model_lines) == 'str': turn into a list us,typechecking
innings: - 1st innings: team: england deliveries: ,dictionary
"-1 0 1 0 , -1 0 0 1",string
date,datetime
"3,4 5\t6 \t 7 8 9",regex
"def twiddle(objfunction, args, init=0.5, tolerance",algorithm
"(regular expression, **python callback function [,",regex
"n = 1000a = np.array ([8,9,0])anew= np.random.rand",numpy
"def replace_all(text, dic): for i, j in dic.iterit",function
"164 168 124 90 42, user1114 156 203 196 225, user2",dictionary
im.filter(imagefilter.blur),image
import shimport uuidimport urllibprint 'ip ....'# ,cron
"class animal(object): def __init__(self, legs=4, a",class
"#!/usr/bin/env pythonimport constantimport sys,dat",debian
name=str(s_name[1])f = open(name+'_'+host+'_error.,file-io
&gt;&gt;&gt; x'content type: tv mini-series\n\n\n ,regex
"lst = [22, 33, 44, 11,33,11]",list
print 'loading'toolbar_width = 40for i in range(to,tkinter
for i in range(len(mixed)): if (len(signal1data.sh,performance
write,exception
import cgiimport wsgiref.handlersfrom google.appen,django
"import mathposition = [0,0]direction = ['+y','-x',",loops
"list1 = [5,10,15,20,25]list2 = [3,6,9,12,15]list3 ",list
emailrows = [] for rowtuple in listofrows: #row lo,join
u'text',unicode
from flask import *from flask.ext.pymongo import p,import
csplit,linux
class x_giolam(osv.osv): _name = 'x_giolam' _descr,openerp
"[&lt;oldsample {u'counter_name': u'cpu_util', u'us",json
"def move_ball_right_down():  global x, y, dx, dy  ",canvas
t,regex
view,django
example@gmail.com,email
50.21.180.100|a.ac 50.21.180.100|a.ac 50.21.180.10,linux
while,while-loop
"if enemy_hull &lt; 1: print (enemy_name + "" breaks",function
from flask import flaskfrom flask import render_te,flask
def pushcomment(request):pk = request.post.get('wr,django
awk '/classic.java/ {print $0}' somefile.log;,linux
import pandas as pdimport matplotlib.pyplot as plt,matplotlib
class payloadsimilarity(pythondefaultsimilarity): ,lucene
"path = ""users/sdb/case_23/scan_1""",path
&gt;&gt;&gt; from bs4 import beautifulsoup as bs&g,html
import commands,linux
"in [65]: header_list = ['mu', 'ars', 'tho'] ...: t",csv
"class myhacks: def __init__(self, sentence): self.",list
"list=[1,2,3,4]a=3 in listif a: print('true')",if-statement
"s = [{'a':1, 'b':2, 'c':3}, {'d':3, 'e':4, 'f':5}]",dictionary
"def roll():roll = 0roll = random.randint(1,6)roll.",tkinter
subprocess.check_output(),syntax
#!/usr/bin/python3.4# import modules for cgi handl,html
"class simpleapp_tk(tkinter.tk): def __init__(self,",user-interface
from tkinter import *import tkmessageboxroot = tk(,debugging
class socio_img (models.model): num_socio = models,django
"intlist = [[1,2,3],[6,5,4],[5,7,9],[6,2,6]]",list
"import xlrdimport osfilename=os.path.join(""c:/"",""d",excel
2013-11-23 01:02:51+0200 [scrapy] debug: enabled e,web-crawler
def __str__(self),class
"class team : def __init__(self): print ""object ins",initialization
i sshed again into the instance and reinstalled pi,django
mylist = [],list
hex= #333399,matplotlib
from tkinter import filedialogfrom gameplay import,text
pil,pillow
from kivy.app import appclass tutorialapp(app): pa,ubuntu-14.04
import maya.cmds as cmdsselobjs = cmds.ls(sl=1)sel,maya
"filename = ""filename.txt""f = open(filename, ""r+"")l",file
54 leu54 leu78 val112 ala78 val,perl
import scrapyfrom scrapy.contrib.spiders import cr,web-crawler
sample_dict = { 'company': { 'employee': { 'name':,dictionary
foo = 'eggs'foo[:1] # the same is foo[0]foo[-1:] #,slice
subject: =?iso-8859-1?q?begr=fc=dfungsschreibe?=n,unicode
pubzeromq.zerr( ctx=nil );skt_pub := zmq_socket(ct,delphi
import randomline = random.choice(keywords)print(',function
import numpy as npimport matplotlib.pyplot as pltl,numpy
imglist1 = glob.glob(os.path.join('c:\users\steve\,numpy
"a=np.array([1,2])b=np.array([1,4])c=[]",arrays
******* pseudocode ******* main_canvas.show() shad,user-interface
class calculator(qobject): finished = pyside.qtcor,qt
def checkformatch(search_str): to_find = re.compil,regex
url-a,regex
"def download_images(img_urls, dest_dir):#html_file",html
"[tree]:1,""asdf""[box]:2,""yuio""[bee]:10,""rtyu""[cup]:",regex
2015-05-27 18:49:49.723 python[9471:500868] applep,tkinter
return,return
"class solution: """""" @param nums: a list of integer",list
index 02000-03-01 4.033332000-06-01 3.933332000-09,pandas
from tkinter import *widget = frame()widget.pack(),button
pyplot,matplotlib
# library importsimport threadingimport socketserv,multithreading
def add_cat(request): form = catform(request.post ,django
nameerror: name 'getscreen' is not defined on line,turtle-graphics
sudo pip install django-debug-toolbar,django
from mpl_toolkits.mplot3d import axes3dimport matp,csv
"import sysimport timebotstring = "" ""#splits senten",list
"import sysimport ostry: tfile = open(""transistions",fsm
"import math, randomname1 = """"name2 = """"strength1 =",function
"a1,b1,c1a2,b2,c2a3,b3,c3a4,b4,c4",csv
assertionerror: invalid dtype determination in get,pandas
"def test(request): test1 = ""true"" test2 = ""true"" i",django
"[[u'\u725b\u8089\u6c64', ([], 0.5355934248407187)]",list
"client = twitter.api(username=""hinakhan@yahoo.com""",twitter
oscserver: keyerror on request from home.gateway:6,socketserver
country = raw_input('what country are you from? '),if-statement
"def pay(cost, selection,): deposit = 0 deficit = c",function
"shape = input(""please enter your choice of shape? ",while-loop
"for k in range(len(energy)): str = ""%12.4e %12.4e ",string
def gradechecker(grade): while true: try: grade = ,function
&gt;&gt;&gt; print df0 2016-04-21dtype: datetime64,pandas
import pygameimport randompygame.init()# create co,pygame
from django.conf.urls import urlfrom polls import ,django
spam/eggs/parrot.pdf,flask
macbook-pro-oleg:avtofarm okorablev$ python3 manag,django
"import osfolderpath = ""c:\users\michaelf\desktop\g",append
"{ ""users"": { ""fredrik"": { ""j1312160092"": { ""data"":",dictionary
2689 3015 worth n1095 9183 worth prep4659 1314 wor,regex
"""""""the question is in the bottom""""""from turtle imp",recursion
"&gt;&gt;&gt; s = ""percent growth""&gt;&gt;&gt; deci",formatting
from script2 import test2model_info = test2()info ,process
"dictionary = { dict1 = {}, dict2 = {} }",rest
"file ""&lt;ipython-input-1-1f00b88d82c9&gt;"", line ",ipython
url(r'^(?p&lt;pk&gt;\d+)(?:/(?p&lt;slug&gt;[\w\d-],regex
#include &lt;unistd.h&gt;#include &lt;stdio.h&gt; ,c
groundtempctext = []groundtempctext.append(min(gro,for-loop
song,ajax
# set local variablesinfeatures = gp.getparametera,gis
localhost:8000/mongonaut/,django
pi@piscan:~ $ ocrmypdf usage: ocrmypdf [-h] [--ver,linux
"printwordlist = ['cat', 'dog', 'rabbit']letterlist",list
myapp- static- myapp- scripts- scripts.js images- ,django
&gt;&gt;&gt;dfname nonecurrency eurassets 0assetsd,csv
"def selectdropdown(self, locator, value): select_b",selenium
"[[1],[2],[3],[4]]i want to make it to:[ [1 0 0 0],",numpy
'a',unicode
"def new_game_board(columns,rows) -&gt; [[str]]: ''",list
c:\backup\backup.bat,batch-file
import zipfilezp=zipfile.zipfile('myzip.zip')print,string
result = somefunction()if result == what_i_need: d,if-statement
"def readswitch(x,y,connn,read): x='create vlan' y=",sqlite3
$a * ($aa - $b),regex
"vx = [(1,2,3),(4,5,6)]vz = [(-1,-2,-3),(-4,-5,-6)]",arrays
from kivy.app import appfrom kivy.lang import buil,json
"[0,0,1,2,3,0] = 3[0,2,1,1] = 2[0,2,1,1,0] = 2",list
"# given&gt;&gt;&gt; d = {'apple': 'red',... 'orang",dictionary
xlsx,ubuntu
#!/usr/bin/env python # -*- coding: utf-8 -*-# ena,html
"&gt;&gt;&gt; v=[1,2,3]&gt;&gt;&gt; f=v&gt;&gt;&gt;",memory
"import re with open (""code.py"", ""r"") as myfile: da",regex
a.json,json
# cgi is to escape html# import cgidef rot13(s): #,string
makepkg -sri pkgbuild (to install package),archlinux
"def createaccount(): username = raw_input(""usernam",sqlite
def sqr(a): time.sleep(1.2) print 'local {}'.forma,multiprocessing
foo(),recursion
"@app.route('/register', methods=['get','post'])def",flask
"def get_public_ip(region, instance_name): # ???",google-compute-engine
"[[1],[1,2],[1,2,3]] # false[[1,2,3],[10,20,30]] # ",list
typeerror: 'dict' object is not callable.,json
from collections import defaultdicte1 = {}e2 = {}e,whitespace
"a = ['5', '2', '3', '4']",list
raspberry pi sofware cnfiguration tool1 expand fil,linux
from django.contrib import adminfrom polls.models ,django
"from datetime import datetime,datedate_str = textd",pandas
def creategst(dictionary): x = int(dictionary['x'],numpy
"qtcore.qobject.connect(self.pushbutton, qtcore.sig",qt
@app.route('/adminlogin')def admin(): return rende,flask
"bashcommand = ""curl -s 'http://download.finance.ya",bash
"import osfrom flask import flask, render_template,",ssh
"name = ""an4_v20g02p75vmst_4""",regex
"&lt;main&gt; &lt;this test=""500""&gt; &lt;that test",xml
/home/cpeasyapache/src/httpd-2.2/docs/conf/httpd.c,linux
"def ham(p,*q): if q: print p+q else: print pham(2)",optional
class classa(object): def main(self): libs = self.,command-line
import tkinter as tkimport tkinter.font as tkfonti,sql
import csv count = 1 with open('ukdata.csv') as cs,csv
&gt;&gt;&gt; import os&gt;&gt;&gt; os.system('clea,osx
state = models.booleanfield(default=false)def swit,django
a='somelongword'for r in a_list and for r in a: if,loops
def setup_virtal_env(package):  try:  subprocess.c,linux
"&lt;content&gt;&lt;article title=""i compute, there",xml
/* frame bytes */static const unsigned char pkt1[1,parsing
"ids,clsz_0.7,clid_0.7zinc04474603,48,45zinc1249654",csv
"[ { ""area_of_interest"": [ ""pharmaceutical"" ],  ""de",json
numpy,arrays
"hwy = [[3, nyc, ny, ['i-40', 'i-30','i-55']],[2, c",list
"a = ""alu02021543 build isr52 [10g dpoe]upstream tr",string
"data = {""method"": 2,""read"": 3} s = socket.socket(s",json
"n = 10for i in range(1,n): p[i,i] = (i/n) + pow((1",floating-point
import psutil as puimport timeclass proc: def __in,sorting
# check to see if element is visible myelement = d,selenium
"l = [1,2,3,4]",syntax
possiblechildset= mxserver.getmxserver().getmboset,jython
a_bid a_ask b_bid b_ask c_bid c_ask d_bid d_ask ..,numpy
"for files in curdir: if re.search(r'.*[.srt]$',fil",regex
"&lt;form action=""/forgetpassword/"" method=""post"" i",html
import subprocessprint _—Èread:_—Èproc = subproces,linux
osint,elasticsearch
"uyavg = np.nanmean(uybvall,0) yerr = np.nanstd(uyb",matplotlib
#!/usr/bin/env pypyimport jsonimport cstringioimpo,profiling
from tkinter import *import randomfirstnum = 0seco,variables
import randomdef gen(): for _ in range(10): i=rand,generator
import pandas as pd def establishadjustmentfactor(,pandas
the text file looks like this : zor:10zor:21bob:30,sorting
name,python-requests
"import subprocesssubprocess.call([""python"", ""myscr",subprocess
http://www.fastfurnishings.com/3-piece-reversible-,regex
"lol = [[1,2,3],[4,2],[5,1,6]]",list
"def file_find(filename, search_path): file_found =",recursion
"a = {(a,b),(c,d)}b = {(b,c),(d,e),(x,y)}",set
"import sqlite3import codecssqlite3.connect(""test.d",sqlite
"html = t.render(context({'matrix': matrix},{'passc",html
"(int, str, datetime, float)",data-processing
"x = np.random.normal(0,4,size=(n,1))print dot(x,x)",numpy
import rpi.gpio as gpioimport timeimport urllibgpi,raspberry-pi
"class articlespider(spider): name=""article""",scrapy
"line 412, in add_family mother_birth_ref = mother.",nonetype
"num=list below  [..... [155, 155, 155],...[100, 10",list
"@deliverables.route('/add', methods=['get', 'post'",flask
"text = ""hello""def reverse_string(text): if len(tex",function
"xworddict=[{""name"":""abc"",""pos"":""1""},{""name"":""ghi"",",sorting
self.options_settings.framepripojeni6 = frame(self,user-interface
"name,age,gender,varsity,gpa,town,statejohn,18,male",csv
"[:, 1]",numpy
weighta,function
"g = lambda a, b, c: sum(a, b, c)print g([4,6,7])",lambda
"a, e, i, o, u",string
for row in ws.iter_rows('a1:c2'): for cell in row:,openpyxl
"import urllib2src=''url=''print ""finding four-lett",url
"from osv import osv, fields class asset_allocation",module
import randomimport timefrom time import sleepoutc,list
# -*- coding: utf-8 -*-import osimport timeimport ,mysql-python
"test = ("""")file_content = ("""")reset = 0import osfi",string
"import randomimport timedef calculat(times): p = """,break
np.trapz,numpy
"my_list = ['foo', 'bar']li = []for i in my_list: l",list
"def get_tl(self,x): self.var_tl = intvar() if x ==",tkinter
subject = 'netherlands music epa'content = 'michae,regex
d,arrays
"from myapp.models import mymodell=['email1@x.com',",django
import tkinterfrom tkinter import *from tkinter im,tkinter
systemerror: cannot compile 'python.h'. perhaps yo,git
"def test_urls(self): routes = [ 'about/', 'archive",django
"cursor.execute(""select id_cliente as 'codigo del c",mysql
"output_file = open('output_results.csv', 'wb')writ",csv
?--------- ? ? ? ? ? tesfile,linux
python makespec.py --help,pyinstaller
"""sat jan 23 08:06:59 pst""",datetime-format
type1 type2 type3hour 0 5 0 131 3 5 52 3 2 113 9 3,pandas
"list1 = ['cat', 'sat', 'on', 'mat', 'xx', 'yy'] ,l",nltk
def showbits(x): return bin(x)[2:].zfill(16)i=5225,bit-manipulation
"def safe_db(foo): def _inner(*args, **kwargs): try",class
"df['new_col'] = zip(df.lat, df.long)",pandas
##numofyears = 0## ask user for the cpicpi = input,while-loop
"&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;&lt;km",performance
"['44 example 1/1', '4 example here 444/13903', '1 ",regex
from selenium import webdriverimport timedriver = ,selenium
"use_input = input(""please write a phrase and i wil",string
&lt;dict&gt; &lt;key&gt;name&lt;/key&gt; &lt;strin,sublimetext3
curl 'http://localhost:2222/foo?bar=1',tornado
set,set
no such file or directory:,json
a,list
"1 2 a ""aaa"" 3 4 a ""aaa"" 5 6 a ""aaa"" 1 2 b ""bbb"" 3 ",bash
value,list
"share_with = u'[{\""text\"":\""leiaorgana@mycompany.o",dictionary
"outputdatafile = open('d:\\files\\input.csv', 'r')",csv
python somefile.py arg,class
"text = ""bbsjsddh www.test.com shduh sudhuhd sjdjsd",regex
#!/usr/bin/pythonimport osimport jsonimport urllib,json
seq = []a = []for i in range(3): a[:] = [] a.appen,list
f2py -c xztrin21.f -m opal_opacity,fortran
form,html
key,sorting
"re.match('.*(\d{2}-\d{2} \d{2}:\d{2})', ""09-22 13:",regex
def stock_stats(i): tmp=[] tmp.append(i+10) yield ,generator
"class greeting(ndb.model): """"""models an individual",google-app-engine
coffeeteamilk,html
"prem_year_map = { 1999: 2, 2000: 85, 2001: 191, 20",list
class publicationsearch(object): def __init__(self,django
&gt;&gt;&gt; class strictlist(list):... def __init,class
"{""a"": {""b"": {""e"": {}, ""f"": {}, ""g"": {""l"": {}, ""m"":",dictionary
"import socket, timefrom threading import threadfro",multithreading
package/ interface.py classall.py,oop
import datetimeimport requestsimport timefrom bs4 ,selenium
debug=true,django
"list = ['i', 'did', 'not', 'enjoy', 'the', 'movie'",list
indentationerror,printing
"[('dim1', ['all', 'all', 'all']), ('dim2', ['100',",list
class enemy(pygame.sprite.sprite):def __init__(sel,sprite
"line = ""2013/12/10@19:48:25""datetime = line.split(",string
class a(object): def function1(self): code def fun,function
"[{""id"":1,""version"":23,""external_id"":""2312"",""url"":""",json
@csrf_exemptdef display_text(request): content =  ,django
time.strptime,encoding
"from tkinter import *english = ['0','1','2','3','4",tkinter
&lt;title&gt; &lt;/title&gt;,regex
id_file = {  'key_1': [ { 'r_1': [ { 'a_1': [ { 'p,dictionary
anorexia nervosa 1 &amp;#22312;&amp;#19987;&amp;#2,sorting
@app.route('/add_to_db')def add_to_db(): email = r,flask
ranks = '23456789tjqka'.split ''suits = 'shdc'.spl,ruby
for example:*key: value1:count value2:count*date1:,sorting
"&lt;a href=""http://www.etf.rs/"" target=""_top""&gt;",regex
from itertools import countx = count(7)y = count(5,lambda
ip:port/this1234,http
"import pygame, sysfrom pygame.locals import *white",pygame
line1 \n line2 \n line3 \n line2 \n line2 \n line ,regex
from tkinter import *import hashlibclass login: de,tkinter
"listy = [[0,10],[11,15],[11,12],[20,30]]",intervals
rowindex = 3sheet = list(csv.reader(open('observer,list
db = sqlalchemy.create_engine('oracle://user:pass@,oracle
index.html,flask
&lt;book_api&gt;&lt;contributor_list&gt;&lt;displa,feedparser
invalid predicate,xpath
num_events,pandas
"x= ([2, 5, 4, 7, ...])",arrays
#!/usr/bin/env pythonclass rnga():  def __init__(s,random
"alist = [8,6,9,2,4]blist = [4,5,6]alist.append(bli",reference
def selectfilecsvtoxml(self): directory = qtgui.qf,pyqt
"best_movies = []for year, subset in data.groupby('",pandas
"import csvdef logged (): print(""you have succesful",function
#!/usr/bin/env python3import requestslogin_data = ,login
substring = 'sdkj',regex
&gt;&gt;&gt; import ctypes as ct&gt;&gt;&gt; class,ctypes
"print(pack('c', b'x0a'))print(pack('c', b'\n'))pri",struct
def lookup(x): print(something)lookup(request)outp,dictionary
def averagescore(): allnames = [] itr = cursor.exe,mysql
import smtplibimport requests#import bs4from lxml ,lxml
"try: save_this_number_file(s)except: print(""could ",exception
import sslimport base64import sysimport urllibimpo,nested-loops
&lt;scheme&gt;://&lt;user&gt;:&lt;password&gt;@&lt,django
"in [123]: filter = np.where(scores[:,:,:,4,:] &gt;",numpy
"a = ""__?22+34-4+__?(2+3)/5+__?3""",regex
local variable 'state' referenced before assignmen,django
"trans.items = {""order_id"":""12222"",""sku"":""pp1"",""nam",google-analytics
indexerror: string index out of range,recursion
"f = open(""path"", 'r')for line in f: match = re.sea",regex
"re.match(r"".*hello.*"", ""\n\nhello\n\n"", re.multili",regex
\?[a-z]{2}[a-z]{2}[0-9]{2}!,regex
"pattern = ""(boy|girl)""line = ""i am a boy""m = re.se",regex
text = request.get.get('q') chars = text.split() f,django
import ospath = r'c:\temp\py\test.txt'f = open ( p,operating-system
re,split
"# program greeting print(""the purpose of this exer",loops
import rpi.gpio as gpioimport timegpio.setwarnings,raspberry-pi
for i in range(10) for j in range(10),version
class a: passclass b: pass ,design-patterns
url = urllib.request.urlopen(link) content = url.r,audio
"l = ['uis006538, uis036621']",string
"welcome=""welcome to the research apa citation mach",eclipse
&lt;http://a&gt; &lt;http://code.google.com/p/ldsp,linux
if request.post: startdate = request.post['startda,django
importlib,compilation
"mylist=[(3, 'a'), (2, 'b'), (4, 'a'), (5, 'c'), (2",sum
import androidimport hashlibimport timename = 0dro,file
'type' object has no attribute '__getitem__',database
from twisted.pair import *,network-programming
"f1 = open(""auditdata.txt"", ""r"")f2 = open(""auditdat",excel
littlelistips.csv:10.187.172.14010.187.172.14110.1,linux
"[['att', 'ttt', 'ttg', 'tgg', 'ggc'], ['tgc', 'gcc",list
"class association(base): a_id = column(biginteger,",sqlalchemy
"&lt;frameset border=""0"" framespacing=""0"" framebord",html
s,string
"&lt;p&gt;&lt;span class=""step_leadin""&gt; and &lt;",html
from tkinter import *class application (frame): de,tkinter
&lt;a&gt;,html
var a = 100;var b = .3;var c = a - (a *.3),math
"(true, false, false)",combinations
"import pygame, sys, os, math, random, timefrom pyg",class
cat examplefile.txt | while read line; do ./apical,api
input.txt,parsing
"for i in range(1,10): number = 1 cleantext = re.su",regex
def pred():  with open('aquaticfoodweb.txt') as in,function
osng = osr.spatialreference ()osng.importfromepsg ,gdal
str_numbers = input ('&gt; ')i=0while i &lt;len(st,string
a,numpy
import pygamefrom itertools import cyclepygame.ini,pygame
baudrate = 115200parity = parity oddstopbits = 2xo,c
x,variables
myfile = open('vystup.txt')c = myfile.read(1),file
"import igraph as ig g=ig.graph.erdos_renyi(10, 0.5",graph
"def snaptogrid(p,w,s): ...",computational-geometry
"traceback (most recent call last):file ""/users/dan",selenium
def write_binary(binary_string):wfile = open('bina,binary
for row in data_file: row = row.strip() row = row.,list
for line in f:line=line.strip()tokens=line.split(),string
details: unexpected error while collecting system ,eclipse
"keep_track = []def recursion(input_string, finding",recursion
file a (there are no headres in this file)agbbhg_t,file
coverage.py,testing
import urllib2import jsonimport csvfrom time impor,api
"p = t_gw.p(sma, m1, m2) #p is a 1d numpy arrayp_li",numpy
from pypdf2 import pdffilereaderf = open('myfile.p,pdf
#!/usr/bin/env pythonimport geoipimport osos.syste,linux
root@ubuntu:/var/www/test1.my/www/cgi-bin# ls -lto,mysql
#include &lt;iostream&gt;#include &lt;cmath&gt;#in,c++
"mb = qtgui.qmessagebox(qtgui.qmessagebox.warning, ",qt
letras,algorithm
detail.html,django
"[&lt;class test1.c at 0x02baf308&gt;, &lt;class te",list
if verificationtype == 4 : # i&amp;e veriftypecoun,syntax-error
employee,class
import cv2.cv as cvdef main(): imgcolor = cv.loadi,opencv
"""someword""",list
"[32114, 32115, 32116, ..., 42123]",ftp
--------------------------------------------------,enthought
"lol=[[1,1,1,1],[4,2,3,[1,3]],[4,5,3,[0,4]]]",list
&gt;&gt;&gt; import smtplib&gt;&gt;&gt; s=smtplib.,email
"traceback (most recent call last): file ""&lt;pyshe",r
"&lt;tbody id=""table""&gt; {% for sku, lid, stk, mrp",html
"def main(): print """"""program computes the value of",for-loop
nameerror: global name 'x' is not defined,function
"function(a,b,c)",function
x**2+y**2 &lt;= 36,math
for filename in filenames:  os.rename(os.path.join,windows
agap2 tcga-bl-a0c8-01a-11r-a10u-07 66.7328agap2 tc,matrix
def test(var1): var1=5a=0test(a)print(a),function
"stdin, stdout, stderr = client.exec_command('ls')p",ssh
grid = []width = 10height = 10x = -widthy = -heigh,list
"k = {'a':[7,2,3],'b':[7,2,7], 'c': [8,9,10]}",list
so_*socket.somaxconnmsg_*sol_*ipproto_*ipport_*ina,sockets
operationalerror: (sqlite3.operationalerror) no su,mysql
bytearray,bytearray
"print myarray.shape, myarray.dtype # returns (yyy,",numpy
http://localhost:8069/web#view_type=form&amp;model,openerp
"print(""what do you wanna do?"")input1 = input()if i",loops
#material 2: task 1 (v1.0)from random import randi,task
"lists = [{'firstname': 'john', 'lastname': 'doe', ",list
"864 | 85 | '[150, 145, 110, 99, 95, -10] | ....",numpy
from tkinter import *import randomroot = tk()root.,button
&gt;&gt;&gt; def loop (i): i+=i if 0&lt;i&lt;20: p,function
(pdb) type( nonoverlaps[-1].end ) &lt;type 'float',performance
"book = open_workbook('test.xls',on_demand=true) it",excel
"if len(user_hash) &gt; 0: with open(log_file, ""w"")",if-statement
"counterdict = [ ['countr0', {0:0,1:0,2:0,3:0,4:0,5",list
"&lt;tr&gt; &lt;td class=""txtxsmall"" align=""right""&",hyperlink
"def getcountry(filename): o = open((filename),'r')",text
"{% if user in event.users.all %} &lt;form action=""",ajax
"list = [1, 2, 4, 5]",list
__lock = threading.lock()def regeneratepopulationd,multithreading
"&gt;1, 2, 3, 4, 5, 6",loops
def access_data(data_file_path): #open/create data,string
"test = ('str1',['1', '2'])for a,b in test: print(a",string
"[nsstring stringwithformat:@""ibeacon major:%@ mino",ios
total_review,dictionary
.... #codefrom ast import literal_evalfrom collect,dictionary
"dems = [""083c15"", ""083c16"", ""083f01"", ""083f02""]dem",list
x = [[ 0.44381946 0.27899923 0.4949196 ] [ 0.84257,numpy
"resultlist = [['twp-883 pass'], ['twp-1080 pass'],",list
"class1.cpp, class1.h, class1.iclass2.cpp, class2.h",c++
response = requests.get(request_url)result = respo,unicode
class entity(pygame.sprite.sprite):def __init__(se,class
key valuekey valuekey valuekey valuekey value...,file
"('http://somewebsite.com', 'somewebsite')('http://",string
"import randomx = car(brand='toyota', model='coroll",object
from beautifulsoup import beautifulsoupfrom bs4 im,beautifulsoup
from cstringio import stringiofrom itertools impor,performance
"def num_not_increasing(l)"""""" number of pairs in l ",list
chosenkeyword,list
glviewwidget,pyqt
start &lt; some 50 words &gt; end //need to work o,regex
def length(x): b = 0 for i in x: b += 1 return b p,string
class mywindow(qtwidgets.qwidget): def __init__(se,qt
widgets date 2/1/16 2/2/16 2/3/16 allname person1 ,pandas
numpy operands could not be broadcast together wit,numpy
"a = [ [1, 2, 3, 4], [5, 6, 7, 8], [9, 8, 1, 2], [6",arrays
&lt;li&gt;&lt;label&gt;the keyword:&lt;/label&gt;&,lxml
"print(""this program will find the nearest palindro",algorithm
"def tempcolor(mintemp=0,maxtemp=32,mincolor=44000,",math
int,matplotlib
reverse for 'post_detail' with arguments '()' and ,django
on_finish(),pyqt
"d={"" 'john'"": ""'car': 2, 'laptop': 4, 'comp': 3"",""",dictionary
int,recursion
django-keyboard-shorcuts,django
qlistwidget,qt
"s=['a','+','b']s1=sprint s1del s1[1]print s1print ",variable-assignment
1 ./run.py2 ./code/util.py3 ./code/__init__.py,import
{{val = customerreview.stars}},django
"def v80(program_1 = '80.24', program_2 = '80.5', p",variables
"a=array([1,4,5,57,45,34])",arrays
"df.ix[1,n/x]",pandas
[u'adidas\nreebok'],unicode
apple: 3fd4orange: 1230banana: 942a...,lookup-tables
import requestsr = requests.get('https://www.cours,json
"sql = """"""create table employee ( first_name char(2",mysql
curl -g -i -x 'get' 'https://us-ny-3.cloud.rac.com,python-requests
&lt;_sre.sre_match object at 0x028a6c28&gt;,regex
self,oop
tar -zxvf file.tar.gz,linux
photo,database
/*this is my comment*/ some more code here...,commenting
"file ""c:\users\jake\skydrive\documents\_jake's doc",set
"movietoactorfile = open('mov2act.pickle', 'w')movi",dictionary
"&lt;div class=""post""&gt;",unit-testing
bigrams = {}line = input ('line: ').split()while l,loops
import sympy as spfro sympy import polyfrom sympy.,sympy
"{u'message': u'request depth (10100) exceeded, lim",amazon-web-services
.so,c
"cur = g.db.execute('select name, id, location, edu",sqlite
import sys# gather our code in a main() functionde,shell
"colour = input(""black or white?"")if colour in [""bl",loops
"import sockets = socket.socket(socket.af_inet, soc",linux
#!/usr/bin/env pythonimport sysfor line in sys.std,hadoop
readable manner,list
"class _node:def __init__(self, value, left=none, r",binary-search-tree
"[[9, 1, 3, 2, 2], [10, 7, 6, 4], [10, 8, 2 ], [10,",list
"message_button = browser.find_element_by_id(""u_0_t",facebook
a= [impossibly large list]a.sort(),sorting
"class_,",class
csv,linux
pandas.dataframe,pandas
name,html
[,regex
python,vector
\n,regex
while,performance
.csv,csv
urllib2,html
list,list
item,variables
none,class
pip,python-module
print,shell
list,return
date,datetime
selenium,selenium
__init__,django
value,list-comprehension
lambda,lambda
list,dictionary
python3,binary
raw_input,command
.csv,csv
python setup.py install,matplotlib
raw_input,input
TRUE,list
python,json
n,html
x,arrays
data,arrays
0,django
p1,numpy
global,function
invalid syntax,windows
d,modulo
"[1,2,3,4,5,6]",list
class,json
text,nonetype
test.py,printing
input,input
for,list
0,slice
a,machine-learning
'b',slice
typeerror: 'int' object is not subscriptable,artificial-intelligence
.py,programming-languages
dict,dictionary
.txt,json
s,regex
__init__.py,import
%,module
a,random
python,recursion
"['one', 'two', 'three', 'four']['five', 'six', 'se",list
views.py,django
in,arrays
urllib2,post
"[1, 2, 3]",recursion
a,regex
key,google-app-engine
query,django
os.system(),linux
"4.5,3.5,u14.5,10.5,u24.5,6,u13.5,10.5,u23.5,10.5,u",arrays
csv,regex
file1.py,csv
x,function
python,command
__str__,class
lambda,lambda
projects,django
list(),string
urllib,string
none,list
__init__,class
datetime,django
x,list
dict,list
valueerror,exception-handling
x,list
random.randint,function
user,django
defaultdict,list
views.py,json
dataframe,numpy
id,pandas
start_date,django
"[1, 2, 3]",string
defaultdict(list),list
1,binary
os.system(),shell
pandas,google-compute-engine
pip,django
str,string
lxml,xpath
n,pandas
__dict__,class
n,excel
indexerror: string index out of range,django
if,if-statement
a,arrays
indexerror: list index out of range,encryption
.py,django
x,list
[,json
float,numpy
r,geometry
"from sys import argvscript, first, second, third =",pyscripter
flask,sqlalchemy
__dict__,dictionary
re.findall(),regex
list index out of range,list
file,readline
1000,sockets
__init__.py,import
|,regex
+,if-statement
.txt,regex
py2exe,installation
datetime,datetime
pip,pypi
typeerror,python-imaging-library
a,datetime
1,sqlite
python manage.py shell,django
\n,xml
if,if-statement
list,list
\n,string
flask,flask
n,algorithm
class,graph
return,list
models.py,mysql
for,for-loop
setup.py,module
\t,ubuntu
test.py,ajax
openpyxl,excel
a,bash
for,for-loop
x,arrays
print,string
numpy,arrays
file,file
openpyxl,excel
numpy.ndarray,arrays
n,for-loop
if,printing
x,scipy
user,django
item,object
python -m simplehttpserver,git
sum,loops
if,mysql
n,animation
data,arrays
x,numpy
csv,csv
if,file
r,r
indexerror: list index out of range,list
eval,variables
re,string
&lt;p&gt;,beautifulsoup
datetime,regex
&lt;p&gt;,html
for,tkinter
re,regex
tkinter,listbox
open(),file-io
if,if-statement
.csv,data-processing
__gt__,object
hello world,virtualenv
regex,regex
n,bitwise-operators
list,design-patterns
x,performance
TRUE,arrays
dict,file
urllib2,http
numpy,numpy
\n,lxml
items,json
xlsx,for-loop
post,design
^,selenium
if,list
file1.txt,file
data.txt,list
count,pyglet
list,list
1,string
json.dump,json
itertools.product,list-comprehension
t,dictionary
matplotlib,osx
css,html
ctypes,ctypes
python,sockets
test.py,subprocess
for,variables
txt,list
n,random
FALSE,list
.csv,list
exit(0),recursion
re.sub,regex
raw_input(),raw-input
hello world,encoding
main(),function
x,pandas
pandas.dataframe,pandas
__init__,django
data,arrays
test,windows
subprocess.popen,command-line
x,arguments
1,formatting
int,list
.py,apache
dict,dictionary
subprocess,subprocess
self,class
dict,django
dataframe,regex
if,numpy
"list = [1,2,3,4]",list
urllib,module
data,json
set,postgresql
import numpy as np,linux
abcd,string
dataframe,dictionary
\n,sockets
b,pandas
numpy,arrays
user,django
__init__,function
1,dictionary
subprocess,regex
sys.argv,bash
x,pandas
d,django
pip install -u selenium,selenium
urllib2,urllib2
setup.py,setup.py
for,list
__dict__,dictionary
self,django
e,exception
name,xml
python manage.py runserver,django
views.py,django
django,django
a,tkinter
__dict__,inheritance
os.system,multithreading
**,django
name,django
numpy,numpy
.txt,json
python,multithreading
user,django
range,design
str,unicode
@,regex
__init__,orm
127.0.0.1,regex
python manage.py runserver,django
python,json
python,html
pandas,dictionary
date,ggplot2
data,list
file,tkinter
.csv,csv
text,xpath
tkinter,tkinter
f,class
list,performance
python,dictionary
out,pandas
setup.py,c++
setup.py,package
user,django
TRUE,regex
"from sys import argvscript, first, second, third =",aptana
class,class
subprocess,bash
user,google-app-engine
csv,csv
n,algorithm
x,loops
user,django
f,numba
__init__,django
a,random
pip install,package
b,enthought
x,numpy
tkinter,osx
photo,django
python manage.py shell,django
for,list
test,class
file1.py,import
date,http
dict,list
datetime,django
subprocess,django
models.py,django
file1,django
x,floating-point
pandas,pandas
python manage.py shell,django
del,list
re,regex
subprocess.popen,user-interface
ssh,ssh
mm-dd-yy,string
yield,debugging
views.py,django
eval,file
df1,pandas
user,django
[^@]+@[^@]+\.[^@]+,regex
matplotlib,matplotlib
sys.argv,linux
sys.argv,arguments
setup.py,pygame
"d = {'a': [4, 2], 'b': [3, 4], 'c': [4, 3], 'd': [",list
python setup.py install,osx
x,django
pandas,plot
subprocess,process
python setup.py install,import
c,c
for,django
dataframe,matplotlib
f(x),class
none,ajax
a,for-loop
python,html
python2.7,pymongo
python,interface
ast,ironpython
*,dictionary
form,django
a,pandas
for,arrays
dataframe,pandas
os.system,linux
n,arrays
subprocess.popen,shell
.py,py2exe
dict,list
dataframes,apache-spark
TRUE,list
python manage.py runserver,django
int(),python-idle
pandas,pandas
n,multithreading
user,django
.txt,regex
python manage.py runserver,django
pandas,pandas
x,function
requests,image
pil,python-imaging-library
np,performance
v,excel
date,django
python manage.py runserver,django
python -m simplehttpserver,node.js
subprocess,subprocess
__init__.py,flask
dict,data-structures
__init__.py,testing
a,pandas
__init__,pygame
re.findall(),regex
__init__,testing
url,wget
"(a,b,c,d)",graph
__init__.py,import
python,command-line-arguments
for,sql
__init__.py,django
api,flask
__str__,class
django,django
if,if-statement
import numpy as np,string
__init__,types
k,list
in,sql
csv,csv
=,styles
list,class
a,list
\n,file-io
flask,flask
csv,urllib2
pip,django
__gt__,reflection
attributeerror,class
x,linux
indexerror: list index out of range,string
&lt;p&gt;,html
__init__.py,function
__init__,wxpython
python manage.py shell,django
a1,excel
.py,software-distribution
TRUE,loops
dataframe,pandas
a.txt,csh
subprocess.popen,pywin32
file.txt,table
def,bash
xlsx,folder
python manage.py runserver,django
datetime,google-app-engine
ctypes,vmware
n,recursion
.py,windows
subprocess,io
django,django
user,database
r,r
x,algorithm
python3,osx
tkinter,multithreading
__init__.py,django
date,json
subprocess.popen,django
hh:mm:ss,tkinter
__init__,django
if,csv
.py,py2exe
global,scope
__add__,operators
bytearray,bytearray
input(),input
django,django
str,xml
list,arrays
c,linux
"(a,b)",algorithm
input,curl
python,mailchimp
defaultdict,dictionary
key:value,list
fasta,dictionary
__dict__,console
x,reflection
photo,sqlalchemy
list,list
regex,regex
tkinter,tkinter
n,button
pip,pip
python setup.py install,windows
id,sqlalchemy
post,django
file,file
models.py,django
data,pandas
models.py,postgresql
pandas,numpy
input,file
set(),hash
df1,pandas
ctypes,c
&lt;ul&gt;,flask
str,string
text,loops
stdin,group-by
text,list-comprehension
date,datetime
index.html,ajax
pandas,spyder
n,numpy
t,list
subprocess,subprocess
dict,dictionary
file.txt,arrays
ctypes,scripting
TRUE,json
ctypes,ctypes
__init__,scrapy
numpy.ndarray,numpy
print,google-spreadsheet
__init__.py,import
dict,json
requests,python-requests
if,validation
for loop,selenium
div,xpath
a,rethinkdb
subprocess.popen,user-interface
datetime,django
while,plot
self,self
python,osx
models.py,django
set,performance
a,numpy
ssh,ssh
pandas,pandas
div,html-parsing
views.py,django
t,numpy
TRUE,reference
l,eval
.txt,regex
urllib2,proxy
dict,json
re,regex
f,arguments
index.py,model-view-controller
csv,csv
matplotlib,image
file,inkscape
models.py,sql
django 1.8,django
abcd,excel
item,list
django,mysql
python manage.py shell,django
dataframe,apache-spark
print,pyqt4
python manage.py runserver,django
__init__,pygame
dataframe,csv
urllib2,list
python setup.py install,graphviz
none,sqlite3
n,map-projections
python,logging
__init__,oop
views.py,django
django,django
f,function
r,matplotlib
command,process
numpy,arrays
pip install mysql-python,mysql
.txt,regex
if,widget
pip,pip
a,object
columnspan,gridview
python setup.py install,blpapi
__add__,c++
urllib2,json
x,numpy
a,equation
input,numpy
result,django
\n,string
none,pandas
item,sqlalchemy
annotate,django
requests,file
dict,csv
.txt,textbox
regex,regex
python,linux
django,django
data,list
numpy,numpy
d,dictionary
user,events
models.py,django
url,twilio
df1,pandas
?,wxpython
@,string-parsing
random,random
if,if-statement
a,arrays
list,string
a,numpy
setup.py,distribution
defaultdict,sorting
re,regex
subprocess.popen,selenium
a,xpath
kmeans,scikit-learn
"d3.json(""/data"", function(error, graph)",json
python manage.py shell,django
TRUE,callback
TRUE,string
requests,flask
[,regex
python,unit-testing
test,try-catch
.py,numpy
models.py,django
runserver,visual-studio-2012
x,matlab
dataframe,dictionary
__init__,class
return,return
txt,cartesian-product
&lt;p&gt;,beautifulsoup
pip install,swig
valueerror,table
n,pandas
pandas,pandas
products,django
numpy,parallel-processing
python setup.py install,windows
view,django
@,string
.doc,django
__init__.py,package
"[""a"", ""b"", ""c"", ""d"", ""e""]",couchdb
subprocess,dictionary
l,math
1,xml
__init__,design-patterns
tkinter.text,performance
id,mysql
item,django
a,html
syntaxerror: invalid syntax,string
200,web-scraping
x,for-loop
d,arrays
views.py,django
python,sockets
python,sqlite
if,function
test,tkinter
subprocess,windows
text,regex
python,windows
django,html
pandas,pandas
raw_input(),string
csv,pandas
tkinter,callback
x,order
for,multiprocessing
r,r
getattr(),iteration
index.html,flask
eval,eval
a,regex
re,regex
.csv,csv
lang,django
str(),lxml
openpyxl,openpyxl
regex,regex
__init__.py,django
ctypes,winapi
numpy,numpy
django,css
tkinter,memory-management
ctypes,module
n,django
tags,amazon-web-services
%,string-formatting
a,numpy
a,numpy
x,matplotlib
python,numpy
typeerror,typeerror
selenium,selenium
df1,pandas
__getitem__,class
round,pandas
url,django
__init__.py,apache
__init__,pyside
subprocess,subprocess
list,list
index.html,django
__init__,django
print,django
user,google-app-engine
global,scope
|,regex
count,pandas
models.py,django
pandas,pandas
&lt;br&gt;,beautifulsoup
for,mechanize
a,numpy
date,django
func,image-processing
.zip,json
.py,model-view-controller
[],artificial-intelligence
FALSE,regex
dictreader,sorting
TRUE,list-comprehension
raw_input,loops
numpy,numpy
id,django
pickle,sql
base64,tkinter
tkinter,matrix
df1,pandas
\n,json
return,generator
zip(),zip
print,class
python.exe,deployment
python,xml
views.py,django
a,element
list,linux
csv,pandas
id,django
datetime,datetime
setup.py,module
python,logging
TRUE,recursion
n,numpy
"import mysqldbdb_mysql=mysqldb.connect(user=...,pa",mysql
re,regex
flask,twitter-bootstrap
python,robotframework
t,matplotlib
file.txt,excel
dataframe,pandas
python -m simplehttpserver,html5
.csv,file
subprocess,bash
file.txt,file
if,if-statement
int,reference
file,django
e,floating-point
&lt;ul&gt;,regex
__dict__,reflection
main(),tkinter
site-packages,documentation
python,assembly
user,django
0,for-loop
"class listnode(object): def __init__(self, item = ",linked-list
"['a','b','c']",list-comprehension
views.py,django
[],recursion
x,matplotlib
"while true:f = open(server,""w"")initchat = str(inpu",windows
configparser,readonly
.csv,matplotlib
a,arrays
name,duplicates
views.py,django
stdin,user-input
r,image
dataframe,pandas
__init__.py,import
sys.argv,bash
3,csv
flask,html
str(),json
dictionary,dictionary
requests,python-requests
ssh,shell
views.py,xml
attributeerror,google-app-engine
subprocess,linux
txt,table
models.py,django
dict,json
runserver,django
+,split
no such file or directory:,django
value,list
[],django
numpy.ndarray,numpy
# -*- coding: utf-8 -*-,windows
views.py,django
for,numpy
requests,rest
map,list
list,list
text,sql
lxml,xml
list,class
models.py,django
typeerror,ruby
sudo,linux
\n,regex
if,list
view,django
django,django
.csv,csv
n,numpy
models.py,django
setup.py,unix
numpy,numpy
n,django
requests,elasticsearch
file,ftp
if,google-app-engine
sklearn,cluster-analysis
models.py,django
url,unicode
dataframe,pandas
__init__.py,django
datetime,pycharm
tkinter,tkinter
.txt,regex
lxml,xml
models.py,database
none,user-interface
dataframe,pandas
none,openshift
TRUE,list
dict,list
a,arrays
python,osx
random,django
tkinter,autocomplete
tkinter,tkinter
user,django
while,while-loop
TRUE,dictionary
dictionary,dictionary
csv,csv
python,helpers
user,flask-sqlalchemy
s1,unicode
value,file
w,string
dataframe,numpy
a,numpy
python 2.7,timeout
keyerror,dictionary
a,datetime
matplotlib,numpy
.so,cython
while,kill
example@gmail.com,django
for,compiler-construction
string,regex
f(n),average
requests,python-requests
python manage.py shell,django
requests,osx
^,algorithm
numpy,performance
pip,import
css,css
input(),pyqt4
n,numpy
file,django
pandas,dictionary
a,linux
dict,wxpython
python,bash
models.py,postgresql
a,oop
n,machine-learning
subprocess.popen,windows
id,mysql
a,correlation
'a',tkinter
n1,pandas
main(),ncurses
raw_input(),shell
python manage.py runserver,django
os.system,system-calls
setup.py,setuptools
x,google-app-engine
python,environment-variables
result,c
user,django
dataframe,pandas
.py,emacs
a,inheritance
setdefault(),dictionary
s,regex
subprocess.popen,subprocess
mongod,mongodb
re.findall,csv
a,command-line-arguments
ctrl+c,osx
windows,linux
requests,proxy
df1,pandas
lxml,unicode
os.system(),gnuplot
list,yacc
open(),file
np.linspace,arrays
file1.txt,csv
subprocess,linux
result,bash
pandas.dataframe,pandas
x,merge
ast,list
post,flask
|,sqlite
subprocess,animation
__init__,tkinter
post,login
test.py,terminal
python manage.py runserver,django
__eq__,dictionary
data,pandas
django_comments,django
runserver,django
dataframe,printing
\n,list
for loop,flask
TRUE,performance
numpy,numpy
&lt;title&gt;,beautifulsoup
s,regex
c,xml
tkinter,image
&lt;br&gt;,lxml
models.py,django
user,flask
list,list
python,camera
python setup.py install,windows
text,tkinter
datetime,date
string,json
tkinter,class
train,pandas
a,text-files
python,osx
x,list
django,sql-server
?,numpy
print,logging
n,setuptools
dict,mongodb
dataframe,dictionary
models.py,django
user,sqlalchemy
user,rest
from numpy import *,numpy
user,django
foo(),generator
id,hierarchy
&lt;a&gt;,beautifulsoup
list,list
datetime,datetime
FALSE,for-loop
__init__,class
df1,pandas
subprocess.popen,subprocess
my_list,list
.txt,file
for,django
url-a,json
int,tuples
post,django
while,multithreading
pandas.dataframe,pandas
int(),hex
views.py,flask
f,oop
csv.reader(),function
none,django
python,mysql
for,for-loop
lxml,xml
user,django
main(),django
int,django
requests,multithreading
x,numpy
matplotlib,matplotlib
pil,python-imaging-library
x,arrays
n,list
query,tkinter
x,numpy
list,dictionary
keys,class
post,templates
qlistwidget,pyqt
"[1, 2, 3]",jinja2
site-packages,virtualenv
if,jinja2
a,probability
a,sqlalchemy
__init__,pyqt4
^,web.py
int,list
python,primes
__eq__,operator-overloading
dataframe,datetime
hello world,sockets
set(),layout
pandas.dataframe,pandas
.txt,dictionary
n,arrays
%,stream
post,django
__getitem__,pyramid
in,pandas
matplotlib,matplotlib
matplotlib,plot
if,if-statement
re.sub,regex
name,json
n,algorithm
string,python-imaging-library
xyz,websocket
&gt;&gt;&gt; right_justify('allen') allen,function
__str__,string
e,matplotlib
lxml,html
1,dictionary
s,if-statement
0,json
tkinter,ruby
post,json
dataframe,pandas
x,debugging
result,django
tkinter,.net
ctypes,c++
x,arrays
data,xml
__init__,django
for loop,for-loop
string,string
views.py,django
none,mysql
x,for-loop
pip,django
nameerror,import
re.findall(),regular-language
file.txt,file-io
'hello',dictionary
"ip-1 = [40, 8, 48, 16, 56, 24, 64, 32, 39, 7, 47, ",list
italic,closures
dictionary,dictionary
invalid syntax,windows
"[1,2,3]",string
nameerror,nameerror
my_list,list
list index out of range,loops
"email,division,department",ruby
1 x2 r3 f4 t: :: :1000 k,bash
typeerror: string indices must be integers,django
return,class
python,linux
super(),django
files.txt,list
next(),iterator
for rgb_code in hexcodes_array:,arrays
__name__,functional-programming
test.txt,bash
matplotlib,matplotlib
for loop,sqlite
shortest(),string
player(),function
core().run(),syntax-error
'hello',string
"from sys import argvscript, first, second, third =",pycharm
mir_seq,perl
data_upload.py,mysql
"{'x1': 2, 'x0': 1, 'x3': 3}",list
test.py,string
syntaxerror: invalid syntax,terminal
defaultdict,json
python,oop
raw_input,keyboard
__init__,class
string,function
crontab,linux
indexerror: list index out of range,list
random.randint,random
robot framework,htmlunit
"[0,0,0,1,1,1,0,0,0,1,1]",list
&lt;p&gt;,html
binary search,algorithm
mod_python,wsgi
python -i,while-loop
input.txt,stdout
&lt;textarea&gt;,html
syntaxerror: invalid syntax,syntax
"[1, 2, 3]",list
views.py,json
self.x,function
if..elif,if-statement
python setup.py install,module
python2.7,debian
matplotlib,loops
sklearn,scikit-learn
getattr(),handler
python,policy-based-design
dictreader,csv
44=100,regex
teaser,regex
django,django
datetime,date
correct,dictionary
for row in reader:,loops
file.read(),list
&gt;node_1_length_211_cov_22.379147catttgctgaagaaa,linux
str.partition(),string
__dict__,class
python manage.py runserver,django
__str__,pydev
__add__,class
string,pandas
* ** ** *,int
tkinter,tkinter
datetime,pandas
list.sort(),sorting
json.dumps,json
time.clock(),for-loop
django,django
setup.py,easygui
result,excel-vba
os.system,linux
python,django
__init__,documentation
ctypes,c
valueerror: dictionary update sequence element #0 ,tkinter
models.py,postgresql
apache,django
ctrl+c,subprocess
pprint,oop
"output wire some_net,",regex
geometry,tkinter
fraction,string
a_list,loops
datetime,datetime-format
index.html,django
valueerror,list
matplotlib,matplotlib
python setup.py install,mp3
__str__,datetime
result,json
__init__,django
python manage.py runserver,django
python manage.py shell,django
requests,curl
indexerror: list index out of range,regex
urllib,url
python,pygame
string,list
matplotlib,graphics
typeerror: 'int' object has no attribute '__getite,attributes
__eq__,class
random,dictionary
__init__,oop
requests,curl
ctypes,c
'hello',tree
os.system(),shell
sklearn,google-compute-engine
requests,xpath
urllib2,csv
indexerror: list index out of range,string
main(),pdf
stopiteration,iteration
zipfile,zipfile
sqlalchemy,sqlalchemy
create,django
python,regex
py2exe,installation
setup.py,pypi
selenium,angularjs
list index out of range,arrays
models.py,django
datetime,list
index(),arrays
setup.py,module
re.findall,pandas
lambda,sorting
matplotlib,matplotlib
while true,api
python,r
@property,django
index.html,twitter-bootstrap
python manage.py runserver,flask
requests,shell
__eq__,object
'hello',encryption
qlistwidget,qt
indexerror: list index out of range,loops
python,class
&lt;br&gt;,regex
__init__.py,html
"(a,b,c,d)",opencv
python,sockets
subprocess,subprocess
datetime,datetime
requests,file-io
test.py,email
pip install mysql-python,install
127.0.0.1,django
products,xml
import requests,osx
urllib2,module
key:value,django
__init__,class
string,json
subprocess.popen,multithreading
python,windows-7
python manage.py runserver,django
models.py,django
test.py,linux
python manage.py shell,django
pandas,pandas
sklearn,pandas
test.txt,shell
dictionary,csv
datetime,pytz
__init__.py,flask
locals(),dictionary
django,django
subprocess,django
python,amazon-web-services
globals(),arguments
datetime,pandas
# -*- coding: utf-8 -*- ,unicode
setup.py,c
__init__,pygtk
matplotlib,numpy
setup.py,installation
function,django
python,sftp
views.py,django
os.system,process
template,mako
numpy.ndarray,c++
django,html
ctrl + c,sockets
# -*- coding: utf-8 -*-,django
subprocess,linux
urllib2,sockets
subprocess,linux
python 3.5.1,django
models.py,html
projects,pip
&lt;p&gt;,html
&lt;new article&gt;take a look at what i found.&lt,file
subprocess,process
indexerror: list index out of range,pygame
main(),loops
subprocess,subprocess
random.randint,list
django,django
python,time
requests,session
&lt;title&gt;,xml
mylist,class
__eq__,reflection
tkinter,tkinter
setup.py,software-distribution
ctrl+c,exception-handling
configparser,configparser
requests,xml
json.dumps,json
django,django
ctypes,c
subprocess.popen,curl
for loop,loops
__init__,decorator
python2.7,mongodb
python2.7,beautifulsoup
__init__,reflection
__init__.py,flask
mod_wsgi,apache
python,list
pd.merge,datetime
py2exe,py2exe
pandas,numpy
index.html,apache
__init__,class
python,exception-handling
result,mysql
__init__.py,unit-testing
valueerror: too many values to unpack (expected 2),file
request.post,django
"[1, 2, 3, 4]",loops
subprocess.popen,unix
indexerror: list index out of range,string
list = [],list
__init__,self
python setup.py install,deep-learning
__dict__,class
python,pointers
mod_wsgi,apache
django,django
valueerror,input
indexerror: list index out of range,list
dataframe,csv
numpy.ndarray,arrays
request.post,django
typeerror,flask
raw_input,json
sorted(),sorting
{{ form }},django
dataframe,apache-spark
import mysqldb,cgi
setup.py,graphviz
pandas,csv
tkinter,list
__init__.py,import
import numpy as np,filesize
attributeerror,sockets
urllib,selenium
__init__.py,django
subprocess.popen,ipython
import random,random
urllib2,html-parsing
datetime,if-statement
python,jvm
file1.py,numpy
nameerror,class
a-za-z0-9,regex
datetime,datetime
__init__,class
sys.stdout,stdin
requests,http-headers
string,regex
isinstance,function
views.py,apache
django,html
__getitem__,apache-spark
python,exe
pandas,pandas
syntaxerror: invalid syntax,compare
pandas,r
main(),sqlalchemy
__init__.py,django
urllib2,unit-testing
dictionary,dictionary
datetime,matplotlib
pandas,csv
"if __name__ == ""__main__"":",windows
python,elasticsearch
python3,pyqt5
template,sqlalchemy
dataframe,pandas
matplotlib,matplotlib
python,django
mod_wsgi,video
test.py,windows
xml.dom.minidom,xml
python setup.py install,regex
datetime,django
tkinter,module
sys.argv,pyinstaller
raw_input,loops
list(),if-statement
urllib,tkinter
subprocess.popen,bash
__str__,class
robot framework,robotframework
__init__,file
setup.py,ipython-notebook
pickle,pyqt
__init__.py,import
__dict__,reflection
sklearn,numpy
views.py,django
lambda,json
"['a','b','c']",arrays
configparser,readonly
&lt;title&gt;,xml
urllib2,html
lambda,user-interface
result,scope
pip install,gcc
sqlalchemy,html
runserver,django
python manage.py runserver,django
global,variables
command,tkinter
&lt;a&gt;,regex
typeerror: 'unicode' object is not callable,get
__init__.py,runtime-error
python setup.py install,ubuntu
datetime,datetime
python 2.7,linux
&lt;ul&gt;,css
__getitem__,numpy
abcdef,append
dataframe,pandas
apache,apache
valueerror,list
for loop,list
pandas.dataframe,pandas
django,django
annotate,django
qlistwidget,pyqt
position,django
'hello',django-models
os.system(),windows
my_list,list
main(),c
subprocess.popen,bash
views.py,postgresql
function,parameter-passing
ifconfig,sockets
models.py,django
sklearn,machine-learning
pandas.dataframe,pandas
python setup.py install,gcc
keyerror,api
"[1,2,3]",list
models.py,django
__init__,recursion
requests,proxy
subprocess.popen,bash
&lt;a&gt;,html
conf.py,django
subprocess,animation
py2exe,exe
option,django
models.py,django
python setup.py install,package
&lt;p&gt;,html
dictionary,list
subprocess,subprocess
{{ form }},django
result,csv
syntaxerror: invalid syntax,syntax
setup.py,setuptools
models.py,django
__init__,sqlalchemy
string,string
__init__.py,django
__init__.py,android
python manage.py runserver,django
main(),constants
lambda,list
valueerror: list.remove(x): x not in list,list
py2exe,tcp
__init__.py,django
__dict__,set
fraction,oop
datetime,matplotlib
return,arrays
django,mysql
employee,django
models.py,django
django,django
python,face-recognition
import requests,python-requests
python,linux
ironpython,ironpython
raw_input,sqlite
"[1,2,3]",numpy
hello,split
__gt__,operator-overloading
index.html,flask
stopiteration,file
return,pyside
subprocess.popen,plot
nameerror,exception-handling
string,python-imaging-library
python setup.py install,importerror
__init__.py,logging
hello,django
0 1 23 4 56 7 8,matrix
python,file
ctypes,c++
views.py,django
&lt;br&gt;,xpath
yield,iterator
"if __name__ == ""__main__"":",module
super(),inheritance
*,syntax
__init__.py,module
.txt,file-io
self,class
[],performance
/* */,comments
python setup.py install,setup.py
a,floating-point
'a',string
a,replace
self,oop
map(),map
super(),multiple-inheritance
date,datetime
str,string
__init__,design-patterns
urllib,urllib2
*,syntax
sys.stdout,stdout
dictionary,dictionary
random.shuffle,list
test,unit-testing
super(),superclass
datetime,module
list,list
setup.py,django
data,json
time.sleep(),multithreading
==,equality
u,unicode
models.py,django
python2.7,ubuntu
TRUE,algorithm
ctypes,c
pip,pip
time.strptime,datetime
__init__,function
dict,dictionary
[],set
json.dump,json
pip,pip
pip,git
l,list
yield,file-io
string.find(),regex
os.system(),linux
models.py,django
requests,ssl
del,python-internals
datetime,datetime
list,algorithm
pip install numpy,install
pip,pip
TRUE,if-statement
requests,urllib2
pandas,r
import module,python-import
flask,flask
temp,cross-platform
for,for-loop
pip,pip
datetime,datetime
__getitem__,inheritance
hello world,string
collections.defaultdict,dictionary
index(),list
pickle,parsing
*,operators
import numpy as np,numpy
getattr(),getattr
global,global-variables
map,numpy
.py,compiler-construction
x,attributes
none,django
len(),algorithm
string,string
popen(),subprocess
subprocess,subprocess
.py,unicode
for,list
test.py,perl
collections.defaultdict,dictionary
pip,pip
datetime,datetime
x,benchmarking
subprocess,subprocess
for,for-loop
print,django
x,if-statement
for,linux
[],operator-overloading
a,list
sys.stdout,console
if,pylint
+,string
__init__.py,initialization
numpy,arrays
models.py,django
python setup.py install,easy-install
print,syntax
n,arrays
lxml,version
numpy,numpy
# -*- coding: utf-8 -*-,encoding
zip(),list
site-packages,python-egg-cache
subprocess.check_output(),linux
dataframe,pandas
__init__.py,module
os.system(),asynchronous
3,datetime
sorted(),sorting
setup.py,distutils
pip install,setuptools
pip,pip
pip,pip
if,optimization
zip(),zip
set,set
sys.stdout,file
os.system,pdf
# -*- coding: utf-8 -*-,file
+,string-concatenation
a,mocking
s1,pandas
csv,pandas
dict,caching
import numpy as np,numpy
set,data-structures
len,memory
numpy,numpy
dict,random
if,syntax
dict,dictionary
"[1,2,3]",matlab
math,module
pip install,pip
python -m simplehttpserver,simplehttpserver
TRUE,arrays
str,algorithm
s,string
if,exception-handling
value,django
pip install,virtualenv
subprocess.popen,shell
data,pandas
python manage.py shell,shell
.txt,nlp
yield,django
range,range
exit(0),exit-code
if,c
dataframe,pandas
numpy,numpy
max(),max
func,parallel-processing
requests,http
__eq__,hash
a,redirect
re,regex
%,syntax
python setup.py install,selenium
__init__.py,global-variables
a,asynchronous
[],list
xml.dom.minidom,xml
python manage.py runserver,django
name,django
sum,design
del,slice
__init__.py,debian
python,shell
elif,keyword
if,control-structure
dict,dictionary
__init__,django
matplotlib,matplotlib
print,printing
pyplot,matplotlib
yield,scala
__str__,json
none,variables
urllib2,urllib2
matplotlib,matplotlib
lxml,install
lxml,jython
TRUE,operating-system
hh:mm:ss,user-interface
ctrl+c,multithreading
dataframe,pandas
a,django
in,pandas
__init__,django
post,amazon-s3
def,anonymous-function
__init__,class
=,coding-style
0,language-agnostic
dict,dictionary
raw_input(),command-line
0,linux
valueerror,math
test.py,flask
d,dictionary
a,list-comprehension
pip install,pip
d,initialization
none,webcam
typeerror: 'str' object does not support item assi,json
any(),functional-programming
subprocess.popen,django
configparser,key-value
n,list
pandas,pandas
dict,attributes
for,c++
__getitem__,super
&lt;a&gt;,html
multiprocessing.pool,parallel-processing
__str__,string
__init__,inheritance
dict,database
a,django
set,sortedset
if,control-flow
d,dictionary
flask,apache
__name__,decorator
map,aptana
exec,metaprogramming
"[1,2,3,4,5,6]",idioms
__init__,class
TRUE,keyword
x,pycharm
subprocess,path
x,performance
__init__.py,import
for,arrays
t,object
dict,dictionary
dataframe,csv
os.listdir(path),hidden-files
python setup.py install,windows
s,string
__init__,coding-style
models.py,django
bytearray,types
global,perl
0,file
raw_input,openfiledialog
setup.py,distutils
set(),list
x,list
pandas,pandas
random.shuffle,random
apt-get install,ubuntu
numpy,numpy
for,for-loop
datetime,datetime
pip,pip
dataframe,pandas
urllib2,file
a = 'hello',string
pip,pip
py2exe,windows
python,xml
d,numpy
a.txt,file-rename
__init__,class
input(),ruby
next(),list
sqlalchemy,session
+,oop
l,c
datetime,string
pip install,pip
input,user-input
pandas.dataframe,dataframe
==,boolean
python manage.py shell,django
numpy,numpy
python,interactive
item,scrapy
int,inheritance
matplotlib,matplotlib
ctrl+c,ipython
super(),inheritance
r,user-interface
subprocess,path
pip,authentication
numpy,numpy
__init__,function
a,algorithm
|,pipe
__init__.py,module
python,wiki
a,class
numpy,math
l,operators
in,syntax
dataframe,pandas
pandas,pandas
setup.py,compiler-construction
setup.py,package
raw_input,windows
dataframe,formatting
python manage.py runserver,django
__init__,new-style-class
subprocess,pipe
matplotlib,matplotlib
matplotlib,oop
next(),generator
csv,list
xml.dom.minidom,xml
print,multithreading
&lt;p&gt;,beautifulsoup
pip,virtualenv
numpy,numpy
setup.py,distutils
zipfile,attributes
for,regex
datetime,datetime
r,windows
dict,string-formatting
__init__,comments
subprocess.call,subprocess
matplotlib,matplotlib
a,sorting
pip,virtualenv
r,r
__init__.py,py.test
__init__.py,module
open(),module
a,numpy
## x1 x2##0 206 214##1 226 234##2 245 253##3 265 2,pandas
item,django
pandas.dataframe,matplotlib
id,integer
post,django
views.py,django
dir(),namespaces
int,numpy
range,range
os.system(),subprocess
x,recursion
setup.py,osx
iter,dictionary
dict,dictionary
if,performance
map,multiprocessing
for,palindrome
setup.py,build
a,numpy
lxml,gcc
sum,numpy
webbrowser,events
x,formatting
string,string
x,unit-testing
site-packages,emacs
datetime,datetime
open(),ruby
runserver,django
__init__,class
1,closures
ctypes,matlab
for,compiler-construction
__dict__,class
list.sort(),search
datetime.datetime.now(),date
eval,segmentation-fault
models.py,django
random.shuffle,list
key,algorithm
date,dictionary
numpy,numpy
a,numpy
django,django
\n,escaping
id,sql
id,keyword
d,dictionary
setup.py,automation
c,c
sqlalchemy,database
k,performance
xml.dom.minidom,xml
str,django
int,sorting
pip,github
datetime,datetime
"[1, 2, 3]",string
setup.py,buildout
keyerror,string-formatting
subprocess,subprocess
int,collections
pip,security
matplotlib,matplotlib
setup.py,google-app-engine
lambda,lambda
re.sub,regex
map(),multiprocessing
id,django
x,matplotlib
or,functional-programming
self,methods
__init__,constructor
url,url
python,function
python,decorator
r,r
c,constants
global,global-variables
ctypes,numpy
none,coding-style
sum,performance
range,common-lisp
import module,import
subprocess,pipe
runserver,django
numpy,multithreading
setup.py,packaging
a,string
.py,import
file1.py,variables
"[1, 2, 3]",arrays
list,list
keyerror,reportlab
open(),url
c,list
raw_input(),input
text,events
file.txt,split
urllib2,real-time
csv,csv
item,django
"[1,2,3]",list
u,string
__init__,memoization
s,pandas
typeerror: cannot concatenate 'str' and 'nonetype',pexpect
py2exe,windows
python manage.py runserver,mysql
"[(x, y) for x in [1,2,3] for y in [3,1,4] if x != ",list-comprehension
pip install numpy,visual-studio
none,memory
len(),instance-methods
.py,unit-testing
pip,packages
0,logic
raw_input(),stdout
test,string
float,language-design
r,r
numpy,numpy
numpy,memory
subprocess,subprocess
ssh,ssh
django-admin,django
a,flask
f,performance
n,optimization
setup.py,dependency-management
text,tkinter
requests,soap
x,apache-spark
sys.argv,encoding
d1,data-structures
ctypes,rust
\n,pep8
id,pandas
matplotlib,matplotlib
lxml,html
__mul__,extend
if,variable-assignment
__init__,class
__init__,hash
pip install mysql-python,ubuntu
__init__,oop
set(),set
l,list
%,string
id,function
list,list
__init__.py,module
data.txt,arrays
def,vim
lambda,lambda
file.write(),performance
pickle,performance
c++,c++
matplotlib,matplotlib
importlib,import
numpy,performance
dataframe,pandas
list.sort(),list
__eq__,hash
urllib2,debugging
dict,dictionary
map(),list
string,time
matplotlib,matplotlib
numpy,arrays
ctrl+c,ide
@property,decorator
raw_input(),time
a,binary
__init__,multiple-inheritance
float,string
a,ruby
*,function
models.py,django
subprocess.popen,multithreading
pip,package
next(),iterator
python setup.py install,cython
__init__,oop
dict,extend
python manage.py shell,django
python,multithreading
lambda,sorting
pip,osx
raise,exception
tkinter,tkinter
matplotlib,numpy
__init__,constructor
re,regex
__init__.py,pickle
flask,flask
pip install,built-in
matplotlib,visualization
.py,runtime
open(),file
dataframe,pandas
zipfile,compression
write,windows
url,django
f,function
w,windows
none,replace
__init__,class
raw_input,keyboard-events
tags,django
list,performance
f,itertools
pickle,serialization
pip install mysql-python,pip
re,regex
tkinter,tkinter
pip,pip
ctypes,winapi
dataframe,terminal
python setup.py install,mechanize
__getitem__,dictionary
python setup.py install,pip
qs,django
dataframes,pandas
np,numpy
while,loops
print,ipython
site-packages,pythonpath
employee,django-models
raise,exception
site-packages,packages
map,perl
dataframe,html
setup.py,cmake
numpy,numpy
f,introspection
a,global-variables
list,merge
a,regex
c,preprocessor
x,arrays
list,performance
globals(),global
pandas,csv
stopiteration,generator
raw_input(),string
dict,json
dataframe,pandas
self,decorator
python setup.py install,python-imaging-library
x,arrays
file,file
for,list-comprehension
@property,properties
setup.py,setuptools
selenium,selenium
mod_wsgi,apache
python setup.py install,debian
subprocess.popen,subprocess
index.html,html
none,django
print,http
dict,inheritance
a,list
print,unicode
matplotlib,matplotlib
models.py,django
datetime,date
set,random
print,logging
subprocess.check_output(),linux
curses,curses
n,algorithm
x,numpy
view,dataframe
l,reduce
for,loops
a,regex
class,inheritance
urllib,string
none,unicode
__init__.py,python-import
ctypes,memory-leaks
pip,pip
python manage.py shell,django
a,arrays
list,list-comprehension
random,random
name,django
pandas.dataframe,group-by
set(),set
dataframe,datetime
set,multithreading
datetime,datetime
str,jinja2
id,string
foo(),conditional
n,pdb
pip,matplotlib
d1,list
range,list-comprehension
setup.py,setuptools
int,c
set,memory-management
if,list-comprehension
field,inheritance
matplotlib,date
^,regex
matplotlib,graphing
conf.py,python-sphinx
raise,warnings
len,escaping
__add__,operator-overloading
.txt,html
none,key
a,algorithm
__init__.py,documentation
datetime,datetime
eval,shell
sqlalchemy,import
setup.py,setuptools
a,list-comprehension
string,rust
float,numpy
python,selenium
global,dictionary
tkinter.text,text
python,bash
file.read(),file-io
list,list
lambda,class
user,django
collections.defaultdict,collections
setup.py,setuptools
a,string
*,python-datamodel
b,oop
setup.py,setuptools
0,algorithm
datetime,datetime
pickle,pickle
python,regex
dict,mysql
abs,arrays
1,list
map,multiprocessing
__init__,yaml
datetime,date-arithmetic
TRUE,list
multiprocessing.pool,multiprocessing
dict,list
httplib.httpconnection,get
subprocess,design-patterns
__init__,class
count,c
none,sql
super(),multiple-inheritance
re,regex
map,map
name,openerp
syntaxerror: invalid syntax,syntax
int(),string
none,numpy
list(),performance
subprocess.call,subprocess
stdin,linux
a,arrays
list,list
foo(),class
datetime,datetime
numpy,numpy
super,inheritance
from numpy import *,numpy
list,algorithm
stdin,subprocess
if,conditional
list,list
python setup.py install,windows-7
open(),unicode
runserver,django
subprocess.popen,command-line
python,windows
\n,windows
python,numpy
template,regex
__init__,properties
python manage.py runserver,django
str,iterable
request.post,django
a,arrays
itertools.product,memory
python,file-io
matplotlib,matplotlib
views.py,django
__init__,pylint
pip,pip
numpy.ndarray,matplotlib
isinstance,dictionary
runserver,django
__init__.py,documentation
python,osx
set,builtin
post,django
configparser,configparser
subprocess,subprocess
m,scipy
__name__,python-module
x,regression
ssh,amazon-ec2
dict,dictionary
for,for-loop
re,regex
mysqldb,mysql
a,numpy
set(),performance
multiprocessing.pool,threadpool
@property,descriptor
file,unix
str,variables
str,codec
__init__.py,module
subprocess.popen,eclipse
data,numpy
pandas.dataframe,csv
mod_wsgi,django
ctypes,c
x,properties
python manage.py runserver,django
df1,pandas
f,tiff
urllib2,urllib2
yield,iterator
dir(),introspection
yield,generator
layout.html,django
dataframe,time-series
n,generator
v,r
==,pep8
==,hash
datetime,django
pickle,pickle
python -m simplehttpserver,osx
dataframe,pandas
open(),django
pip,pip
import mysqldb,mysql
__str__,boost-python
w,arrays
os.system(),multithreading
input,django
int,python-decorators
1,parsing
s,pandas
user,django
if,performance
datetime.datetime.now(),xml
r,numpy
urllib,url
python,eclipse
n,performance
__init__,logging
__init__.py,unit-testing
1,dictionary
b,oop
hello world,postgresql
__init__,class
m,algorithm
a,matlab
__init__,django
id,scrapy
self,self
s,string
del,coding-style
a,numpy
+,operator-overloading
numpy,c
x,c
date,date
models.py,django
__init__,class
self,coroutine
.py,.net
defaultdict,numpy
raw_input(),readline
==,comparison
hello world,file
__init__.py,import
f,function
ast,set
pyplot,matplotlib
.txt,python-sphinx
name,pyqt
sys.argv,flask
str,immutability
setup.py,setuptools
import mysqldb,ubuntu-9.10
a,inheritance
\n,email
numpy,performance
python manage.py runserver,django
set,compare
for,performance
TRUE,google-app-engine
TRUE,if-statement
sudo,deployment
__mul__,class
TRUE,csv
setup.py,setuptools
python,c
a,performance
__init__,3d
if,matplotlib
ctypes,memory-management
int,optimization
&lt;br&gt;,lxml
dict,hash
TRUE,comparison
pandas,dataframe
requests,ssl
if,colors
int,rust
__str__,bit-manipulation
random,random
python,amazon-ec2
subprocess,redirect
u,memory
line1line2line3,file-io
n,numpy
numpy,memory
file,unit-testing
"(r'^login/?$','django.contrib.auth.views.login',{'",django
a,class
pip,scala
yield,yield
pil,image-processing
for,continue
a,arrays
limit,web-services
dict,dictionary
collections.defaultdict,parameters
__add__,sum
m,numpy
def,vim
matplotlib,matplotlib
.py,django
python setup.py install,windows-7
pip,dependencies
n,multithreading
pandas,pandas
test,unit-testing
python manage.py runserver,django
defaultdict,pickle
python setup.py install,mysql
query,sqlalchemy
defaultdict,defaultdict
a,numpy
decimal,money
result,matlab
del,garbage-collection
webbrowser,internet-explorer
random,random
matplotlib,matplotlib
none,csv
datetime,django
none,functional-programming
pandas,json
x,unix
a,numpy
python3,virtualenv
limit,sql
site-packages,setuptools
sudo,linux
create,django
__init__.py,python-import
models.py,django
numpy,arrays
\b,regex
python,compiler-construction
__init__.py,mongodb
pandas.dataframe,pandas
matplotlib,matplotlib
subprocess,multithreading
python manage.py runserver,django
set(),data-structures
subprocess,fork
f,lambda
valueerror,exception
1,serialization
__init__,exception
tkinter,tkinter
__init__,dialog
subprocess,shell
n,optimization
subprocess,process
configparser,design
id,django
urllib2,urllib2
ssh,argparse
test.py,bash
__dict__,ordereddictionary
print,debugging
int,string
python,osx
numpy,numpy
pyplot,matplotlib
a,floating-point
matplotlib,math
list,list
test.py,windows-runtime
ctypes,binding
sudo,usb
ast,abstract-syntax-tree
qlistwidget,user-interface
&lt;a&gt;,beautifulsoup
__init__,arguments
test.py,performance
yield,performance
python,exception-handling
date,date
d,max
dataframe,pandas
self,ruby
setup.py,numpy
views.py,django
test.py,executable
list(),list
dict,pickle
for,for-loop
pickle,pickle
collections.defaultdict,list
python,datetime
re,regex
matplotlib,numpy
d,locale
date,datetime
in,string
pandas,numpy
.py,templates
dict,session
abcdef,regex
setup.py,importerror
float,numpy
dict,dictionary
lambda,ruby
__init__.py,class
0,loops
id,linq
__getitem__,iterator
python2.7,debian
__init__,unit-testing
__init__.py,django
n,math
__add__,matrix
for,time
flask,flask
a,numpy
zip(),list
__init__.py,monkeypatching
print,parameters
# -*- coding: utf-8 -*-,encoding
ast,abstract-syntax-tree
pandas,numpy
configparser,eval
open(),c
numpy,numpy
curses,curses
subprocess,io
a,numpy
len(),list
s,math
numpy,arrays
x,dictionary
post,google-app-engine
matplotlib,colors
ctrl+c,cython
return,input
keyerror,string
csv,encoding
dir(),reflection
data,arrays
.py,list
a,syntax
re.findall,regex
item,set
url,django
keys,dictionary
python,node.js
datetime,datetime
string,documentation
__getitem__,magic-methods
raw_input,string
a,arrays
map,dictionary
test,sql-server
list,identity
e,error-handling
python,osx
a,string
m,numpy
flask,flask
python,image-processing
yield,yield
django-admin,django
python 2.7,text
__getitem__,list
__getitem__,profiling
test.txt,file
data,django
b,numpy
float,sorting
matplotlib,matplotlib
python,json
python manage.py runserver,mysql
globals(),list
subprocess.call,subprocess
setup.py,installation
yield,iterator
in,c
__str__,mysql
text,events
board,numpy
.so,design-patterns
# -*- coding: utf-8 -*-,utf-8
n,cryptography
.txt,regex
x,class
none,exception
x,exception-handling
os.system(),shell
a,list
map,map
__init__.py,model-view-controller
pip,django
pip,osx
&lt;title&gt;,unicode
kwargs,dictionary
+,string
dict,object
__init__.py,import
view,textmate
python 2.7,pandas
numpy,math
sqlalchemy,mysql
df1,pandas
print,copy
map,map
list,list
dict,function-attributes
ctrl+c,osx
map,performance
data,numpy
pickle,serialization
urllib2,urllib2
setup.py,c
*,syntax
super,class
subprocess.popen,subprocess
super(),decorator
x,math
{},vim
urllib2,node.js
|,numpy
random,time
input,ssh
python manage.py shell,django
f,clojure
sklearn,scikit-learn
numpy,arrays
matplotlib,string
user,many-to-many
for,performance
t,multidimensional-array
'a',pandas
crontab,crontab
python,zeromq
exec,eval
list,arrays
x,numpy
dict,dictionary
dataframes,pandas
len(),class
text,elementtree
eval,eval
index,arrays
urllib,download
pil,image
models.py,django
hello world,stdout
id,hash
+,string
n,numpy
pandas.dataframe,pandas
python setup.py install,setup.py
dir(),class
print,flask
l,functional-programming
date,pandas
a,inheritance
sorted(),sorting
v,arrays
__str__,class
dfs,numpy
__init__,python-import
__init__.py,directory
py2exe,windows
data,group-by
FALSE,django
3,linux
setup.py,setup.py
import random,random
syntaxerror,exception-handling
user,database
numpy,arrays
pip,deployment
n,numpy
isinstance,model-view-controller
numpy,numpy
yield,performance
re,regex
datetime,datetime
super,super
x,math
dataframe,pandas
"""%d""",string-formatting
selenium,loops
numpy,performance
print,unicode
tkinter,tkinter
numpy,loops
matplotlib,graphics
[,regex
.py,console
datetime,django
lxml,xml
"[1, 2, 3, 4]",list
dataframe,matplotlib
data,json
pandas.dataframe,matplotlib
TRUE,indexing
pip,egg
os.system(),terminal
sys.argv,argv
file,keyword
raw_input,user-input
prime,string
sync,django
flask,web-frameworks
print,windows
map,functional-programming
\n,flask
len(),generics
python,paster
n,optimization
s,list
set(),numpy
list,list
re,regex
__init__,mocking
__init__,metaclass
numpy,numpy
dict,dictionary
int,list
python manage.py runserver,django
site-packages,naming
python,django
pip,selenium
__init__.py,sqlalchemy
__init__.py,exception
error: python.h: no such file or directory,c
python,osx
pickle,security
os.path.getsize(),linux
requests,beautifulsoup
none,memory
setup.py,gcc
numpy,matrix
c,performance
numpy,search
raw_input(),windows
kwargs,django
models.py,django
subprocess.call,windows
\n,bottle
range,numbers
map(),cloud
TRUE,numpy
selenium,linux
r,pandas
raise,exception
a,string
python manage.py shell,django
m,memory
print,file
a,inheritance
pandas.dataframe,pandas
print,pickle
none,arrays
sys.argv,command-line-arguments
re,regex
if,c
ubuntu,file
f,algorithm
lambda,lambda
ctypes,windows
c,c
sqlalchemy,sqlalchemy
view,r
s,json
setup.py,pip
r,r
subprocess,django
str(),linux
pip,pip
a,numpy
collections.defaultdict,collections
x,path
set,collections
len,csv
os.system(),linux
a,while-loop
raw_input,string
key,list
len,sorting
none,list
post,web-services
dict,dictionary
if,mysql
mod_python,wamp
matplotlib,matplotlib
re,regex
keyerror,exception
numpy,numpy
mysqldb,chat
requests,http
class,eclipse
b,numpy
appcfg.py,google-app-engine
string,bpython
super(),oop
template,image-processing
list,list
x,multithreading
class,cpython
a,numpy
nameerror,closures
numpy,numpy
abcdef,random
numpy.ndarray,numpy
+,function
dataframe,pandas
for,console
__init__,python-internals
datetime,datetime
m,design
f,recursion
views.py,django
datetime.datetime.now(),unit-testing
a,list
pandas,pandas
dataframe,pandas
a,numpy
a,algorithm
math,pycharm
my_list,list
request.post,django
pandas.dataframe,pandas
dataframe,pandas
test.py,exception-handling
del,dictionary
text,tkinter
list.sort(),list
print,oop
string,list
lxml,cpython
urllib2,unicode
.py,compilation
exec,garbage-collection
u,numpy
pandas.dataframe,pandas
view,numpy
subprocess.popen,django
dict,dictionary
n,arrays
open(),for-loop
__name__,class
for,list
typeerror,numpy
__str__,string
in,django
list,list
matplotlib,tkinter
__eq__,debugging
requests,http
subprocess.call,subprocess
view,flask
db.session.commit(),orm
python,subprocess
1,compression
re,regex
pandas.dataframe,numpy
a,numpy
django,package
numpy,import
[],regex
requests,http
key,sorting
n x d,numpy
l,algorithm
subprocess.popen,unit-testing
subprocess,windows
random,largenumber
dataframe,pandas
0,algorithm
py2exe,py2exe
a,time
models.py,google-app-engine
k,indexing
subprocess,bash
in,implementation
1 2 34 5 67 8 9,file-io
numpy,arrays
x,ruby
"lloyd = { ""name"": ""lloyd"", ""homework"": [90.0, 97.0",for-loop
"a=[1,2,3,4,5]",list
numpy,numpy
dictionary,list
a,random
csv,csv
pandas.dataframe,pandas
a,numpy
__mul__,override
python 2.7,cython
subprocess.call,subprocess
n,algorithm
numpy,numpy
&lt;input&gt;,selenium
input,shebang
numpy.ndarray,arrays
global,variables
__init__,django
numpy,algorithm
__eq__,api
setup.py,wxpython
query,google-app-engine
list,polymorphism
strings,c
multiprocessing.pool,multiprocessing
set,set
requests,module
map,syntax
requests,ubuntu
numpy,numpy
1000,algorithm
django,django
python,perl
a,pickle
subprocess,bash
+,parsing
input,unit-testing
pandas,matplotlib
.py,design
dataframe,matplotlib
\b,line-breaks
none,matlab
s,list
debug=true,git
eval,eval
pandas,pandas
sqlalchemy,autocomplete
id,html
k,numpy
pickle,pickle
re.sub,regex
subprocess,error-handling
id,serialization
pandas.dataframe,numpy
test,c
numpy,dictionary
re,regex
or,conditional-statements
dict,structure
time.sleep(),selenium
setup.py,distribution
a,django
os.system,perl
django,django
date,pandas
__init__,object-initializers
+,math
sqlalchemy,postgresql
datetime.datetime.now(),datetime
re,regex
*,numpy
py2exe,logging
x,numpy
defaultdict(list),performance
datetime.datetime.now(),datetime
user,django
numpy,arrays
^,regex
subprocess,linux
self,decorator
indentationerror,vim
list,string
dataframe,pandas
python -m simplehttpserver,ios
&lt;br&gt;,escaping
mod_wsgi,apache
numpy,numpy
TRUE,oop
__dict__,class
class,testing
1,loops
u,sorting
str,class
e,matplotlib
main(),visual-studio
d,regex
==,string
a,introspection
__init__,flask
none,arrays
n,scipy
requests,youtube
pip,vector-graphics
a,arrays
none,json
datetime,datetime
subprocess,pip
len(),numpy
matplotlib,matplotlib
in,postgresql
matplotlib,charts
TRUE,numpy
python2.7,utf-8
datetime,datetime
matplotlib,matplotlib
__init__,oop
c,function
django,django
a,class
setup.py,tox
float,floating-point
__init__,oop
a,view
__init__.py,software-distribution
os.system,exception
list,list
python,matplotlib
create,django
python manage.py runserver,django
list(),flask
decimal,decimal
os.system(),cmd
re.findall,regex
views.py,django
syntaxerror,testing
lxml,lxml
pprint,pretty-print
a,algorithm
id,numpy
or,regex
x,numpy
text,widget
python manage.py shell,django
test,regex
user,flask
subprocess,multithreading
x,numpy
eval,latex
x,lambda
python,html
input(),unit-testing
py2exe,numpy
raise,exception
int,subclassing
__dict__,pygame
int,string
x,loops
__init__.py,c
a,django
python,logging
\b,string
file.write(),file-io
ctrl+c,signals
x,mathematical-optimization
subprocess,process
__init__,file-io
l,for-loop
dict,dictionary
re,regex
[],json
re,string
str,unicode
python,windows
lxml,html
user,django
re.sub,regex
include(),database
del,reference
n,django
dir(),introspection
setup.py,visual-c++
__init__.py,backwards-compatibility
raw_input(),console-application
sales,datetime
matplotlib,numpy
set,set
input,pip
subprocess.popen,multiprocessing
dir(),introspection
x,string
input,selenium
if,list
\b,regex
a,tuples
while,memory
a,list
none,list
u,matlab
x,numpy
id,memory
xml.dom.minidom,xml
dir(),signature
user,sqlalchemy
re,regex
if,performance
n,math
star,numpy
ctypes,linux
collection,inheritance
set,collections
setup.py,py2exe
zip(),integer
while,windows
__getitem__,arrays
random,numpy
r,string
numpy,arrays
python setup.py install,easy-install
match,django
json.dump,json
os.system,subprocess
random.shuffle,random
pandas.dataframe,datetime
python,multithreading
ast,scripting
n,iterator
a,arrays
TRUE,list
bytearray,stream
pandas,parsing
\t,file
pip,pip
raw_input,console
__init__,docstring
runserver,django
python manage.py runserver,django
os.system,performance
r,arrays
__init__,pyqt4
keyerror,unit-testing
fraction,numpy
for,for-loop
dataframe,pandas
urllib2,amazon-web-services
__init__.py,module
float,fft
numpy,numpy
models.py,django
django,django
requests,character-encoding
next(),algorithm
lambda,lambda
none,c
none,itertools
site-packages,matplotlib
%d,string-formatting
if,django
dict,dictionary
r,numpy
data,filter
data,arrays
file,mime-types
"[1, 2, 3, 4]",algorithm
hello,loops
l,list
str(),string
__init__,list
a,numpy
isinstance,overloading
numpy,arrays
setup.py,import
url,google-app-engine
subprocess.popen,subprocess
abcdef,c
apt-get install,progress-bar
id,perl
stdin,linux
for,string
datetime,datetime
float,floating-point
dict,defaultdict
while,loops
n,list
mysqldb,mysql
x,attributes
python,algorithm
text,textbox
multiprocessing.pool,multiprocessing
pip,osx
input(),input
re.sub,regex
k,list-comprehension
self,this
matplotlib,algorithm
numpy,arrays
importlib,dependencies
pandas.dataframe,numpy
f,newline
sys.stdout,io
collections.counter(),counter
a,programming-languages
sqlalchemy,database
pandas,pandas
r,r
&lt;p&gt;,django
out,performance
TRUE,list
numpy,numpy
csv,error-handling
.py,django
time.sleep(),tkinter
setup.py,import
a,numpy
m,numpy
python setup.py install,osx
pil,linux
subprocess,shell
__init__.py,django
python,stata
a,numpy
py2exe,pypy
none,metaclass
end,slice
keyerror,exception
numpy.ndarray,numpy
d,matplotlib
view,winapi
__init__,properties
print,c++
class,beautifulsoup
dict,optimization
__init__.py,django
ifconfig,python-sphinx
setup.py,setuptools
in,list
string,json
super(),metaprogramming
open(),contextmanager
n,regex
pip,parsing
python,cassandra
data,numpy
yield,recursion
&lt;a&gt;,xml
file,string
a,numpy
none,timezone
\n,yaml
f,function
a,performance
\n,line-endings
setup.py,pip
python,linux
datetime,mysql
sys.argv,command-line-arguments
pandas,pandas
defaultdict,multithreading
data,django
n,algorithm
numpy,numpy
s,regex
TRUE,pandas
s,object
__str__,pygtk
int,optimization
python,design-patterns
numpy,arrays
python,profile
python,windows
subprocess,stdout
&lt;p&gt;,xpath
\n,python-requests
dataframe,pandas
pandas,plot
n,math
n,numpy
print,c
requests,excel
__init__.py,module
a-za-z0-9,regex
a,console
hello world,frameworks
l,debugging
open(),windows
1,celery
int,arrays
python,zeromq
python manage.py runserver,mysql
__init__,class
numpy,numpy
numpy,arrays
a,algorithm
pandas,statistics
x,numpy
urllib,dictionary
__init__,coding-style
numpy,numpy
ctrl+c,signals
a,inheritance
input,io
n,performance
__init__.py,pyramid
a,numpy
requests,base64
"[1, 2, 3, 4]",list
__dict__,namedtuple
a1,numpy
__dict__,django
defaultdict,multiprocessing
n,algorithm
or,ios
lxml,xml
in,pandas
django,django
c,numpy
datetime.datetime.now(),datetime
git push heroku master,django
none,boolean
user,django
x,operators
a,class
a,if-statement
a,numpy
datetime,datetime
django,django
lambda,lambda
test.txt,osx
mod_wsgi,apache
eval,eval
requests,inheritance
none,mysql
a=1,arrays
dataframe,date
dataframe,performance
pandas,numpy
yield,generator
pandas.dataframe,pandas
file1,bash
dict,urlencode
n,file
len(),big-o
numpy,algorithm
0,algorithm
for,dictionary
raw_input(),ncurses
dict,memory
mysqldb,mysql
readlines(),string
key,sorting
raw_input(),osx
zipfile,zipfile
\n,performance
datetime,django
c++,c++
list(),numpy
from django.db import modelsclass poll(models.mode,django
x,numpy
x,boolean
a,algorithm
lxml,xml
__init__,function
subprocess.call,multithreading
setup.py,svn
in,sqlite
item,for-loop
print,django
\n,list
**,operators
python,dictionary
x,matplotlib
numpy,numpy
[],list-comprehension
a,arrays
*,windows
x,numpy
numpy,numpy
numpy,arrays
python,multiprocessing
int,integer
python,elasticsearch
numpy,arrays
matplotlib,matplotlib
yield,yield
@property,django
TRUE,equals
__init__,constructor
if,c
math,fractions
a,list
int,int
re.findall(),regex
test.py,cython
__init__.py,import
setup.py,svn
0,memory
python setup.py install,cython
a,attributeerror
a,numpy
__init__.py,setuptools
n,c
foo(),decorator
python setup.py install,distutils
m,sympy
pd.dataframe,pandas
a,numpy
if,performance
"if __name__ == ""__main__"":",module
set,data-structures
urllib2,multithreading
x,list
json.loads,mysql
a,list
n,regex
raw_input,newline
py2exe,py2exe
import numpy as np,math
super(),multiple-inheritance
sys.stdout,readline
numpy,integer
pandas,matplotlib
df1,pandas
typeerror,list
0,numpy
setup.py,numpy
s,regex
__init__,metaprogramming
[],html
lambda,functional-programming
.txt,file
xml.dom.minidom,xml
python,user-interface
0,r
text,text
__str__,oop
n,bash
any(),iterable
__init__,methods
create,sqlite
__str__,function
a,numpy
a,iterable-unpacking
a,html
numpy,numpy
post,django
locals(),locals
python,multithreading
subprocess,printing
python 3,list
__init__,class
*,arrays
list(),performance
__init__,class
print,function
&lt;br&gt;,html
data,pandas
openpyxl,openpyxl
numpy,numpy
u,file
my_list,sorting
subprocess,popen
setup.py,virtualenv
s1,algorithm
name,web-applications
r,r
mm/dd/yyyy,sqlite
none,function
debug=true,django
setup.py,unit-testing
.py,django
eval,mapping
# -*- coding: utf-8 -*-,string
collection,mongodb
isinstance,design-patterns
t,arrays
re.sub,regex
numpy,numpy
list,list
__getitem__,iterator
s,string
&lt;br&gt;,beautifulsoup
n,arrays
a,numpy
python,windows
gsub,regex
open(),linux
__eq__,equality
selenium,selenium
sqlalchemy,sql
x,django
__init__.py,google-app-engine
subprocess.popen,subprocess
a,arrays
c,c
__init__.py,namespaces
subprocess,windows
0,matplotlib
django,django
list,list
models.py,django
os.system,linux
id,django
int,ctypes
"(x,y)",numpy
main(),twisted
items,django
tkinter,sockets
requests,python-requests
__init__.py,django
python,ienumerable
__name__,function
TRUE,collections
__init__,init
pip,pip
random,random
class,list
from numpy import *,string
function,functional-programming
__init__.py,signals
raw_input,list
[::-1],list
__init__.py,namespaces
datetime,date
x,numpy
__init__.py,flask
**,numpy
__init__,attributes
x,arrays
numpy,numpy
a,numpy
tkinter,tkinter
while true,signals
index,indexing
numpy,arrays
configparser,windows
__init__,tornado
pandas,pandas
pandas.dataframe,excel
f(x),numpy
map,map
name,sqlalchemy
name,django
eval,arguments
runserver,django
multiprocessing.pool,multiprocessing
c,class
.py,config
pandas,pandas
dict,map
c++,c++
yield,clojure
len(),tkinter
decimal,numbers
text,sqlalchemy
dict,django
decimal,format
pip,windows
TRUE,list
matplotlib,linux
temp.py,namespaces
setup.py,numpy
test,windows
csv,csv
models.py,django
conf.py,themes
float,floating-point
#NAME?,virtualenv
f,decorator
"&lt;meta http-equiv=""content-type"" content=""text/h",sqlite
curses,linux
k,algorithm
range,iterator
in,list
ans,matlab
in,sparql
map,ide
l,list
matplotlib,matplotlib
datetime.datetime.now(),yaml
a,if-statement
n,algorithm
# -*- coding: utf-8 -*-,django
df1,pandas
views.py,django
int,types
index,list
print,io
for,dictionary
json.loads,json
.txt,path
test.txt,bash
dataframe,pandas
stdin,eclipse
yield,list
crontab,django
subprocess,multithreading
python manage.py runserver,django
print,django
a,arrays
abcd,string
x,numpy
python manage.py runserver,django
views.py,mysql
.vimrc,vim
id,methods
random,random
list = [],read-eval-print-loop
numpy,arrays
super,multiple-inheritance
if,twisted
break,loops
id,sqlite
user,google-app-engine
for,numpy
subprocess,bash
raw_input(),raw-input
__init__,reflection
setup.py,operating-system
models.py,mysql
dict,algorithm
text,types
re,regex
n,algorithm
__getitem__,introspection
"l = [1,2,3,4]",list
self,idioms
c,stdout
a,numpy
for,list
data,numpy
*,busyindicator
none,tuples
__dict__,attributes
"if __name__ == ""__main__"":",multiprocessing
yield,generator
defaultdict,defaultdict
c,numpy
random,unit-testing
setup.py,integration-testing
dataframe,pandas
matplotlib,matplotlib
shutil.copytree,windows
python setup.py install,packaging
sklearn,scikit-learn
requests,asp.net
python,file
set,memory
test.py,ajax
requests,parsing
dict,loops
urllib2,urllib2
test,module
id,uuid
raw_input(),bash
subprocess,shell
pip,security
user,django
__init__.py,environment-variables
numpy,numpy
set,dictionary
correct,refactoring
x,numpy
eval,eval
views.py,django
multiprocessing.pool,multiprocessing
string,dictionary
views.py,django
subprocess.popen,command-line
b,numpy
nameerror,exception
len,string
numpy,numpy
re.findall,regex
subprocess.popen,command
map(),list
pip,git
yield,multithreading
python,matplotlib
python,pyside
none,dictionary
a,unit-testing
dict,set
__eq__,list
list,numpy
list,list
exec,unicode
f,coding-style
n,arrays
text,oop
m,numpy
names,pandas
a,arrays
dataframe,list
x,coding-style
numpy,arrays
numpy,arrays
a,algorithm
str,string
main(),web-services
in,time
func,multithreading
x,c
float,numpy
n,arrays
t,multithreading
div,beautifulsoup
__init__.py,namespaces
map,map
shutil.copytree,file
class,lxml
sqlalchemy,list
datetime,datetime
test.txt,string
set,set
user,django
str(),unicode
self,initialization
setup.py,setuptools
dataframe,apache-spark
list,list
syntaxerror: invalid syntax,syntax
x,json
kwargs,kwargs
__dict__,json
pandas,csv
*,emacs
python,messaging
matplotlib,matplotlib
d,dictionary
%,html
dict,json
django,mysql
range,naming-conventions
views.py,django
n,regex
numpy,numpy
x,string
x,math
function,c++
attributeerror,language-agnostic
int(),syntax-highlighting
list,list
os.system,operating-system
tkinter,tkinter
__mul__,class
def,django
b,pandas
python,linux
main(),fabric
none,yaml
numpy.fromfile,numpy
data,excel
x,numpy
locals(),django
numpy.ndarray,multidimensional-array
.py,windows
while,r
subprocess,postgresql
result,unit-testing
dataframe,pandas
dataframes,indexing
0,google-app-engine
numpy,numpy
data,performance
__init__,class
a,dataframe
datetime,django
python,windows
+,regex
numpy,numpy
x,statistics
models.py,django
datetime,datetime
re,regex
python,arrays
x,numpy
x,numpy
f,scikit-learn
r,parallel-processing
query,flask
len,size
function,multithreading
python2.7,google-app-engine
pandas,csv
include(),include
dataframe,terminal
a,pip
numpy,numpy
&lt;br&gt;,pyramid
selenium,selenium
setup.py,dbus
syntaxerror,class
user,django
none,lxml
12,cidr
a,algorithm
round,matlab
float,numpy
re.sub,replace
string,escaping
for,image
.csv,csv
dataframe,numpy
a,list
.zip,compression
__init__,init
x,math
numpy,arrays
debug=true,django
locals(),cpython
pandas,pandas
1,multiprocessing
__init__,class
x,multithreading
for,sql
name,numpy
int,cryptography
foo(),multithreading
tkinter,tkinter
self,google-app-engine
subprocess,background
"import numpy as npa = np.array([0, 10, 20])b = np.",arrays
python.exe,cmd
b,pandas
pandas,pandas
sys.argv,windows
python,node.js
isinstance,arrays
getattr(),globals
collections.defaultdict,lua
dict,dictionary
n,varargs
matplotlib,algorithm
a,lambda
int,metaclass
m,arrays
len(),python-internals
c,methods
@property,properties
if,algorithm
v,sorting
result,csv
n,list
subprocess.popen,bash
n,algorithm
c,ternary-operator
dir(),attributes
pandas,pandas
py2exe,osx
\n,regex
python -m simplehttpserver,simplehttpserver
matplotlib,matplotlib
user,google-app-engine
value,qt
pil,image
a,numpy
pickle,serialization
n,generator
re,regex
if..elif,events
while true,loops
id,html
ssh,process
data.txt,html
a,statsmodels
webbrowser,tabs
matplotlib,matplotlib
pip,virtualenv
numpy,arrays
css,web-scraping
tkinter,button
a,tuples
r,rawstring
python,unit-testing
user,django
for,for-loop
pip,pip
self,naming-conventions
a,arrays
pandas,pandas
re.sub,regex
d,numpy
ast,abstract-syntax-tree
user,sqlalchemy
n,list
r,r
attributeerror,statistics
a,class
list,list
def,flask
map,function
subprocess.popen,shell
itertools.product,itertools
a,arrays
function,unit-testing
python,serialization
pip,django
xml.dom.minidom,xml
numpy,arrays
python -m simplehttpserver,osx
a,join
regex,regex
|,jinja2
a,numpy
x,list
x,numpy
urllib,urllib
__init__,scrapy
dict,dictionary
re,regex
"from sys import argvscript, first, second, third =",terminology
pip install mysql-python,mysql
x,string
\n,string
math,module
test.py,debugging
@,design-patterns
itertools.product,ruby
pandas,pandas
a,numpy
ctypes,ctypes
python,kdb
none,ipython
# -*- coding: utf-8 -*-,unicode
a,tkinter
zipfile,kml
python2.7,django
f,class
int,int
eval,types
csv,csv
test.py,matlab
datetime,timezone
set(),list
re,regex
d,arrays
openpyxl,excel
a,numpy
subprocess,django
pip,google-app-engine
for,django
__init__.py,module
str,list
matplotlib,matplotlib
django,django
r,api
x,statistics
pandas,pandas
sys.stdout,osx
pip,pip
datetime,datetime
setup.py,distutils
id,pandas
1,string
[,random
os.system,windows
matplotlib,ipython-notebook
x,string
in,regex
for,for-loop
x,arrays
self,vim
datetime,csv
__dict__,dictionary
k,arrays
python setup.py install,google-app-engine
x,list
__mul__,operator-overloading
for,csv
matplotlib,matplotlib
t,arrays
x,numpy
matplotlib,matplotlib
list(),performance
__init__.py,syntax
datetime,datetime
urllib2,urllib2
nameerror,list-comprehension
"[1, 2, 3, 4]",list
kwargs,kwargs
ctypes,c
__init__.py,module
start_date,datetime
keyerror,dictionary
isinstance,types
setup.py,string
dataframe,dictionary
__init__.py,python-import
lambda,closures
python setup.py install,module
__init__.py,packages
matplotlib,ubuntu
getattr(),getattr
datetime.datetime.now(),postgresql
__dict__,introspection
pip install,numpy
setup.py,django
defaultdict,dictionary
__init__,override
readlines(),readlines
__init__.py,pydev
datetime,datetime
__init__,c
django,virtualenv
getattr(),class
datetime,datetime
function,class
input(),eval
__init__.py,initialization
models.py,django
pip install,osx
__eq__,json
setup.py,packaging
dataframe,pandas
__init__.py,module
__init__.py,distutils
python.exe,windows
__init__.py,python-import
import module,python-import
file_1.txt,django
time.sleep(),multithreading
matplotlib,ipython
syntaxerror,pip
"(key, value)",parsing
sklearn,partitioning
__init__,django
pip install,pip
return,c
json.dumps,json
typeerror,class
__getitem__,list
python,linux
pip install,pip
__init__,multiple-inheritance
__init__,unit-testing
pandas,matplotlib
python,python-imaging-library
__init__,class
for loop,printing
main(),flask
pandas,pandas
__str__,string
__eq__,operator-overloading
python setup.py install,setuptools
main(),list
requests,cookies
__init__,initialization
__name__,unit-testing
matplotlib,matplotlib
python,pandas
ctypes,numpy
__init__,class
urllib2,file
__init__,design
collections.defaultdict,dictionary
random,module
lambda,iterator
syntaxerror,list-comprehension
pyplot,matplotlib
import math,math
__init__.py,continuous-integration
popen(),path
requests,python-requests
__eq__,python-internals
super(),django
datetime,pandas
re.sub,regex
typeerror,csv
typeerror,typeerror
pip install gunicorn,django
__init__,oop
models.py,flask
pd.dataframe,pandas
stopiteration,generator
python manage.py runserver,django
__init__,design-patterns
__eq__,comparison
192.168.1.1,networking
__init__.py,import
__init__.py,module
locals(),string-formatting
ctypes,c
subprocess.popen,signals
"(key, value)",dictionary
datetime,parsing
datetime,timestamp
open(),ruby
__init__,class
python,fibonacci
python,c
django,database
subprocess,subprocess
nameerror: name 'c' is not defined,class
subprocess.call,subprocess
matplotlib,matplotlib
python setup.py install,google-app-engine
python 2.7,performance
os.system(),operating-system
__init__,constructor
__dict__,sqlalchemy
__init__.py,import
attributeerror,exception
datetime.datetime.now(),django
file.txt,split
sorted(),list
bytearray,bytearray
nameerror,namespaces
dataframe,pandas
result,xml
__init__,coding-style
from datetime import datetime,django
requests,soap
multiprocessing.pool,design-patterns
string,string
a_list,function
python setup.py install,ubuntu
__init__,oop
super(),oop
__init__,import
python setup.py install,pip
"[1, 2, 3]",list
python,c++
syntaxerror: invalid syntax,if-statement
dataframe,pandas
subprocess,unicode
python setup.py install,gcc
__add__,list
for loop,loops
setup.py,distutils
dataframe,pandas
subprocess.call,py.test
@property,caching
&lt;a&gt;,xml
"['a','b','c']",numpy
@property,decorator
subprocess.popen,logging
__init__,multiple-inheritance
dataframes,io
decimal,string
__init__,object
setup.py,cython
__init__,oop
lambda,amazon-web-services
dataframe,pandas
import tkinter,tkinter
views.py,django
python manage.py shell,django
valueerror,exception
models.py,django
re.sub,regex
__init__,constructor
isinstance,regex
matplotlib,visualization
python,html
multiprocessing.pool,cryptography
__init__,class
ifconfig,unix
os.system,stack
"[1,2,3,4,5,6,7,8]",list
sys.argv,command-line
pandas,pandas
import mysqldb,pip
__init__.py,namespaces
setup.py,cmake
main(),performance
dataframe,pandas
annotate,matplotlib
pandas,pandas
pandas,csv
python3,python-imaging-library
ctypes,cygwin
@property,properties
sys.argv,windows
&lt;a&gt;,lxml
sys.stdout,unicode
nameerror,django
pickle,pandas
os.system(),logging
"[1,2,3]",list
__eq__,class
typeerror,string-formatting
nameerror: name 'c' is not defined,profiling
subprocess,hadoop
"[1,2,3]",list
python,random
1 2 3 45 6 7 89 10 11 12,numpy
return,exception
super(),getattr
__init__,syntax
__str__,exception
python,meteor
__add__,operator-overloading
subprocess.popen,subprocess
python,osx
__init__.py,documentation
bytearray,parsing
file.write(),file-io
global,scope
lambda,collections
urllib2,google-app-engine
pandas,anaconda
python,linux
__init__.py,logging
__init__.py,import
datetime,django
multiprocessing.pool,multiprocessing
request.post,http-headers
os.system,unix
tkinter,import
stopiteration,iterator
dataframe,pandas
subprocess.popen,subprocess
return,generator
127.0.0.1,dns
list(),list
subprocess,subprocess
strings,list
python,windows
test.py,unit-testing
test(),introspection
__init__,properties
sys.argv,import
itertools.product,memory
urllib2,django
'hello',subprocess
__init__,pylint
wizardview,django
python,osx
__add__,methods
setup.py,ubuntu
f.write(),osx
pprint,ipython-notebook
conf.py,django
python,exception
setup.py,pyqt
ctypes,c
subprocess.popen,unix
__init__,set
127.0.0.1,flask
__name__,module
pickle,data-structures
time.sleep(),multithreading
__str__,join
next(),iterator
open(),django
ctrl+c,django
__init__.py,python-sphinx
setup.py,setuptools
"[1,2,3]",string
ctrl+c,linux
ctypes,opengl
__add__,class
views.py,django
raw_input(),multithreading
raw_input(),readline
typeerror,exception
isinstance,datetime
subprocess.popen,terminal
file.read(),django
python,inheritance
ctypes,qt
import mysqldb,mysql
__mul__,class
pickle,arrays
__init__,pipeline
&lt;h3&gt;,pyquery
attributeerror,exception
__init__.py,module
python,rust
__str__,metaprogramming
__init__,collections
import numpy as np,csv
# -*- coding: utf-8 -*-,django
os.system,windows
raw_input,user-interface
locals(),namespaces
.vimrc,bash
python,multithreading
ctypes,c
python manage.py runserver,django
python manage.py runserver,django
sys.argv,background-process
while true,multithreading
__init__.py,wsgi
string,string
command,argparse
pandas,numpy
python3,windows
syntaxerror,loops
round(),formatting
qlistwidget,user-interface
python setup.py install,install
re.unicode,regex
"[1, 2, 3]",numpy
typeerror,json
sys.argv,command-line
pandas,numpy
__init__.py,importerror
__init__,django
__init__,string
__init__.py,import
matplotlib,matplotlib
__mul__,matrix
random.choice,string
stopiteration,csv
global,metaprogramming
keyerror,string-formatting
python3,osx
numpy.ndarray,arrays
subprocess,unicode
time.sleep(),urllib2
__getitem__,list
python setup.py install,setuptools
__init__,oop
pandas.dataframe,pandas
python manage.py runserver,django
main(),abstract-class
lambda,dictionary
setup.py,linux
attributeerror,exception
models.py,django
typeerror,reflection
__init__.py,model-view-controller
&lt;p&gt;,unicode
__init__.py,django
.vimrc,vim
keyerror,dictionary
sqlalchemy,mysql
indexerror: list index out of range,django
__getitem__,static
python setup.py install,easy-install
pprint,syntax
re.findall(),regex
super(),decorator
"typeerror: list indices must be integers, not str",list
numpy.ndarray,numpy
__init__,oop
result,database
function,py.test
time.sleep(),c
views.py,django
indexerror: list index out of range,readlines
django,web-applications
__init__.py,django
__str__,class
products,sql
pip install,setuptools
pandas.dataframe,group-by
python,testing
typeerror,exception-handling
matplotlib,matplotlib
weight,pandas
setup.py,pip
test.py,unit-testing
datetime,datetime
dataframe,pandas
ctrl+c,linux
__init__,genshi
abcdef,string
command,user-interface
__init__.py,jython
subprocess,windows
python,fork
a_list,list
python,import
my_list,list
subprocess.popen,windows
&lt;br&gt;,bottle
[0-9]+,regex
__add__,numpy
127.0.0.1,sockets
matplotlib,numpy
attributeerror,pyuno
keyerror,introspection
syntaxerror,ipython
lambda,lambda
# -*- coding: utf-8 -*-,debugging
isinstance,oop
indexerror: list index out of range,google-app-engine
setup.py,pip
subprocess.popen,django
pandas,performance
correct,scala
raw_input,twisted
urllib,regex
python setup.py install,pip
python setup.py install,module
attributeerror,function
letters,bpython
typeerror,oop
python2.7,django
hello,class
sklearn,logging
__eq__,sorting
main(),c
dataframes,pandas
locals(),string-interpolation
__init__,return
__eq__,sqlalchemy
open(),gzip
__init__,constructor
urllib2,xml
defaultdict,sorting
sys.stdout,oop
urllib,facebook
tkinter,event-handling
urllib2,winapi
mylist,initialization
tkinter,tkinter
typeerror,comparison
db.session.commit(),orm
subprocess,subprocess
models.py,unit-testing
__init__.py,module
typeerror,subclass
python,import
raw_input(),py2exe
dataframe,pandas
while true,asynchronous
subprocess.popen,subprocess
python,command-line
__init__,django
python,numpy
__eq__,api
request.post,django
dataframe,numpy
json.dump,json
dataframe,matplotlib
os.system(),pip
re.findall,regex
python setup.py install,usb
dataframe,pandas
typeerror,string
"[1, 2, 3]",sqlalchemy
itertools.product,numpy
stopiteration,generator
questions,django
__dict__,object
dataframe,numpy
__init__.py,scrapy
__init__,object-initializers
py2exe,cmd
shutil.copytree,directory
isinstance,pickle
typeerror,python-asyncio
__init__.py,py.test
"[1, 2, 3, 4]",list
setup.py,package
&lt;br&gt;,escaping
&lt;a&gt;,css
git push heroku master,django
tkinter,class
position,matplotlib
decimal,django
base64,image
raw_input,input
__getitem__,jython
json.dumps,json
python setup.py install,django
return,methods
__init__,object
datetime,datetime
indexerror: list index out of range,regex
python3,ruby
rand(),numpy
__init__,import
urllib,exception
setup.py,software-distribution
matplotlib,matplotlib
create,django
subprocess,shell
pickle,refactoring
subprocess,multithreading
"[1, 2, 3, 4]",string
"if __name__ == ""__main__"":",unix
__init__.py,module
subprocess,curl
python,process
views.py,django
__init__,metaprogramming
keyerror,error-handling
xml.dom,v8
re.findall,regex
locals(),django
__init__.py,naming-conventions
typeerror,override
requests,python-requests
__init__.py,import
dictreader,list
pickle,pandas
random.shuffle,random
__init__,constructor
bytearray,binary-data
__init__.py,django
__init__,docstring
datetime,string
python,design-patterns
subprocess.call,performance
__init__,pyqt4
pandas,numpy
return,scope
keyerror,multiprocessing
127.0.0.1,sockets
datetime,itertools
index.py,apache
json.dumps,json
data[i],filter
subprocess.popen,mime-types
products,c++
subprocess,shell
__init__,whitespace
"['a','b','c']",string
__init__,py2exe
matplotlib,matplotlib
itertools.product,for-loop
re.unicode,naming-conventions
__init__,constructor
python,linux
next(),generator
"[1,2,3,4,5,6]",list
defaultdict,defaultdict
importlib,dependencies
apache,apache
sys.stdout,io
dictreader,error-handling
importlib,django
datetime,data-structures
file.txt,file-io
command,button
abcd,line
__init__.py,django
__init__,class
python,install
python,xpath
result,unicode
kwargs,scala
python,postgresql
valueerror,mayavi
python,profile
webbrowser,windows
__getitem__,loops
numpy.ndarray,numpy
combinations,generator
typeerror: 'unicode' object is not callable,django-templates
requests,celery
python,matplotlib
my_list,list
python,zeromq
nameerror,class
open(),documentation
base64,base64
zipfile,file
__dict__,namedtuple
ctypes,numpy
tkinter,linux
dataframe,datetime
tuple_list,sorting
views.py,django
start_date,pandas
datetime,pandas
datetime,datetime
models.py,django
setup.py,setup.py
numpy.ndarray,numpy
raw_input,multiprocessing
dataframe,pandas
ctypes,performance
global,django
raw_input(),input
indexerror: list index out of range,list
pip install,osx
mysqldb,mysql-python
views.py,ajax
raw_input(),osx
lambda,kotti
setup.py,module
__init__,function
list(),django
urllib2,urllib2
debug=true,django
list(),list-comprehension
views.py,django
python,arrays
setup.py,setuptools
models.py,django
__init__.py,setuptools
python,scripting
mylist,multithreading
pickle,data-structures
__init__.py,python-sphinx
__init__,oop
__str__,built-in
super(),multiple-inheritance
typeerror,list
__str__,class
__str__,string
pickle,unix
__init__,metaprogramming
popen(),linux
python,functional-programming
tkinter,user-interface
__eq__,oop
__add__,methods
os.system,bash
test.py,subprocess
__init__.py,import
employee,design
dictionary,multithreading
general,exception
ctypes,c
mylist = [],object
__init__.py,pycharm
python,r
matplotlib,width
configparser,mapping
readlines(),sorting
&lt;h3&gt;,html
subprocess.popen,shlex
isinstance,design-patterns
models.py,sqlalchemy
python,linux
bytearray,io
django,django
python,windows
__init__,init
models.py,django
python2.7,ctypes
__init__,functional-programming
datetime,date
typeerror,python-internals
__init__.py,flask
&lt;p&gt;,beautifulsoup
dataframe,pandas
dataframe,pandas
python,c++
&lt;a&gt;,regex
indices,numpy
python manage.py runserver,django
result,celery
__init__,recursion
lambda,lambda
python,converter
__init__,dynamic
matplotlib,matplotlib
indexerror: string index out of range,encryption
"[1, 2, 3]",data-structures
t = test(),oop
dataframe,r
itertools.product,algorithm
next(),iterator
__init__,properties
lambda,list
numpy.ndarray,numpy
urllib2,apache
__init__,unit-testing
return,list
python,passwords
views.py,amazon-web-services
list index out of range,pdf
subprocess.call,shell
__name__,function
syntaxerror: invalid syntax,dictionary
global,callback
__str__,methods
python,scikit-learn
input.txt,file
urllib2,parsing
urllib2,urllib2
index.html,html
__init__,multithreading
index(),django
__init__,new-operator
while true,for-loop
rand(),random
isinstance,unicode
syntaxerror: invalid syntax,pip
subprocess.popen,linux
__dict__,attributes
dataframe,plotly
sklearn,scikit-learn
apt-get install,django
multiprocessing.pool,multithreading
histogram,numpy
"[1,2,3,4,5,6]",ruby
lambda,map
dataframe,pandas
datetime,datetime
models.py,mysql
urllib,xml
__init__,initialization
setup.py,setuptools
sklearn,r
strings,messaging
__getitem__,getattr
setup.py,distutils
list(),syntax-highlighting
subprocess.call,operating-system
file.txt,pipe
__init__,xml
# -*- coding: utf-8 -*-,encoding
main(),fabric
locals(),django
__getitem__,exception
python setup.py install,suds
pandas,numpy
subprocess,shell
matplotlib,matplotlib
django,django
keyerror,format
__init__.py,django
models.py,django
random,random
pandas,csv
dataframe,terminal
datetime,pandas
global,global
import random,import
__init__.py,flask
s[::-1],string
attributeerror,exception
datetime,datetime
__init__.py,google-app-engine
__init__,class
line.split(),for-loop
ids.txt,ipython
pip install,pip
matplotlib,image
httplib.httpconnection,google-app-engine
globals(),globals
requests,flask
raw_input(),linux
python,mongodb
__init__,class
result,selenium
python 2.7,opencv
python3,pypy
runserver,django
__add__,multiple-inheritance
__init__,class
python setup.py install,distribution
function,numpy
datetime,pandas
open(),file-handling
__init__.py,nose
mylist,map
sorted(),for-loop
itertools.product,itertools
position,image
models.py,mysql
__init__.py,gettext
setup.py,windows
list(),list
setup.py,distutils
open(),exception
urllib,urllib
selenium,pandas
python,ctypes
syntaxerror,function
python -m simplehttpserver,http
pip install,pip
matplotlib,pandas
pandas,pandas
subprocess.call,windows
subprocess.call,linux
"[1, 2, 3]",list
matplotlib,matplotlib
datetime,csv
json.dumps,json
python,tags
yield,iterator
"if __name__ == ""__main__"":",module
"@makebold@makeitalicdef say(): return ""hello""",decorator
update(),dictionary
"filename = ""/my/directory/filename.txt""dir = os.pa",exception
a = [],list
@staticmethod,decorator
def foo(a=[]): a.append(5) return a,language-design
append(),list
class passbyreference: def __init__(self): self.va,reference
"ints = [8, 23, 45, 12, 78]",loops
string.contains,string
super(),inheritance
.add(),dictionary
try: # do something that may failexcept: # do this,exception
"[""foo"", ""bar"", ""baz""]",list
"if 'key1' in dict.keys(): print ""blah""else: print ",dictionary
"""545.2222""",string
"items = []items.append(""apple"")items.append(""orang",list
classname.staticmethod ( ),static-methods
mystring[2:end],string
"l = [[1, 2, 3], [4, 5, 6], [7], [8, 9]]reduce(lamb",list
"l = range(1, 1000)print chunks(l, 10) -&gt; [ [ 1.",list
"my_list = [""hello"", ""world""]print my_list.join(""-""",string
#include &lt;iostream&gt;#include &lt;time.h&gt;us,benchmarking
"d = {'x': 1, 'y': 2, 'z': 3} for key in d: print k",dictionary
def is_number(s): try: float(s) return true except,casting
new_list = my_list,list
str.format(),performance
"listone = [1, 2, 3]listtwo = [4, 5, 6]",list
"[{'name':'homer', 'age':39}, {'name':'bart', 'age'",list
"foo = ['a', 'b', 'c', 'd', 'e']",list
*,syntax
os,filesystems
switch,switch-statement
jun 1 2005 1:33pmaug 28 1999 12:00am,django
*args,args
range(),performance
reverse,string
except,exception
#include &lt;stdio.h&gt;int main() { int i; for (i,newline
&gt;&gt;&gt; a = someclass()&gt;&gt;&gt; a.somepro,attributes
"mydict = {(k,v) for (k,v) in blah blah blah} # doe",dictionary
__init__.py,module
@classmethod,oop
__main__,performance
__class__,introspection
np.loadtxt,image-processing
"import sys print &gt;&gt; sys.stderr, 'spam' sys.s",printing
.txt,file-io
def main(): for i in xrange(10**8): passmain(),performance
me@mymachine:~$ workon env1(env1)me@mymachine:~$ w,virtualenv
easy_install,packages
""" hello "" --&gt; ""hello"""" hello"" --&gt; ""hello""""he",string
o,types
type(),oop
isiterable,iterable
list.remove,list
dirfoo,relative-path
self,class
&gt;&gt;&gt; class myerror(exception):... def __in,exception
'public',string
e = 'a' + 'b' + 'c' + 'd',syntax
"&lt;foo&gt; &lt;bar&gt; &lt;type foobar=""1""/&gt; &",xml
class myclass(object): ... def get_my_attr(self): ,properties
lorenzo@enzo:~/erlang$ gcc -lm -o euler12.bin eule,c
2to3,packaging
[],performance
if mystring == string.empty:,string
/* */,comments
.pyc,compiled
python setup.py install,setup.py
&gt;&gt;&gt; from subprocess import *&gt;&gt;&gt; ,string
(mysite)zjm1126@zjm1126-g41mt-s2:~/zjm_test/mysite,pip
"{ ""maps"": [ { ""id"": ""blabla"", ""iscategorical"": ""0""",json
if 'key' in mydict: del mydict['key'],dictionary
"x = "" \{ hello \} {0} ""print x.format(42)",string
"def file_len(fname): with open(fname) as f: for i,",text-files
"os.remove(""/folder_name"")",file
die(),termination
pip install mysql_python==1.2.2,mysql
"print &gt;&gt;f, ""hi there""",file-io
for tup in somelist: if determine(tup): code_to_re,iteration
a,floating-point
unicodeencodeerror,unicode
os,directory
mkdir -p,mkdir
0xffff,string
'a',string
"keys = ('name', 'age', 'food')values = ('monty', 4",dictionary
#NAME?,operators
.pop,dictionary
def uniq(input): output = [] for x in input: if x ,list
__all__,syntax
try: myvarexcept nameerror: # do something.,exception
if foo.py has changed: unimport foo &lt;-- how do ,module
hdfstore,mongodb
a,replace
arr.__len__(),arrays
**kwargs,kwargs
"os.getenv(""home"")",cross-platform
self,oop
"array = [0,10,20,40]for (i = array.length() - 1 ;i",list
try : shutil.rmtree ( path )except : pass,exception
map(),map
"for i in range(0, 20):for i in xrange(0, 20):",loops
os.getuid,portability
"l = [ 1, 2, 3 ]i = l.__iter__()s = nonewhile true ",while-loop
virtualenv,virtualenv
super(),multiple-inheritance
"[ '0045662100456621004566210045662100456621', # '0",string
$ easy_install lxml,ubuntu
.readline,io
"from pylab import figure, axes, pie, title, show# ",matplotlib
a = 1b = 10c = 100,string-formatting
"models.charfield(max_length=100, null=true, blank=",django
if not x is none,coding-style
"dict a: {'a':1, 'b':2, 'c':3}dict b: {'b':3, 'c':4",dictionary
date,datetime
"{2:3, 1:89, 4:5, 3:0}",sorting
__gt,django
"""hey, you - what are you doing here!?""",string
dict.items(),dictionary
object,class
"&gt;&gt;&gt; d = {'a': 1, 'b': {'c': 2}, 'd': [""hi",object
"def remove_duplicates(): t = ['a', 'b', 'c', 'd'] ",list
str,string
def run_command(cmd): # ??????print run_command('m,shell
__init__,design-patterns
urllib,urllib2
app/ __init__.py sub1/ __init__.py mod1.py sub2/ _,python-import
while '' in str_list: str_list.remove(''),string
*,syntax
usage: installer.py dir [-h] [-v],argparse
"def method(): string = """"""line oneline twoline thr",string
def expires(): '''return a unix style timestamp re,datetime
"glob(os.path.join('src','*.c'))",path
"file = open('myfile.dat', 'rw')",file-io
while line is not '',string
property,properties
datetime.datetime,datetime
"// c# examplestring thisismyvariable = ""a""public v",variables
virtualenv,virtualenv
# f. front_back# consider dividing a string into t,if-statement
pkg/ __init__.py components/ core.py __init__.py t,python-import
"a=[1,2,3,4]b=a.index(6)del a[b]print a",list
else,exception-handling
my_list = [x for x in my_list if x.attribute == va,list
"str1 = raw_input(""enter string one:"")str2 = raw_in",logic
"class fileitem: def __init__(self, fname): self.fn",json
simplejson,json
[image for image in menuitem for menuitem in list_,list-comprehension
number++,syntax
assert,assert
class kaka puts selfend,ruby
len(collection),loops
"""mydir/myfile.txt""",path
cron,django
sys.stdout,stdout
def my_function(): passprint get_function_name_as_,string
dictionary,dictionary
del df['column_name'],pandas
"&gt;&gt;&gt; ut[&lt;tag: 128&gt;, &lt;tag: 2008&gt",sorting
list.extend,concatenation
import datetimetoday = datetime.date.today()print ,datetime
float('nan'),math
$sig{'int'} = 'exit_gracefully';sub exit_gracefull,control
string.ascii_uppercase,string
def singleton(class_): instances = {} def getinsta,singleton
psycopg2,clang
row = [unicode(x.strip()) for x in row if x is not,list-comprehension
os.path.basename,string
n = 5# test one.if n == 5: print 'yay!'# test two.,reference
for (int i = 0; i &lt; str.length(); ++i) std::cou,string
&gt;&gt;&gt; import timeit&gt;&gt;&gt; timeit.time,performance
$ python myapp.py command1,python-import
random.shuffle,list
"for i in range(0, 1, 0.1): print i",floating-point
test,unit-testing
datetime.datetime,datetime
def my_handle(self): sentence = ' hello apple ' se,trim
matrix = [][],arrays
permutations([])[]permutations([1])[1]permutations,algorithm
"import strings = ""string. with. punctuation?"" # sa",string
++,operators
"class simple: def __init__(self1, str): print(""ins",class
with,file-io
gcc -wall utilsmodule.c -o utilc,gcc
super(),superclass
"def get_primes(n): numbers = set(range(n, 1, -1)) ",math
script_1.py,scripting
"package foo;sub frotz { return ""bamf"";}package bar",inheritance
&gt;&gt;&gt; 0x12af 4783 &gt;&gt;&gt; 0x100 256,syntax
&gt;&gt;&gt; a = 256&gt;&gt;&gt; b = 256&gt;&gt;&g,int
"map = { 'a': 1, 'b':2 }",dictionary
"foo = (1,2,3)bar = (4,5,6)for (f,b) in some_iterat",iterator
try: do_stuff()except: pass,exception-handling
if (cond1 == 'val1' and cond2 == 'val2' and cond3 ,coding-style
timeit,time
datetime,module
list,list
setup.py,django
"l = [[[1, 2, 3], [4, 5]], 6]",list
&gt;&gt;&gt; os.path.abspath(__file__)'c:\\python2,filesystems
#,syntax
s = 'the brown fox',capitalization
"&gt;&gt;&gt; timeit.timeit(""'x' in ('x',)"")0.04869",performance
"[0, 1, 2, 3, 4]",list
assert,assert
"b1 = [1,2,3,4,5,9,11,15]b2 = [4,5,6,7,8]b3 = [val ",list
"traceback (most recent call last): file ""/var/www/",django
if count == n: count = 0else: count = n + 1,syntax
&gt;&gt;&gt; convert('camelcase')'camel_case',camelcasing
"contents = url.get(""http://example.com/foo/bar"")",http
data,json
"original = [('a', 1), ('b', 2), ('c', 3), ('d', 4)",list
time.sleep(),multithreading
itertools.groupby(),iteration
h = re.compile('hello')h.match('hello world'),regex
/* receive value */$validatevalue=$_post['validate,django
**kwargs,kwargs
"for i in xrange(0, len(ints), 4): # dummy op for e",list
cheese_cheese_type.***,file-io
"data = [[1,2,3], [4,5,6], [7,8,9]]data = [(1,2,3),",list
script,shell
class package: def __init__(self): self.files = [],destructor
import sysdef factorial(n): # return factorial res,indentation
import osprint os.getcwd(),directory
time.struct_time,datetime
"querystring = 'eventname=' + evt.fields[""eventname",url-encoding
unittest,unit-testing
"temp1 = ['one', 'two', 'three', 'four']temp2 = ['o",list
"# -*- coding: utf-8 -*-print u""†Ç†?†_""",encoding
foobar,class
while true: #snip: print out current state while t,control-flow
"a = ['a','b','c','d']",string
letter_recog.py,opencv
eval(),dynamic
pip install xyz --upgrade,pip
"traceback (most recent call last):file ""manage.py""",mysql
os,file
list.append(),list
with,language-features
#!/usr/bin/env python ,shell
import matplotlibimport numpy as npimport matplotl,matplotlib
user/real,system-information
"def import_to_orm(name, save=false, recurse=false)",exception
_,variables
class foo(models.model): name = models.charfield(),django
code1class foo: code2 def spam..... code3 for code,scope
"minitwit|-- minitwit.py|-- static |-- css, js, ima",flask
"class a(object): def __init__(self): print ""constr",oop
integer.min_value,integer
mylist = [[1] * 4] * 3,list
==,equality
"&gt;&gt;&gt; a = { ""a"" : 1, ""b"" : 2 }&gt;&gt;&gt; ",dictionary
"import matplotlib.pyplot as pltx = [1, 2, 3, 4, 5]",matplotlib
u,unicode
static,class-method
"import sysif sys.version_info &lt; (2, 4): raise """,version
in file included from src/lxml/lxml.etree.c:314:/p,xcode
"""hello %s you are %s years old"" % x",list
except: pass,exception
"""""""hello, i am a  multiline comment""""""",comments
"import os;os.system(""c:\\temp\\a b c\\notepad.exe""",shellexecute
writelines(),file
class someclass(object): def not_often_called(self,optimization
"for char in line: if char in "" ?.!/;:"": line.repla",string
stdout,multithreading
while len(alist) &gt; 0 : alist.pop(),list
models.py,django
win32file.findnextchangenotification,file
class child(somebaseclass): def __init__(self): su,inheritance
python2.7,ubuntu
"plaintext = input(""please enter the text you want ",string
time.time(),time
"t1 = (('13', '17', '18', '21', '32'), ('07', '11',",string
TRUE,algorithm
def split_line(text): # split the text words = tex,list
"d:\workspace\numpy&gt;pythonpython 2.4.4 (#71, oct",ellipsis
"results = ['1', '2', '3']",list
# generator expression(x*2 for x in range(256))# l,list-comprehension
render(),django
"class celsius(object): def __init__(self, value=0.",descriptor
item = somesortofselection()if item in mylist: dom,find
"string.replace(',', '').replace(""!"", '').replace(""",string
defined(),variables
"text_file = open(""output.txt"", ""w"")text_file.write",string
ctypes,c
pip,pip
ptdraft/ nib.py simulations/ life/ life.py,module
import,numpy
try: method_that_can_raise_an_exception(params)exc,exception-handling
getopt,command-line
time.strptime,datetime
datetime.time,datetime
__init__,function
"&gt;&gt;&gt; print ""'%06d'""%4'000004'",string
"default_data = { 'item1': 1, 'item2': 2,}",dictionary
dict,dictionary
"python 2.6.1 (r261:67515, jun 24 2010, 21:47:49) [",datetime
"# the string, which has an a-acute in it.ss = u'ca",unicode
"sample = {}sample['title'] = ""string""sample['somed",json
"l = list(1,2,3)l.index(2)&gt;&gt;&gt; 1",arrays
[e for number in xrange(n)],operator-overloading
[],set
"if __name__== ""__main__""",coding-style
dirname(sys.argv[0]),path
which,path
pip install package_name,pip
search(),regex
"a = [4,2,3,1,5,6]if a.count(7) == 1: b=a.index(7) ",performance
json.dump,json
importfile.py,python-import
"""b-staged divinylsiloxane-bis-benzocyclobutene [12",string
perl -c programfile,syntax-checking
import subprocessfrom cstringio import stringiosub,subprocess
def long_running_func(p): c_func_no_gil(p)p = mult,multithreading
"1 + ""1""traceback (most recent call last):file """", ",perl
flush(),sqlalchemy
"def __init__(self, x, y, z): ... self.x = x self.y",python-decorators
my_string = b'the string',string
example,string
pip,pip
class volume(models.model): id = models.autofield(,django
print 'h',printing
"res = dataframe(columns=('lib', 'qty1', 'qty2'))",pandas
"for i in range(10): print(i) if i == 9: print(""too",if-statement
__class__,constructor
from mechanize import browserbr = browser()br.open,html
tester.py,module
pip,git
"traceback (most recent call last): file ""mountain.",importerror
# foo.pyclass foo: pass# test.pyimport inspectimpo,reflection
scipy,matlab
pythonpath,python-module
day_count = (end_date - start_date).days + 1for si,datetime
f = open(file)for line in f: if line.contains('foo,file
&gt;&gt;&gt; class foo:... bar = 'hello'... baz = ,dictionary
"[ 'a', 'b', 'c' ]",list
+=,operators
put,http
'8/18/2008',date
json,json
import mysqldb as mysql,mysql-python
l,list
"x = 10y = 100plot(x, y, ""k*"", label=""global optimu",matplotlib
scipy,numpy
from selenium import webdriverwd = webdriver.firef,selenium
for tz in pytz.all_timezones: print tzafrica/abidj,django
"list = {'george':16,'amber':19}search_age = raw_in",dictionary
yield,file-io
"""_-.() """,filenames
numpy.distutils.system_info.blasnotfounderror:  bl,scipy
"this is ""a test""",regex
remove(),list
d = dict(param='test')def f(param): print paramf(d,function
traceback,function
hashlib.md5(),md5
sys.stdout.write(),printing
my_dict = {}if (my_dict[key] != none): my_dict[key,dictionary
c:\test&gt;pip install requests-oauthdownloading/u,pip
string.find(),regex
"def my_fun(x, y): return x + y",vim
sys.path.append,windows
"a = [1, 2, 3, 4, 5]b = [9, 8, 7, 6, 5]returnmatche",list
os.system(),linux
bin/ main.py user.py # where class user resides di,python-import
touch,utility
sinvalidpath=alwayssuppliesaninvalidpath()self.ass,unit-testing
x = 0y = 1z = 3mylist = []if x or y or z == 0 : my,if-statement
class gameclaim(models.model): target = models.for,django
"df1 = dataframe(np.random.randn(10, 4), columns=['",pandas
"for i in range [1,10]: string=""string""+i",string
"round(2.3) = 2.0 and not 3, what i would like",floating-point
"import matplotlib matplotlib.rc('xtick', labelsize",matplotlib
"if [[ ""$string"" =~ ^hello ]]; then do something he",string
#!/usr/bin/pythonimport subprocessp2 = subprocess.,subprocess
"""databaseerror: current transaction is aborted, co",django
"#note: python 2.7 users should use `raw_input`, th",validation
timeit,time
read -s,passwords
models.py,django
requests,ssl
"string str = ""many fancy word \nhello \thi"";string",regex
"&lt;form action=""."" method=""post""&gt; &lt;table&gt",django
if type(x) == type(str()): do_something_with_a_str,types
del,python-internals
"a[0] = [1, 1, 1, 0, 0]a[1] = [1, 1, 0, 0, 1]a[2] =",algorithm
pip --version,upgrade
"test = ""have it break.""selectiveescape = ""print pe",escaping
datetime,datetime
debug = true,django
ascii,integer
getch(),input
"&gt;&gt;&gt; 1 in [1,0] # this is expectedtrue&gt;",syntax
"url = ""http://example.com?p="" + urllib.quote(query",url
39708.58472,datetime
exit(number),exit
"l = [15, 18, 2, 36, 12, 78, 5, 6, 9]print reduce(l",list
# create your viewsfrom django.contrib.gis.utils i,django
expand(),tuples
nested functions,closures
"data = {'sender': 'alice', 'receiver': 'bob', 'mes",json
members.objects.all(),django
"{'new jersey': {'mercer county': {'plumbers': 3, '",data-structures
"content = open('path/to/file', 'r').read()",file-io
a + b == c or a + c == b or b + c == a,boolean
any,list
__str__(),string
"b = bytes(mystring, 'utf-8')b = mystring.encode('u",string
javadoc,documentation
javadoc,documentation
list,algorithm
argparse,argparse
class foo(models.model): name = models.charfield(),django
"class person: def __init__(self, name, age): self.",pycharm
settings.debug,django
c:\my_projects,windows
"l = []for n in range(1, 11): l.append(n)",dictionary
defaultdict(defaultdict(int)),collections
obj.val==5,list
try: try_this(whatever)except someexception as exc,exception
url = 'abcdc.com'print(url.strip('.com')),string
"os.popen(""ps"")",system
project.app,django
`python version 2.7 required which was not found i,setuptools
x = 1.23456print '%.3f' % x,numpy
&lt;insert your favorite wsgi toolkit here&gt;,design-patterns
#!/usr/bin/env pythonimport networkx as nximport m,graph
## image generation code runs.... /upload generate,django
"p = subprocess.popen(cmd, stdout=subprocess.pipe, ",linux
"&gt;&gt;&gt;s = set([1, 2, 3])",set
filter,sqlalchemy
sudo pip install pil,osx
pip install numpy,install
"import numpy as na = n.array([[1,2],[1,2]])",arrays
@ping 127.0.0.1 -n 2 -w 1000 &gt; nul@ping 127.0.0,batch-file
from matplotlib import pyplot as plt fig = plt.fig,matplotlib
&gt;&gt;&gt; from timeit import timeit&gt;&gt;&gt;,performance
pip,pip
return dict.iteritems(),dictionary
"inputstring = """"""line 1line 2line 3""""""",string
.htaccess,apache
iteritems(),loops
"(xa, ya, za)(xb, yb, zb)",numpy
"adders= [0,1,2,3]for i in [0,1,2,3]: adders[i]=lam",lambda
"bob = 1bob = ""bob""",strong-typing
TRUE,if-statement
"obj = someobjectobj.a = object()setattr(obj.a, 'so",class
class tankjournal(models.model): user = models.for,django
&gt;&gt;&gt; def without_else(param=false):... if ,optimization
class personadmin(admin.modeladmin): list_display ,django
virtualenv venv --distribute,virtualenv
from datetime import datetime class termpayment(mo,django
"test = numpy.array([[1, 2], [3, 4], [5, 6]])",arrays
"sys.stdout = open('somefile', 'w')",stdout
verts = list (1000),arrays
"&gt;&gt;&gt; string = ""blah, lots , of , spaces, h",whitespace
"""24052010""",date
def initialize_twodlist(foo): twod_list = [] new =,multidimensional-array
httpresponse,ajax
"foo.objects.get(pk=""foo"")&lt;foo: test&gt;",django
"a, b, c = (1, 2, 3)print(a, b, c)def test(): print",variables
with,with-statement
easy_install django,ruby
"&gt;&gt;&gt; map(chr, [66, 53, 0, 94])['b', '5', '",list
~true,data-conversion
"os.path.join('/home/build/test/sandboxes/', todays",path
&gt;&gt;&gt; df stk_id eps cashstk_id rpt_date 601,pandas
pip install git+git://github.com/django/django.git,git
"name = ""spongebob squarepants""puts ""who lives in a",string-interpolation
"scatter1=plt.scatter(data1[""x""], data1[""y""], marke",matplotlib
"def amethod(arg1, arg2): pass",decorator
bisect_left,binary-search
@execute_complete_reservation(true) def test_booki,decorator
"{ 1: [ '1' ], 2: [ '1', '2' ], 3: [ '2' ]}",dictionary
my_program --my_boolean_flag false,boolean
requests,urllib2
&lt;a href='/login/?next={{ request.path }}'&gt;lo,django
isdigit(),regex
rpt,pandas
&gt;&gt;&gt; 6/32&gt;&gt;&gt; 6//32,math
&gt;&gt;&gt; (0-6) is -6false,debugging
"plot.figure()plot.scatter(k,sum_cf, color = 'black",size
os.popen(),phantomjs
path = os.path.abspath(os.path.dirname(sys.argv[0],path
make altinstall,node.js
"""10/10/11(m-d-y)""",date
"&gt;&gt;&gt; list = ['a', 'b', 'c']&gt;&gt;&gt; ',",list
at,cron
smtplib,email
"try: # coode in hereexcept exception, e: logging.e",exception
false == 0,boolean
"class myexception(exception): def __init__(self, m",exception
eventlet,ubuntu
requirements.txt,pip
"print ""100"" &lt; ""2"" # trueprint ""5"" &gt; ""9"" # fa",types
&gt;&gt;&gt; my_dataframe y gdp cap0 1 2 51 2 3 92,pandas
import matplotlib.pyplot as pltimport randomprefix,matplotlib
"np.find_nearest( array, value )",search
class user(models.model): created = models.datetim,django
"foos = [1.0,2.0,3.0,4.0,5.0]bars = [1,2,3]def mapt",dictionary
"a = [['a', '1.2', '4.2'], ['b', '70', '0.03'], ['x",pandas
if not x == 'val':,if-statement
def git_pull(): sudo('su deploy') # here i need to,virtualenv
import fooprint foo.version,string
pandas,r
settings,code-analysis
"[3, 7, 19]",list
python manage.py collectstatictraceback (most rece,django
"import codecsf = codecs.open('out.txt', mode=""w"", ",character-encoding
&gt;&gt;&gt; from beautifulsoup import beautifulso,html
strftime,padding
"urlpatterns = patterns('', url(r'^$', listing, nam",sublimetext2
"x = ""there are %d types of people."" % 10...print """,string
import module,python-import
multiprocessing,logging
'3',string
sudo pip install python-ldap,module
&gt;&gt;&gt; human_readable(2048)'2 kilobytes'&gt;,code-snippets
import multiprocessingdef f(x): return x*xdef go(),multithreading
flask,flask
"&gt;&gt;&gt; numpy.arange(10000)array([ 0, 1, 2, .",arrays
str().decode(),string
"print ""i am a test""print ""see! i do nothing produc",eval
select * from user where income &gt;= 5000 or inco,sql
temp,cross-platform
"df = dataframe({'a' : [5,6,3,4], 'b' : [1,2,3, 5]}",pandas
class sampleclass(forms.form): name = forms.charfi,django
"with open(""a.txt"") as f: print f.readlines()",exception-handling
if request.method == 'post': form = authorform(req,django
"mylist = [12, 5, 13, 8, 9, 65]def bubble(badlist):",algorithm
"[('abc', 121),('abc', 231),('abc', 148), ('abc',22",list
request.user.is_authenticated,django
(s),regex
tail(),file
"import subprocess, osmy_env = os.environmy_env[""pa",subprocess
import requestsdef downloadfile(url) local_filenam,stream
for i in range(some_number): #do something,loops
({'type':'event'}),dictionary
for x in range(10): for y in range(10): print x*y ,loops
http://localhost:5000,configuration
"[{'points': 50, 'time': '5:00', 'year': 2010}, {'p",dictionary
uuid1(),uuid
pip install git+ssh://git@github.com/blahco/search,git
java -jar hudson.war,jenkins
"#fake_utility.py, just generates lots of output ov",subprocess
0 3 * * * source /home/user/project/env/bin/activa,django
datetime.timedelta,string
"[12, 'tall', 'blue', 1][15, 'tall', 'black', 3][13",sorting
re.compile,regex
time,datetime
develop,setuptools
"&gt;&gt;&gt; def shift(l, n):... return l[n:] + l[",list
from flask import flaskapp = flask(__name__)@app.r,flask
/foo bar.py spam.py eggs.py,python-import
&gt;&gt;&gt; 1 in [] in 'a'false&gt;&gt;&gt; (1 in,syntax
&gt;&gt;&gt; import sys&gt;&gt;&gt; print sys.getd,unicode
construct,version
if a and (not b or not c) or b and (not a or not c,if-statement
"traceback (most recent call last): file ""emailsend",email
import datetimea = datetime.datetime.today()numday,datetime
class client(model): name = charfield(max_length=1,django
"def func(a,b,c): print magic_that_does_what_i_want",parameters
"next_month = datetime.datetime(mydate.year, mydate",datetime
"if hi == hi: print ""hi""elif hi (does not equal) by",operators
logging,logging
&gt; c:\python26\programas\cython&gt;python setup.,mingw
"isinstance(object, class_or_type_or_tuple)",reflection
flist = []for i in xrange(3): def func(x): return ,closures
"traceback (most recent call last): file ""d:\amd\wo",django
"for item in range(1,100): print item",printing
floor,math
"generic_ticker = relation('myclass', backref=backr",sqlalchemy
ord(),string
"text = ""test""def harvester(text, case): x = case[0",multiprocessing
class searchform(form): q = forms.charfield(label=,django
var,variable-assignment
total_rows = df.countprint total_rows +1,pandas
array.array,arrays
"somelists = [ [1, 2, 3], ['a', 'b'], [4, 5]]",list
re.search(),regex
nil,ruby
$ sudo pip install gevent-websockettraceback (most,pip
pool.apply,multithreading
"traceback (most recent call last): file ""c:/tmp.py",exception
class serviceform(forms.form): option = forms.mode,django
"class a: def __init__(self): print ""world""class b(",class
for,for-loop
codecs.open function,utf-8
print_timer.py,linux
"x = u'[ ""a"",""b"",""c"" , "" d""]'",string
&gt;&gt;&gt; def foo(x):... pass... &gt;&gt;&gt; f,function
"import pandas as pdinp = [{'c1':10, 'c2':100}, {'c",pandas
ls 145592*.jpg,filesystems
&gt;&gt;&gt; import time&gt;&gt;&gt; time.strptime,date
pip,pip
gem install packagename,module
datetime,datetime
min(),dictionary
assertequals,unit-testing
datetime.today(),datetime
"left, right = right, left",swap
select * from table where colume_name = some_value,pandas
e.printstacktrace(),exception
__getitem__,inheritance
new_tag,list
mobilescouter/ __init__.py #1 mapper/ __init__.py ,packages
class content(models.model): name = models.charfie,django
"""aaaabbbb""",string
"['elm0', 'elm1', 'elm2', 'elm9', 'elm10', 'elm11',",sorting
django.contrib.search,django
def hello(): return 'hi :)',function
hello world,string
l = []while foo: #baz l.append(bar) #qux,list
the fox jumped over the log.,regex
"a = ['a', 'b', 'c']str = ""a123""if a in str: print ",arrays
"function add_nulls($int, $cnt=2) { $int = intval($",string-formatting
"date,open,high,low,close,volume,adj close2011-10-1",performance
f = lambda x: if x==2 print x else raise exception,lambda
sign,language-design
from urllib import request,syntax
number_of_records = models.painting.objects.count(,django
x = somevaluedef func_a (): global x # do things t,global-variables
&gt;&gt;&gt; def fun(): print '{0} here is a reall,string
{% for choice in choices %} {{choice.choice}} - {{,django
print car.date_of_manufacture.strftime('%y-%m-%d'),jinja2
daemonic,multithreading
get_count(),garbage-collection
"x = tuple(set([1, ""a"", ""b"", ""c"", ""z"", ""f""]))y = tu",hash
collections.defaultdict,dictionary
"def my_func1(): print ""hello world"" return nonedef",null
mpp6r-09rxg-2h[8b]mt-[b8]k[hn]m9-v[6g]c8r,itertools
http://mywebserver:port_django_runs_on,django
'(1 2 3 4 5),linked-list
$_post,post
"user = user.object.create_user(username, email, pa",mysql
"&gt;&gt;&gt; class x:... def a(self):... print ""a""",super
"# open our log fileso = se = open(""%s.log"" % self.",tee
"class customdatafield(models.model): """""" abstract ",django
my_list = get_list()if len(my_list) &gt; 0: return,idioms
str='hello',string
"import unittestl = [[""foo"", ""a"", ""a"",], [""bar"", ""a",unit-testing
.bak,file-io
"bigdict = {'a':1,'b':2,....,'z':26} subdict = {'l'",dictionary
"def foo(a: 'x', b: 5 + 6, c: list) -&gt; max(2, 9)",function
class testdec: @property def x(self):  print 'call,decorator
.ceil,math
reversed_arr = arr[::-1],numpy
x = a**d % n,performance
"traceback (most recent call last): file ""&lt;stdin",pipe
name=value,arguments
"s1 = list();for i in range(0,9): s1[i] = iprint s1",list
"import ftplibinfo= ('someuser', 'password') #hard-",sftp
"[[1,2,3],[4,5,6]]",numpy
"orig = { 'a': 1, 'b': 2, 'c': 3,}extra = { 'd': 4,",dictionary
index(),list
"from matplotlib.pyplot import *plot([1,2,3])show()",matplotlib
"doc1 = errordocument(path='/folder',title='page')d",object
"x = [0,5,9,10,15]",matplotlib
getcookie('csrftoken'),ajax
clear(),dictionary
class sample(models.model): date = fields.datefiel,django
[api_sig],md5
"def wrapper(func, args): func(args)def func1(x): p",function
def foo(bar): print 'hello {0}'.format(bar) return,multithreading
pip install -r requirements.txt,ubuntu
http://somedomain/foo/,http
';',operating-system
pickle,parsing
pip install -u,pip
"class node(object): def __init__(self, val, left=n",optional-arguments
"[] = """" ",string
% formatter something like '{:06}'numbers = [23.23,string
*,operators
related_name,django
valueerror: zero length field name in format,debugging
"def func(): return 1, 2",function
./manage.py shell &lt;&lt; my_script.py,django
twinx(),matplotlib
import numpy as np,numpy
df.to_csv('out.csv'),csv
python 2.7.3 32bit,windows
"testlist = [1,2,3,5,3,1,2,1,6]for item in testlist",list
&gt;&gt;&gt; print(my_var.__name__)'my_var',string
"class mything: def __init__(self,name,location,len",dictionary
for i in df.index: do_something(df.ix[i]),pandas
"alpha = ['a', 'b', 'c', 'd'.........'z']",string
"html = urllib.urlopen(link).read()html.encode(""utf",unicode
"&gt;&gt;&gt; for i in xrange(20):... print 'a',...",string
"datetime.datetime.utcnow()datetime.datetime(2010, ",datetime
getattr(),getattr
"&gt;&gt;&gt; range(1,11)",range
global,global-variables
try: something hereexcept: print 'the whatever err,error-handling
"x = [""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i""]y",sorting
"list_a = [1, 2, 3, 4]list_b = [5, 6, 7, 8]#need to",list
"foo = {'foo':1,'zip':2,'zam':3,'bar':4}if (""foo"",""",dictionary
print template.render(products=[???]),jinja2
numpy.linalg.eigh,numpy
np.argmax,numpy
u = 'abcdefghijklmnopqrstuvwxyz'l = 'abcdefghijklm,string
map,numpy
__setitem__,abc
module.version,module
.py,compiler-construction
"&lt;form action="""" method=""post""&gt;{{ form_newsle",button
"""user-agent""",web-crawler
"&gt;&gt;&gt; a=set('abcde')&gt;&gt;&gt; aset(['a',",list
??,null-coalescing-operator
"int(str,base). ",base
flask.jsonify,json
if __name__ == '__main__': x = 1print x,variables
x,attributes
true = false,boolean
none,django
max,sorting
cntlm.exe -c cntlm.ini -i -m http://google.com,proxy
&amp;lt;img class=&amp;quot;size-medium wp-image-1,django
timestamptz,postgresql
"import matplotlib.pyplot as p p.plot(range(20), ra",matplotlib
"s = ""hello, %s. where is %s?"" % (""john"",""mary"")",ruby
__dbname__,variables
"setlist = [s1,s2,s3...]",set
len(),algorithm
40850.46319,datetime
string,string
popen(),subprocess
"d = {'1': 'one', '3': 'three', '2': 'two', '5': 'f",dictionary
"from numpy import *x = range(16)x = reshape(x,(4,4",numpy
section = 'c_type',string
#a.py__num=1,function
from multiprocessing import poolp = pool(5)def f(x,multiprocessing
"diags.cmdln_parser.add_argument( '--scan-time', ac",argparse
example.com?title=%d0%bf%d1%80%d0%b0%d0%b2%d0%be%d,encoding
dict.items(),view
pip install --upgrade 'package',epd-python
....,multithreading
list&lt;list&lt;int&gt;&gt;,combinations
from django.db import modelsclass person(models.mo,django
@app.route('/')@app.route('/data')def data(): quer,flask
*.txt,perl
import pprint pp = pprint.prettyprinter(indent=4)p,dictionary
123mango abcd mango kiwi peach,split
"python 3.1 (r31:73574, jun 26 2009, 20:21:35) [msc",integer
python 2.6,string
"fruits = set(['apple', 'orange', 'watermelon', 'gr",random
split('\n'),string
data = pandas.read_csv('d:\myfile.csv')for colname,json
"del foo.bardelattr(foo, ""bar"")",del
&gt;&gt;&gt; import hashlib&gt;&gt;&gt; h = hashli,shell
$ nosetests -v mytest.py,nosetests
"def fib(n, sum): if n &lt; 1: return sum else: ret",recursion
import globimport unittesttestsuite = unittest.tes,unit-testing
"string.replace(""condition1"", """")",text
request.is_ajax(),ajax
daysago line_race rating rw wrating line_date  200,pandas
for(int i = 0; i &lt; list.length(); i+=2){ // do ,loops
(5 11) (7 13) (11 17) (13 19) (17 23) (23 29) (31 ,ruby
soup = beautifulsoup(sdata)mydivs = soup.findall(',html
queryset,django
table = ''for index in xrange(256): if index in or,list-comprehension
mat = nonefor col in columns: if mat is none: mat ,arrays
str.join(),string
datetime.utcfromtimestamp(timestamp),datetime
subprocess,subprocess
.. automodule:: mods.set.tests :members: :show-inh,python-sphinx
vars(),introspection
def perform ( function ) : function,function
-=,arrays
itm date amount 67 420 2012-09-30 00:00:00 6521168,pandas
numpy.datetime64,datetime
"ids = [1, 3, 6, 7, 9]for id in ids: mymodel.object",django
def getid(self): return self.__idclass addid(origi,decorator
result is not none,operators
.py,unicode
"some_list1 = []some_list1.append(""something"")",list
class myclass(object): ...m = myclass()if 54 in m:,operators
text.translate(),string
__init__(),inheritance
ax1.set_xticklabels(),matplotlib
pip install git+git://github.com/mozilla/elasticut,github
&gt;&gt;&gt; import django.template&gt;&gt;&gt; fr,django
__call__,methods
import matplotlibimport matplotlib.pyplot as pltim,matplotlib
object,module
"lambda: print ""x""",printing
pip install psycopg2,pip
class photo(db.model): filename = db.stringpropert,json
def remove_non_ascii_1(text): return ''.join(i for,unicode
for,list
sock.shutdown(socket.shut_rdwr)sock.close(),sockets
thefile=open('test.csv'),path
settings.py,django
apt-get install scipy,numpy
class rider(models.model): user = models.foreignke,django
./myprogram -h,argparse
manifest.in,django
"a = array([[1,2,3],[4,5,6],[0,0,1]])",sorting
newdict = olddict.copy(),performance
sum(),builtin
"&gt;&gt;&gt; a = [2,3,4,5,6,7,8,9,0]... xyz = [0,1",loops
&gt;&gt;&gt; s = u'\u2265'&gt;&gt;&gt; print s&gt;,unicode
mylist.append(munfunc()) ,string
package-1,namespaces
&gt;&gt;&gt; dummy.ab100,properties
@asyncdef longcomputation(): &lt;code&gt;token = l,asynchronous
"thearray = [['a','b','c'],['d','e','f'],['g','h','",list
"[i for i in [1, 2, 3, 4]]",tuples
python manage.py syncdb,django
"for i in range (100,0)",loops
class category(models.model): name = models.charfi,django
def method1(self): ... a = a.method2()def method2(,introspection
"import numpya = numpy.array([1, 2, 3])b = numpy.ar",arrays
def setup(self): self.testlistnone = nonedef testl,unit-testing
test.py,perl
"&gt;index: 8 entries, count to max &gt;data column",pandas
collections.defaultdict,dictionary
get_or_create,django
u'hello' ,syntax
"numbers = ['1', '5', '10', '8'];",list
domain = 'http://stackoverflow.com'questions = '/q,string
decimal('3.9'),json
nonlocal,closures
"&gt;&gt;&gt; r'\' file ""&lt;stdin&gt;"", line 1 r'\",string
"print '&lt;a href=""%s""&gt;%s&lt;/a&gt;' % (my_url)",string
"traceback (most recent call last): file ""&lt;pyshe",pygame
$ mkdir myproject$ cd myproject$ virtualenv env,ubuntu
"strid = repr(595)print array.array('c', random.sam",list
[username@hostname ~]$ python2.6python 2.6.5 (r265,matplotlib
pip,pip
dot,numpy
python myprog.py ,command-line-arguments
* * * * * /home/udi/foo/bar.py,working-directory
mmddyy,datetime
__debug__,module
from django.contrib.auth.models import user,django
"class a: def __init__(self, a): self.a = a def p(s",oop
l = [] ,performance
import sqlalchemyfrom sqlalchemy import *from sqla,sqlalchemy
#NAME?,environment-variables
{{ myvar }},django
logging.basicconfig(level=logging.debug),django
ordereddict(),dictionary
&gt;&gt;&gt; from timeit import timer as t&gt;&gt;,c
"class fileinfo(userdict): ""store file metadata"" de",override
b: blueg: greenr: redc: cyanm: magentay: yellowk: ,matplotlib
hello world !!,string
"list1=[1, 2, 3]list2=[4, 5, 6]",list
"a='aaaa'print isinstance(a, basestring)#trueprint ",built-in-types
"temp = open(filename,'r').readlines()",readlines
"mylist = ['123','123456','1234']for each in mylist",list
object.__repr__(),object
[ -3.37260500e+05 +0.00000000e+00j 7.11787022e+05 ,audio
&gt;&gt;&gt; import numpy&gt;&gt;&gt; def gimme():,numpy
"import syssys.path.append(""~/desktop/python_tutori",pydev
"repeat('abc', 7) -&gt; 'abcabca'",repeat
"mystr = """"""why, hello therewonderful stackoverflow",coding-style
&gt;&gt;&gt; 2013*01322143,math
datetime,datetime
x,benchmarking
''.join(random.choice(string.letters) for i in xra,random
1|_—“@chrisgilmer: apple targets big business with,r
pdb,debugging
"1 =&gt; 112 =&gt; 12123 =&gt; 1231234 =&gt; 1,2341",django
__new__,c
/library/python/2.7/site-packages/django/conf/urls,django
49,string-formatting
"timestamp = [ ""2010-04-20 10:07:30"", ""2010-04-20 1",sorting
"x = [1,2,3]y = [4,5,6]",arrays
subprocess,subprocess
"import hmac, base64, struct, hashlib, timedef get_",security
_imagingft.c:73:10: fatal error: 'freetype/fterror,osx
&gt;&gt;&gt; select(p for p in person if p.name.st,orm
std::vector,numpy
"def trisum(n, csum): if n == 0: return csum else: ",recursion
"from xml.dom.minidom import parsedom = parse(""c:\\",dom
pip install matplotlib,matplotlib
"import sysreload(sys)sys.setdefaultencoding(""utf-8",encoding
"1, 4, 5, 7, 8, 12",algorithm
create database mydb;,django
"cursor.execute(""insert into mytable(height) values",mysql
try{ processfile(filepath);}catch (exception ex){ ,exception
'%s in %s',string
python setup.py sdist,pip
done = trueif done: # quit/stop/exitelse: # do oth,syntax
num_list[0:9],list
#NAME?,virtualenv
"select id, name from user where id in (123,456)",sqlalchemy
collections.namedtuple,immutability
"class mywidget(wx.window): buttons = [(""ok"", onok)",class
doors,virtualenv
"def first(the_iterable, condition = lambda x: true",coding-style
/admin/appname/modelname/add/,django
"""%d/%m/%y""",datetime
65,string
"$ python -c ""for r in range(10): print 'rob'""",command-line
"public enum materials{ shaded, shiny, transparent,",enums
./__init__.py./foo.py./tests ./__init__.py ./test_,nose
"a = { 'a': 'value', 'another': 'value',}b = dict( ",dictionary
p = re.compile('^(([^:/?#]+):)?(//([^/?#]*))?([^?#,regex
"points = [(10,5), (5,11), (24,13), (7,8)] x_arr = ",matplotlib
$ sudo apt-get install python-setuptools$ sudo eas,virtualenv
"plt.imshow(g)c = plt.colorbar()c.set_label(""number",matplotlib
class foo(object): pass,class
pip install package&gt;=0.2,pip
startfromline = 141978 # or whatever line i need t,text-files
"[[0,1,'f'],[4,2,'t'],[9,4,'afsd']]",sorting
obj = 'str'type ( obj ) == string,types
for,for-loop
"random.randint(0, 1)",random
int32,numpy
class a(object): foo = 5 # some default value,attributes
"&gt;&gt;&gt; x = [1,2,3,4,5,6,7,8,9,0] &gt;&gt;&gt",list
'/usr/local/lib/python2.6/site-packages',ipython
"integer gridsize,unit,j real mini,maxi double prec",arrays
$ fab site1_service_gw[site1rpt1] executing task ',fabric
db.textproperty,google-app-engine
"class obj(object): def __init__(self, i): self.i =",performance
"s = ""this is my really, really, really, really, re",string
attributeerror: 'nonetype' object has no attribute,object
"def task(something=''): print ""you said %s"" % some",fabric
print,django
class testa(object): def __init__(self): self._a =,decorator
"id int autoincrement primary key,username varchar(",sqlite
"text = ""hey look words!""def anti_vowel(text): text",string
x.push(),list
[section]bar=foo[section 2]bar2= baz,configparser
"a = [1,2,3,4]b = [2,5]a - b = [1,3,4]b - a = [5]",list
__getattr__,oop
"my_list = ['red', 'blue', 'orange']function_that_n",list
def my_function():,camelcasing
./test.py,unicode
var top5 = array.take(5);,list
#hardcoded path,scripting
x,if-statement
"def getpermutations(string, storage, prefix=""""): i",recursion
import matplotlib.pyplot as pltimport numpy as npx,matplotlib
import numpycolumn_labels = list('abcd')row_labels,matplotlib
class.forname().newinstance(),class
cmp,forward-declaration
for,linux
plt.gca().set_xticks([])plt.xticks([])ax.set_xtick,matplotlib
pipe(),performance
timedelta,datetime
continue,syntax
import pymongofrom pymongo import connectionconnec,mongodb
"teams_list = [""man utd"", ""man city"", ""t hotspur""]d",table
def a(): ...def b(): ...if __name__ == '__main__':,ruby
#NAME?,setuptools
&gt;&gt;&gt; df sales discount net_sales cogsstk_i,pandas
a + list,list
"mydict = { ""key1"": 1, ""key2"": 2, ""key3"": 3, }",indentation
if something in dict_of_stuff: pass,performance
def select_choice(): loop = 1 row = 0 while loop =,list
_”“_”—_”— simulate.py_”“_”—_”— src_”ä____ _”“_”—_”,ide
"{ k1: v1, k2: v2 ... }",dictionary
"self._load, self._twice, self._half = load, load *",performance
city,constructor
"{ ""glossary"": { ""title"": ""example glossary"", ""glos",json
class myclass: def __init__(self): self.title = 't,string
java -jar &lt;jar file&gt;,packaging
6†ä__918†ä__417†ä__712,unicode
"def testme(filepath): with open(filepath, 'r') as ",mocking
"""%b %b"" % (true, false)",boolean
threading,multithreading
from multiprocessing import poolfrom time import s,multiprocessing
for each document in update: existing_document = c,mongodb
hash('http://stackoverflow.com') result: 193471190,google-app-engine
logging,logging
subprocess.popen(),subprocess
"except exception, e:except exception as e:",exception
__cmp__,operator-overloading
"""&lt;space&gt;&lt;space&gt;&lt;space&gt;""",text
"with open(path, mode) as f: return [line for line ",return
len(x),generator
elementtree,xml
[],operator-overloading
"d = {'key1':1,'key2':14,'key3':47}",dictionary
"df1 = pandas.dataframe( {  ""name"" : [""alice"", ""bob",pandas
"traceback (most recent call last): file ""c:\users\",methods
"&gt;&gt;&gt; a=[1,2,3]&gt;&gt;&gt; a.remove(2)&gt;",list
iterator,code-review
@login_requireddef view(...):,django
def r(a):i=a.find('0');~i or exit(a);[min[(i-j)%9*,algorithm
"['title', 'email', 'password2', 'password1', 'firs",list
logging,logging
*.pyc*.pyo,django
a,list
#include &lt;iostream&gt;class animal {public: vir,oop
ftplib,stream
sys.stdout,console
model.filefield,django
downloading file foofile.txt [47%] downloading fil,console-output
my_package.my_module.myclass,reflection
logging.conf,django
"i = [1, 2, 3, 5, 8, 13]j = []k = 0for l in i: j[k]",list
'y\xcc\xa6\xbb',string
mydictionary={'keyname':'somevalue'}for current in,dictionary
exit(),ipython
email_backend = 'django.core.mail.backends.smtp.em,django
foo = foo.objects.filter(bar=baz)foo = len(foo) &g,django
"try: some_method()except exception,e:",exception
"import osdef getfile(filename,results): f = open(f",file
reserved.objects.all().filter(client=client_id).or,django
"end = smooth(data,window_len=40)plot.plot(time[0:l",variables
__hash__(),hashtable
for x in xrange(array.shape[0]): for y in xrange(a,numpy
try: import jsonexcept importerror: from django.ut,pyflakes
company1.name = 'banana' company1.value = 40,object
bool,class
# virtualenv --no-site-packages test_pil# test_pil,python-imaging-library
"re.split('\w', 'foo/bar spam\neggs')-&gt; ['foo', ",regex
"import sysimport ldapserver = ""ldap://my-ldap-serv",authentication
"traceback (most recent call last): file ""./obp_pb_",linux
if,pylint
tostring(),string
__new__(),class
script xyz.py returned exit code 0,exit-code
import sysprint sys.argv[1],windows
"@app.route('/sitemap.xml', methods=['get'])def sit",static
"a = [1,1,1,1,2,2,2,2,3,3,4,5,5]",counter
"for foo in xrange(10): bar = 2print(foo, bar)",scope
&lt;script&gt;,text
"def leave_room(self, uid): u = self.user_by_id(uid",binding
"class myclass: __element1 = 123 __element2 = ""this",class
+,string
class dailytask(models.model): time = models.timef,django
eval(input('blah')),eval
*args,syntax
logging,django
connectiondetails,dictionary
parameter-name parameter-value,regex
"import csvoutfile = file('test.csv', 'w')writer = ",csv
"python 2.6.2 (r262:71605, apr 14 2009, 22:40:02) [",windows
"[(x,y) for x in a for y in b]",list-comprehension
class contactform(forms.form): subject = forms.cha,django
colorbar(),matplotlib
the two below fields in combination should be uniq,sqlalchemy
s='arbit'string='%s hello world %s hello world %s',string
@app.route('/ajax_ddl')def ajax_ddl(): xml = 'foo',flask
"def somemethod(self, arg1, kwarg1=none): pass",function
"file ""setup_posix.py"", line 24, in mysql_config ra",mysql
pip freeze --local &gt; requirements.txt,version
"logger.info(""skipping {0} because its thumbnail wa",formatting
 #!/usr/bin/python import logging logger = logging,logging
import urllib2(need to add cookie to the request s,urllib2
#NAME?,deployment
numpy.array,arrays
"with open(filename, ""r"") as f: data = json.loads(f",json
"d3 = dict(d1, **d2)",dictionary
import osos.system('sox input.wav -b 24 output.aif,command-line
foo = `cat /tmp/baz`,backticks
"def args_as_ints(f): def g(*args, **kwargs): args ",decorator
ipython,function
fabric,ssh
'123stringabc' -&gt; 'string',substring
this is a paragraph with&lt;[1&gt; in between&lt;/,regex
from smtplib import smtpimport datetimedebuglevel ,smtp
when_added + duration - now,timedelta
select address from addressbook where city='boston,sqlalchemy
flush,io
&gt;&gt;&gt; x = 42; y = 54,syntax-error
@csrf_exemptdef mobileregister(request): if reques,django
__init__.py,initialization
secret_key,django
pydoc,matplotlib
numpy,arrays
import loggingimport logging.handlerslogger = logg,file
models.py,django
"image = image.open(file).convert(""l"")",matplotlib
os.path,coding-style
"model = model(a=5, b=6)model.save()",django
my_var == none,comparison
"import bdef hello(): print ""hello""print ""a.py""prin",attributeerror
from crypto import randomfrom crypto.cipher import,encryption
mydict['val'],dictionary
class sample(models.model): users = models.manytom,django
[x for x in seq if predicate(x)][0],predicate
10 -&gt; 1012 -&gt; 1013 -&gt; 1514 -&gt; 1516 -&g,rounding
"def generator(x, y): for i in xrange(x): for j in ",yield
"foldl (+) 0 [1,2,3,4,5]--&gt; 15",list
"o = ""a test of \xe9 char"" #i want this to remain a",unicode
resample,documentation
"comb = calculate_combinations(n, r)",statistics
def xstr(s): if s is none: return '' else: return ,idioms
"return str(hours)+"":""+str(minutes)+"":""+str(seconds",string-formatting
"path = os.path.join(os.path.dirname(__file__), os.",path
virtualenv,project
task.delay(),django
"def sh_escape(s): return s.replace(""("",""\\("").repl",shell
class meta,django
def transmit(func): obj = pickle.dumps(func) [send,function
image.save(),python-imaging-library
class a(): x=3class b(): def __init__(self): self.,oop
&gt;&gt;&gt; os.listdir(os.getcwd())['cx_oracle-do,filesystems
"if curr_x -1 &gt; 0 and (curr_x-1 , curr_y) not in",list
&gt;&gt;&gt; (20-10) / (100-10)0,math
gevent,osx
"['q1.3','q6.1','q1.2','q1.1',......]",pandas
"def weightedchoice(choices): """"""like random.choice",optimization
class newsitem(models.model): headline = models.ch,django
response = request.postuser = fbapiuser(user_id = ,json
"import urllib2url = ""http://google.com""data = urll",urllib2
__hash__,json
a[i]__== b[i],arrays
#!/usr/bin/env pythonfrom __future__ import print_,string
$ easy_install-2.6 -d /home/user/lib/python2.6 mys,mysql
mydic = {}mydic['key_name'] = 'value_name',dictionary
from functools import partialclass cage(object): d,scope
is_private = request.post['is_private'],django
"map(function, iterable, ...)",map-function
"""this should be connected"" becomes ""this_should_be",regex
pypi.install('requests'),pip
$ pip,osx
gmtime(),datetime
"['one', 'two', 'one']",string
import urllib2u = urllib2.urlopen('http://server.c,http
manager.py syncdb,django
return ''.join([`num` for num in xrange(loop_count,list-comprehension
"#my dictionarydict = {}dict['capital']=""london""dic",list
#!/usr/bin/env python# -*- coding: utf-8 -*-# basi,concurrency
import logging# create loggerlogger = logging.getl,datetime
python --help,syntax-checking
import argparseparser = argparse.argumentparser( v,argparse
indentationerror: unindent does not match any oute,ipython
"startnumber = int(raw_input(""enter the start numbe",fibonacci
from __future__ import print_function,python-import
import threadingclass firstthread (threading.threa,linux
python manage.py migrate,django
"def example(): age = ... name = ... print ""hello %",string
itemindex = numpy.where(array==item)[0][0]nonzero(,numpy
if not new: new = '#',nonetype
python setup.py install,easy-install
"l= [0, 23, 234, 89, none, 0, 35, 9]",list
from sets import set[...]myhash = set(mylist),list
foo,class
error: setup script exited with error: command 'x8,compiler-errors
template_dirs = ( 'c:/django-project/myapp/mytempl,django
1bob5sandy,capitalize
propertyname1=propertyvalue1propertyname2=property,properties
ioerror: decoder zip not available,python-imaging-library
url '^/accounts/password/reset/$',django
'ascii' codec can't encode character u'\u2019' in ,unicode
string.encode('utf-8'),unicode
1.1.1.1.1.jpg1.1.jpg1.jpg,regex
est,datetime
simplehttpserver,windows
print,syntax
running installrunning buildrunning build_pyrunnin,python-imaging-library
g,flask
n,arrays
y = functionwithyield()for x in y: print(x)#here m,generator
"class hi: def __init__(self): self.ii = ""foo"" self",methods
$python myfile.py var1 var2 var3,command-line
/foldera/folderb/folderc/folderd/,path
lxml,version
"a = np.array([[1,2,3],[2,3,4]])",numpy
"n = 5.59round(n, 1) # 5.6",floating-point
admin.site.register(menuentry),django
"[(1,""juca""),(22,""james""),(53,""xuxa""),(44,""delicia""",search
"x = """"for key, val in {'a':'a', 'b':'b'}.items(): ",dictionary
numpy,numpy
"r""^(?p&lt;eggname&gt;\w+)-(?p&lt;eggversion&gt;[\d",version
uniquecrosstabs = list(itertools.chain(*uniquecros,operators
"dr = csv.dictreader(open(f), delimiter='\t')# proc",csv
# -*- coding: utf-8 -*-,encoding
"def divide(x, y): quotient = x/y remainder = x % y",function
fixture/initial_data.json,json
"list = [11, 12, 13, 14, 15, 16]",list
unicodeencodeerror: 'charmap' codec can't encode c,unicode
with lock: with db_con: with socket: #do stuff,with-statement
"s = [1,2,3,4,5,6,7,8,9]n = 3zip(*[iter(s)]*n) # re",iterator
"import csvb = open('test.csv', 'w')a = csv.writer(",csv
"t = ((1, 'a'),(2, 'b'))",dictionary
"deprecationwarning: integer argument expected, got",warnings
pdb,shell
"a = [32, 37, 28, 30, 37, 25, 27, 24, 35, 55, 23, 3",list
return jsonify(json_list = qryresult),sqlalchemy
"traceback (most recent call last): file ""c:\python",django
repr(),repr
"&gt;&gt;&gt; most_common(['duck', 'duck', 'goose']",list
/tmp/webdriver-py-profilecopy,firefox
"from numpy import *def comb(a,b): c = [] for i in ",arrays
"&lt;img src=""image.png""&gt;",ipython
"pic = image.open(""foo.jpg"")pix = numpy.array(pic.g",image
"l = [[1,2,3],[4,5,6],[7,8,9]]",list
zip(),list
# setup output listsoutput1 = list()output2 = list,parallel-processing
"&gt;&gt;&gt; lst = iter([1,2,3])&gt;&gt;&gt; next(",list
jsonpickle.encode,json
site-packages,python-egg-cache
'mr john smith ',string
foobar(),selenium-webdriver
"l = [['40', '20', '10', '30'], ['20', '20', '20', ",list
nan,numeric
import unittestclass basetest(unittest.testcase): ,unit-testing
"def my_func(param1, param2): # stuff",function
import *,python-import
from foo import barimport foo,coding-style
"def isempty(self, dictionary): for element in dict",dictionary
"foo = """"""this is a multi-line string.""""""",string
image.open(urlopen(url)),python-imaging-library
"user = ""alex""number = 38746print(""%s asked %d ques",printing
"class thing(models.model): priorities = ( (0, 'low",django
disttopoint,class
python manage.py runserver myip:port,mysql
def __len__(self),magic-methods
"&gt;&gt;&gt; type(myobject, generator)",generator
"echo ""$string"" | sed -e ""s|.*aaa\(.*\)zzz.*|\1|""",string
for(var propertyname in objectname) var currentpro,reflection
"from file.py import function(a,b)",file
if something == 'this': dothis()elif something == ,performance
.c,packaging
"httpresponse.__init__(content='', mimetype=none, s",django
array(),arrays
def foo():,vim
subprocess.check_output(),linux
pandas.read_csv(),pandas
data = pandas.read_csv('mydata.csv'),numpy
dataframe,pandas
requests.get,file
"1e-6, 1e-5, 1e-4, ... 1e6, 1e7",matplotlib
"&gt;&gt;&gt; x=[1,2]&gt;&gt;&gt; x[1]2&gt;&gt;&gt;",list
python manage.py test appname,sql
&lt;html&gt;&lt;head&gt;heading&lt;/head&gt;&lt;bo,xml-parsing
"class test(object): def _decorator(self, foo): foo",class
"import urlsdef show_urls(urllist, depth=0): for en",django
"def make_image(inputname,outputname): data = mpimg",matplotlib
&gt;&gt;&gt; import _imaging&gt;&gt;&gt; _imaging.,image
"@propertydef name(self): if not hasattr(self, '_na",caching
"a = (b == true ? ""123"" : ""456"" )",syntax
"&gt;&gt;&gt; points={'a':(3,4), 'b':(1,2), 'c':(5,",dictionary
import datetime as dtimport pandas as pdimport sci,dataframe
"data = c(rep(1.5, 7), rep(2.5, 2), rep(3.5, 8), re",r
can't decode...,unicode
__init__.py,module
"class mycontroller(controller): path = ""something/",class
"mylist = [""a"",""b"",""c"",""d""]",list
threading.thread,multithreading
"{""text"":""lalala""}",json
"for i in range(len(latitudes): lat,long=(latitudes",list
npm install jquery,windows
os.system(),asynchronous
3,datetime
sorted(),sorting
df= gi ptt_loc 0 384444683 593  1 384444684 594  2,pandas
"for i, data in enumerate(data_list): code_that_is_",idioms
"import numpy as npa = np.array([1,2,3,4,5,6,7,8,9]",arrays
keyboardinterrupt,keyboardinterrupt
{% if files %} update{% else %} continue{% endif %,jinja2
"m = matrix([[1], [2], [3], [4]])",arrays
"i'm ""stuck"" :\",regex
import settings,django
def decorator(view): # do something that requires ,decorator
"""c:\program files\alex""",mkdir
"bins, n=hist()",numpy
"a = raw_input(""enter a: "")b = raw_input(""enter b: ",string
"dictionary = {""foo"":12, ""bar"":2, ""jim"":4, ""bob"": 1",dictionary
setup.py,distutils
id(o1) == id(o2),equality
import a_ridiculously_long_module_name,module
main.pyw,distribution
a\ __init__.py b\ __init__.py c\ __init__.py c_fil,dependencies
"open(""image.jpg"")",graphics
$myhash{foo}{bar}{baz} = 1,autovivification
"import smtplib#server = ""localhost""from = 'monty@p",email
(?p&lt;group_name&gt;_—?),regex
middleware_classes = ( 'django.middleware.common.c,django
"import csvclass csv: def __init__(self, file=none)",django
mysql-5.5.8-osx10.6-x86_64.dmg,mysql
"&gt;&gt;&gt; x = ""google""&gt;&gt;&gt; x is ""google",identity
for i in range(3): for j in range(3): for k in ran,performance
u',string
from django.core.exceptions import middlewarenotus,django
ax.xaxis.set_major_locator,matplotlib
while true: # code executed here time.sleep(60),timer
"def divisorgenerator(n): for i in xrange(1,n/2+1):",algorithm
afplay file.mp3,audio
pip install,setuptools
"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",list
pip,pip
&amp;#x01ce;,html
http://example.com/search?q=question,url
threadsafe: true,google-app-engine
"class myclass(): def __init__(self, name, friends)",django
pip,pip
python-code.py,naming
import unittestclass ourtcfw(unittest.testcase): d,unit-testing
"filter(lambda x: x == 1, [1, 1, 2])",list-comprehension
class classroom(models.model): room_number = [....,django
if,optimization
logging.formatter('%(asctime)s'),logging
zip(),zip
"d_args = {'kw1': 'value1', 'kw2': 'value2'}example",arguments
str.decode('source_encoding').encode('desired_enco,sqlite
class suit: ...class heart(suit): ...class spade(s,subclass
trim_api_url = 'http://api.tr.im/api' auth_handler,http
"import xlwtx=1y=2z=3list1=[2.34,4.346,4.234]book =",excel
if condition: var = somethingelse: var = something,c
"(4,5) &lt; (3,5) # equals false",comparison
virtualenv,django
"x = ['a', 'b', 'c', 'd'] print ''.join(x)",string
from myproject.myapp.models import foodef foos(req,django
connection = db.session.connection()connection.exe,sql
class user: def __init__(self): self.data = [] sel,syntax
&gt;&gt;&gt; import mock&gt;&gt;&gt; @mock.patch(',testing
%path%,windows
"str =""&lt;?xml version=""1.0"" ?&gt;&lt;person&gt;&l",xml
"f1 = open (file1, ""r"")text = f1.read()",unicode
$ cd /tmp/$ wget http://pypi.python.org/packages/s,google-app-engine
"import sysprint ""args: %r"" % sys.argv[1:]",windows
ugknbfddgicrmopn,regex
import argparsepa = argparse.argumentparser()pa.ad,argparse
db = sqlite3.connect('mydata.sqlitedb')cur = db.cu,orm
finally,try-finally
import ximport x as yfrom a import b,python-import
# example from http://docs.python.org/3.3/library/,csv
mkdir 1cd 1for i in {1..50000}; do dd if=/dev/zero,performance
"file ""/usr/lib/python2.7/random.py"", line 47, in &",ubuntu
.. automodule:: mymodule :members:,python-sphinx
"&gt;&gt;&gt; g = codecs.open(""c:\users\eric\deskto",unicode
"extensions = ['.mp3','.avi']file_name = 'test.mp3'",string
#!/usr/bin/python# -*- coding: &lt;encoding name&g,encoding
(x instanceof number).,types
"def set_property(property,value): def get_property",getter-setter
opencv,opencv
'/segment/segment/'.split('/'),string
if (datetime.now() - self.timestamp) &gt; 100# whe,datetime
class categorymodel(models.model): parentid = mode,django
&gt;&gt;&gt; for x in range(1000): print(x),osx
"substring = ""please help me out""",string
$ ./manage.py test animals.animaltestcase,django
pyplot.text(),textbox
id | name | address | city | state | zip | phone |,csv
"if hasattr(obj, 'attribute'): # do somthing",exception
is,types
"def rolling_window(seq, window_size): it = iter(se",algorithm
"function #12, total time: 2.0s",profiling
from django import templateregister = template.lib,django
x.__class__.__name__,python-datamodel
hasnext,iterator
"exception keyerror: keyerror(4427427920,) in &lt;m",gevent
"list1 = sorted(csv1, key=operator.itemgetter(1))",sorting
put(),fabric
&gt;&gt;&gt; bin(6) '0b110',binary
manage.py syncdb,django
module = __import__('module_name'),python-import
"print(""hello, world!"") # prints ""hello, world!""pri",printing
root.mainloop(),events
"a=array([5,4])print aprint a.t",numpy
__all__,module
__repr__(),encoding
regexfield,html
set,set
sys.stdout,file
import requestsimport osimport shutilglobal dumpde,file
ipython,ipython
exception in thread thread-3:traceback (most recen,multiprocessing
project  -- pkg01 -- test01.py -- pkg02 -- test02.,logging
.tables.dump,api
os.system,pdf
&gt;&gt;&gt; import datetime&gt;&gt;&gt; today = d,datetime
from django.tests import testcaseclass mytests(tes,django
"&lt;option value=""""&gt;---------&lt;/option&gt;",django
&gt;&gt;&gt; a = lambda x : 1 + x&gt;&gt;&gt; a(5),syntax
custnum customername itemqty item seatblocks iteme,pandas
from datetime import datetimetstart = datetime.now,datetime
np.nan,numpy
modelform,django
$s =~ s/[^[:print:]]//g;,string
package_data,setuptools
def insert(array): connection=sqlite3.connect('ima,sqlite
try: import eggsexcept importerror: pass,python-import
"nl_east = {'phillies': [645, 469], 'braves': [599,",list
100 - {{object.article.rating_score}} ,django
"n,bins,patchs = ax.hist(mydata1,100)n,bins,patchs ",matplotlib
# -*- coding: utf-8 -*-,file
+,string-concatenation
gridspec,plot
class a: list=[]y=a()x=a()x.list.append(1)y.list.a,class
'ham' not in 'spam and eggs',syntax
"&lt;root&gt; &lt;doc&gt; &lt;field1 name=""blah""&gt",xml
a,mocking
def execute(command): process = subprocess.popen(c,subprocess
import matplotlib.pyplot as pltcdict = { 'red' : (,graph
pip install &lt;package name&gt;,installation
"import numpy as npprint np.zeros((3,5))[:,np.newax",numpy
class dictmodel(models.model): key = models.charfi,django
mysql-python-1.2.3c1&gt;setup.py installrunning in,mysql
@app.route('/...'),flask
#NAME?,installation
first(iterable),iterator
"&gt;&gt;&gt; mylist = [4,1,88,44,3]&gt;&gt;&gt; my",list
(ve)[kakarukeys@localhost ve]$ pythonpython 2.6.6 ,shell
"&gt;&gt;&gt; l = [(1,2), (3,4), (8,9)]&gt;&gt;&gt;",list
s1,pandas
for repo in g.get_user().get_repos(): print repo.n,api
"try: with open(""file"", ""r"") as f: line = f.readlin",finally
"class base(object): @classmethod def do(cls, a): p",class
csv,pandas
dtype=np.double,arrays
.asm,iterator
"print ""my type is "" + type(someobject) # (which ob",reflection
"testvar = input(""ask user for something."")",string
"_mysql_exceptions.operationalerror: (2006, 'mysql ",exception-handling
list_of_names = [x.name for x in list_of_objects],list-comprehension
if string.find(word): print 'success',string
import cv2,opencv
foo = ['bar' for _ in xrange(10000000)],memory-management
t = e['updated_parsed']dt = datetime.datetime(t[0],datetime
"from subprocess import popen, pipe, stdoutp = pope",subprocess
"[u'value 1', u'value 2', ...]",csv
dict,caching
96.02166667,gps
"class foo(object): def __init__(self): print ""you ",named-parameters
"&gt;&gt;&gt;datetime.datetime(2012,04,01,0,0).strf",datetime
regedit4[hkey_local_machine\software\python][hkey_,windows
site = urllib2.urlopen('http://google.com'),proxy
x = 1 # 0001x &lt;&lt; 2 # shift left 2 bits: 0100,binary
do until x: ...,loops
"data_dict = { 'title' : 'awesome title', 'body' : ",django
class edit_form(forms.form): summary = forms.charf,django
"class person: num_of_people = 0 def __init__(self,",oop
class somemodel(models.model): id = models.autofie,django
path=c:\path,string
&gt;&gt;&gt; import sys &gt;&gt;&gt; from pprint i,path
start_date = datetime.datetime.now() + datetime.ti,django
nbins,arrays
/etc/hosts,dns
"pairs = zip(t[::2], t[1::2])",slice
def is_english_word(word): pass # how to i impleme,nltk
myapp/foo.py,stack-trace
"try: r = requests.get(url, params={'s': thing})exc",request
"#!/bin/bashwork_dir=""/var/lib/foo""daemon=""/usr/bin",linux
import numpy as np,numpy
&gt;&gt;&gt; import json&gt;&gt;&gt; releases = {1,json
from module import function,python-import
"""strings"": [ {""-name"": ""city"", ""#text"": ""city""}, {",json
"instr = ""'%s', '%s', '%d', '%s', '%s', '%s', '%s'""",string
flask.request.data,flask
"isinstance(val, int)",boolean
ë–,linux
"myvar = ""rajasekar sp""",string
"a = [{'name':'john','age':45}, {'name':'andi','age",list
class animal(object): def __init__(self): self.leg,oop
def callback(msg): print msg#creating a list of fu,lexical-closures
~&gt;ab -n 10 -c 1 http://localhost:8090/this is a,apachebench
set,data-structures
len,memory
"{% for p in posts %} &lt;div class=""post width1 he",django
"# this is done for each log in my directory, i hav",list
"import csvwith open('thefile.csv', 'rb') as f: dat",csv
data=urllib2.urlopen(url).read(),gzip
class testsequencefunctions(unittest.testcase): de,unit-testing
def myfunct(): ... yield result,iterator
for(i=n; i&gt;=1; --i) { //do something with i},iteration
rstrip,string
/&lt;variable&gt;/add,flask
"if (!os.path.exists(""/usr/share/sounds/blues"")): p",negation
v[4],slice
"&gt;&gt;&gt; apple = ""\xc4pple""&gt;&gt;&gt; apple'",character-encoding
"import collectionsdata = [ {'firstname': 'john', '",django
for element in some_list: foo(element)def foo(elem,function
databases = { 'default': { 'engine': 'django.db.ba,django
"['file1.txt', 'file2.txt', ...]",file-io
user_list = user.objects.filter(userprofile__level,django
import matplotlib.pyplot as pltax = fig.add_subplo,matplotlib
def fun_with_side_effects(x): ...side effects... r,list-comprehension
&gt;&gt;&gt; from random import randint&gt;&gt;&gt,random
"typeerror: float argument required, not numpy.ndar",file-io
"try: somefunction()except: print ""exception happen",exception
"headers=['id', 'year', 'activity', 'lineitem', 'da",csv
label = axes.yaxis.get_major_ticks()[2].labellabel,matplotlib
import timeitdef foo(): # ... contains code i want,scope
[something_that_is_pretty_long for something_that_,coding-style
"&gt;&gt;&gt; x = dict(a=1, b=2)&gt;&gt;&gt; y = di",dictionary
"&gt;&gt;&gt; sum = lambda x, y : x + y&gt;&gt;&gt;",functools
"a = [[1.2,'abc',3],[1.2,'werew',4],........,[1.4,'",file
re.sub('([\u064b-\u0652\u06d4\u0670\u0674\u06d5-\u,regex
"d = {1:-0.3246, 2:-0.9185, 3:-3985, ...}",dictionary
self.rect.centerx,self
instance.field = file(file('/folder/file.txt'))ins,django
./site.py./apps/members/__init__.py./apps/members/,flask
"repmat([1; 1], [1 1 1])",matlab
"['aden', 'abel']",string
"isinstance(x, str)",string
numpy,numpy
sudo pip install ryu,ubuntu-12.04
do_something_that_fails || true,error-handling
string.split(),string
"with open(""c:\python26\seriph1.bmp"", ""rb"") as f: d",base64
from datetime import datetimedate_string = '2009-1,datetime
new_self = self.__class__.objects.get(pk=self.pk)f,django
"{% extends ""base1.html"" %}{% include ""commondata.h",django
import randomimport timeit# random lists from [0-9,list
"for ii in range(200): for jj in range(200, 400): .",loops
"input = [ ('11013331', 'kat'),  ('9085267', 'not')",group-by
downloading/unpacking pytz could not find a versio,virtualenv
"""""decoder jpeg not available""""",django
site1,django
prod(),list
[...],recursion
"go = content.objects.get(name=""baby"")# go should b",mysql
$pip install selenium$sudo apt-get install firefox,linux
svg,svg
"df=dataframe(index=['a','b','c'], columns=['x','y'",pandas
in [7]:pledge.amount.plot()out[7]:&lt;matplotlib.a,ipython
"mystring.find(""substring"", 2nd)",string
"award_dict = { ""url"" : ""http://facebook.com"", ""ima",language-features
parser = argparse.argumentparser()parser.add_argum,argparse
"pow(x, y)",math
"""name1=value1;name2=value2;name3=value3""",string
dict,random
"class animal(object): ""empty animal class""class do",polymorphism
if element.isdigit(): newelement=int(element),string
"created_at = models.datetimefield(false, true, edi",django
from sklearn import datasetsiris = datasets.load_i,machine-learning
this inspection detects shadowing names defined in,coding-style
self.response.out.write('ok'),web-services
set pythonpath=...,virtualenv
"import datetimet= (2010, 10, 2, 11, 4, 0, 2, 41, 0",tuples
"for i in xrange(1,5) date=datetime.datetime(2003,8",datetime
class jobstatus(base): __tablename__ = 'jobstatus',sqlalchemy
a.b=2,properties
len(glob.glob('*')),count
import logginglogging.basicconfig(level=logging.de,logging
babel==0.9.5 # translationcherrypy==3.2.0 # web se,comments
import urllib2import sysusername = sys.argv[1]pass,authentication
virtualenv --no-site-packages -p python2.5 myenv,virtualenv
import matplotlib,osx
re.compile(),string
import matplotlib.pyplot as pltfig=plt.subplot(131,matplotlib
if,syntax
"a = [1,2,3,4]",dictionary
itertools,optimization
class page(models.model): title = models.charfield,django
__len__,function
unittest,unit-testing
mag = lambda x: math.sqrt(sum(i**2 for i in x)),numpy
sha1(repr(sorted(my_dict.items()))),hash
alert(),wxpython
"fig = figure()ax = fig.add_subplot(111)ax.plot(t, ",matplotlib
"file1 = open('file1', 'r')file2 = open('file2', 'r",file
subprocess.check_output,string
sys.getsizeof,list
/project /bin /src /pkgname  __init__.py module1.p,testing
hello world!,multithreading
"in [25]: np.power(10,-100)out[25]: 0in [26]: math.",numpy
def adef b,debugging
import matplotlib.pyplot as plttraceback (most rec,matplotlib
"traceback (most recent call last): file ""python_md",unicode
"x = [1,2,3,4]y1 = [4,8,12,16]y2 = [1,4,9,16]",matplotlib
#include&lt;regex&gt;#include&lt;vector&gt;#includ,regex
multiprocessing,numpy
list = map.values();,list
"with open('file.txt', 'r') as f: # do stuff with f",file
"[0] (0.01, 0.01, 0.02, 0.04, 0.03)[1] (0.00, 0.02,",perl
"r = numpy.zeros(shape = (width, height, 9))",numpy
import ftplibimport urllib2import osimport logging,exception
&gt;&gt;&gt; import json&gt;&gt;&gt; json.dumps([2,json
dict,dictionary
warnings,suppress-warnings
d = {},pycharm
import csvimport sysreader = csv.reader(open(sys.a,user-input
"import osimport statos.chmod('somefile', stat.s_ie",chmod
graph1.set_xticklabels([]),matplotlib
project/ __init__.py /code __init__.py sut.py /tes,testing
2.7.0_bf4fda703454,string
logger = logging.getlogger(__name__),logging
eval(),eval
from distutils.core import setupimport py2exesetup,wxpython
class movie(models.model): title = models.charfiel,django
"3 -&gt; ""3""3. -&gt; ""3""3.0 -&gt; ""3""3.1 -&gt; ""3.1",formatting
"class mytype(type): def __init__(cls, name, bases,",metaclass
join(),multithreading
class foo(object): def _get_age(self): return 11 a,inheritance
df,pandas
numpy.histogram(),numpy
column 1index title apples 1oranges 2puppies 3duck,pandas
queryset = modelclass.objects.filter(somekey=foo),django
import stringdef translate_non_alphanumerics(to_tr,unicode
driver.get_element_by_id('foo').clear_field(),selenium
brew doctor,osx
class circuitform(modelform): class meta: model = ,django
"numpy.float32 -&gt; ""python float""numpy.float64 -&",numpy
"x = ['a', 'b']y = ['b', 'a']",list
import timeimport strftime from timeprint strftime,time
pip freeze,ubuntu
"find . -name ""*.pyc"" -exec rm '{}' ';'",bash
mock.assert_called_with,unit-testing
"a = array([[0, 1, 2], [0, 2, 0]])",arrays
genomediagram,ipython
python -m pdb /path/to/my/nosetests testfile.py,testing
docutils.parsers.rst,restructuredtext
from scipy import *from numpy import *def get_bin_,numpy
def is_palindromic(s): return all(s[i] == s[~i] fo,operators
"[1,2,3]",matlab
matplotlib.pyplot,matplotlib
"client = paramiko.sshclient()stdin, stdout, stderr",ssh
os.getpid(),process
# myapp/views.pyfrom django.views.generic import *,django
"&gt;&gt;&gt; mydict = {'one': 1, 'two': 2, 'three'",list
django.contrib.auth.views.login,django
-1,input
is,python-datamodel
&gt;&gt;&gt; 'add \x93monitoring\x93 to list '.enc,unicode
testcase.assertitemsequal,unit-testing
cmd.exe,windows
"import cvcv.namedwindow(""w1"", cv.cv_window_autosiz",opencv
{% csrf token %},django
"def unicode_csv_reader(unicode_csv_data, dialect=c",utf-8
math,module
"f = open('out.txt','w')f.write('line1\n')f.write('",newline
#NAME?,pydev
x.__add__(y) &lt;==&gt; x+yx.__getattribute__('foo,double-underscore
"urlpatterns = patterns('', url(r'^$', 'macmonster.",django
import globimport pandas as pd# get data file name,csv
pip install,pip
python -m simplehttpserver,simplehttpserver
class xmldocs(db.expando):  id = db.integerpropert,google-app-engine
./configure --with-features=huge --enable-pythonin,vim
"filename = ""/foo/bar/baz.txt""with open(filename, """,file-io
class model(model.model): image=models.imagefield(,django
stored_blocks = {}def replace_blocks(m): block = m,closures
"result = unicode(google.searchgoogle(param), ""utf-",encoding
"def search(values): ""using depth-first search and ",variables
def review(models.model) ...fields... overall_scor,django
"&gt;&gt;&gt; a = (1,2,3)&gt;&gt;&gt; b = (3,2,1)&g",tuples
"words = ['how', 'much', 'is[br]', 'the', 'fish[br]",list
__getattribute__,oop
urllib.urlopen(),urllib
"#!/usr/bin/pythonprint ""hello world""",cron
TRUE,arrays
"conn = sqlite3.connect(""mydatabase.db"")",sqlite
[extensions]hgext.bookmarks =hggit =,windows
&gt;&gt;&gt; print type(65535)&lt;type 'int'&gt;&g,integer
timeit,testing
from: a b c 0 1 2 3 1 10 11 12 2 20 21 22to : b c ,pandas
$ magic_tool &lt;eofwith something: passeof1: 'wit,code-analysis
"strcpy(argv[0],""othername"");",process
str,algorithm
"bin(n).count(""1"")",binary
s,string
bin/pyspark,apache-spark
"a = [-2,1,5,3,8,5,6]b = [1,2,5]c = [ a[i] for i in",list
nosectionerror,parsing
foo.hs,performance
empty_strings_allowed,django
"element = driver.find_element_by_id(""myid"")driver.",selenium
2010 2 2009 4 1989 8 2009 7 ,dictionary
"soup.find(""tagname"", { ""id"" : ""articlebody"" })",beautifulsoup
user.get_template.lastip,django
counter,algorithm
apple = 1pears = 2oranges = 3,algorithm
[u'string'],unicode
python-social-auth,django
variable,regex
class a(): def method_a(self): pass @decorator1 de,class
"traceback (most recent call last): file ""/usr/loca",server
if,exception-handling
rand = np.random.randomstate(1)df = pd.dataframe({,group-by
"&gt;&gt;&gt; x = []&gt;&gt;&gt; x += ""ha""&gt;&gt;&",list
value,django
for name in names: if name[-5:] == 'smith': names.,optimization
try: do_something()except: # how can i log my exce,exception
&gt;&gt;&gt; string.whitespace'\t\n\x0b\x0c\r ',string
pip install,virtualenv
stable = stable + '\n' + getrow(),html
a1b2b10l1c1n200j1,regex
subprocess.popen,shell
"class foo(): def a(self): print ""hello""class foo(o",inheritance
data,pandas
from pyvirtualdisplay import displayfrom selenium ,google-chrome
python manage.py shell,shell
proxy = { ip: port},http-request
"[none, none, 1, 2, 3, none, none]",list
"{ ('banana', 'blue' ): 24, ('apple', 'green'): 12,",select
"a = [0,1,2,3,4,5]",list
"""hello"" is ""hello"" == true",identity
australia/sydney,linux
set(range(10)) - set(range(5)),set
rows = data.indexrow_count = len(rows)random.shuff,partitioning
&gt;&gt;&gt; from pylab import plot;&gt;&gt;&gt; p,ubuntu
"in [1]: world = ""earth""# method 1ain [2]: ""hello, ",string-formatting
for item in self.inventory_names: self.cursor.exec,sqlite
from __future__ import print_function,import
"def add_to_buffer( self, num ): self.mylist.pop( 0",circular-buffer
threading,multithreading
import osimport statdef explore(p): s = '' list = ,recursion
"foobar = __import__(""foo-bar"")",import
import polls.models as pm,django
"randomdate(""1/1/2008 1:30 pm"", ""1/1/2009 4:50 am"",",datetime
def foo(models.model): size = models.integerfield(,django
from django.core import managementmanagement.call_,django
sh: mysql_config: not found,mysql
modelform,django
web.py,pyqt4
{% load current_tags %},django
"- footer=models.textfield(null=true, blank=true)+ ",django
settings.py,django
df = pd.dataframe()data = ['some kind of data here,pandas
matplotlib-1.2.1,numpy
import sysdef write(): print('creating new text fi,file
"for item in items: entry = entry(a1=item.a1, a2=it",sql
int i = 0while i &lt; 100000000: i += 1,performance
.txt,nlp
locale,localization
"def hardcoded(): m = [0,1,0,2,0,1,0,3,0,1,0,2,0,1,",performance
pass,bash
"x = ""x in module""class a(): print ""a: "" + x #x in ",variables
"if not isinstance(fp, file): raise something",file
"r=np.random.randint(3, size=(100,2000))-1",random
sta precip1hr precip5min temp dewpnt windspd windd,pandas
#!/usr/bin/env python,arguments
import threadingdef mythread ( threading.thread ):,multithreading
runtimeerror: broken toolchain: cannot link a simp,numpy
import main,module
math.floor((b - a).total_seconds()/float(86400)),date
"graph[i][j][""property""]=""value""",data-structures
print 'y x1 x2 x3 x4 x5 x6 x7'for t in texts: prin,numpy
parser = argparse.argumentparser()parser.add_argum,command-line
"try: a[""blah""] = b[""blah""]except keyerror: pass",idioms
&gt;&gt;&gt; python.library.getcomputername()'dark,windows
"s = [x**2 for x in range(10)]print s;[0, 1, 4, 9, ",arrays
scipy.pi,numpy
plots(),matplotlib
"my_list = [[""a"", ""b"", 0], [""c"", ""d"", 0], [""e"", ""f""",list
import threadingcurrent = 0class mythread(threadin,multithreading
range(),range
"[x for x in range(1, 10) if x % 2]",list-comprehension
&gt;&gt;&gt; import matplotlib.pyplot as plttraceb,osx
scatter(),matplotlib
"bar = ['a','b','c','x','y','z']",list
import numpy as npimport matplotlib.pyplot as plti,exception
"stringexp = ""2^4""intval = int(stringexp) # expecte",math
array = {},arrays
pip install matplotlib,pip
yield,django
def measuretime(a): start = time.clock()  a() elap,time
log= logging.getlogger( __name__ ),django
#!/usr/bin/env python# why is sqlalchemy with sqli,sqlite
pip install -iv tome==1.2.1.0-r4,pip
"im = image.open(""foo2.png"");",image
class foo(object): def __init__(self): self.bar = ,class
conda install...,pip
"traceback (most recent call last): file ""manage.py",mysql
continue,continue
bin(1) -&gt; 0b1# what i would like:bin(1) -&gt; 0,binary
@login_required,django
"os.chmod(""/tmp/test_file"", 664)",file
import urllibimport urllib2from beautifulsoup impo,xpath
"r = mlab.csv2rec(datafile, delimiter=',', names=co",matplotlib
from lxml import etreefrom lxml import objectifyco,encoding
"import res = '&lt;textarea id=""foo""&gt;&lt;/textar",regex
return redirect(url_for('www'))#return redirect(ur,flask
__repr__,pandas
import jsonjson_data = open('file')data = json.loa,json
range,range
ps -a | grep ichat ,process
class pokercard: faces = '23456789tjqka' suits = ',optimization
/cygdrive/c/python26/python.exe myfile.py,windows
nonzero(),numpy
serial.py,serial-port
exit(0),exit-code
def func( files ): for f in files: dosomethingwith,list
sys.path.append(),path
person: name: xyz,parsing
"df = pd.dataframe({'a': [randint(1, 9) for x in xr",pandas
time.sleep(0.5),datetime
[j][i],matrix
"popen('/usr/bin/sendmail', 'w')",email
myapp.email,python-import
&gt;&gt;&gt; 8^311&gt;&gt;&gt; 8^412&gt;&gt;&gt; 8,operators
argparse,argparse
author.objects.order_by('-score')[:30],django
processing = truen = 12000while processing: n -= 1,floating-point
"{'juanjo': 2, 'pedro':99, 'other': 333}",json
bz2.pydmicrosoft.vc90.crt.manifest msvcp90.dllmsvc,user-interface
"sun, 06 nov 1994 08:49:37 gmt",http
if,c
"s = ""string""i = 0print s+i",concatenation
"listtimestamps=[1,2,3,5,6,7]",algorithm
dataframe,pandas
def foo(): try: raise ioerror('stuff ') except: ra,exception-handling
numpy,numpy
"urllib2.urlopen('http://www.example.org', timeout=",timeout
from matplotlib import pyplotimport numpya = numpy,matplotlib
"fig=plt.figure()plt.axis([0,1000,0,1])i=0x=list()y",matplotlib
class downloadthread: def foo(self): passclass dow,oop
from django.conf import settings(r'^public/(?p&lt;,django
c:\python34&gt;python get-pip.pyrequirement alread,django
"jsonstr = '{""one"" : ""1"", ""two"" : ""2"", ""three"" : ""3",json
max(),max
mystring,string
df.max(),pandas
func,parallel-processing
"a = ('foo',)",syntax
requests,http
gtm_stringbyescapingforurlargument,url-encoding
python script.py --example# args.example would equ,default-value
cdbs,debian
"g++ -shared -wl,-soname,mylib -o3 -o mylib.so -fpi",c++
"class foo(object): def foodo(thing=none, thong='no",class
pyplot.xscale(),matplotlib
inf = float('inf'),floating-point
import numpy as npimport matplotlib.pyplot as pltf,matplotlib
request.meta.get('http_referer'),django
/usr/local/lib/python2.5/site-packages/quodlibet//,setuptools
exception happened during processing of request fr,broken-pipe
__eq__,hash
a = 'zenovw',string
max,function
"from_addr = 'my@email.com'try: data = open(file, '",file
"response = self.client.post('/do-something/', foll",django
"f = open(filename, 'r+')text = f.read()text = re.s",file
"for index, item in emails: if emails[index] == 'so",arrays
enumerate,iterator
&gt;&gt;&gt; id('cat')5181152&gt;&gt;&gt; a = 'cat,memory-address
a,redirect
"a = [1, 2, 3, 1, 2, 3]b = [3, 2, 1, 3, 2, 1]",algorithm
import randomdef primesbelow(n): # http://stackove,algorithm
f2,bytecode
"a= [(1,2),(1,4),(3,5),(5,7)]",list
re,regex
"def rot13(s): chars = ""abcdefghijklmnopqrstuvwxyz""",string
%,syntax
import urllib2response = urllib2.urlopen('https://,json
&lt;timeseriesresponse&gt; &lt;queryinfo&gt; &lt;l,xml
"&gt;&gt; ""string"" is ""string""&gt;&gt; true",string
"a, b = 1, 2(a, b) = 1, 2[a, b] = 1, 2",variable-assignment
"&gt;&gt;&gt; class node:... def __init__(self, wor",constructor
o = object()o.attr = 'hello',attributes
metadata = {u'composite:previewimage': u'(binary d,dictionary
c:\program files\microsoft visual studio 10.0\vc,distutils
class foo(object): @property def bar(self): return,inheritance
python setup.py install,selenium
solve1(a)solve2(b),parallel-processing
http://someurl/path/to/json,json
__init__.py,global-variables
manage.py runserver,django
nohup ./cmd.py &gt; cmd.log &amp;,nohup
import someconverter.someconverter,class
./my_script.py my-func --arga blah --argb 1 2 3 4.,command-line-arguments
from pylab import *import timeion()fig = figure()a,matplotlib
"x = [5, 2, 3, 1, 4, 5]",numpy
a,asynchronous
"nums = [1, 2, 0] nums[nums[0]], nums[0] = nums[0],",list
sys.stdout.flush(),sys
"def time_it(f, *args): start = time.clock() f(*arg",testing
dir(list),list
#NAME?,option
"pageheadsectionfile = open('pagehead.section.htm',",readfile
python application.py start # launches the daemon,daemon
"from datetime import dated1 = date(2008,8,15)d2 = ",datetime
...if profile: import cprofile profilefilename = ',profiling
python setup.py develop,setuptools
import multiprocessingimport timeimport signalimpo,multiprocessing
__bases__,inheritance
&gt;&gt;&gt; import numpy as np&gt;&gt;&gt; import,numpy
from __future__ import braces,operators
[],list
"a = [1,2]; // a has an array b = &amp;a; // b poin",pointers
xml.dom.minidom,xml
./tests.py --offline,unit-testing
"""""""base exception, error""""""class error(exception):",exception
get_cycle_state,matplotlib
"opt, args = parser.parse_args()",dictionary
argparse.argumentparser,argparse
"$pythonpython 2.6.6 (r266:84292, jul 10 2013, 22:4",linux
+------+ || | || | ---&gt; || | |+------+ +-------,matplotlib
class borg: __shared_state = {} # init internal st,singleton
"class node(): name = ""node name"" children = []",django
python manage.py runserver,django
import pdb; pdb.set_trace(),remote-debugging
my_example_task.state() == running,web-services
"def mymethod(firt, second, third='something'): pas",arguments
safe_substitute(),string-formatting
"key = [key for key, value in dict_obj.items() if v",dictionary
sudo apt-get install libevent-devsudo pip install ,gevent
string_val = 'abcdefghij',string
"class some_class(parent_class): def doop(self, x, ",nested-function
append(),list
imapsync,ruby
import hashlibimport base64import uuidpassword = ',authentication
shortname.objects.distinct().filter( product__phot,django
argparse.argumentparser(),dictionary
"&gt;&gt;&gt; timeit(""z = a.c"", ""from __main__ impo",performance
&gt;&gt;&gt; class a(object): pass... &gt;&gt;&gt;,class
import osbind = '127.0.0.1:8002'workers = 3backlog,flask
pop = population[:],arrays
media_root = 'd:/dev tools/django_projects/dso/med,css
class place(models.model): name = models.charfield,django
version: app-staging,google-app-engine
"import simplejson as jsons = ""{'username':'dfdsfds",json
sudo blah,sudo
$ ./configure --help | grep -i ucs --enable-unicod,unicode
&gt;&gt;&gt; ''.join([ str(_) for _ in xrange(10) ,list-comprehension
"data = { 'ids': [12, 3, 4, 5, 6 , ...] } urllib2.u",json
"[(1, 2000), (2, 2001), (3, 2002), (4, 2003), (5, 2",enums
name,django
subkeyword = session.query( subkeyword.subkeyword_,coding-style
x = [[]] * n,list
for element in somelist: do_action(element) if che,list
migrate,django
class person(models.model): name = models.charfiel,django
python setup.py sdist register upload,packaging
foreman start,ruby
from celery.decorators import taskfrom django.core,django
"execfile(""abc.py"")",interop
1. `link &lt;http://www.google.com&gt;`__2. `link ,restructuredtext
unix,perl
#,vim
from test.team import teamfrom test.user import us,design
a = []for i in range(5): a.append(i),arrays
$ pip freezecheetah==2.4.3gnupginterface==0.3.2lan,pip
json.dumps(),json
"import sqlite3with sqlite3.connect("":memory:"") as ",sqlite
"db.test.find({""number"": {""$gt"": 1}}).sort({""number",mongodb
oserror: [errno 1] operation not permitted: '/tmp/,osx
string1 = 'hello' 'world' #1 works finestring2 = ',string
"add_url_rule(*args, **kwargs) connects a url rule.",flask
exception runtimeerror: 'maximum recursion depth e,recursion
&gt;&gt;&gt; import numpy&gt;&gt;&gt; array = nump,arrays
"words = ""apple banana apple strawberry banana lemo",count
urls.py,django
urllib.urlretrieve,networking
def test_one (self): mock = mock() mock.method.ret,unit-testing
pathfile=os.path.dirname(templatefile)roottree.wri,linux
"def optionstoargs(options, separator='='): kvs = [",ssh
"cursor.execute ("""""" insert into songs (songname, s",mysql
pdb,pdb
"super(superclass, instance).method(args)",class
sum,design
"#!/usr/bin/env python#def test1(): exec('print ""hi",exec
\p{ll},regex
def hashfile(filepath): sha1 = hashlib.sha1() f = ,hash
python setup.py sdist register uploadrunning regis,pypi
foo = foomodel(),django
len(list_returning_function()),generator
del,slice
"def processline(line) : print ""hello""; return;",multithreading
render_template,flask
"fp = open(file, 'wb')req = urllib2.urlopen(url)for",file
&lt;lambda&gt;() takes exactly 1 argument (2 given,lambda
scipy-0.15.1-cp33-none-win_amd64.whl,pip
"image = image.open(data)image.thumbnail((36,36), i",png
"""(?p&lt;start&gt;some_pattern)(?p&lt;replace&gt;fo",regex
dir_name='/home/me/dev/my_reports'base_filename='d,join
"[ product_type_1, [ product_1, product_2 ], produc",django
135.1234568,string
manage.py reset todo; manage.py syncdb,database
property,properties
cygwinccompiler.py,windows-7
"[1, 1, 2]",algorithm
rm *.pyc,python-internals
error: option --single-version-externally-managed ,pip
main.py,share
"fig = pylab.figure() ax = fig.add_subplot(1,1,1)ax",matplotlib
os.walk,file
startwith,startswith
"[true, true, false, false, false, true]",list
gzip.gzipfile,compression
class productform(modelform): long_desc = forms.ch,html
__import__,python-import
2,pointers
try,exception
class a(object): # code for a hereclass b(object):,multiple-inheritance
#!/usr/bin/pythonimport systry: in_file = open(sys,linux
"dt = datetime(2013,9,1,11)",datetime
&gt;&gt; s = 'abacaba'&gt;&gt; s.count('aba')&gt;&,string
"def demo1(): try: raise runtimeerror,""to force iss",try-except
staticmethod,decorator
"os.path.join('c:', 'sourcedir')",windows
"def chunks(l, n): """""" yield successive n-sized chu",list
"l = [1,5,8]",sql
class contactform(forms.form): reason = forms.choi,django
my_iter = iter(range(5)),iterator
"part 1;""this is ; part 2;"";'this is ; part 3';part",regex
"import zmq, json, timedef main(): context = zmq.co",localhost
"traceback (most recent call last): file ""/usr/loca",unicode
class pizza(models.model): name = models.charfield,django
settings,django
&gt;&gt;&gt; import re&gt;&gt;&gt; p = re.compile(,regex
@propertydef myproperty(self): [..],django
"import readlinecommands = ['extra', 'extension', '",raw-input
"\b[\w\.-]+@[\w\.-]+\.\w{2,4}\b",regex
"yearmonth, clientcode, size, .... etc etc",pandas
"file ""/usr/local/lib/python2.6/multiprocessing/__i",linux
render_template,jinja2
new_index = index + offsetif new_index &lt; 0: new,clamp
"#!/usr/bin/pythondef fibonacci(mag): a, b = 0, 1 w",perl
staticmethod,abstract-class
info main digestemails - process inboxinfo main di,log4j
"b""abcdef""",syntax
"a=['help', 'copyright', 'credits', 'license']b=ab.",list
w+,file
"class car(object): def __init__(self, make, model)",unit-testing
&gt;&gt;&gt; from datetime import datetime&gt;&gt;,datetime
myvar = 'mypackage.mymodule.myfunction',function-pointers
__init__.py,debian
src\ setup.py janitor.py readme.txt chnagelog.txt ,distutils
"[(min([row[i] for row in rows]),max([row[i] for ro",nested
lib/ __init__.py settings.py foo/ __init__.py some,packages
http://www.python.org/ftp/python/2.7.3/python-2.7.,virtualenv
pip install https://github.com/jkbr/httpie,pip
"list = (('1','a'),('2','b'),('3','c'),('4','d'))",list
"[(1, u'abc'), (2, u'def')]",django
subprocess.communicate(),subprocess
sudo pip3.4 install psycopg2,eclipse
"fin = open(""hi.bmp"", ""rb"")firm = fin.read(2) file_",file
stmt = conn.createstatement(java.sql.resultset.typ,mysql
for thing in session.query(things): analyze(thing),mysql
"parmap(function,[data])",parallel-processing
&lt;~/.myrc contents&gt;[rules]monkey = fooferret ,configuration-files
"&gt;&gt;&gt; zip([[1,2], [3,4], [5,6]])[[1,3,5], [",functional-programming
...error: command '/usr/bin/gcc' failed with exit ,gcc
&gt;&gt;&gt; o = object()&gt;&gt;&gt; o.test = 1tr,attributes
some varying text\n\ndsjfkdafjkdafjdsakfjadsflkdla,regex
"mylist = ['foo', 'bar', 'baz', 'quux']",list
"def complex(real=0.0, imag=0.0): """"""form a complex",documentation
products.views.filter_by_led,django
"[interspecies, interstelar, interstate]",ruby
np.tensordot,optimization
series,pandas
"import csvwith open('all16.csv', 'rb') as inf: inc",csv
import urllib2req = urllib2.urlopen('http://lenta.,unicode
gunzip mysql-python-1.2.3c1.tar.gztar xvf mysql-py,mysql
python,shell
"class swallow(object): def airspeed(self): """"""retu",oop
a_values,arrays
"import numpy as npdata = np.zeros( (512,512,3), dt",image
"a = numpy.empty(n, dtype=complex)for i in xrange(a",numpy
"[""1.1"", ""2.2"", ""3.2""]",numpy
kill -hup,django
"db = sqlite.connect(""test.sqlite"")res = db.execute",sql
1.923328437452 -&gt; 1.923,floating-point
"print ""this should be""; print ""on the same line""",printing
elif,keyword
def gen(): for i in range(100): yield i,generator
polyfit,numpy
"&gt;&gt;&gt; resolvepath(""http://www.asite.com/fol",url
"def logger(myfunc): def new(*args, **keyargs): pri",reflection
"a, b = true, false",variables
"&gt;&gt;&gt; foo = numpy.array(1.11111111111, nump",numpy
import numpy as npimport matplotlib as pltx = aran,matplotlib
from django.db import modelsclass othermodel(model,django
dirfoo\ test.py dirbar\ __init__.py foo.py bar.py,unit-testing
response['content-disposition'] = 'attachment; fil,django
"import json&gt;&gt;&gt; json.loads('{""key1"":1,""key",json
&gt;&gt;&gt; import urllib2&gt;&gt;&gt; import sim,json
class foo: x = 4 @property @classmethod def number,class
"cursor.execute(""select id, name from `table`"")for ",mysql
class playerstat(models.model): player = models.fo,django
iterable,histogram
&lt;html&gt;&lt;head&gt;&lt;/head&gt; &lt;body&gt;,ruby
if,control-structure
"import sqlite3conn = sqlite3.connect(r""d:\aaa.db"")",sqlite
bar,shutil
"&gt;&gt;&gt; result = add.apply_async(args=[2, 2],",django
import argparseparser = argparse.argumentparser()p,argparse
dict,dictionary
from mpl_toolkits.mplot3d import axes3dimport matp,matplotlib
"re.compile( regexp1 + ""|"" + regexp2 + ""*|"" + regex",regex
i,list
cat file1 file2 file3 &gt; myfile,subprocess
unicode,casting
fruits,django
"def check_mobile(request, template_name): if reque",django
__init__,django
"&gt;&gt;&gt; x = tuple(set([1, ""a"", ""b"", ""c"", ""z"",",set
__slots__,inheritance
quicksort :: ord a =&gt; [a] -&gt; [a]quicksort [],haskell
celeryd --loglevel=info,celery
sscanf(),parsing
usaf wban year month day s_pc s_cl s_cd s_cnt temp,pandas
import matplotlib.pyplot as pltimport matplotlib.c,performance
counter = 0def increment(): counter += 1increment(,global-variables
shutil.rmtree,windows
from a_package.baz import do_something_expensivede,monkeypatching
class foo: num = 1,class
matplotlib,matplotlib
cprofile,profiling
typos,machine-learning
"start = get_ticks()do_long_code()print ""it took "" ",timer
"if n == 0: print ""the end""",syntax
def method(**kwargs): #do somethingkeywords = (key,kwargs
"fruits = ""['apple', 'orange', 'banana']""",string
pip install -r freeze_output.txt,django
cgi.parse_qs(),urllib2
debug(),logging
psyco,optimization
def pair_sequence(): for i in range(2**32): for j ,generator
"user = models.user.query.filter_by(username=""ganye",flask
print,printing
_mysql.c(34) : fatal error c1083: cannot open incl,windows
"def filter(txt, oldfile, newfile): '''\ read a lis",file
db,design
fig=figure(i)ax=gca()ax.set_color_cycle([colormap(,matplotlib
pyplot,matplotlib
dates,matplotlib
yield,scala
class book(models.model): title = models.charfield,json
from sklearn.feature_extraction.text import countv,machine-learning
foo_model_instance = models.get_or_create_foo_from,django
mkvirtualenv,bash
async.map(rs),asynchronous
&lt;class 'pandas.core.frame.dataframe'&gt;datetim,pandas
np.any,arrays
for i in range(10): #,vim
"a = numpy.arange(0,27,3).reshape(3,3)# array([[ 0,",arrays
import inspectprint __file__c=inspect.currentframe,inspect
new_list = list(reversed(old_list)),reverse
"""3655879acb6""",string
"class song: """"""the class to store the details of e",eval
sort(),algorithm
multiprocessing.manager,multiprocessing
"traceback (...): [...] output.write(""{: &gt; 026,.",format
# foo is a dictionaryif foo.has_key(bar): foo[bar],syntax
argparse,argparse
import matplotlib.pyplot as pltcircle=plt.circle((,matplotlib
while 1: # doing amazing pythonic embedded stuff #,console
cgi,osx
f = foo(bar='x')session.add(f)session.flush()# do ,sqlalchemy
import numpy as npdef test_my_mult(n): a = np.rand,matrix
__str__,json
import csvimport scipy.statsimport numpyimport mat,numpy
"&gt;&gt;&gt; property_list = [""one"", ""one"", ""one""]",list
df['a'==0]['b'] = np.nan,pandas
bsddb,database
none,variables
#thething = a particular entity we pull from the d,google-app-engine
str.format,string
def g(): for el in xrange(100): print el yield eld,multiprocessing
python setup.py build,pycrypto
urllib2,urllib2
import pdb; pdb.set_trace(),pdb
shape = arr.shaperesult = np.zeros(shape)for x in ,arrays
"starttime = time.time()somesqlorsomething()print """,linux
1. importerror: no module named _sysconfigdata_nde,eclipse
#!/usr/bin/env python,scripting
python-autotest myfile1.py myfile2.py etc.py,testing
windowserror: [error 2] the system cannot find the,path
from collections import namedtuplepoint = namedtup,docstring
-1 % 10,c
from django.db import modelsclass member(models.mo,django
unittest,unit-testing
pythong,subprocess
matplotlib,matplotlib
def latestpdf(folder): # list the files and sort t,exception-handling
"class user(base): ... birthday = column(date, inde",sql
"raw = win32com.client.dispatch(""mylib.myclass"")",datetime
bc = 'off'if c.page == 'blog': bc = 'on'print bc,if-statement
set([]),methods
"a = [1, 2, 3]b = [4, 5, 6]",list
lxml,install
"import zipfilefh = open('test.zip', 'rb')z = zipfi",windows
os.system('uname -o'),linux
"int main() { qapplication app(argc, argv); // init",blocking
return render_to_response('sample/sample.html....),html
row | name | year | priority----------------------,table
sudo uwsgi -b 25000 --chdir=/www/python/apps/pyapp,django
lxml,jython
{{ data[0] }},django
"x = myfunction( ((2,2),(2,-2)) )",numpy
"range((3,2)) # [(0,0),(0,1),(1,0),(1,1),(2,0),(2,1",numpy
TRUE,operating-system
urlopen,http
#NAME?,pyinstaller
import matplotlibimport pylab as plf1 = pl.figure(,matplotlib
2 is 2,oop
"&lt;envelope xmlns=""http://www.xxx.com/zzz/yyy""&gt",lxml
image.open(object.logo.path).save('/tmp/output.jpg,png
flask-login,mysql
from m import xxx,conventions
"text = ""a,b,c""",arrays
hh:mm:ss,user-interface
#!/usr/bin/python# -*- coding: utf-8 -*-from multi,multiprocessing
"str = ""the &amp;yquick &amp;cbrown &amp;bfox &amp;",regex
"return redirect('some-view-name', backend, form.cl",django
(),list
warnings.warn,warnings
"bin(reduce(lambda x, y: 256*x+y, (ord(c) for c in ",binary
project setup.py package __init__.py lib.py script,pythonpath
pylab.savefig,matplotlib
import x,python-import
"for date in foo(from_date, to_date, delta=hours): ",datetime
easy_install pil,python-imaging-library
import requestsrequests.post(url='https://foo.com',https
"im = image.open(""image.gif"")pix = im.load()print(p",image
dt,timezone
++,operator-overloading
d2 = df[(df['l_ext']==l_ext) &amp; (df['item']==it,table
ec2:~$ sudo aptitude install build-essential pytho,numpy
python.el,emacs
"members = {'starspy' : 'shsn4n', 'test' : 'test1'}",dictionary
ctrl+c,multithreading
dataframe,pandas
"&gt;&gt;&gt; r""what""ever""syntaxerror: invalid synt",syntax
"string_date = ""2013-09-28 20:30:55.78200""abc = dat",datetime
"&gt;&gt; head, tail = **some_magic applied to** [1",list
uploadedfile,django
importerror: pycurl: libcurl link-time ssl backend,curl
&gt;&gt;&gt; false is false is falsetrue,python-internals
sys.path.append(mod_directory),mechanize
class my_python_obj(object): attr1='a' attr2='b' a,oop
&gt;&gt;&gt; import tempfile&gt;&gt;&gt; tup = tem,temporary-files
"class pokercard: ""a card for playing poker, immuta",ironpython
a,django
log4cxx,logging
class c(object): def __hash__(self): return 42,hash
"list = ['one', 'two', 'three']if 'some word' in li",list
"data = {}data ['key1'] = ""keyinfo""data ['key2'] = ",json
dicked = {}dicked[none] = 'foo' # none okdicked[(1,list
"traceback (most recent call last): file ""&lt;conso",django
python manage.py test project.apps.app1.tests,django
copying pil/tiffimageplugin.py -&gt; build/lib.lin,ubuntu
- main window |- toolbar with some buttons (add/ed,unit-testing
from xml.parsers import expatclass element(object),xml
&gt;&gt;&gt; from pytesser import *&gt;&gt;&gt; im,ocr
=======================| column 1 | column 2 |====,table
"string[] words = { ""hello"", ""wonderful"", ""linq"", """,linq
if(getdata()){ $data = getdata(); echo $data;},if-statement
1 a 2 b 3 c,file
"""tableapplechairtablecupboard...""",algorithm
my_var,if-statement
sviewlog = logging.getlogger('myapp.views.scans')v,django
"in [30]: np.mean([1, 2, 3])out[30]: 2.0in [31]: np",numpy
/dev/sda2,linux
"d = {'a':1, 'en': 'hello'}",unicode
def primes_sieve(limit): limitn = limit+1 primes =,math
calendar.timegm(),timezone
time.time(),time
dictconfig,logging
"{u'1': {'broadcast': u'on', 'arp': '', 'webserver'",google-app-engine
(nlmanagement)psychok7@ultrabook:~/code/work/nlman,linux
"self.assertequal (tuple (self.numpy_data), tuple (",unit-testing
"l=[1,2,3,4,5,6,7]",iterator
/ #root|- src/| |- mypackage/| | |- data/| | | |- ,setuptools
"def myquery(): sql = ""select field1, field2, field",sql
import urllib2myurl = 'http://bit.ly/dofet'page = ,urllib
"datadict = { ""a"":{ ""r"": 1, ""s"": 2, ""t"": 3 }, ""b"":{",list
from pyspark import sparkcontext,apache-spark
"print ""a=%d,b=%d"" % (f(x,n),g(x,n))",string
numpy.random,random
&gt;&gt;&gt; def f(x): return x % 2 != 0 and x % 3,list
if __name__=='__main__': from timeit import timer ,debugging
==&gt; sqlite_memory_vs_disk_benchmark.py &lt;==#!,database
class book(models.model): num_pages = ... author =,database
"s=""word to split""",function
python -m simplehttpserver 127.0.0.1:8000 # doesn',http
python3 setup.py install,osx
in,pandas
while not eof do begin readline(a); do_something;e,file
"def sendinitialrequest(xmlmessage, redirecturl): u",openssl
11,algorithm
"import urllib2,cookielibsite= ""http://www.nseindia",http
np.ndarray,memory
import imagetry: im=image.open(filename) # do stuf,image
namedtuple._replace,collections
class event(models.model): event_id = models.autof,django
"&gt;&gt; a = [1,2,3,1,2,3,1,2,3];&gt;&gt; find(a &",matlab
__init__,django
mysql,mysql
post,amazon-s3
"ax.tick_params(axis='x', pad=30)",matplotlib
def,anonymous-function
"avgdists = [1, 8, 6, 9, 4]ids = np.array(avgdists)",numpy
article.objects.filter(q(pk=1) | q(pk=2) | q(pk=3),django
from flask import flaskapp = flask(__name__)@app.r,flask
- url: (.*)/ static_files: static\1/index.html upl,google-app-engine
__init__,class
%userprofile%\application data\appname\,desktop-application
sys.exit(1) ,unit-testing
=,coding-style
0,language-agnostic
"import gc, sysprint len(gc.get_objects()) # 4073 o",memory-leaks
pylint,python-import
environmenterror: [errno 12] cannot allocate memor,performance
tail.getnewdata(),tail
# module writer.pyimport sysdef write(): sys.stdou,stdout
"import bprint __name__, __file__",python-module
import matplotlib.pyplot as pltfig = plt.figure()a,matplotlib
class kitten(models.model): claw_size = ... licens,django
dic0 = {'dic0': 0}dic1 = {'dic1': 1}ndic = dic0 + ,dictionary
&gt;&gt;&gt;,prompt
import matplotlib.pyplot as pltimport numpy as npc,matplotlib
del lst[:]lst[:] = [],list
cython/includes/numpy/__init__.pxd,c
&gt;&gt;&gt; for i in range(10):... print i... try,syntax-error
and,function
# normalize audio channels to between -1.0 and +1.,arrays
exception in thread thread-3:traceback (most recen,ssl
from pageutils import formatheadermypage(object): ,decorator
"void myfunction (int first, string second){//some ",function
"countries = ( ('fr', _('france')), ('de', _('germa",django
pip install scrapy,windows
def quiz_form_factory(question): properties = { 'q,django
try: #something1 #something2except something1: #re,syntax
x = 'y' 'z',string
"l = [""a"", ""b"", ""c"", ""d"", ""e""]",list
class subject(models.model): name = models.charfie,django
class node(object): def __init__(self): self.paren,circular-reference
"cars = {'a':{'speed':70, 'color':2}, 'b':{'speed':",printing
"myfunc([2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 20])",list
simplehttpserver.simplehttprequesthandler,ajax
# file: ftplib-example-1.pyimport ftplibftp = ftpl,ftp
$ python setup.py bdist_wheelusage: setup.py [glob,pip
and,string
from app.models import *,django
container.show();var widget = $('&lt;div/&gt;')ele,ipython
"strs = strs.replace('&amp;', '\&amp;')strs = strs.",string
#if debug&lt; do some code &gt;#else&lt; do some o,preprocessor
dict,dictionary
class stopadmin(admin.modeladmin): formfield_overr,django
"def callback_create_profile(sender, **kwargs): # c",django
#!/usr/bin/env perluse strict;use warnings;,perl
$ pip install lxmlrequirement already satisfied (u,virtualenv
"l[a], l[b] = l[b], l[a]",performance
raw_input(),command-line
"#!/usr/bin/pythonimport osimport fnmatchfor root, ",os.walk
"approval_choices = ( ('yes', 'yes'), ('no', 'no'),",django
"import pandas as pddf = pd.dataframe({'l':['a','b'",indexing
pip install matplotlib,linux
"void calculate_daily ( char *db_name, int grid_id,",numpy
rotated = zip(*original[::-1]),multidimensional-array
try: something = iterator.next() # ...except stopi,iterator
0,linux
"&gt;&gt;&gt; str1=""a b c d"" # spaces are irregular",regex
import,python-import
node.py,circular-dependency
"def safe_divide_1(x, y): if y == 0: print ""divide-",error-handling
import sys print sys.path,path
&gt;&gt;&gt; 1if true else 01,grammar
"set(['booklet', '4 sheets', '48 sheets', '12 sheet",sorting
valueerror,math
from math import *try: import matplotlib as mpl im,geometry
",=",operators
null,sqlalchemy
import collectionsd = collections.ordereddict()d[',collections
create_index,mongodb
test.py,flask
__path__,path
"f = urllib.urlopen(""http://en.wikipedia.org/w/inde",urllib2
@is_premium_userdef sample_view: ....... ......,django
import sysdef func1(): func2()def func2(): raise e,exception
my_prefix_what_evermy_prefix_what_so_evermy_prefix,string
# a card is represented by an integer. the low 2 b,algorithm
polyfit(),numpy
http://example.com/get_image?type=1,flask
"a=['123','2',4]b=a[4] or 'sss'print b",list
json,json
"from numpy import matrixa = matrix([[1,2],[3,4]])",matrix
class employee: pass,oop
"cmd = ""some unix command""retcode = subprocess.call",ssh
regex = re.compile('text') match = regex.match(url,regex
sqlalchemy.schema.index,database
in[1]: name = 'long_name_to_type_every_now_and_the,ipython
"&lt;div class=""class1""&gt;",screen-scraping
{% if landing_dict.ingredients %} &lt;hr&gt; {% fo,django
from mpl_toolkits.mplot3d import axes3dfrom matplo,matplotlib
time,unix
"import systry: try: print x except exception, ex: ",exception-handling
iterators,iterator
time1 = datetime.datetime.fromtimestamp(time.mktim,datetime
"dict = { 'name': 'oscar', 'lastname': 'reyes', 'ag",initialization
"{% for user in userlist %} &lt;a href=""/profile/{{",jinja2
&lt;workspace&gt; src mypackage __init__.py subpac,documentation
"class sequence(): def __init__(self, max): self.ma",c
d,dictionary
"first = [1,2,3,4,5]second = [6,7,8,9,10]",list
vector(),performance
from datetime import datetimeimport numpy as npsta,performance
a,list-comprehension
&gt;&gt;&gt; import logging&gt;&gt;&gt; logging.ha,python-import
fooerror,exception-handling
"list_of_urls = ['http://www.google.fr/', 'http://w",loops
import matplotlibmatplotlib.use('agg')import matpl,matplotlib
"python 2.7.5 (v2.7.5:ab05e7dd2788, may 13 2013, 13",osx-mavericks
"price_ranges = { 64:(25, 0.35), 32:(13, 0.40), 16:",variables
pip install,pip
"&gt;&gt;&gt; import yaml, cjson; d={'foo': {'bar':",json
np.nan,numpy
d,initialization
none,webcam
"(""person 1"",10)(""person 2"",8)(""person 3"",12)(""pers",sorting
lipsum,string
"&gt;&gt;&gt; x=""alpha_beta_gamma""&gt;&gt;&gt; word",string
b(),subprocess
"{% macro example_1(one, two, **kwargs) %} do macro",macros
"class building: def __init__(self, x, y): self.x =",inheritance
import matplotlib.pyplot as plt# create figure ins,matplotlib
"params = ['a',3.4,none]",list
"[0,1,2,3,3,4] # this is a monotonically increasing",list
numpy.nan != numpy.nan,floating-point
typeerror: 'str' object does not support item assi,json
fcntl,windows
./manage.py runservertraceback (most recent call l,ubuntu
"a = array([[1,3,4],[1,2,3]...[1,2,1]])",numpy
"[{'id':1,'name':'john', 'age':34},{'id':1,'name':'",dictionary
jet,matplotlib
"data = [(x1,y1,z1),(x2,y2,z2),.....,(xn,yn,zn)]",matplotlib
logging,logging
"import numpy# polynomial regressiondef polyfit(x, ",math
statement...statement{ statement ... statement}sta,scope
projectfiles1 = glob.glob( os.path.join(projectdir,glob
"my_series = pandas.series([1,2,2,3,3,3])pandas.mag",statistics
#include &lt;iostream&gt;#include &lt;vector&gt;#i,algorithm
"import urllib2try: urllib2.urlopen(""some url"")exce",http
multiprocessing,multiprocessing
&amp;,numpy
from django import formsfrom django.forms import c,django
import threadingimport sysclass failingthread(thre,exception
export foo=/tmp/foo export bar=/tmp/bar,bash
exception type: templatedoesnotexistexception valu,django
import os,osx
$ file /usr/bin/python,osx-snow-leopard
any(),functional-programming
# djangoimport mymodelmymodel.objects.a[tab] # wil,readline
numpy.average(),numpy
a = [],list
"tocsv = [{'name':'bob','age':25,'weight':200},{'na",csv
"cursor.execute("""""" insert into tree (id,parent_id,",insertion
"list = [(1,5), (1,7), (2,3)]",list
&gt;&gt;&gt; x = 3&gt;&gt;&gt; class myclass(objec,namespaces
me@something:~/$ gitsloc --branch master1048153450,ruby
"improperlyconfigured(""error loading mysqldb module",mysql
"import mathe = -(t/t)* math.log((t/t)[, 2])",logarithm
checker = 1if checker: #dostuff,boolean
stringbuilder,string
"for encoding1, encoding2 in itertools.permutation(",unicode
"def iszero( i): if i != 0: print ""ok"" else: print ",exception-handling
"xs = ['dddd','a','bb','ccc']print xsxs.sort(lambda",list
static_url,django
def magic_lambda_parameter_counting_function(lambd,lambda
import osrootdir ='c:/users/sid/desktop/test'for s,directory
class edituserform(forms.form): email_address = fo,django
"import simplejson, jsondata = [['apple', 'cat'], [",json
{% for movie in movie_list | sort(movie.rating) %},sorting
"try: comsocket = socket.socket(socket.af_inet, soc",sockets
from flask import abortabort(404),flask
dserror,exception
argparse,argparse
import numpy as npimport matplotlib.pyplot as pltf,matplotlib
from copy import deepcopydef f(data): data = deepc,pass-by-value
subprocess.popen,django
python manage.py check,django
"dubliners/book/ [includes models.py, views.py, etc",django
12:15:25 ~/sandbox/ec$ nosetests --pluginsplugin x,nose
"x = [1400, 1500, 1600, nan, nan, nan ,1700] #not i",arrays
&gt;&gt;&gt; x = 'one two three'&gt;&gt;&gt; y = r,regex
#!/usr/bin/env pythonfrom distutils.core import se,build
configparser,key-value
$ python create_graphs.py --name=name,exec
settings.py,django
"p.hist(d,bins=50,log=true,alpha=0.5,color='b',hist",numpy
dyld: library not loaded: @executable_path/../.pyt,osx
"def shuffle_in_unison(a, b): assert len(a) == len(",random
"@redirect_output(""somewhere.log"")def foo(): ....",decorator
app/ app.py controllers/ __init__.py project.py pl,packages
bash$ time python fittosize.py .... real 0m1.482s ,algorithm
hook_loader.py hook_loader.pyc project.py project.,osx
a = somematrixarrayfrom numpy.linalg import eig as,sorting
n,list
"mstr = 'a,b,c,d,e' ",parsing
"my_dir = ""~/some_dir""if not os.path.exists(my_dir)",path
thread,parallel-processing
"&lt;querydict: {u'num': [0], u'var1': [u'value1', ",django
def stuff(): try: ..... return useful except excep,debugging
typeerror: 'nonetype' object is not iterable,nonetype
jar xf /home/foo/bar/portal.ear binaries.war,linux
"try { ...catch (exception e) {  log(""error at x"", ",exception-handling
file-&gt;setting-&gt;project structure-&gt;add con,debugging
"['x', 3, 'b']",string
"[(a, 1), (b, 2), (c, 3)]",list
:w !python,vim
__method__,methods
&gt;&gt;&gt; random(3)563or&gt;&gt;&gt; random(5)2,random
downloading pymssql-2.0.0b1-dev-20130403.tar.gz (2,ubuntu
request_token_url = 'https://www.google.com/accoun,django
if key &lt; 1 or key &gt; 34:,if-statement
"a = 7def printa(): print ""value of a is %d"" % (a)d",global-variables
from crypto.cipher import aes,virtualenv
"import pandas as pdvalues = [[1,2], [2,5]]df2 = pd",matplotlib
error while executing python code.!stack 0java.lan,gdb
# prints recursive count of lines of python source,code-snippets
namedtuple,json
"{u'2012-06-08': 388, u'2012-06-09': 388, u'2012-06",pandas
print 'hello world',coding-style
x = 1.0y = 100000.0 print x/y,floating-point
"ruby -e ""$(curl -fssl https://raw.github.com/homeb",osx
#!/usr/bin/env python,shebang
valuetrial measurement 1 0 13 1 3 2 4 2 0 nan 1 12,pandas
assert_called_with(),mocking
pro [-a xxx | [-b yyy -c zzz]],argparse
"def render_to_response(self, context, **response_k",django
pandas,pandas
gen.next(),generator
import subprocessdef my_function(x): return x + 10,function
dict,attributes
scikits.timeseries.lib.reportlib.report.__init__(*,list
"default_path = ""/path/name/""default_file = ""file.t",ini
current level: 13.4 db.,regex
"daterange = [datetime.strptime(dateranges[0], ""%y-",datetime
"segment1 [ {x1,y1}, {x2,y2} ]segment2 [ {x1,y1}, {",math
"max(float('nan'), 1)",math
./data/,packages
for,c++
df,group-by
import xml.etree.elementtree as etroot = et.elemen,xml
typeerror: object.__init__() takes no parameters ,inheritance
response.redirect,flask
python someprojectfile.py,search
"traceback (most recent call last): file ""tford.py""",decorator
"self.word_counts[source].update({'date':posttime},",mongodb
product,django
git commit,git
"def with_connection(f): def decorated(*args, **kwa",decorator
"&gt;&gt;&gt; df = pd.dataframe([[1, 1, 1, 1], [2, ",numpy
"fig,ax = plt.subplots(5,2,sharex=true,sharey=true,",matplotlib
string.startswith(),objective-c
__getitem__,super
keyerror: 'variablename',dictionary
"class process: def __init__(self, pid, ppid, cmd, ",class
unittest,unit-testing
class author(models.model): first_name = models.ch,django
libc.a,c
pandas.parser.cparsererror: error tokenizing data.,csv
c = 1def f(n): print c + n def g(n): c = c + nf(1),scope
"a = [5, 7, 11, 4, 5]for v, w in a: print [v, w]",list
from multiprocessing import pool def go(): print(1,exception
"a = [51,27,13,56] #given listd = one-line-statemen",list
"os.stat(f,'r').st_mtim",google-app-engine
request.post['xzy'],django
@propertydef total(self): return self.field_1 + se,lambda
shutil.copytree(),operating-system
unicode,unicode
application: demas1252cversion: 1runtime: pythonap,django
"class particle:  def __init__(self,domain,id): sel",object
from datetime import datetimeimport jsonprint date,json
"def foo(some_list): for i in range(0, len(some_lis",complexity-theory
"&lt;img src=""../path/image.png""&gt;&lt;/img&gt;",email
&lt;a&gt;,html
/(?&lt;!foo.*)bar/,regex
mode.use_inf_as_null,numpy
str.encode(),string
&gt;&gt;&gt; my_list = list(range(10))&gt;&gt;&gt;,algorithm
class basecontroller(qobject): def setupevents(sel,oop
from django.db import modelsmodel = models.get_mod,django-models
databases = {'default': { 'engine': 'django.db.bac,django
"import stringimport restr = ""hello world""j = 0srr ",string
httperror_seek_wrapper: http error 403: request di,screen-scraping
"for n in range(6,0): print n",loops
"&gt;&gt; set([1,2,3]) | set([2,3,4])set([1, 2, 3, ",set
downloading/unpacking matplotlib from https://pypi,matplotlib
numpy.rank,matrix
bgservice.py,service
"&lt;form id=""login-form"" action=""auth/login"" metho",website
"array = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]",list
from abc import abcmetaclass uobj: __metaclass__ =,class
import multiprocessingfrom sklearn import svmimpor,multiprocessing
class trackinfohandler(object): def __init__(self),state-machines
0.9 #means 90%,probability
"abc = textfield('abc', validators=[required(), len",wtforms
url = 'http://google.com' linkregex = re.compile(',regex
.clf(),memory-leaks
"{""id"":""123456789"",""name"":""john doe"",""first_name"":""",string
multiprocessing.pool,parallel-processing
&gt;&gt;&gt; 1 in ()false,boolean
&lt;module&gt;from apiclient.discovery import buil,google-app-engine
f = open('x.txt')cts = f.read()f.close(),file-io
__str__,string
def foo(): return 'foo'def bar(): yield 'bar',function
str( time.strftime('%y') ) + str( int(time.strftim,date
"class foo(tuple): def __init__(self, b): super(foo",inheritance
import asciiprint ascii.charlist(),ascii
def(myview) do some stuff if user-is-on-a-mobile-d,django
"@app.route(""/canonical/path/"")@app.route(""/alterna",google-app-engine
transaction,class
"traceback (most recent call last): file""c:/users/f",dictionary
"d1 = {'a':'2', 'b':'3'}",dictionary
from facebook import facebookapi_key = '123456789_,facebook
__init__,inheritance
assertionerror,debugging
unique=true,google-app-engine
type set1 a z2 b z 3 b x4 c y,pandas
dict,database
iconv -t utf-8 $file &gt; converted/$file # this i,encoding
mkvirtualenv,windows
(x for x in range(10) if x%2==0) # generates all e,syntax
from flask import g #among other things,flask
"import threading, timeclass reqthread ( threading.",multithreading
if ($var =~ /foo(.+)/) { # do something with $1} e,regex
#!/usr/bin/pythonimport numpy as np;import time; f,numpy
fig = figure(9) # 9 is now the title of the window,matplotlib
"# instead of regular split&gt;&gt; s = ""a,b,c,d""&g",string
"class orderbook: orders = {'restaurant1': none, 'r",multithreading
"import osfrom os.path import join, getsize, isfile",optimization
"foostring = "","".join( map(str, list_of_ids) )",mysql
for doc in coll.find(),mongodb
{% set curyear = 2013 %},jinja2
a,django
def normalize(v): norm=np.linalg.norm(v) if norm==,numpy
(venv)avlahop@apostolos-laptop:~/development/djang,django
type(obj),new-style-class
class videofile(models.model): show = models.forei,django
"class dummy(object): def some_function(self,*args,",language-lawyer
"[f(x), g(x) for x in range(n)]",list-comprehension
from scipy.stats import cumfreqa = array([...]) # ,numpy
"split(""\t"")",list
./doc,python-sphinx
job.sh,shell
brew doctor,osx
"class a: dict1={} def add_stuff_to_1(self, k, v): ",class
from datetime import datetimedatetime_list = [ dat,datetime
user_dict = { 'queryset': user.objects.filter(perm,django
app.config.from_envvar(&lt;file_name&gt;),flask
"&gt;&gt;&gt; some_list = [""apple"", ""pear"", ""banana",list
helloworld(),custom-attributes
re.compile('(\. |^|!|\?)([a-z][^;_æ•\.&lt;&gt;@\^&,text
set,sortedset
http://10.1.1.1:5000/login?username=alex&amp;passw,web-services
celery_task_serializer,security
'thelongandwindingroad',regex
"&lt;root&gt; &lt;target name=""1""&gt; &lt;a&gt;&lt;",elementtree
"import multiprocessingdef worker(): """"""worker func",multiprocessing
"&gt;&gt;&gt; x=['kar','htar','har','ar']&gt;&gt;&g",sorting
"elements = [(1,1,1),(2,3,7),(3,5,10)]",list
"traceback (most recent call last): file ""/usr/bin/",numpy
python somescript.py somecommand,pythonpath
datetime.isocalendar(),datetime
under_test,tdd
"propertylist = {""id"":""int"",""name"":""char(40)"",""team",dictionary
"f = open('filename','r')temp = f.read()f.close()f ",prepend
class fileutility(): @staticmethod def getfilesize,static
import matplotlibimport numpy as npfrom matplotlib,numpy
somelist[:],list
"application = endpoints.api_server([testendpoint],",google-app-engine
show_most_informative_features(),machine-learning
if not self.definition.all():,numpy
class crawler: # initialize the crawler with the n,class
unittest,unit-testing
datetime.weekday(),django
#!/usr/bin/env pythonimport timefrom itertools imp,timing
object,object
./_pylibmcmodule.h:42:10: fatal error: 'libmemcach,memcached
i,list
int i;for(i=0;i&lt;100;i++){ if(i == 50) i = i + 1,iterator
from celery.decorators import task@task()def add(x,celery
def getvisiblepackages(self): visiblepackages = {},django
assert,language-design
1 128 1298039123388 0 2,formatting
"&gt;&gt;&gt; ['a','b',]['a', 'b']",list
from module import myclassclass replaceclass(objec,monkeypatching
entry,validation
if,control-flow
"om_points = os.popen(command, ""w"").....",wait
default=null,django
"12:18pm est on oct 18, 2010",datetime
"count = 0while count &lt; 50: print ""some thing"" c",loops
"if not has_imported(""sys""): import sys",testing
arrayobject.h,numpy
slice,slice
__eq__(),comparison
def maker(n): def action(x): return x ** n return ,function
import jsonimport csvf=open('issues.json')data = j,json
except:,iteration
"image = image.new(""rgba"", (288,432), (255,255,255)",python-imaging-library
xmlhttprequest,encoding
"programmingerror: relation ""django_content_type"" a",django
"def f(): global x x = 1def g(): print(globals()[""x",global-variables
"color = (randint(100, 200), randint(120, 255), ran",language-agnostic
"subprocess.call([""/home/myuser/run.sh"", ""/tmp/ad_x",linux
http://example.com/site1/http://example.com/site2/,apache
"&gt;&gt;&gt; list(itertools.permutations([1, 1, 1]",permutation
"import osnewest = max(os.listdir('.'), key = os.pa",file-io
"datetime(2008, 1, 1, 0, 0, 0, 0)",datetime
d,dictionary
"ftp.retrbinary(""retr "" + file_name, process)",refresh
virtualenvwrapper,bash
/*,c
"url1 = ""http://127.0.0.1/test1/test2/test3/test5.x",url
class reversesinglerelatedobjectdescriptor(six.wit,django
&gt;&gt;&gt; import matplotlib.pyplot as plt&gt;&g,numpy
100.95,performance
import matplotlib.pyplot as pltimport numpy as npt,plot
flask,apache
x==y,comparison
&gt;&gt;&gt; assert 1==2traceback (most recent cal,assert
mockobj = mock(spec=mydependencyclass)mockobj.meth,unit-testing
"x=[false,true,true,false,true,false,true,false,fal",performance
collections,dictionary
"def coroutine(): with open(path, 'r') as fh: for l",resources
for element in json[referenceelement].keys():,json
valueerror: jpeg is required unless explicitly dis,linux
#!/usr/bin/python# -*- coding: utf-8 -*-,interpreter
len(str(float(x)/3)),string
bash -x script.sh,bash
sudo python setup.py install,perl
"a = array([1, 2, 3, -4, 5])",numpy
[f(x) for x in l if f(x)],list-comprehension
__name__,decorator
how much for the maple syrup? $20.99? that's ricid,regex
south,django
"if kwargs['errormessage']: print(""it exists"")",dictionary
"installed_apps = [ 'django.contrib.admin', 'django",django
test_suite = 'nose.collector',virtualenv
foo.py,runtime
while not hardware_is_ready(): passprocess_data_fr,multithreading
def _attempt(actor): if actor.__class__ != user: r,django
2.14 parallelism,multithreading
__call__,module
class c(): passclass d(): passc = c()c.dynproperty,json
"a = [1,2,3,1,2,1,1,1,3,2,2,1]",numpy
class c(object): def f(self): print self.__dict__ ,introspection
#NAME?,optimization
#NAME?,argparse
newlist = oldlist[:],list
&lt;content&gt;,parsing
something1something12something17something2somethin,regex
source ~/envs/someenv/bin/activate,django
map,aptana
foo,loops
com.company.actualpackage,naming-conventions
"[1,2,'a','he said ""what do you mean?""']",csv
class crawler: def __init__(self): # the actual co,multithreading
from flask import flaskimport accountapiapp = flas,web-services
warning: method could be a function,oop
#NAME?,optparse
treeroot: branch1: branch1 text branch2: branch2 t,parsing
try: # something that failsexcept e: print e,exception
def onlyascii(char): if ord(char) &lt; 48 or ord(c,text
exec,metaprogramming
multiprocessing,module
threading,multithreading
result_data = zlib.decompress( base64_decoded_comp,compression
read(),io
"for dirpath, dirnames, filenames in os.walk(dir_to",directory
sudo pip install pycurl,install
"def approx_equal(a, b, tol): return abs(a - b) &lt",comparison
&lt;ul&gt;{% for user in userlist %} &lt;li&gt; {{,jinja2
"d = { 'a': [1, 3, 2], 'b': [6], 'c': [0, 0]}",random
# opens each file to read/modifyinfile=open('11033,string
target.write(),string
numpy.digitize,numpy
"x = [(0.1, 1.), (0.1, 2.), (0.1, 3.), (0.1, 4.), (",arrays
"[(1,4),(2,4),(3,4),(4,15),(5,15),(6,23),(7,23),(8,",list
def forgotpassword(request): if request.post: emai,django
@classmethod,properties
pip install -e git://github.com/hiidef/oauth2app.g,package
/,string
"python 3.2.2 (default, sep 4 2011, 09:51:08) [msc ",performance
"[1,2,3,4,5,6]",idioms
32 seconds17 minutes22.3 hours1.25 days3.5 weeks2 ,time
600,file-io
"[{u'i': u'imap.gmail.com', u'p': u'aaaa'}, {u'i': ",json
__init__,class
class user(object): first_name = models.charfield(,django
ipython notebook --pylab inline,pandas
"hashmap&lt;string,string&gt; streetno=new hashmap&",hashmap
def json(self): return json.dumps( { 'items': self,django
&lt;h2&gt; this is cool #12345678901 &lt;/h2&gt;,regex
zipwith :: (a -&gt; b -&gt; c) -&gt; [a] -&gt; [b],haskell
import numpy as npfrom matplotlib import pyplot as,matplotlib
fileinput,file
"from datetime import datetime, timedeltanow = date",datetime
manage.py runserver,django
self.a,operators
numpy.distutils.system_info.notfounderror: no lapa,windows
TRUE,keyword
"mydict = {key1: value_a, key2: value_b, key3: valu",csv
@taskdef compute(users=none): if users is none: us,django
x,pycharm
&gt;&gt;&gt;l = []&gt;&gt;&gt;l.append('apple')&gt,list
import numpy as pdef firstfunction(): unfiltereddu,arrays
"[1,5,6,10,11]",indexing
pip install scipy,scipy
&lt;&gt;,syntax
subprocess,path
import datetimeimport pytzfmt = '%y-%m-%d %h:%m:%s,datetime
fun (head : rest) = ...,functional-programming
"indexes = [5, 12, 17]list = range(20)",list
"image = image.open(filename)image.thumbnail((x, y)",python-imaging-library
settings.debug,django
/main,ipython
pd.isnan,pandas
"class a(): passclass b(): passclass c(a, b): pass",reflection
nan,numpy
mainpack/ __main__.py __init__.py  - helpers/ __in,python-import
request.meta,django
{{ form.first_name }},django
project.app1.modelsproject.app1.viewsproject.app2.,package
import socketfrom datetime import timedeltafrom ce,django
\u2026,string
"def decorator(func): def _decorator(*args, **kwarg",unit-testing
python -m pdb app.pyw&gt; break app.pyw:55 # this ,qt
numpy.float64,numpy
x,performance
col1 col2a 1 b 2c 3,pandas
"def try_parse_int(s, base=10, val=none): try: retu",parsing
params.csv,numpy
def decorator(f): def _decorator(): print 'decorat,decorator
"def addondays(a,x): ret = time.strftime(""%y-%m-%d""",date
"class baseclass(object): def __init__(self, classt",class
"&lt;select multiple=""multiple"" name=""services"" id=",django
def utf_8_encoder(unicode_csv_data): for line in u,unicode
"subprocess.popen(""/the/script.py"")",windows
(venv)jabuntu14@ubuntu:~/desktop/helloflask$ pip i,heroku
heapq,queue
"l = range(100) for i in l:  print i,  print l.pop(",list
"values = {'profile' : 'testprofile',  'format': 'r",json
%r,sign
ser = serial.serial()ser.baudrate = 9600#for windo,audio
"import threadingimport timedef f(): print(""hello w",function
simplehttpserver,cross-domain
from django import formsclass userform(forms.model,django
__init__.py,import
class myexception(exception): pass,exception
start_time = time.time()time.sleep(42)end_time = t,timedelta
for,arrays
py.test,pycharm
"list = ['foo', 'fob', 'faz', 'funk']string = 'bar'",list
truncate table `books`,sql
ivborw0kggoaaaansuheugaaboiaaaaccayaaaabzu+eaaaqoe,image
virtualenv,virtualenv
"def distance(word1, word2): difference = 0 for i i",optimization
t,object
"r = xrange(1, 10)print sum(1 for v in r if v % 2 =",iterator
"sql_string = ""insert into hundred (name,name_slug,",postgresql
"t = scipy.linspace(0,120,4000)acc = lambda t: 10*s",numpy
mystring.findfirstindex('dude') # should return 4,string
from tkinter import *def quit(): # code to exitroo,tkinter
"class request(object): def __init__(self, environ)",oop
struct,sockets
"test = [ ""item1"" ""item2""]",string
from models import counterfrom django.db import tr,django
"sys.stdout.write(""%6s %50s %25s\n"" % (code, name, ",string-formatting
modelserializer,django
__ne__,operator-overloading
dict,dictionary
from functools import wrapsdef foo_register(method,wrapper
"""none""",jinja2
"import ""&lt;full path&gt;/foo/util.py""",import
foo = somevalueprevious = next = 0for (i=1; i&lt;o,loops
"[(1,2),(2,3),(4,5),(3,4),(6,7),(6,7),(3,8)]",list
"&lt;input type=""submit""&gt;",forms
"listofnum = ['000231512-n','1209123100000-n00000',",string
while 1: line = data.readline() if not line: break,while-loop
foo.so,cmake
from django import formsfrom registration.forms im,django
import urllibfun open(): return urllib.urlopen('ht,bottle
traceback.format_tb(sys.exc_info()[2]),debugging
"a = array([1,2,3,4,5,6])b = array([1,4,5])",numpy
"lang=de_de.utf-8language=lc_ctype=""de_de.utf-8""lc_",shell
"d = {'a': [1], 'b': [1, 2], 'c': [], 'd':[]}",list
dataframe,csv
#!/usr/bin/env python# -*- coding: utf-8 -*-from s,setuptools
python setup.py sdist upload,pypi
pip install -e git+https://github.com/facebook/pyt,pip
"[1,2,3,4]",list
"def kerma(): return ""energy / mass"" print kerma()",function
"mylist = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 ,9 , 10 ]",list
repo/repo/app.pyrepo/settings.pyrepo/models.pyrepo,unit-testing
json.jsonencoder,json
hash(),string
"[1234567891,2345678912,3456789123,4567891234,56789",regex
"try {module=import(""mymodule""); //this line will t",exception
finduniquewords,list
range(),range
"file ""/home/hari/bin/lib/python2.6/site-packages/s",sqlalchemy
dev_appserver.py,osx
import osdef populate():python_cat = add_cat('pyth,django
help_text,django
imshow(),image
in [1]: class c(object): # a class ...: def f1(sel,oop
datetime a = datetime.now()  a.year # (this is in ,datetime
"@accesscheck@autotemplatedef view(request, item_id",decorator
"#!/usr/bin/env python""""""usage: script.pythis descr",docstring
np.append,multidimensional-array
"&gt;&gt;&gt; encode('john doe', password = 'mypass",encryption
#!/usr/bin/python# test.pyxdef test(value): for i ,performance
urllib.quote,unicode
importerror: no module named bz2,ubuntu
&gt;&gt;&gt; import yaml&gt;&gt;&gt; yaml.dump(u'a,yaml
"post:&lt;querydict: {u'section': [u'39'], u'mains'",django
"fixed_points = [-pi, -pi/2, pi/2] v v v |---------",algorithm
"def get_content(): return ""stuff""",unit-testing
os.listdir(path),hidden-files
python: 106 secondsruby: 5 secondsvbscript: 124 se,ruby
"def addfoldertozip(myzipfile,folder): folder = fol",file
import matplotlibmatplotlib.use('gtkagg')import ma,matplotlib
assert_raises(what should i put here?),nosetests
python setup.py install,windows
204 no content,django
noweb,windows
&gt;&gt;&gt; asyncresult('...').status'pending',task
"&gt;&gt;&gt; foo = 'baz ""\""'&gt;&gt;&gt; foo'baz """,string
classifier = nltk.naivebayesclassifier.train(train,machine-learning
$ python version 2.7.5$ python3.3 version 3.3,osx
k = 0.0print(-k),floating-point
s,string
"partition([1,2,3,4,5],5)-&gt;[[1],[2],[3],[4],[5]]",list
__init__,coding-style
first = truefor member in something.get(): if firs,algorithm
"&gt;&gt;&gt; a = array([[1,2,3],[4,3,1]])&gt;&gt;&",numpy
"if hasattr(a, 'property'): a.property",attributes
cv2.pyd,opencv
"object result: items = [item1,item2] users = [{nam",django
class tag(models.model): name = models.charfield(m,django
*** glibc detected *** python: double free or corr,memory
configfiles = glob.glob('c:/users/sam/desktop/file,glob
&gt;&gt;&gt; from itertools import chain&gt;&gt;&g,sequences
&gt;&gt;&gt; s = '23.45678'&gt;&gt;&gt; i = int(s),string
collections,dictionary
from sqlalchemy import create_enginefrom sqlalchem,orm
models.py,django
"sorted(profile.objects.all(), key=lambda p: p.repu",django
myapp/ run.py admin/ __init__.py views.py pages/ i,flask
"requests.get('https://mysite.com', verify=true)",ssl
automobile.py,module
"x=np.array([range(100,1,-1)])#generate a mask to f",arrays
dumrat@dumrat:~/programming/python$ time python ca,performance
class myclass { public: int test();...,ctypes
"when /i sign in/ do within(""#session"") do fill_in ",functional-testing
n x 3,image
!$omp,parallel-processing
flag_one = 0b1flag_two = 0b10flag_three = 0b100sta,bit-manipulation
from pil import imageim = image.open(image_filenam,image
{% if profile.user.first_name is null %} &lt;p&gt;,django
def analyze_data( args ): # do something  counter ,multiprocessing
&gt;&gt;&gt; print 'example'example&gt;&gt;&gt; pr,unicode
bytearray,types
"fig = plt.figure()plt.scatter(x,y,edgecolors='none",matplotlib
"filename = ""example_file_(extra_descriptor).ext""",regex
day p1s1 p1s2 p1s3 p2s1 p2s2 p2s31 1 2 2 3 1 22 2 ,wildcard
class test(object): passa = test()test.value = 5a.,oop
"import lxml.etree as etxml=""""""&lt;groceries&gt; &l",xml
r cmd batch func.r,r
&lt;item&gt; &lt;title&gt;item 1&lt;/title&gt; &lt,xml
client,soap
export pythonpath=/path/to/library/app,dry
"existing_text = ""the old river""",nlp
| my_project/| setup.py| my_project/ | __init__.py,pythonpath
.append(x),list
label instances 5 1190 4 838 3 239 1 204 2 127,machine-learning
**kwargs,documentation
"my_code = """"""class a(object): passprint 'locals: %",scope
"&gt;&gt;&gt; d = {}&gt;&gt;&gt; d[0,] = 'potato'&g",syntax
"&gt;&gt;&gt; filter(lambda x: x &gt; 10, [1,4,12,7",filter
a b2011-01-01 00:00:00 1.883381 -0.4166292011-01-0,pandas
tool -d character -f integer [filename],file
enwiki_session=17ab96bd8ffbe8ca58a78657a918558e; p,cookies
"a = [[1, 2, 3], [4, 5, 6], [7, 8, 9]] ",numpy
"x=pandas.dataframe(...)s = x.take([0], axis=1)",dataframe
"string = ""&lt;p&gt;hello world&lt;/p&gt;&lt;a href",regex
success !,migration
"import math, operatorfrom pil import imagedef comp",linux
"listofitems= ['1','2','3','4','5']",variables
"&lt;link rel=""stylesheet"" href=""example.css?{% mer",documentation
#!/usr/bin/env pythonimport subprocesscommands = [,subprocess
"first_list = [1, 2, 2, 5]second_list = [2, 5, 7, 9",list
journal #1 admin page[name][publisher][url].....li,django
def process(): import stringio file_handle=stringi,python-import
"import multiprocessing, timedef task(args): count ",queue
"class solution: """""" @param a: the first integer @p",c++
folder=input('folder name: '),input
os.path.exists(filename),file
global,perl
def add(req): if req.method == 'post': form = arti,django
"def foo(): """"""this function does nothing."""""" pass",documentation
'jpg',oop
function_name.__name__,logging
"filename = 'file1'f = open(filename, 'r')content =",file
__new__,initialization
"list =[ ['a','b'], ['a','c'], ['b','d'] ]",list
"if os.geteuid() != 0: exit(""you need to have root ",root
a b1 101 202 302 403 10,duplicates
from pybrain.datasets import superviseddatasetfrom,neural-network
from selenium import webdriverimport seleniumfrom ,selenium
"import subprocesssubprocess.popen('explorer ""c:\pa",windows
default,mercurial
__main__.py,sqlalchemy
xxxx,arrays
import wavew = wave.open('/usr/share/sounds/ekiga/,audio
class modeltests(testcase): fixtures = ['initial_d,django
"from celery import celeryapp = celery('tasks', bro",celery
li = myfancylist(),list
if sys.platform == 'win32': ...,windows
class groupe(models.model): nom = models.charfield,django
import osconfig_name = 'myapp.cfg'config_path = os,executable
real 0m18.823suser 0m2.735ssys 0m6.042s,node.js
import numpy as npimport cv2import matplotlib.pypl,opencv
from gblocks.models import imagef = 'image__endswi,django
import cv2import numpy as npdef gettranslationmatr,algorithm
class person(models.model): name = models.charfiel,django
0,file
os.path.abspath('d:/projects/suishoubei/www/ssb/st,windows
"import numpy as npn = 2000output = np.zeros([n,n])",matlab
[siyuan.tong@sc-055 lxml-2.3beta1]$ pythonpython 2,lxml
r = requests.get(url),python-requests
"class a(object): data={'a':'aaa','b':'bbb','c':'cc",dictionary
requests.get,get
"def escape(string): """""" returns the given string w",performance
"in [16]: c.execute(""update movies set rating = '8.",sqlite
"&gt;&gt;&gt; def f(a,b,c):... print a, b, c... &gt",tuples
"h = heapq.heapify([...], key=my_lt_pred)h = heapq.",algorithm
"[25.75443, 26.7803, 25.79099, 24.17642, 24.3526, 2",list
raw_input,openfiledialog
__new__,new-operator
downloading/unpacking bcrypt==1.0.2 (from -r requi,osx
"&gt;&gt;&gt; path = r""c:\scr.txt""&gt;&gt;&gt; file",file
os,python-import
picklingerror: can't pickle &lt;type 'instancemeth,serialization
import matplotlib.pyplot as pltdef main(): test1(),algorithm
sessionmaker(),sqlalchemy
"try: raise exception(""a"")except: try: raise except",exception
setup.py,distutils
15 ncesreader = csv.reader(open('geocoded_output.c,django
"def f(): return 1,2a, b = f()",syntax
"dict = {'?ç?è??_—_ä':'?”??__Û??','russiana':'engli",regex
[~/wepapps/python/python-2.6.1]# make install/usr/,installation
a b c2000-01-01 -0.532681 foo 02000-01-02 1.490752,pandas
#importsurl_to_short = sys.argv[1]post_url = 'http,pylint
"a = [1,2,3,4]b = [2,3,4,5]a.*b = [2,6,12,20]",list
"unicode(somestring, 'utf8')",unicode
nosetests,unit-testing
def verybighello(): i = 0 while i &lt; 10000000: i,iterator
setup.py install,install
"a = [0,1,2,3,4,5,6,7,8,9]",algorithm
"random.randint(a, b)",random
gi.repository,gtk
assert,optimization
_ã  /usr/local/bin/emacs -qdescribe function: pyth,emacs
c:\documents and settings\administrator\desktop\lx,windows
"glbl_array = # a 3 gb arraydef my_func( args, def_",numpy
"def main(): passif __name__ == ""__main__"": main()",unit-testing
import pandas,coding-style
multiprocessing,multiprocessing
mylist[0][1:],string
%matplotlib inline,matplotlib
set(),list
import matplotlibmatplotlib.use('agg')import matpl,linux
"users = [ {""id"": 0, ""name"": ""ashley""}, {""id"": 1, """,pandas
mar 28 20:11:59 telemachos root: error 'exception',logging
import cvimport numpy as npwaitkey_delay_ms = 10st,c
from pil import imageimport numpy as npi = image.o,save
&gt;&gt;&gt; import os&gt;&gt;&gt; os.mkdir('foo'),exception
mysql,mysql
x = none,scope
myenum.somenamea,variables
myapp/__init__.pymyapp/myapp/myapp.pymyapp/myapp/s,import
def traverseinorder(node): lifo = lifo() lifo.push,algorithm
"parser.add_argument('-i', '--input-file', type=arg",stdin
w = 7195h = 3841fig = plt.figure(frameon=false)fig,matplotlib
doesnotexist at /admin/ site matching query does n,django
"str = ""please answer my question""",string
&gt;&gt;&gt; 4 / 1000,math
import sysprint sys.platform,cross-platform
def post(request): # todo: handle vehicle formset ,django
"l = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']idx = ",list
"{keyword:(functionname, amountofarguments)}",parameters
i_love tab 10love_you tab 12,memory
x,list
serial number,linux
"table = cell(""a1"").table",pandas
"array = [4,2,7,1]ranks = [2,1,3,0]",sorting
optionparser,class
[errno 111] connection refused,django
sha1sum /folder/of/stuff &gt; singlehashvalue,linux
&gt;&gt;&gt; import numpy as np&gt;&gt;&gt; import,numpy
pandas,pandas
if not 'thing_for_purpose' in request.session: req,ruby
/users/current,django
if expression1: statement1 elif expression2: state,syntax
somedomain/reporting/article-by-month?variable1=20,django
"pylab.rc('font', family='serif', size=40)",matplotlib
&gt;&gt;unicodeencodeerror: 'latin-1' codec can't ,mysql
class photo(models.model): tags = models.manytoman,django
start = time.time()#model operationsloadingpagetim,django
hashlib.sha1(s).hexdigest()unicodeencodeerror: 'as,unicode
"semilogy(1/(1+z),mass_acc_massive,'-',label='dm')x",matplotlib
import matplotlib.pyplot as pltplt.fill(*zip(*poly,matplotlib
dir({}),class
lat2 = asin(sin(lat1)*cos(d/r) + cos(lat1)*sin(d/r,gis
{{ var }},django
"point = (1, 2)size = (2, 3)color = 'red'class rect",function
a = '123'print a,pycharm
random.shuffle,random
"url(r'^api/v1/', include('rest_framework.urls', na",django
apt-get install,ubuntu
processdirector = processdirector()id12345 = id123,design-patterns
numpy,numpy
[ a b c ],numpy
"#--------------------------------------0 [0,1,3]1 ",merge
for,for-loop
cookiejar,cookies
permission denied,osx
numpy.abs(),performance
"import pandas as pddate_stngs = ('2008-12-20','200",datetime
__main__.py,main
slugify,django
@patch,unit-testing
"&gt;&gt;&gt; escaped_str = '""hello,\\nworld!""'&gt;",string
response_dict = {} # contains info to response und,django
#NAME?,cryptography
fri sep 25 18:09:49 -0500 20092008-06-29t00:42:18.,datetime
datetime,datetime
class person(models.model): identifier = models.ch,django
"list = [""gathi-109"",""itcg-0932"",""mx1-35316""]set_1 ",list
"s = ""foo""last_bit = fileobj.readlines()[-10:]for l",file
pip,pip
import foobar,import
/usr/bin/python: no module named virtualenvwrapper,terminal
"a = [ {'main_color': 'red', 'second_color':'blue'}",list
z = csv.reader(open('/home/rv/ncbi-blast-2.2.23+/d,csv
_”“_”—_”— license.md_”“_”—_”— readme.md_”“_”—_”— a,packages
actor = [actor for actor in self.actors if actor.n,list-comprehension
class foo(object): @property def bar(self): return,properties
"xor = lambda x,y: (x+y)%2l = reduce(xor, [1,2,3,4]",reduce
"[(1,2),(3,4),(5,6),]",list
timeit,performance
resource valueuser cpu time 3760.000 msecsystem cp,django
__new__,class
"@cache_page( 60 * 15, ""blog"" );def blog( request )",django
&gt;&gt;&gt; import matplotlib&gt;&gt;&gt; print m,backend
"traceback (most recent call last): file ""my_file.p",list
"np.log(np.dot(np.exp(a), np.exp(b)))",numpy
from scipy.stats import kstestimport numpy as npx ,numpy
add,celery
import pandas as pddff = pd.dataframe(np.random.ra,pandas
dataframe,pandas
130 -&gt; 200,math
"#!/usr/bin/env python import datetime print ""cron ",cron
try: # something that throws exceptioncatch: pass,exception
"[2,2,2] - [1,1,1] = [1,1,1]",list
"extracteddata = data[[:,1],[:,9]]. ",syntax
"var, sep, value = ""var=value"".partition('=')",syntax
&gt;&gt;&gt; a = [0]&gt;&gt;&gt; a[0] = a&gt;&gt;&,list
"for counter in range(10,0): print counter,",for-loop
package_fiddler,packaging
"from subprocess import popen, pipep1 = popen([""gre",ipc
{ something_if_true if condition else something_if,dictionary
doc,mercurial
xrange,generator
import numpy as npimport matplotlibmatplotlib.use(,matplotlib
pip install --upgrade pip,pip
"[('a', 1),('a', 2),('a', 3),('b', 1),('b', 2),('c'",data-structures
~$ pip install pyqtdownloading/unpacking pyqt down,pyqt
pip install pyodbc,osx
"&lt;select id=""fruits01"" class=""select"" name=""frui",selenium
django.contrib.auth.models.user,django
"def my_print(begin, text, end): """"""print 'text' in",testing
urllib2,file
"open(file, 'w').write(text)",file-io
"class c(str): def __init__(self, a, b): str.__init",string
"class spam(object): __init__(self, description, va",design
id(),identity
var=2**2*3,syntax
a = 'hello',string
select sum(isnull(table.name)) from table,django
0,gcc
pip,pip
oauth,logging
import networkx as nximport matplotlib.pyplot as p,networkx
frameon=false,matplotlib
def class myform(forms.form): check = forms.boolea,django
&gt;&gt;&gt; import csv&gt;&gt;&gt; spamwriter = c,windows
"table = [['donkey', '2', '1', '0'], ['goat', '5', ",nested-lists
"gen = iter([1,2,3])next_value = gen.next() # okay,",generator
py2exe,windows
$ echo $pythonpath:/home/randy/lib/python$ tree -l,unix
"u = unicode(text, 'utf-8')",unicode
"from threading import timer, lockfrom time import ",multithreading
importerror: dynamic module does not define init f,cython
python,xml
created_date = models.datetimefield(auto_now_add=t,django
class review(models.model): venue = models.foreign,django
"author='foo', author_email='foo.bar@gmail.com',",pypi
"&gt;&gt;&gt; a = """"&gt;&gt;&gt; a.foo = 2traceback",object
# a.pyimport bdef f(): return b.yx = 42,python-import
"$xmlfilename = dirname(__file__).""example.fb2"";$xm",xml
from pydev import pydevdpydevd.settrace('not.local,django
contour(),matplotlib
in [31]: rand = np.random.randomstate(1) df = pd.d,sorting
class news(models.model): title = models.charfield,django
class deletemixin(models.model): deleted = models.,django
d,numpy
"&gt;&gt;&gt; import re&gt;&gt;&gt; s = """"""// the q",regex
"x = my_series.apply(my_function, more_arguments_1)",pandas
"{ 'field1' : 3000, 'field2' : 6000, 'randomfield' ",komodo
"def outer(): string = """" def inner(): string = ""st",scope
"python 2.6.5 (r265:79063, jun 12 2010, 17:07:01)[g",unicode
a.txt,file-rename
with,functional-programming
"d=dict(zip(range(1,10),range(50,61)))",dictionary
"import syssys.path.append(""/home/me/mydir"")",osx
import pandasdf = pandas.dataframe({'group1': ['a',ipython
8puzzle.py,import
from sqlalchemy import *from main import baseclass,sqlalchemy
unittest,unit-testing
"a, b = foo(c) # a and b are regular variables.mytu",function
in this setup file i see # andrew kuchling's zlib ,virtualenv
python -m simplehttpserver 8888 &amp;,d3.js
/names,csv
"class b: def __getitem__(self, k): return kcb = b(",iterator
for i in some_list: #do a bunch of stuff. print i/,stdout
"def f(): return somethingf._x = ""foo""f() # -&gt; """,function
if __name__ == '__main__': # this file is being ex,perl
admin.autodiscover(),django
{% for f in friendslist %} {% if forloop.first %} ,django
cbar.solids.set_rasterized(true)cbar.solids.set_ed,matplotlib
python3.2 setup.py install,numpy
"def foo(a,b): return a + bd = {'a':1, 'b':2, 'c':3",dictionary
"def astar(self, graph, current, end): openlist = [",algorithm
"isinstance(re.compile(''), ???)",regex
"def bad_append(new_item, a_list=[]): a_list.append",mutable
# myapp/views.pyfrom django.contrib.auth.models im,database
signal,user-interface
"def tup(): return (3,""hello"")i = 5 + tup(); ## i w",tuples
__init__,class
input(),ruby
goto,compilation
rt,file
downloading/unpacking django==1.4.5 (from -r requi,caching
"a = array([1,2,3,4,5,6,7,8,9,10])",numpy
keyboardevent('a') #lower case 'a'keyboardevent('b,keyboard-events
serializers.writablefield,django
importerror: /home/.../_entropysplit.so: undefined,parallel-processing
import subprocess#setupdo_setup()#run scriptasubpr,multithreading
def whizbang():  for i in range(10):  x = yield i,generator
&gt;&gt;&gt; import mysqldb /library/python/2.6/si,mysql
stringio,unicode
from django.db import modelsclass model_one(models,django
"di = {1: ""a"", 2: ""b""}",dictionary
next(),list
$ python test_app_data.py -i data_1.txtoption -i n,unit-testing
"l=[ [1, 'a'], [1, 'b'], [2, 'c'] ]",list
&gt;&gt;&gt; from django.db import models&gt;&gt;&,django
alluuids = [x.id for x in self.db.query(schema.all,coding-style
"e = ('ham', 5, 1, 'bird')logfile.write(','.join(e)",list
get /myprofile/data/some_id/ http/1.1 302 0get /ac,django
from django.contrib.auth.models import user...clas,django
"for k, v in os.environ.items(): print ""%s=%s"" % (k",coding-style
session.query(self.col1),sqlalchemy
if __name__ == '__main__': app.run(debug=true),logging
"""a"",""b"",""c"",""d"",""e"",""f"",""timestamp""611.88243,9089.",arrays
%~dp0env\scripts\activate.batpython %~dp0work\scri,windows
"youtube-dl -g ""www.youtube.com...""",youtube-dl
df = pd.read_csv('somefile.csv'),parsing
class parent(models.model): name = models.charfiel,django
"import jsondef create_simple_meeting(subject, star",json
openssl aes-256-cbc -salt -in filename -out filena,encryption
"def __init__(self): self.data = []def update(self,",performance
"x = ""xtop""y = ""ytop""def func(): x = ""xlocal"" y = """,scoping
simplify,postgresql
models.manytomanyfield,django
"translation.activate(""ru"")print datetime.now().str",django
"data[:,:,:,0] , data[:,:,:,1]",arrays
plt.ylabel,matplotlib
from ctypes import *class example(structure): _fie,struct
"def filterpick(lines,regex): result = [] for l in ",regex
"import csvwith open(""test.csv"", ""w"") as f: writer ",csv
categories = category.objects.all()t = loader.get_,django
class myclass: foo = 1 bar = 2,class-method
gettickcount(),c
def f(): print a,namespaces
os.sep,operating-system
fab staging test,fabric
datetime.timedelta,datetime
easy_install,osx-snow-leopard
'.'.join(urlparse.urlparse(url).netloc.split('.')[,url
src | +---- main | +---- util | +---- gen_py | +--,import
# file: test.pyimport osfrom ctypes import *from t,ctypes
__getattr__(),methods
&gt;&gt;&gt; import cpickle as pickle&gt;&gt;&gt; ,data-structures
"def function(string, str_to_search_for): count = 0",string
csv.dictreader,csv
$ pypy ./manage.py syncdb/usr/lib64/pypy-2.4.0/sit,django
import com.work.project.component.client.interface,pydev
celeryd_prefetch_multiplier,celery
"[(elt1, elt2), (elt1, elt2), (elt1, elt2), (elt1, ",syntax
'yyyy-mm-dd',date
dendrogram,numpy
"def fib(): x,y = 1,1 while true: x, y = y, x+y yie",generator
y = 5.plus 6,ruby
try: a.method1()except attributeerror: try: a.meth,try-catch
"colors = ('k','r','b')ax = []for i in range(3): ax",matplotlib
"data = numpy.genfromtxt('data.txt', delimiter = ',",numpy
$ virtualenv -q --no-site-packages venv$ pip insta,linux
class mymodel(models.model): creation_date = model,django
ipython &lt;script_name&gt; &lt;script_options&gt;,ipython
import nltk.datatokenizer = nltk.data.load('nltk:t,unix
"x = numpy.array([1,2,3])y = numpy.array([4,5])",numpy
"pip install progra1 , progra2 ,progra3 ,progra4 . ",pip
"std([1,3,4,6])ans = 2.0817",matlab
static_url,django
"""google.com""",parsing
sqlalchemy,session
parser = argparse.argumentparser(prog='mydaemon')a,argparse
"subprocess.popen(cmd, shell=true)",callback
"(start-time, end-time)",algorithm
1 0.12 0.053 0.054 0.25 0.46 0.2,module
celeryd,django
from sys import stdinfrom multiprocessing import p,multiprocessing
from sqlalchemy import create_engineengine2 = crea,mysql
manage.py registration/ forms.py views.py models.p,django
class purchaseorder(models.model): product = model,django
"import nltkfrom nltk import bigramsstring = ""i rea",string
os.walk(),filtering
"l = [1, 2, 3, 4, 5, 6, 7]",list
a = dict()a['cat'] = 1a['fish'] = 10a['aardvark'] ,dictionary
x = defaultdict(...stuff...)x[0][1][0]{},recursion
"import osfiles = os.listdir(""."")for f in files: os",subprocess
"example = ""example""if ""exam"" in example: print ""ye",for-loop
os.walk(),order
"&gt;= 0.5.0, &lt; 0.7.0",setuptools
"import zipfiledef main(archive_list=[],zfilename='",compression
"def foo(self, my_param): #do something here, assig",unit-testing
socket.error: [errno 111] connection refused,sockets
+,oop
def ilen(it): return sum(itertools.imap(lambda _: ,iterator
"&gt;&gt;&gt; fib=lambda n:reduce(lambda x,y:(x[0]+",fibonacci
ls,shell
l,c
blah blahfoo1 bar1foo1 bar2foo1 bar3foo2 bar4foo2 ,text
datetime,string
pip install,pip
inspect.stack,function
"users = [{ ""name"" : ""bemmu"", ""uid"" : ""297200003""},",functional-programming
worker,multiprocessing
"if (opt[""log""] == ""debug""): logging.basicconfig(le",logging
"sum = 0sign = -1.0for i in range(1,infinity,2): si",math
cj = cookielib.cookiejar()opener = urllib2.build_o,http
"$classname = ""myclass"";$newobject = new $classname",dynamic-typing
"# load the imagesimg =cv2.imread(media_root + ""/up",opencv
[] = [],iterable-unpacking
polls_subset.tail(20)out[185]:  favorable unfavora,pandas
imdat,indexing
255,hex
input,user-input
pip install --upgrade pip,windows
"class mydecorator(object): def __init__(self, f): ",decorator
result = numpy.sqrt(numpy.sum(numpy.pow(some_vecto,math
"from sqlalchemy import create_engine, foreignkey, ",sqlalchemy
pandas.dataframe,dataframe
format,string
__main__,matplotlib
"0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, ",algorithm
df.num_columns,pandas
==,boolean
http://_?ç.ws/_ÈÇ,url
savefig,image
import matplotlibmatplotlib.pyplot.plot(...),matplotlib
#! /usr/bin/env pythonimport zlibchunksize=1000d =,gzip
"import numpy as numnames = num.array(['name_1', 'n",list
"import os path = ""/tmp/foo"" for root, dirs, files ",recursion
s3.py,django
bar,import
class hitadmin(admin.modeladmin): list_display = (,django
namedtuple,inheritance
?foo=bar&amp;bla=blah,urllib2
"import win32api"" error in python 2.6: pywintypes26",pywin32
x1.foo = 1x2.foo = 2x3.foo = 3x4.foo = 4myfunc([x1,anonymous-types
for attr in foo:,syntax
python manage.py shell,django
"a ={1,2}b =[1,2]",curly-braces
"a = np.recarray(3, dtype=[('a', np.float32), ('b',",string
"&lt;root&gt; &lt;articles&gt; &lt;article type=""ne",attributes
"br.select_form(name = """")",html
"title = re.search('&lt;title&gt;.*&lt;/title&gt;',",html
"urlpatterns = patterns('', (r'^admin/(.*)', admin.",django
"import signaldef signal_handler(signum, frame): lo",signals
_,r
class loginspider(basespider): name = 'example.com,scrapy
"traceback (most recent call last): file ""xxxxxx.py",networking
print(x),list-comprehension
extract(),zip
socket.recv(),sockets
"eggs = (1,3,0,3,2)[1/egg for egg in eggs]",exception-handling
from django.contrib import adminfrom glasses.playe,django
"import sysimport ostry: os.kill(int(sys.argv[1]), ",linux
class test{ private: int n; public: test(int k){ n,class
"[1,2,3,4]",vector
"foo in iter_attr(array of python objects, attribut",arrays
"class node(object): def __init__(self, children = ",logic
"matrix = [[-2, 5, 3, 2], [ 9, -6, 5, 1], [ 3, 2, 7",matrix
/usr/lib/pymodules/python2.7/matplotlib/legend.py:,plot
threadsafe:yes,performance
class test: def __bool__(self): return falsemyinst,class
key = bucket.new_key(filename) key.set_contents_fr,amazon-s3
confusion = {}confusion[1] = 1confusion['1'] = 2co,dictionary
console.log,google-chrome
numpy,numpy
class tagstatus(models.model): user = models.forei,django
"random.randint(numlow, numhigh)",random
obj= model.objects.filter(testfield=12).latest(),django
# open the file for writing in binary modeprint 'o,ftplib
%s,sql
2012-12-05 21:03:04+0800 [pd_spider] info: dumping,web-scraping
class base: def foo(self): raise notimplementederr,abstract-class
"random.randint(0, 100)",random-sample
dot,graphviz
curl -xget 'http://es_search_demo.com/document/rec,api
try: server = smtplib.smtp(host) #can throw an exc,exception
platform.platform,windows
af_inet,c
python,interactive
a = context.new(strategya.new)a.execute #=&gt; doi,design-patterns
"fifo = 'pipe'os.mkfifo(fifo)op = popen('cat ', fif",diff
"{a:a, b:{c:c, d:d, e:e}} ",yaml
import unittestclass tests(unittest.testcase): def,unit-testing
item,scrapy
&lt;class 'numpy.matrixlib.defmatrix.matrix'&gt;,list
from __future__ import with_statementfrom fabric.a,fabric
"import timedef a(): print ""a()"" return bdef b(): p",c
"plt.axhspan,",matplotlib
hg push,mercurial
class productlist(apiview): authentication_classes,django
"""if a&gt;0.4 then if b&lt;0.2 then if c&gt;0.8 the",machine-learning
lastbusday = datetime.datetime.today() if datetime,datetime
'aa',string
foo(x),doctest
"nums = [1, 1, 2, 2, 3, 3, 4, 4]willthiswork = [x f",list-comprehension
int,inheritance
"# setup.pyimport os,globfrom setuptools import set",package
"import sqlite3c = sqlite3.connect("":memory:"")c.exe",sqlite
"import urllibf = urllib.urlopen(""http://58.68.130.",parsing
virtualenv,virtualenv
"x = [&lt;iteminstance1&gt;,...]",sorting
"def create_app(): app = flask.flask(""app"") app.con",flask
from numpy import * def data(): return genfromtxt(,memory
"import sysif sys.platform == ""win32"": import os, m",binary
"path = '/bla/bla/bla'if path is true: print ""true""",boolean
"&gt;&gt;&gt; x={'a':1, 'b':2, none:3}&gt;&gt;&gt; ",dictionary
typeerror: objectid('51948e86c25f4b1d1c0d303c') is,mongodb
"deferred.defer(spam.cookeggs,  egg_keys,  _queue=""",google-app-engine
def transpose(m): height = len(m) width = len(m[0],loops
"import threadingimport random, timefrom gi.reposit",multithreading
"re.search(""(\w)*"", ""abcdefg"").groups",regex
"from basehttpserver import httpserver, basehttpreq",httpserver
"class something: """""" description of the class. """"""",documentation
matplotlib,matplotlib
(?p&lt;category_slug&gt;,regex
python myprogram refprogram.exe refinput.txt,command-line
{% block %},django
"class layerv(__cell): def __init__(self,somatic_de",oop
#NAME?,debugging
from pyquery import pyqueryimport requestsurl = 'h,python-requests
"def sort(array=[12,4,5,6,7,3,1,15]): less = [] equ",algorithm
&amp;nbsp;,html
"f.figsize(15,15)",matplotlib
c:\ stuff \ directory_i_need \ subdir \ file,directory
"x = numpy.array([1.48,1.41,0.0,0.1])print x.argsor",numpy
"ab = ""ab""print id( ab ), id( ""a""+""b"" )",memory
&gt;&gt;&gt; a = -5&gt;&gt;&gt; a % 43,modulo
ctrl+c,ipython
var = {}print ??? # would like to see 'var'somethi,string
-1,hash
__builtins__ = 0 # breaks everything,cpython
"except urlerror, e: logger.warning( 'it seems like",exception
atime x y z btime c d e0 1.2 2 15 2 1.2 12 25 121 ,pandas
importerror: no module named opencv ,opencv
group1 group2 a b c a b c1 1 0 3 2 5 72 5 6 9 1 0 ,sorting
time.tzname,timezone
"plt.hist(myarray, normed=true)",graph
try,exception
"['this\n', 'is\n', 'a\n', 'list\n', 'of\n', 'words",list
"(x, y) = (y, x)",multithreading
pandas.read_csv,pandas
def funa(): def funa1(): def funa12(): # stuff def,tkinter
"def add(x,y): return x+y",celery
"self = cpickle.load(f) cpickle.dump(self,f,2)",pickle
scipy.spatial.voronoi,scipy
depth = 0def f(): global depth depth += 1 f()try: ,recursion
fig = pylab.figure()mesfig = fig.gca(projection='3,matplotlib
insert_one,mongodb
#!/usr/bin/pythonimport socket #import the socket ,sockets
x= 16sqrt= x**(.5)returns 4sqrt= x**(1/2)returns 1,math
super(),inheritance
&gt;&gt;&gt; import requests&gt;&gt;&gt; login_dat,python-requests
{% for item in my_func(10) %} ,django
prime = 2**74207281 - 1,string
"&gt;&gt;&gt; im = image.open(""test.jpg"")&gt;&gt;&g",css
&gt;&gt;&gt; from collections import ordereddict&g,ordereddictionary
&gt;&gt;&gt; 1000 is 10**3false,reference
os.popen('swfdump /tmp/filename.swf/ -d'),subprocess
"import datetimefrom sqlalchemy import column, inte",date
def big_function(): def little_function(): .......,performance
"cases = scatter(x[:4], y[:4], s=10, c='b', marker=",scipy
r,user-interface
"file ""c:\importer\src\dfman\importer.py"", line 26,",csv
"c0103: invalid name ""_log"" (should match (([a-z_][",pylint
"[ {'id': 4, 'children': ()}, {'id': 2, 'children':",theory
"f = frame(root, width=1000, bg=""blue"")f.pack(fill=",label
has(),list
sidwyn$ sudo easy_install psycopg2searching for ps,xcode
nosource: no source for code: '/home/matthew/.huds,continuous-integration
systemerror: tile cannot extend outside image,python-imaging-library
"import numpy as npa=np.arange(27)b=a.reshape((3,3,",numpy
"cdict = {'red' : ((0., 0., 0.), (0.5, 0.25, 0.25),",matplotlib
&gt;&gt;&gt; import lxml&gt;&gt;&gt; lxml.__versio,lxml
y = a**t * q * a,math
subprocess,path
1.0/0=&gt; infinity,ruby
@attribute,django
"from pylab import *def plot_density(filename,i,t,p",memory-management
import bottleapp = bottleclass app(): def __init__,oop
element = list(myset)[0],set
pylint: disable,pylint
mysql,mysql
class standalonespider(spider): #a regular spiders,django
"echo ""1starg"" | myscript.py",pipe
"[ { ""title"": ""baby (feat. ludacris) - justin biebe",dictionary
pip,authentication
&gt;&gt;&gt; n = 5&gt;&gt;&gt; a = [1]&gt;&gt;&gt;,list
"competition_type_choices = ( (1, 'olympic games'),",django
"@app.route('/app/business', methods=['get', 'post'",forms
"&lt;?xml version=""1.0""?&gt;&lt;itemsearchresponse ",xml
"@app.route('/getpersonbyid', methods = ['post']) d",json
su -m nobody -c &lt;program to execute as a child&,fork
post http://192.168.3.45:8080/api/v2/event/log?ses,python-requests
"context = context() context['my_dict'] = {'a': 4, ",django
filecount,del
&gt;&gt;&gt; import pandas as pd&gt;&gt;&gt; from ,pandas
from django.db import modelsfrom django.contrib.au,django
"class apibaseclassone(object): def __init__(self, ",inheritance
do_something(my_object),stdout
login_url,django
numpy,numpy
"def main(): t1 = threading.thread(target=thread1, ",multithreading
qcoreapplication.processevents().,multithreading
$('#clickme').click( function() { var data = save_,ajax
abcdefgh,string
&lt;select&gt;,django
"def butter_highpass(interval, sampling_rate, cutof",scipy
"""this is a test"" -&gt; ""thisisatest""""a235th@#$&amp",string
"import httplibconn = httplib.httpconnection(""www.p",ssl
def sub3(n): return n - 3def square(n): return n *,function
"aa = range(-10,10)",numpy
$_get['key1']['key2'],list
readcsv(),numpy
toggle_overwrite,sublimetext2
__init__,function
class timelineserializer(serializers.serializer): ,django
post = { some dictionary }mongo_id = mycollection.,database
/tmp/cer/could.db,sqlite3
__version__,git
@login_required,django
"import mysqldbconn = mysqldb.connect(host= ""localh",mysql
pthreads (kernel threads),multithreading
"class test: def method_one(self): print ""called me",static
"names = [""sam"", ""peter"", ""james"", ""julian"", ""ann""]",arrays
python-daemon,daemon
"&gt;&gt;&gt; class potato:... def __eq__(self, oth",python-internals
split,whitespace
dir1\dir2\dir3adir1\dir2\dir3b,unzip
"re.sub(r""([^\s\w])(\s*\1)+"",""\\1"",""..."")",regex
pycairo,installation
"def f(x,y,z): return [x,y,z]a=[1,2]f(3,*a)",arrays
.pyc,file
pylab.figure()pylab.plot(x)pylab.figure()pylab.plo,matplotlib
{% for photos in gallery.photo_set %} {% if forloo,django
qplaintextedit,pyqt
sqlalchemy.exc.unboundexecutionerror: instance &lt,sqlalchemy
getfilenames.py c:\pathtofolder\*getfilenames.py c,file
syncdb,django
"[1,2,3,4,5,6,7]",closest
from pil import imageimport numpy as npim = image.,arrays
with timer() as t: store = pd.hdfstore('test_store,performance
"traceback (most recent call last): file ""openerp-c",module
#!/usr/bin/env pythondef fail(): raise valueerror(,unit-testing
a,algorithm
kwarg,django
sys.stdin,redirect
class mytestcase(unittest.testcase): def testfirst,unit-testing
"package main import ( ""fmt"" ) func main() { for i ",performance
"import urllib, urllisterimport zipfileimport urlli",unzip
|,pipe
__init__.py,module
python,wiki
"return render_to_response('results.html', {'data':",django
new_string = string1 + ' ' + string2 + ' ' + strin,string
a,class
class foo: self._attr = 0 @property def attr(self),oop
"codecs.streamrecoder(stream, encode, decode, reade",utf-8
"class somemetaclass(type): def __new__(cls, name, ",constructor
dict1 = defaultdict(lambda: defaultdict(int)),pickle
"y_train = ('new york','london')train_set = (""new y",classification
class contest: title = models.charfield( max_lengt,database
"&gt;&gt;&gt; k = .1337&gt;&gt;&gt; print ""%.4f"" % ",string-formatting
"def arity(obj, method): return getattr(obj.__class",metaprogramming
if os.name == 'nt': startupinfo = subprocess.start,windows
class test(object): def __init__(self): self = 5t ,object
soup = beautifulsoup(value)for tag in soup.findall,beautifulsoup
"int*4 n_particles, n_groupsreal*4 group_id(n_parti",binary
type -a python,osx
linking /usr/local/cellar/python/2.7.3... warning:,osx
.bash_profile,bash
"cmd = [""which"",""abc""]p = subprocess.popen(cmd, std",command
"foo = ['red', 'white', 'blue', 1, 2, 3]",list
from io import stringiodef meth1(string): a = [] f,stringio
get_signature,django
"def myfunc(arg): .../... if arg == 1: print ""this ",testing
for line in all_lines: s = line.split('&gt;'),split
412,list-comprehension
--------------------------------------------------,python-imaging-library
argv.py,windows
pip install psycopg2,django
"a = np.array([[ 5, 1 ,3], [ 1, 1 ,1], [ 1, 2 ,1]])",arrays
"[8, 8, 7, 96]",c++
"trend1 ([0,1,2,3,4])",matplotlib
root_urlconf = 'resume.urls',django
"(count,none) = get_count_and_price()",core
"# import system modulesimport sys, string, os, arc",executable
import numpy as np from pandas import *index= ['aa,pandas
from my.namespace import mybaseclassfrom somewhere,introspection
data = urllib.urlencode({'q': 'status'})u = urllib,post
"class color: def __init__(self, color): self.color",class
"""sin(x)*x^2""",parsing
regexp = u'ba[r|z|d]',regex
"root.findall(""/molpro/job"")",xml
&gt;&gt;&gt; class foo(object):... def __bool__(se,methods
translate,algorithm
some_var = 'changed!',language-design
"import structlittle_endian = (struct.pack('@h', 1)",endianness
numpy,math
&gt;&gt;&gt; d = {},dictionary
from module import *,syntax
issubclass,oop
l,operators
"ssh -t first.com ""ssh second.com very_remote_comma",ssh
the_job,locking
in,syntax
"{""_cls"" : ""sensorreport"",""_id"" : objectid(""515a963",mongodb
for c in spinning_cursor():,yield
(?&gt;regexp),ruby
dataframe,pandas
pyplot.figure.figimage,numpy
string.replace,regex
mgrid,numpy
&gt;&gt;&gt; '%e' % decimal('40800000000.000000000,string-formatting
"traceback (most recent call last): file ""/users/..",scikit-learn
&lt;td&gt;{{result.result_str}}&lt;/td&gt;unicoded,jinja2
pandas,pandas
"{'a': 'first', 'b': 'second'}",dictionary
i = 5j = ij = 3 print(i),variables
distutils,setuptools
class business(models.model): name = models.charfi,django
setup.py,compiler-construction
class dictobj(object): def __init__(self): self.d ,coding-style
def î£ (..): .. ..,unicode
&gt;&gt;&gt; class a(object):... x = 0... &gt;&gt;,subclass
import csvfrom collections import namedtuplewith o,csv
"peaks([x[0], y[0]]), peaks([x[1], y[1]])",dictionary
"trained_model.similarity('woman', 'man') 0.7372352",gensim
setup.py,package
shlex.split,shell
proj/ client/ client.py server/ server.py common/ ,import
&gt;&gt;&gt; iswindowsvista()true,windows
"cursor.execute(""select count(*) from result where ",sql
#! /usr/bin/pythonimport sysfrom pyqt4.qtgui impor,qt4
func1,function
objects,django
"__ d = {'apple': 1, 'banana': 9, 'carrot': 6, 'bab",dictionary
appcfg,google-app-engine
"data=[]websites=['http://google.com', 'http://bbc.",timeout
__test__,nosetests
def celery_is_alive(): from celery.task.control im,django
int a[x];,arrays
"a = ['a','b','c']b = [0,0,0,0,0,0,0,0,0,0]",list
class update(models.model): pub_date = models.date,django
os.environ['current_version_id']/,google-app-engine
#NAME?,argparse
932,sum
raw_input,windows
import iso8601,django
"img = image.open('img.png')imga = img.convert(""rgb",image
hex,django
dataframe,formatting
"for p in db.collection.find({""test_set"":""abc""}): p",database
numeric_limits::epsilon( ),comparison
&gt;&gt;&gt; timeit.timeit('from win32com.client i,performance
python setup.py sdist,setuptools
"a = {'album': u'metamorphine', 'group': 'monoku', ",encoding
cap = cv2.videocapture(0)print cap.grab(),windows
table[a][b1][c1]=1,dictionary
json1_file = open('json1') json1_str = json1_file.,json
"""a b c"".split(maxsplit=1)typeerror: split() takes ",standard-library
python client.py | tee logfile,linux
pip install matplotlib,matplotlib
[ x*x for x in range(1000) ],parallel-processing
[x**2 for x in range(10)],list
%w,iso
"from win32com.shell import shell,shellconhome = sh",linux
class loginform(forms.form): nickname = forms.char,django
default=0,django
"property_a = [545., 656., 5.4, 33.]property_b = [ ",list
"l = [10,10,20,15,10,20]",list
__del__,constructor
"if t==25: l1,l2 = ax2.plot(x320,vtemp320,'or',x320",matplotlib
if not a and not b: do_something,pep8
test = 'abc'if true: raise test + 'def',typeerror
"words = ['hello', 'world', 'you', 'look', 'nice']",string
"@applydef foo(): """"""a foobar"""""" def fget(self): re",inheritance
from numpy import *a = arange(5)a = a+2.3print 'a ,numpy
userdict,subclass
wx.statictext(),wxpython
/manage.py update_index,django
python manage.py runserver,django
.__eq__,hash
bzr: warning: unknown locale: utf-8 could not dete,osx
walk,object
__init__,new-style-class
try,exception
"in [1]: x = [1]in [2]: x+""foo""--------------------",language-design
importerror: no module named cython.distutils,importerror
remotefile = urllib2.urlopen('http://example.com/s,url
class ps(models.model): id_ps = models.integerfiel,django
imagedraw,image-processing
drawmatches,opencv
"class person(models.model, deepvalues): name = mod",django
a=true,matplotlib
__,reference
conn = sqlite3.connect(db_filename)with conn: cur ,sqlite3
"c = circle(x=1., y=5., r=3.)",oop
a = u'\u0420\u0443\u0441\u0441\u043a\u0438\u0439 \,unicode
sort(),sorting
"{ ""stefan"" : [""running"", ""engineering"", ""dancing""]",list
@app.task for item in list_of_millions_of_ids: id ,django
([\+-][a-za-z0-9]+)*,regex
findall,regex
settings.py,django
__doc__,docstring
http:://www.abc.com/p/xyz.html?id=1234&amp;refer=5,web-crawler
"def checkequal(x, y): print true if x==y else fals",string
"x = {1: false, 2: true} # no 3for v in [1,2,3]: tr",exception
:,exception
"traceback (most recent call last): file ""&lt;strin",virtualenv
"traceback (most recent call last): file ""testclien",http
@app.errorhandler(404)def pagenotfound(error): ret,flask
myrandommethod(),function
"import pandas as pddf = pd.dataframe({'a': [1,2,3]",pandas
"0.71331, 52.25378",regex
word tag count0 a s 301 the s 202 a t 603 an t 54 ,group-by
oomsys@oomsysmob-6:~/demobrun$ bin/python bootstra,setuptools
from collections import defaultdictd = defaultdict,hashmap
setuptools&gt;=0.6c9pymongo==1.9simplejson==2.1.3,requirements
ndarray,arrays
"place,08/09/2010,""15,531"",""2,909"",650",regex
"gen = (i for i in xrange(10))index = 5for i, v in ",generator
if x is y: return true,comparison
"set expandtab "" tabs are converted to spacesset ta",coding-style
"item = [0,1,2,3,4,5,6,7,8,9]for item in z: if item",list
"from numpy import array, nan, isnanpynan = float(""",numpy
getwebservices.amazon.com/onca/xmlawsaccesskeyid=0,hash
class category(models.model):  category = models.c,django
require(rjython) rjython &lt;- rjython() rjython$e,r
django-celery,django
import argparsefrom argparse import argumentparser,argparse
title,templates
mercurial error *** failed to import extension hgg,osx
pip install -r requirements.txt,tox
admin.py,django
'123abc456def',string
"for i in range(key): filename = ""me"" + i + "".txt"" ",string
&gt;&gt; ''&gt;0true,operators
multiprocessing,multiprocessing
"number_to_letterdefaultdict(&lt;class 'list'&gt;, ",defaultdict
pydoc,documentation
datetime.datetime,time
import numpy as npimport pandas as pddf = pd.dataf,pandas
class newclsname: passoldclsname = newclsname,class
src/ __init__.py main.py components/ __init__.py e,import
"z.write(article.replace('&lt;/html&gt;.+', '&lt;/h",regex
import jsonclass countrylistview(listview): model ,django
"def getevents(eid, request): ......",django
testcase.assert*,unit-testing
import multiprocessingimport cprofileimport timede,multiprocessing
"x = rand(500,500)x = (x+x.t)all(x==x.t)&gt; true",arrays
customize gnu95fcompilercould not locate executabl,osx
for word1 in buf1: find = false for word2 in buf2:,nested-loops
routes.py,flask
"#example:&gt;&gt;&gt;que = [2,3,10,5,8,9,7,3,5,2]&",algorithm
\p{sc},regex
"mylist = [[""quux"", 1, ""a""], [""bar"", 0, ""b""]]",sorting
pip install pyodbc,pip
aptitude install,qt
from ctypes import *os.environ['ld_library_path'] ,ctypes
"&gt;&gt;&gt; some_list['1', 'b', '3', 'd', '5', 'f",list
dtype,pandas
a**b % c,algorithm
; cd /var/tmp/my_test_module; mkdir -p ook/test ; ,unit-testing
"&gt;&gt;&gt; text = ""allowed hello hollow""&gt;&gt;",string
subprocess,pipe
&gt;&gt;&gt; m = 0xffffff00 # netmask 255.255.255.,math
end_date = lastitem.pub_date,django
numpy.sin(),numpy
virtualenv env,windows
matplotlib,matplotlib
import jsonimport requestsurl = 'http://developer.,json
"l1=[bitarray 1, bitarray 2, ... ,bitarray n]l2=[ar",multiprocessing
__builtin__,sorting
"print '%.2f' % var1,'kg =','%.2f' % var2,'lb =','%",floating-point
/usr/local/share/hadoop-2.6.1/share/hadoop/mapredu,mongodb
socket.error: [errno 98] address already in use,linux
look,loops
"def get_selected_index(self): (path, column) = sel",tuples
matplotlib,oop
"in [78]: a = [1, 2, 3, 4, 5]in [79]: b = [8, 7, 6]",intersection
sys.setrecursionlimit(),recursion
"[1, 2, 3, 4, 5]",list
"import stringfrom random import sample, choicechar",passwords
class goal(models.model): goal_weight = models.dec,django
python script_name.py,hashbang
warning: invalid value encountered in double_scala,numpy
dists[(np.where(dists &gt;= r)) and (np.where(dist,numpy
"a=b=c=[0,3,5]a[0]=1print(a)print(b)print(c)",list
import psycopg2import psycopg2.extrasconn = psycop,postgresql
next(),generator
network.http.*,css
"nd = normaldistribution(mu=100, std=12)p = nd.prob",statistics
{% from 'dates/format.py' import timesince %}{% ma,jinja2
a[::-1],string
import numpy as npimport cv2from operator import i,algorithm
__del__,oop
os.urandom(n),random
{% for i in p %}{{variable++}}{{variable}},jinja2
"byte key[] = {0x13, 0x00, 0x00, 0x00, 0x08, 0x00};",byte
.pyc,compilation
"class imagedb(dict): def __init__(self, directory)",subclass
$y_k=\frac{1}{2r}\sum_{m=-r}^r y_{k+m}$,plot
nosetests --with-coverage,mocking
"a = ""_?Œ_?è_?«_Ç_?ç_?Â _?Â_Çö_?ç_Ç  _?å_??_?Â _??_",unicode
valueerror: attempted relative import in non-packa,module
command 'ls -l',terminal
import timeimport numpydef find_index_of_nearest_x,algorithm
o.id,hash
&gt;&gt;&gt; import uuid&gt;&gt;&gt; uuid.uuid4()u,unique
&gt;&gt;&gt; tz&lt;dsttzinfo 'africa/abidjan' lmt-,datetime
cron,security
&gt;&gt;&gt; class testclass(bool): passtraceback ,inheritance
(cb)clime@den /srv/www/cb $ ./manage.py runserveri,django
"montecarlos = [montecarlo(f,fargs) for fargs in fa",multiprocessing
importerror: no module named mysqldb,mysql
"setup(.... entry_points=""""""[console_scripts]mycomm",command-line
cmd [global_options] {command [command_opts]} [{co,command-line-arguments
localhost:5000,url
self.heartbeat.start(),qt
"python build finished, but the necessary bits to b",ubuntu
import jsonwith open('new.json') as infile: data =,json
import sysimport botoimport boto.s3# aws access de,amazon-web-services
csv,list
"int c_read_block(uint32 addr, uint32 *buf, uint32 ",arrays
"workon envpython 2.7.6 (default, nov 10 2013, 19:2",django
subprocess.popen.terminate,windows
tempfile,unit-testing
this is a the first line in englishthis is a the 2,file
json,xml
values,tuples
minn = 1maxn = 10n = something() #some return valu,max
auth_profile_module,django
"import urllibimport reurl = ""http://www.someurl.co",urllib
4 31 2 3 42 3 4 56 7 8 9,file
"logfile=open('c:\\temp\\mylogfile'+'.txt', 'w')ppr",logging
"for i in range(100,3000): if df.iloc[i]['boolcol']",indexing
"import numpy as npx = np.array([[1, 2, 3], [4, 5, ",arrays
matrix,class
"# mymodule.pyclass myclass(object): """"""main logic ",lisp
"qtcore.qobject.connect(self.twit_in, qtcore.signal",pyqt
apple = 1banana = 'f'carrot = 3fruitdict = {}# i w,dictionary
import numpy as npimport mkln = 10000a = np.random,c
"(lat,lng) = transform(easting, northing, zone)",gis
{% for source in sources %} &lt;tr&gt; &lt;td&gt;{,django
&gt;&gt;&gt; import threading&gt;&gt;&gt; class th,class
foo = [x for x in bar if x.occupants &gt; 1],for-loop
"*args, **kwargs",inheritance
string.punctuation,string
"a, *b = (1, 2, 3)# a = 1; b = (2, 3)",iterable-unpacking
"&gt;&gt;&gt; def fun1(a=""who is you"", b=""true"", x,",language-agnostic
"child = subprocess.popen(command, shell=true, stde",subprocess
fun1 = lambda:xfun2 = lambda:xprint fun1 == fun1 #,sorting
&gt;&gt;&gt; class cow:&gt;&gt;&gt; def moo(self):,instance-method
@coroutinedef protocol(target=none): while true: c,yield
from django.db import modelsfrom django.contrib.au,django
bitcoin signed message:\n,openssl
xml.dom.minidom,xml
"def intersect_two_lists(self, list1, list2): if no",return
import matplotlib.pyplot as pltxs = range(8)series,matplotlib
requesthandler,tornado
def mainloop(): while true: # 1. do # 2. some # 3.,daemon
shutil.rmtree,directory
d = {}def test(**kwargs): for k in kwargs: def f(),function
"def maybe_skip_member(app, what, name, obj, skip, ",python-sphinx
class artifact( models.model ): name = models.char,django
s = len(text) p = 1.0/s freqs = {} for char in tex,algorithm
if row in array:,numpy
"# refer link1return super(mytype, cls).__new__(cls",types
print,multithreading
&lt;p&gt;,beautifulsoup
# include &lt;iostream&gt;using namespace std;int ,syntax
c:\opencv2.2\python2.7\lib\site-packages,opencv
nano my_file.py,nano
unboundlocalerror,function
__new__,design-patterns
pip,virtualenv
#!/usr/bin/env pythonfrom datetime import datetime,flask
numpy,numpy
setup.py,distutils
warning: could not link python. unlinking...error:,bash
"s = [1,30,20,30,2] # my listfor s,i in zip(s,range",list
"l = [('a',1),('b',2)]h = {}[h.update({k:v}) for k,",list
"# export my_data=""my_export""",linux
"cursor.execute(""insert into table values var1, var",sql
zipfile,attributes
&lt;?php $_server['remote_addr'] ?&gt;,google-app-engine
from django.db import modelsclass post(models.mode,django
string::shellquote::shell_quote,shell
manifest.in,pip
heap,f#
dic = smart_dict()dic['a'] = 'one a'print(dic['a'],dictionary
"class a(object): def __eq__(self, other): print ""a",comparison
@login_requireddef no_response(request): params = ,ajax
urllib2.urlopen,escaping
first run (so first example): 1 2 4 6 2 3 4 5 1 3 ,machine-learning
class test: def method(self): passassert is_instan,methods
"import rematch = re.match(""(\d+)g"", ""123g"")if matc",code-golf
importerror: /usr/lib/liblapack.so.3gf: undefined ,numpy
"&gt;&gt;&gt; urllib2.urlopen(""http://www.google.co",http
def outerfunction(*args): def innerfunction(val): ,closures
dx,plot
virtualenv -p /usr/local/bin/pypy pypy,virtualenv
import jsonimport numpy as npjson.dumps(list(np.ar,numpy
class taskmanager(models.manager): def task_depend,django
192.168.xxx.xxx,networking
"[{'a': 123}, {'b': 123}, {'a': 123}]",list
import numpy as npimport matplotlib.pyplot as pltd,matplotlib
myqueryset = content.objects.filter(random 100),mysql
time1 = '2012-10-05 04:45:18'time2 = '2012-10-05 0,datetime
"img = image.open('foo.jpg')width,height = 800,600i",image-processing
sqlite3,performance
"import timeitt=timeit.timer(""code(f)"", ""from __mai",ipython
shell=true,subprocess
from thread import start_new_threadimport sysi=1co,multithreading
if x in a and y in a and z in a and q in a and r i,if-statement
lookup_field,django
in [1]: from selenium import webdriverin [2]: br =,selenium
self.lt,algorithm
...,replace
class foobar: ...,naming-conventions
"&gt;&gt;&gt; set_1 = set([5, 2, 7, 2, 1, 88])&gt;&",python-internals
@user_passes_test(lambda u: u.is_superuser),django
root|_ fruits|___ apple|______images|________ appl,django
for,regex
"import cv, cv2fn = 'myfile.jpg'im_gray = cv2.imrea",image-processing
a = 2b = 3,pandas
datetime,datetime
sudo pip install git-review,git
time.time(),datetime
books,django
python.array,numpy
"python 2.7.1 (r271:86832, nov 27 2010, 17:19:03) [",browser
"urllib.quote(""sch†_nefeld"")",unicode
verts.indexof(12.345)verts.lastindexof(12.345),list
from profiles.choices import sample_choicesclass p,django
df.apply(average) ,map
"&gt;&gt;&gt; x2, y2 = zip(*zipped)",unzip
"&gt;&gt;&gt; match = re.findall(r'\w\w', 'hello')&",regex
[sun sep 12 20:47:59 2010] [error] [client] mod_ws,apache
&gt;&gt;&gt; set([ set() ])traceback (most recent ,hash
r,windows
dict,string-formatting
drop_all,sqlalchemy
{...},dictionary
"assert angle((1,0),(0,1)) == pi/2.assert angle((0,",math
"codes = ( ('apple', 'reddelicious'), ('caramel', '",list
"with socket(socket.af_inet, socket.sock_dgram) as ",sockets
__init__,comments
output = cstringio.stringio()c = pycurl.curl()c.se,curl
subprocess.call,subprocess
matplotlib,matplotlib
pip install --upgrade google-api-python-client,google-analytics
a,sorting
join,windows
def memo(func): cache = {} @ wraps(func) def wrap(,memoization
"import mysqldbconn=mysqldb.connect(host=""localhost",mysql
i,math
def time_consuming_function(): # lots_of_computing,caching
"r= {x for x in range(2, 101) if not any(x % y == 0",set
pip,virtualenv
class complex: a = 1,class
r,r
python /path/script1.py...,linux
row1_column1 row1-column2 row1-column3 row1-column,csv
.config(),user-interface
"label = [{'date': datetime.datetime(2013, 6, 17, 8",list
1: 2 - 102: 3 - 153: 4 - 94: 8 - 145: 7 - 136: 5 -,algorithm
&lt;class 'pandas.core.frame.dataframe'&gt;int64in,types
4 &lt; '3',comparison
"def some_function (self, a, b, c, d = none, e = no",function
content = content[position-1:position+249] # conte,split
__init__.py,py.test
num1=10someboolvalue=true,if-statement
import tweepy,import
"isinstance(object, collections.container)",containers
man python2.7,callstack
__init__.py,module
"in py3.0, the cmp parameter was removed entirely (",sorting
unboundlocalerror: local variable 'var1' reference,function
parse(),session
"for element in list: print element + "","",",string
tee,subprocess
# pythonimport mysqldb#===========================,mysql
testdataherethisis onegroup :)testdataherethisis a,file
"job = sshjobman(hostlist, cmd)job.start()while not",design
class a: def foo(x): print(x)a.foo(5),static-methods
url_for('index'),flask
import loggingdef logging_test(): handler = loggin,logging
class class(models.model): name = models.charfield,django
easy_install --help,easy-install
"mainframe = frame(root, yscrollcommand=scrollbar.s",tkinter
os.listdir(),windows
author_id,database-design
"def func(kw1=none,kw2=none,**kwargs): ...",syntax
import networkx as nximport numpy as npimport matp,graph
for  if line !contain # then ...process line else ,string
"li = [""a"", ""b"", ""a"", ""c"", ""x"", ""d"", ""a"", ""6""]",list
request.websocket.send('we are the knights who say,django
"import subprocessprint ""start""subprocess.call(""sle",bash
"def buildstring(user, name = 'john', age=22): user",string-formatting
__del__,garbage-collection
.,eclipse
4 from matplotlib import pyplot 5 from pandas impo,matplotlib
tox,unit-testing
:role:_—…target_—…,python-sphinx
def fact1(n): if n &lt; 2: return 1 else: return n,performance
optparse.optionparser,command-line
[w 1402720 14:44:35 web:1811] 403 get / (192.168.0,websocket
asyncio,garbage-collection
url_for,flask
sc=scorm.objects.filter(header__id=qp.id),django
class userprofile(models.model): _genderchoices = ,django
pip install ipython[notebook],ipython
&lt;language&gt;&lt;en&gt;&lt;port&gt;port&lt;/por,xml
obj.__class__ == fooobj.__class__ is footype(obj) ,language-features
"string1 = gostring2 = nowstring3 = great""""""i'm wil",string
"[""foo""] --&gt; ""foo""[""foo"",""bar""] --&gt; ""foo and ",list
:python import sys; print(sys.version),vim
1 102 53 20......,r
open(),module
# # ## ##### # # # # # ####  # # # # # # ## # # ##,user-interface
"$ python2.7 -m timeit 'd={}'10000000 loops, best o",performance
 class mymodel(models.model):  foo = models.charfi,django
"script # my startup script, plain old shell script",virtualenv
x = defaultdict(lambda: 0)y = defaultdict(lambda: ,collections
file = open('c:\\some_text.txt')print file.readlin,file
wash_clothes = 'tuesdays'clean_dishes = 'never'mys,string
"xy1=numpy.array([[ 243, 3173],[ 525, 2997]])xy2=nu",numpy
a,numpy
{% if listing.date &lt;= now %}  in the past {% el,django
"""studentroster jan-1"":id name score isenrolled com",html
#valid chars . a-z 0-9 def check(test_str): import,regex
(pdb) objgraph.show_most_common_types(limit=20)dic,django
minidom,xml
argparse,argparse
x=locals(),variables
import lxml.html as lhfrom lxml.html import builde,html
class superfoo(models.model): name = models.charfi,django
django-rest-framwork,django
&lt;_sre.sre_match object at ...&gt;,regex
## x1 x2##0 206 214##1 226 234##2 245 253##3 265 2,pandas
apt-get install python-psycopg2,postgresql
from threading import threadfrom win32event import,multithreading
"class testclass: value1 = ""a"" value2 = ""b""",json
x.real*x.real+x.imag*x.imag,optimization
c:\python27\pywin32-214&gt;setup.py -q installbuil,command-line
from pil import image,osx
"&lt;html&gt;... &lt;img src=""images/dynamic_chart.",ajax
import xml.dom.minidomdoc = xml.dom.minidom.docume,xml
p: 1 sl: 10 afy: 4q: 12 lg: 10 kla: 3r: 0 kl: 10 k,string
logger = logging.getlogger()hdlr = logging.filehan,logging
item,django
socket.recv(recv_size),sockets
"data = [('a', 1), ('b', 1), ('b', 2)]d1 = {}d2 = {",dictionary
unittest,unit-testing
username = raw_input('user name: ')password = getp,security
&gt;&gt;&gt; from datetime import datetime&gt;&gt;,datetime
mc = [ sum( male_trips['start_station_id'] == id ),pandas
./manage.py shell,django
class user(base): __tablename__ = 'user' id = colu,sqlalchemy
httpresponseredirect(request.path),django
if 'foo' in mystring or 'bar' in mystring or 'hell,conditional
"usage: check_dell.py [options]options:-h, --help s",optparse
self._x,properties
"normalize(self, length = 1)",unit-testing
"v = [3,5,0]axis = [4,4,1]theta = 1.2 #radian",vector
hide userland threads,multithreading
pandas.dataframe,matplotlib
nan,numpy
utf8,mysql
"""value.txt""",r
"__init__(self, init_method, *args)",namespaces
&gt;&gt;&gt; s = u'\u0421\u043e\u043e\u0431\u0449\,string
importerror: cannot import name celery,django
voidc_function(void *ptr) { int i; for (i = 0; i &,c
django.contrib.auth,django
&gt; run my_script.py,debugging
def makefun(i): return lambda: ia = [makefun(i) fo,scope
"import sys,osroot = ""/home/patate/directory/""path ",file
"a = {u""foo"": u""ˆÛ•ˆÛˆÛ_""}",unicode
"# 'value' is the data type stored in the map, whil",dictionary
"1,2,31,2,3,41,2,3,4,51,21,2,3,4....",pandas
id,integer
"if __name__ == ""__main__"": if (len(sys.argv) != 4)",image
"data = np.array([[1,1,1],[2,2,2],[3,3,3]])",arrays
"fp = open(""a.txt"")#do many things with fpc = fp.re",file
__hash__,hashcode
post,django
&gt;&gt;&gt; def isodd(num): return num &amp; 1 an,performance
any,clojure
views.py,django
"from sys import argvscript, user_name =argvprompt ",arguments
__getattribute__,inheritance
"list1 = [1,0,1,1,1,0,0]list2 = [1,0,1,0,1,0,1]#sho",list
# django settings for omnicloud project.debug = tr,database
dir(),namespaces
def getuniqueattributevalues(xml_attribute_nodes):,xml
"numpy.dot(a, b)",c
"print(re.match('e','test'))",regex
int,numpy
#NAME?,matplotlib
bigdata=data1.append(data2),pandas
logging,optimization
choice,dictionary
/*this*/,syntax
"a=[[a1, b1, c1], [a2, b2, c2], ..., [an, bn, cn]]",numpy
id(),object
os.*,client
class wine(models.model): color = models.charfield,django
range,range
&gt;&gt;&gt; class a(object):... x = 5&gt;&gt;&gt;,class
class someclass: pass print(someclass()) print(som,class
curl 'http://domain.com/passkey=wedsmdjsjmdd',csv
chr(),unicode
"letters = [('a', 'a'), ('b', 'b')]i = 0for (lowerc",list
"def outer(): x = 1 def inner(): print ""local varia",python-internals
requirements.txt,pip
"{results:[...],""max_id"":1346534,""since_id"":0,""refr",json
os.system(),subprocess
'prefix\xe3\xabsuffix',security
django / eclipse,osx
urllib2.urlopen,dynamic-import
"import numpy as npn=10a=np.arange(1,100,1)np.argso",sorting
bk = conn.get_bucket('my_bucket_name')ky = boto.s3,amazon-s3
//,division
favicon_path = '/path/to/favicon.ico'settings = {',static
x,recursion
"@app.route(""/images/&lt;int:pid&gt;.jpg"")def getim",binary
copy.deepcopy,pickle
"plt.bar([1, 2], [4, 5])plt.xlabel(""my x label"")plt",plot
task_id,celery
if &lt;condition&gt;: mylist.append('mystring'),ternary
suspiciousoperation: attempted access to '/media/a,django
script,signals
"db1.user --&gt; db1.user.id, db1.user.username, db",sqlalchemy
"&gt;&gt; print numberformat(1234)&gt;&gt; 1,234",number-formatting
"my_list = [[3.74, 5162, 13683628846.64, 1278338755",numpy
run(),fabric
foo.py,import
"file('pinax/media/a.jpg', 'wb')",file
to_csv(),pandas
setup.py,osx
def strip_punctuation(input): x = 0 for word in in,unicode
request.args.get,web
"input: [""abcd""]output: [""abcd""] [""abc"",""d""] [""ab"",",permutation
"input = ([[1, 2], [3, 4], [5, 6]])`",arrays
suzy &amp;amp; john,html
except:,exception
"&gt;&gt;&gt; z = u'\u2022'.decode('utf-8', 'ignore",unicode
"def foo(a, b, c): pass",function
iter,dictionary
package/ __init__.py module_1.py module_2.py modul,unit-testing
class apperror(exception): passclass missinginpute,error-handling
"from basehttpserver import basehttprequesthandler,",http
// increase value of all items by 1foreach ($array,for-loop
"[1,2,3,4,5]",algorithm
dict,dictionary
if,performance
00000000000000000good stuff,file
manage.py test,django
map,multiprocessing
*args,function
"list = ['something','another','thing','hello']stri",regex
pyqt,user-interface
sudo easy_install pip,osx
"import cookielib, urllib2cj = cookielib.cookiejar(",urllib2
import numpyimport error:no module named numpy,import
reindex(),algorithm
"d = {1:'yes', 2:'yes', 3:'yes', 4:'no'}",syntax
python -m cprofile -s calls myscript.py,profiling
#!/usr/bin/pythonimport argparseimport osdef reada,argparse
import numpy as npa = np.arange(10) - 5a[2] = 2pri,arrays
"&gt;&gt;&gt; p = [ [()]*3 ]*3&gt;&gt;&gt; p[[(), (",list
url = 'http://myserver/post_service'data = urllib.,urllib2
"a = arange(9).reshape(3,3)",numpy
logging,logging
for,palindrome
"def metacls(clsname, bases, atts): .... return typ",metaclass
"import os,sysfrom os import *from sys import *vals",file-io
for (int i = 0; i &lt; value; i++){ if (condition),iterator
from scipy.sparse import lil_matrixx = lil_matrix(,scipy
obj.__doc__,ruby-on-rails
link to [notebook 2](files/notebook2.ipynb),ipython
dynamic,asp.net-mvc
# bug: it's outputting logging messages twice - no,logging
"import randomfrom osgeo import gdal, ogr rasterize",gis
\a - bell\b - backspace\f - formfeed\n - linefeed\,string
from xml.etree import elementtree as etreeroot = e,xml
"(_, caplines, _) = matplotlib.pyplot.errorbar( dat",matplotlib
"import os, subprocessbitrate = '100'mencoder = 'c:",foreach
pip --version,twisted
networkx/networkx/algorithms/centrality/eigenvecto,graph
[mkl]library_dirs = /opt/intel/composer_xe_2013.1.,numpy
list += x,operators
close(),operating-system
viewsets,django
"definitions = {'a': 1, 'b': 2, 'c': 123.4}for defi",module
scipy,linux
"import numpy as npimport math as mdef cart2sph(x,y",numpy
return none,function
&gt;&gt;&gt; a = 010syntaxerror: invalid token (&l,syntax
"int main (void) { char buf[100] = ""\x01\x02\x03\x0",debugging
"a = ['a1', 'a2', 'a3' ...]b = ['b1', 'b2', 'b3' ..",line-breaks
class myauthentication(basicauthentication): def _,django
oldqueue = queue.queue(),queue
setup.py,build
pylab.savefig( image_name ),matplotlib
__class__,class
formatter = logging.formatter('%(asctime)s : %(mes,logging
hardware\\devicemap\\serialcomm,c
{% url [viewname] [args] %},django
"def _berlekamp_massey(self, s, k=none, erasures_lo",math
get_absolute_url,django
"1,word12,word23,word3",memory
time result1 09:00 +52a2 10:00 +62b3 11:00 +44a4 1,dataframe
"""sat, 11/01/09 8:00pm est""",date
"codecs.open('story.txt', 'rb', 'utf-8-sig')",unicode
scipy.misc.imresize,image-processing
reporter.objects.delete(),django
"status = db.query(""insert into users ..."")if (!sta",sqlalchemy
keyboardinterrupt,exception
"mysite/ manage.py mysite/ --&gt; (settings.py, etc",django
exec('/usr/bin/python2.7 /srv/http/assets/py/switc,linux
lines = len(list(open(fname))),iterator
#!/usr/bin/env python# let's cheat at scrabbledef ,optimization
format,string
"n [397]: a = array([[ nan, 2., 3., nan], .....: [ ",numpy
"cursor.execute(""select rowid from components where",sql
# remove the bytecode file created by the first im,import
pivot/crosstab/indexing,pandas
"in [441]: a=dataframe(data={""col1"": [1,2,3], 'to_m",pandas
"def containsany(self, strings=[]): alphabet = 'abc",function
import numpy as nimport matplotlib.pyplot as pangl,numpy
import osimport subprocessproc = subprocess.popen(,subprocess
"\""[^\""]+\""|'[^']+'",regex
abc12def3g56hij7,regex
urllib.quote(),url
conda create -p ./test python=2.7 pip,virtualenv
def group(): import numpy as np from itertools imp,algorithm
import cv2#capture from camera at location 0cap = ,opencv
"python 2.7.1 (r271:86832, jun 16 2011, 16:59:05) [",xml
import numpy as npa = np.array([0])b = np.array([n,numpy
import pylab as pimport graphics as gwindow = g.gr,graphics
numpy.linalg.inv,numpy
"file ""/usr/local/lib/python3.0/cgi.py"", line 477, ",cgi
"class frameworkclass(): def __init__(self, ...): .",oop
gid,google-docs
a,numpy
newuserav = avatar.objects.filter(valid=true).orde,django
"fri, 15 may 2009 17:58:28 +0000",parsing
"from urllib2 import request, urlopenimport jsonpat",json
p,matplotlib
python scriptname,virtualenv
"d = {'a': 0, 'b': 1, 'c': 2}l = d.keys()print l",dictionary
"import pandas as pddata = pd.excelfile(""*file name",pandas
"(pdb) help ll(ist) [first [,last]] list source cod",pdb
select * from table_name where string like pattern,sql
easy_install,django
"num = [x for x in xrange(1,100) if x % 10 == 0]",string-formatting
&gt;&gt;&gt; import pyaudio&gt;&gt;&gt; pa = pyaud,portaudio
"&gt;&gt;&gt; print list[laks,444,m][kam,445,m][kam",sqlite
lxml,gcc
for x in range(x_size): for y in range(y_size): fo,loops
&gt;&gt;&gt; from timeit import timer as t&gt;&gt;,performance
[1 1 1 nan nan 2 2 nan 0],numpy
set.remove(elem),set
mysql_port = 3306mysql_database = 'mydb'mysql_data,config
var ts = new date().gettime(),timestamp
"in [1]: a=[1,2,3,4,5,6]in [2]: b=[7,8,9,10,11,12]i",list
"import sys, qrcoded = qrcode.decoder()if d.decode(",decode
"i for i in tuple(my_generator) + (my_value,)",iterator
sum,numpy
"class myclass: def set_date(self, d): # what do i ",datetime
{% for point in zone.points.all %} {% if forloop.l,django
myset = set()myset.add('foo')'foo' in myset,data-structures
searching for lxmlreading http://pypi.python.org/s,windows
namedtuple,pickle
unixodbc and unixodbc-dev: 2.2.11-16build3tdsodbc:,sql-server
"+----+----+| 0,0| 0,1|+----+----+| 1,0| 1,1|+----+",matplotlib
x = numpy.random.rand(1),numpy
ds = [{'hello': 'there'}]logging.debug( pprint.ppr,logging
#NAME?,matplotlib
image = form.cleaned_data['image'] temp = os.path.,django
webbrowser,events
"original_list = [['a', 1], ['b', 1], ['a', 1], ['b",list
"""$c/test/testing""",filesystems
"letter_count = {'a': 0, 'b': 0, 'c': 0}",dictionary
final,keyword
1) set : (i) data = set(f.read().splitlines()) (ii,performance
setup.py install,eclipse
x,formatting
"str1='""xxx""'print str1if str1[:1].startswith('""'):",string
"exdict = {true: 0, false: 1, 1: 'a', 2: 'b'}",dictionary
import botokey = boto.connect_s3().get_bucket('foo,amazon-web-services
building matplotlib matplotlib: 0.98.5.2 python: 2,build
&gt;&gt;&gt; import re&gt;&gt;&gt; text = u'gbp 5 ,regex
1. name object2. on_time object3. on_budget object,pandas
"answer = truemyvar = ""the answer is "" + answer",string
next,next
"def myproc(invindex, keyword): d={} for i in range",set
"$fh = fopen($filepath, 'rb');$contents = fread($fh",md5
minindex = mylist.index(min(mylist)),list
i = -6884376,integer
"list = [0.5, 0.3, 0.9, 0.8]",list
"try: something()except somethingexception,err: pri",exception
obj.attr,oop
"import numpy as npdf = pandas.dataframe({""a"": np.r",numpy
import argparseparser = argparse.argumentparser()p,argparse
class something(models.model): name = models.charf,django
import multiprocessing as mpimport timedef f(x): r,queue
"class test: """""" &gt;&gt;&gt; a=test(5) &gt;&gt;&gt",unit-testing
"class parentclass: def __init__(self, foo): self.f",json
condition,multithreading
"class workattachment(models.model): """""" abstract c",django
"l = [1, 2, 3, 4, 5]for values in l: if values==1: ",list
/library/frameworks/python.framework/versions/2.6/,lxml
"[ [ a, b, c], [d], [e, f] ]",list
make -j4,install
"unzip(zipsource, destinationdirectory)",zip
tue mar 29 08:11:25 +0000 2011,django
dbf.py,foxpro
"def val(): var = float(raw_input(""age:"")) status =",indexing
can't get vagrant settings: [0;31mthe provider 'vi,osx
import syntaxprint syntax.keywords# prints ['print,list
"try: #something...except baseexception, excep: log",exception
class movie(models.model): id = models.autofield(p,django
addtype text/html pyaddhandler cgi-script .py,.htaccess
string,string
shutil.rmtree(test_objects_dir),windows
"[[1,2,3],[3,4]]",algorithm
"import imagefluid64 = ""fluid64_half_size/00""fluid1",python-imaging-library
json,json
from &lt;module&gt; import *,namespaces
"my_choices=( ('1','first choice'), ('2','second ch",tuples
none is frequently used to represent the absence o,python-internals
run(),deployment
x,unit-testing
apple = 1pears = 2oranges = 3,artificial-intelligence
reg = re.compile(r'\w+')reg.match(stringio.stringi,regex
&gt;&gt;&gt; class g:... def __init__(self):... se,attributes
"traceback (most recent call last): file ""image_ope",osx
for a in myarr: if somecond(a): myarr.append(newob,iteration
"@app.route('/my_endpoint', methods=['post'])def my",flask
/mypath/cx_oracle-5.1.1/build/lib.linux-x86_64-2.7,oracle
a=109,binary
&gt;&gt;&gt; f=plt.figure()&gt;&gt;&gt; ax=f.add_s,matplotlib
httpd-xampp.conf,django
compare_attr,buildbot
sublimerepl,ubuntu
"import timedef dates_between(start, end): # muck a",timezone
from mypak import mymod,ipython
import unittestfrom foo import coreclass httpreque,unit-testing
site-packages,emacs
"import matplotlib.pyplot as pyplotx = [0, 1, 2, 3,",matplotlib
"{u'name': u'a', u'primary_key': 1} ",mongodb
from flask import flaskfrom flaskext.sqlalchemy im,unit-testing
byte strings,unicode
stats.singleton.twitter_count += 1,singleton
datetime,datetime
hasattr,exception
if (collresv.repeatability is none or collresv.som,coding-style
employees,django
"query.filter(""submitted &gt;="" thisweek).order(""ra",google-app-engine
ordereddict,type-conversion
nargs='*',argparse
class timesheet(models.model): check_in_time = mod,django
sudo python3.3 setup.py install,osx
"...""2011-12-17 16:00"": { ""local"": ""av. prot†çsio a",json
"&gt;&gt;&gt; a, b = a[b] = {}, 5&gt;&gt;&gt; a{5: ",variable-assignment
class other(models.model): user = models.foreignke,django
import osdef populate(): python_cat = add_cat('pyt,django
import mylibreallybiglib = mylib.somemodule.really,python-import
open(),ruby
"class myclass(): def __init__(self, filename): sel",class
"np.zeros((n,n+1))",numpy
&gt;&gt;&gt; data&lt;class 'pandas.core.frame.data,dataframe
/flaskapp /application.py /templates /hello.html,flask
"dictionary = { 'a' : '123', 'b' : dictionary['a'] ",dictionary
testcase,unit-testing
numpymatplotlib,numpy
./manage.py test,django
windowserror: [error 5] access is denied: 'path',windows
gethostbyname(gethostname()),sockets
@route('/spam')def spam(): return {'status':'onlin,json
axes,matplotlib
import timeitdef x(): s=[] for i in range(100): # ,string
to_excel,pandas
tkinter.mainloop,tkinter
try,error-handling
import matplotlib.pyplot,osx
class example(stat): numeric = models.integerfield,django
pika,rabbitmq
"x = np.array([(1.0, 4.0,), (2.0, -1.0)], dtype=[('",numpy
import matplotlib.pyplot as pltf1 = plt.figure()pl,matplotlib
settings.py,django
"reader=csv.reader(f,delimiter=';')",file
"&gt;&gt;&gt; d = date(2004, 01, 01)&gt;&gt;&gt; dd",date
"&gt;&gt;&gt; a = [2, 3, 1]&gt;&gt;&gt; b = [4, 6, ",sorting
optparse,optparse
runserver,django
__init__,class
import timeitimport redef one(): any(s in mystring,regex
"shuffle(df, n, axis=0)",numpy
for row in table.find_all('tr'): cells = row.find_,ipython
pytest,unit-testing
if( foo1 or foo2) ... ...,lazy-evaluation
"mydict = { 'item1' : [ 7, 1, 9], 'item2' : [8, 2, ",list
1,closures
"subprocess.call([""c:/program files/nuke6.3v5/nuke6",subprocess
"def rsenc(msg_in, nsym, gen): '''reed-solomon enco",numpy
"def copy_file(source_file, target_dir): pass",multiprocessing
sqlite&gt; pragma foreign_keys = on;,sqlite
logging.debug(),debugging
123|gsv|weather_mean|hello|joe|43.45122|gev|temp_m,django
python manage.py syncdb --all,django
.net,ruby-on-rails
current_user = request.userfollow_role = usertouse,django
num_lines = 20000batch_size = 5000def insert_recor,mongodb
gc.collect,string
import misc_urllib2.....opender = urllib2.build_op,urllib2
1000000,string-conversion
"output = []p = subprocess.popen([""the"", ""command""]",subprocess
fibonacci,fibonacci
cursor.execute,sql
# create a new clientc = client(self.server.accept,multithreading
scipy,scipy
"x,y,z = data.nonzero() fig = plt.figure()ax = fig.",matplotlib
class nasajpl(): # 1class nasa_jpl(): # 2class nas,coding-style
&gt;&gt;&gt; class a(object): def print_it(self): ,class
import osimport sysimport win32com.shell.shell as ,windows
"con = _mysql.connect('localhost', 'dell-pc', '', '",mysql
if x not in list,loops
class user(db.model): __tablename__ = 'users' user,sqlalchemy
"thepost = content.objects.get(name=""test"")",django
"0 385 days, 04:10:361 57 days, 22:54:002 642 days,",numpy
class report(models.model): name = models.charfiel,django
pandas.read_table,csv
"import subprocess, image, imagedrawfor i in range(",image
def func(items=[]): print items,default-value
import webfrom myapp.model import session # scoped,multithreading
"for a, b, c in mylist:",tuples
"list_a = [1, 2, 4, 6]filter = [true, false, true, ",list
pcolormesh,matplotlib
"in [1]: def get_list_of_tuples(): ...: return [(i,",ipython
ctypes,matlab
import atexitimport os.pathtry: import readlineexc,osx
"def restart(): if (servertype == ""apache""): sudo(""",fabric
long timebefore = system.currenttimemillis();dostu,datetime
foreignkey,django
settings.py,django
forms.modelchoicefield(queryset = user.objects.fil,django
"params = (url, urlencode(data),) if data else (url",unit-testing
"a = [6, 7, 8, 9, 10, 11, 12]subset_of_a = [6, 9, 1",list
import mathlib.pyplot as pyplotfig = pyplot.figure,matplotlib
import tempfiletemp_file_name = mktemp()os.mkfifo(,security
hello world!,smartcard
"pywintypes.com_error: (-2147352567, 'exception occ",windows
for,compiler-construction
pip -e git+https://github.com/lewisham/cvsanaly@de,setuptools
"test = {'foo': 'bar', 'hello': 'world'}keys = test",dictionary
x='stack',string
import redisdef getvariable(variable_name): my_ser,connection
bla.py,import
textwidth,vim
"handlers = [ (r""/recipes/"", recipehandler), (r""/re",tornado
import osstat = os.statvfs(path)print stat.f_bsize,diskspace
x = parser.parse(date).strftime('%y%m%d')),datetime
typedef void (*mycallback_t) (callbackinfo);class ,callback
db.model,google-app-engine
import matplotlib.pyplot as pltplt.subplot(121)plt,matplotlib
"employees_table = table('employees', metadata, col",sqlalchemy
"matrice = [1, 2, none]",numpy
"import time, sysfor i in range(200): sys.stdout.wr",process
__dict__,class
"img = image.open(filename)img.thumbnail((1000,1000",python-imaging-library
&gt;&gt;&gt; a = 1&gt;&gt;&gt; b = 1&gt;&gt;&gt; a,c
"print replace_extension('/home/user/somefile.txt',",scons
"-o 1 --long ""some long string"" ",parsing
"photos (photo_id, title, date_uploaded, filename)a",sql
hg convert file://c:/svnrepository,windows
collections.ordereddict,ordereddictionary
"s = """""" controller = require 'controller' class fo",string
+---------+--------------------+| dept_no | dept_n,mysql
danwarrior50010,io
try:  raise exception('x')except exception as e: p,exception
"&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;&lt;!d",xml
os.system(cmd) #do somethingsubprocess.call('taskk,windows
import mysqldbtry: cursor.execute(some_statement) ,mysql
fig = plt.figure()ax1 = fig.add_subplot(111)imax1 ,attributes
add(),tar
"requested_url = ""url_here""url = urlparse(requested",google-app-engine
"(swedish,sv)(english,en)",django
set -o vi,bash
list.sort(),search
"from lxml import etreeroot = etree.element(""root"")",xml
correlation p-value0 0.5 0.11 0.1 0.82 0.9 *0.01*,html
def foo():var_a = 2var_b = 3def _closure(x):return,functional-programming
datetime.datetime.now(),date
#!/usr/bin/python,portability
"in [563]: grouped['d'].agg({'result1' : np.sum, ..",group-by
mod_wsgi 3.3,linux
c:\cygwin,cygwin
eval,segmentation-fault
curl,curl
class logo(db.model): name = db.stringproperty() i,google-app-engine
"#include &lt;iostream&gt;extern ""c""{ __declspec(dl",windows
models.py,django
pk_cols = foo.table.primary_key.keys()for f1 in fo,sqlalchemy
"sound 17000, 100",audio
#case 1class a(object): def __init__(self): print ,class-method
x == y,equality
#NAME?,cryptography
"file ""manage.py"", line 10, in &lt;module&gt;execut",django
._”“_”—_”— __init__.py_”“_”—_”— manage.py_”“_”—_”—,django
random.shuffle,list
key,algorithm
"class a: @task def foo(self, bar): ...def main(): ",django-celery
"['a','ab','abc','bac']",list
date,dictionary
importerror at /no module named simplerequest meth,django
running installrunning buildrunning build_pycreati,installation
"s1 = ""this is a foo bar sentence .""s2 = ""this sent",string
numpy,numpy
"def add_handler(self, fd, handler, events): """"""reg",tornado
"$ python3python 3.2.3rc2 (default, mar 21 2012, 06",inheritance
"try: foo(a, b)except exception, e: baz(e)try: bar(",exception
n = 0s = 0while (n &lt; 1001): x = n/3 if isinstan,integer
urlparse.urlparse,url
a,numpy
testbed,google-app-engine
import ldapclass mycustomexception(exception): pas,unit-testing
import tesseractapi = tesseract.tessbaseapi()api.i,ocr
django,django
min_soil_particle_dens,coding-style
abc.abstractmethod,google-app-engine
\n,escaping
dict2,dictionary
from django.db import modelsfrom effects.models im,django
prefix=/usr/localpyversion=2.6python=python${pyver,osx-snow-leopard
import numpy as npfrom rpy2.robjects import rdata ,r
"self.cells = np.empty((r,c),dtype=np.object)",arrays
x = 10def foo(): global x x = 20 # needs global de,global
for i in object: dosomething(i),for-loop
"a = array([1,3,5])b = array([2,4,6])",arrays
"for ind, obj in enumerate(list1): if 4&gt; ind &gt",list
"ec2 = boto.connect_ec2( access_key, secret_key, re",amazon-web-services
"gen = function_that_returns_a_generator(param1, pa",generator
"from datetime import datetime,date,timedeltaa=[dat",list
id,sql
id,keyword
virtualenv,scripting
"word = ""hello""reversed_word = word[::-1]",reverse
.map(func),dataframe
d,dictionary
my_object.id = 5,namespaces
import mathdef main(): count = 3 one = 1 while one,primes
criterias%5b%5d=member&amp;criterias%5b%5d=issue#u,http
$ virtualenv project$ cd project$ . bin/activate$ ,syntax
"def divide(x, y): print 'entering divide' try: ret",exception-handling
setup.py,automation
print '''dogcat''',printing
error: no module named staticfiles,django
"traceback (most recent call last): file ""&lt;stdin",class
"['hello', 'good', 'morning']",list
"def foo(bar): """"""perform foo action :param bar: th",documentation
deque,slice
"debug = falselogging = { 'version': 1, 'disable_ex",django
convert test.jpeg -fuzz 7% -trim test_trimmed.jpeg,imagemagick
"try: print ""about to look for element"" element = w",selenium
var newobject = { 'propertyname' : 'propertyvalue',instantiation
packagea,pip
"__import__(name)file ""/users/armynante/desktop/ucl",django
c,c
"select sum(field1) as sumfld, avg(field2) as avgfl",sqlalchemy
"traceback (most recent call last): file ""parse.py""",django
sqlalchemy,database
k,performance
input name code blackberry 1 wineberry 2 rasberry ,csv
"string = 'this is a string, with words!'",string
cv2,image
data::dumper,module
import config,configuration-files
fmincon,matlab
def foo(): x = 1 y = 2.... if true: bar(),coding-style
class worker(): def dosomething(self): start = tim,oop
"def download_demo(): """""" returns the demo file """"""",memcached
"traceback (most recent call last):file ""&lt;pyshel",pygame
* running on http://127.0.0.1:5000/ * restarting w,flask
httpserver,http
select(),select
"tabby_cat = ""\ti'm tabbed in.""persian_cat = ""i'm s",quotes
in [2]: df = pd.read_csv(r'd:\data\datatimeseries_,pandas
def generator(): while true: for x in range(3): fo,generator
manage.py test &lt;myapp&gt;,django
from operator import itemgetterfrom collections im,sorting
xml.dom.minidom,xml
&gt;&gt;&gt; publisher.objects.filter(name__contai,sql
str,django
idehelper.py,autocomplete
rodolphe-mbp:python-levenshtein-0.11.2 rodolphe$ s,clang
"return httpresponse(ugettext_lazy(""hello""))",django
#!/usr/bin/python3import sysclass hello: def print,methods
sort(),sorting
for stuff in largestring: remove stuff that is bla,string
"for object in list: t = thread(target=process, arg",multithreading
"&gt;&gt;&gt; c = ""help, me""&gt;&gt;&gt; print c.sp",string
vars,dictionary
"&lt;div id=""a""&gt;this is some &lt;div id=""b""&gt;t",selenium
pyodbc,windows
"class myclass(object): def my_function(): """"""this ",docstring
import unittest import sys import mymodule class b,unit-testing
int,sorting
pip,github
e0,list
&gt;&gt;&gt; st = '%2g%k%3p'&gt;&gt;&gt; l = filte,regex
"remove = []for k, v in dict_.items(): if condition",design
try... catch,exception
intersect1d,arrays
python /path-to-django-site/manage.py runserver $c,django
decisiontreemodel.predict,scala
"mylist = [person(""foo""), person(""bar"")]print(""\n"".",list
def func(): if not os.path.isdir('d:\downloads'): ,memory-leaks
errors.py,python-sphinx
pythreadstate_get(),serialization
i=7j=8k=10def test(): i=1 j=2 k=3 return dict((nam,eval
date state city salestoday salesmtd salesytd201303,pandas
&lt;?xml version='1.0' encoding='utf-8' standalone,xml
urllib2.request,urllib2
"d1 = {key1: x1, key2: y1) d2 = {key1: x2, key2: y2",dictionary
"def get_foo(someobject, foostring): return someobj",attributes
class circle(): pass,attributes
&gt;&gt;&gt; mylist = range(100)&gt;&gt;&gt;magics,performance
&lt;title&gt;{% block title %}{% endblock %} - exa,html
*otf,matplotlib
event,django
media_root = os.path.join(os.path.abspath(os.path.,css
"a = np.array([[0, 0 ], [1, 0 ], [0, 1 ], [1, 1 ], ",scipy
&lt;script&gt;,django
class photo(models.model): title = models.char() i,django
"import randomrandom.sample(myset, 1)",random
(r'^so/(?p&lt;required&gt;\d+)/?(?p&lt;optional&gt,regex
unicodeencodeerror: 'ascii' codec can't encode cha,string
l = raw_input()l = l.split(' ')l.pop(0),list
datetime,datetime
"add_2(var,var2)",screen-scraping
multiprocessing,subprocess
class mymodel(models.model): name = models.charfie,django
python update_url.py,class
def isqrt(n): i = int(math.sqrt(n) + 0.5) if i**2 ,math
email_use_tls = trueemail_host = 'email-smtp.us-ea,django
import json,json
"var p = { name: ""john smith"", age: 23}",object-literal
"args = [3, 6]range(*args) # call with arguments un",arguments
print type(path) # &lt;type 'unicode'&gt;path = pa,string
try: # do similar thing os.remove('/my/file')excep,exception
scipy.ndimage.filters.convolve,image-processing
"class testspeedretrieval(webapp.requesthandler): """,function
"[[1293606162197, 0, 0], [1293605477994, 63, 0], [1",matplotlib
class roadmapprofile(models.model): user = models.,django
while (&lt;&gt;) { do stuff;},stdin
&gt;&gt;&gt; [(yield i) for i in range(3)]&lt;gene,generator
"def read(stream, parsefunc): for record in parsefu",exception-handling
urlopen,multithreading
from django.http import httpresponsefrom django.co,django
recv,c
databases = { 'default': { 'engine': 'django.db.ba,django
py_incref(py_false);return py_false;...py_incref(p,reference-counting
"def removeline(filename, lineno):",optimization
============ =====================event score vari,table
class a: def __init__(self): #do something here de,oop
"import requestsr = requests.get(""some-site.com"")pr",proxy
scrapy crawl spider -o items.json -t json,django
tk(),winapi
"&gt;&gt;&gt; df = pd.dataframe({'id':[1,1,1,2,2,2,",pandas
"s_sq = (func(popt, *args)**2).sum()/(len(ydata)-le",scipy
"[1, 2, 3]",string
"ps -u publica -o rss,etime,pid,command",django
abcde,genetic-programming
csr_matrix,numpy
readme.valgrind,memory-leaks
"class field(object):  """"""base class for all field ",django
"window.set_pos([18,8])",tuples
"in [1]: df = pd.read_csv('data.csv',index_col=0)in",datetime
"""1+1""",eval
setup.py,buildout
import mathdef is_triangular1(x): num=(1/2) * (mat,floating-point
"traceback (most recent call last): file ""/users/al",import
the man likes math. he really does.,nlp
mean(),numpy
"aw = aps.request(""nv1"")aw2 = aps.request(""nv2"", aw",unit-testing
thread,concurrency
import mathdef myabs(x): return math.fabs(x),c
python testloop.py,cmd
scipy.sparse,cython
https://atom.io/,atom-editor
"{% if not ajax %} {% extends ""/base.html"" %}{% end",django
from string import templatemessage = 'you replied ,string
"[1,2,3] [0][4,5,6] * [1][7,8,9] [2]",arrays
"""+c-r+d-e""",iteration
&gt;&gt; count_vectorizer = countvectorizer(min_n=,numpy
class purchaselist(generics.listcreateapiview) mod,django
def specialtest(fn): def wraptest(self): #do some ,decorator
"def move(self, direction): if direction == ""up"": #",enums
x = d[y]y == d.inverse[x],data-structures
' rec',string
sudo make install,regex
modelform,django
class event(models.model): title = models.charfiel,django
"field=models.integerfield(max_length=10, choices=c",django
&gt;&gt;&gt; d = datetime.date.today()&gt;&gt;&gt;,datetime
"installing collected packages: gevent, greenletrun",virtualenv
from math import factorialdef product(iterable): p,algorithm
ax,matplotlib
class a(): passclass b(): c = c()class c(): pass,class
"from sys import argv,stderrdef gcd(m, n): if n &gt",ruby
#0.........1........2........3........4.........5.,coding-style
keyerror,string-formatting
def do_get(self): parsed_path = urlparse.urlparse(,http
"from ftplib import ftpftpserver = ""myserver""ftpuse",ftp
"[1, 2, 3, 4, 7, 8, 10, 11, 12, 13, 14]",algorithm
"class foo: def __init__(self, frob, frotz): self.f",inheritance
[p][/p],regex
subprocess,subprocess
sscursor,mysql
select distinct `column` from `table`;,sql
currentnotebook = ipython.foo.bar.notebookname(),ipython
mylist = []mylist[12] = 'a'mylist[22] = 'b'mylist[,list
t:\data\dbdesign\dbdesign_93_v141b.mdb,file
result = set(a).intersection(b),list
you cannot install pil 1.1.6 on this volume. pil r,google-app-engine
class baseconnection(tornadio2.socketconnection): ,django
[acgt]tgcatgtcgcatgatgcatgagagct #acgt,string
"$ dev_appserver.py ./info 2012-12-16 07:44:31,412 ",django
argecho.py,eclipse
.tex,matplotlib
"&lt;xml_api_reply version=""1""&gt; &lt;weather modu",xml
psycopg2.dataerror: invalid byte sequence for enco,django
yyyy-mm-ddthh:mm:ss.ssssss-zo:ne,datetime
"{(1,2): [(2,3),(1,7)]}",json
for list_of_x_items in fatherlist: foo(list_of_x_i,loops
"pydev debugger: start reloading module: ""mywidget""",pycharm
'abc',for-loop
int,collections
"d3 = dict(d1, **d2)",syntax
importerror: no module named _elementpath,wxpython
pip,security
"&gt;&gt;&gt; a = np.array([np.nan, 1, 2])&gt;&gt;&",nan
reduce(),functional-programming
pk,django
void,method-chaining
"&gt;&gt;&gt; lst = ['o','s','s','a','m','a']",concatenation
"dict1 = [{'a':2, 'b':3},{'a':3, 'b':4}]",dictionary
matplotlib,matplotlib
import grequestsdef print_res(res): from pprint im,python-requests
"p = subprocess.popen(cmd, shell=true, stdout=subpr",subprocess
data = [[none]*5]*5data[0][0] = 'cell a1'print dat,list
- list item 1 :: code sample... code sample...- li,documentation
mycollection,list
getgeotransform(),math
from selenium import webdriverdriver = webdriver.f,firefox
"from numpy import zeros, arrayfrom math import sin",runtime-error
setup.py,google-app-engine
class article(models.model): text = models.charfie,django
lambda,lambda
_mysql.c:35:23: fatal error: my_config.h: no such ,mysql-python
'ab',permutation
class testclass(): list = [] def __init__(self): s,class
df['arrivaldate'] =...936 2012-12-31938 2012-12-29,pandas
copy_from,postgresql
"class l(object): def __eq__(self, other): print 'i",equality
"list = [[""a"",0], [""b"",1], [""c"",0], [""d"",2], [""e"",2",list
from django.db import modelsclass poll(models.mode,django
"def generate_student_dict(first_name=none, last_na",dictionary
\n\tname: john smith\n\t home: anytown usa\n\t pho,regex
@login_manager.user_loaderdef load_user(userid): r,authentication
"order_status = ((0, 'started'), (1, 'done'), (2, '",django
@specialclassclass thing(object): @specialfunc def,scala
"# and the base url.def dlfile(file_name,file_mode,",urllib2
0 ** 0,math
import osimport webapp2import jinja2from google.ap,google-app-engine
try: print blahexcept keyerror: traceback.print_ex,django
"&gt;&gt;&gt; x = np.array([4, 3, 2, 1])&gt;&gt;&gt",integer
"&gt;&gt;&gt; class bool(bool):... print ""why?""... ",boolean
elementtree.tostring(e),xml
"column('version', integer, default=1)",sqlalchemy
re.sub,regex
# env = python virtual environmentenv_var=foo ./en,apache
"[{'price': 99, 'barcode': '2342355'}, {'price': 88",list
pyranometervalues,django
celery,django
"import scipyxvals = scipy.arange(-100,100,0.1)f = ",scipy
class breakfast(m.model): # egg = m.onetoonefield(,django
mut,math
c:\users\%user%\miniconda\python.exe c:/users/%use,google-chrome
session.run,tensorflow
/home/martin/.config/libreoffice/4/user/scripts,ubuntu
scipy.signal.correlate2d,image
manage.py,django
&gt;&gt;&gt; u'\u003cfoo/\u003e'.encode('ascii')'&,unicode
unittest,unit-testing
settings.debug,django
asimpletest -&gt; asimpletestasimpletest -&gt; asi,string
"""world""",string
map(),multiprocessing
...\begin{document}%% college logo\vspace{5cm}\beg,latex
.idea/mydjangosite/.idea/,git
import urllib2import astfrom boto.s3.connection im,amazon-s3
import matplotlib.pyplot as plt import imageimport,matplotlib
"logging.basicconfig(level=logging.debug, filename=",performance
coordskeys = np.array(list(set([tuple(x) for x in ,numpy
integer,function
"my_kmv = my_kv.reduce(lambda a, b: a.append([b]))",mapreduce
id,django
"---level_1: ""test""level_2: 'netapp, sofs, zfs crea",yaml
2005-08-11t16:34:33z,datetime
1 99 22 14 53 12 74 43 1for column in array: some_,loops
y,debugging
/home/myuser/dir1/,copy
"filehandle = open('filename', 'w')",file
import zmqc = zmq.context()s = c.socket(zmq.rep)s.,concurrency
for x in somelist: if x in somedict: return truere,performance
"for i in range(density): if i &lt; 5: x, y = rnd(0",eclipse
"{ 'planet' : { 'name' : 'earth', 'has' : { 'plants",string
python_select -l (shows available python versions),macports
foo,sqlalchemy
y = 7x = y x = 8,reference
"def setup(self): log.debug(""test %s started"" % (te",unit-testing
app.run(debug=true),wsgi
# decoratordef logged_in(f): @wraps(f) def decorat,login
xlabels,matplotlib
&gt;&gt;&gt; import os&gt;&gt;&gt; os.system('ls'),operating-system
send,windows
"u'abcde(date=\'2/xc2/xb2\',time=\'/case/test.png\'",regex
"s = [50,62,15,76,57,97,82,99,45,23]",list
"for root, dirs, files in os.walk(directory): for f",filesystems
"""hello there how are you""",regex
"def exec_command(self, command, bufsize=-1): #prin",paramiko
1! + 2! + 3! +... n!,haskell
"""""""testing python decorators against decorator pat",design-patterns
foo,data-structures
"import sys, subprocess, numpycmdstring = """"""import",numpy
x,matplotlib
xlrd,excel
"; declare variablesglobal $ini, $statapath, $stata",bash
message = email.message_from_string(raw_message)if,email
"class myspider(crawlspider): name = ""example.com"" ",scrapy
r = redis.redis()r.connect(),design-patterns
pip install psycopg2,postgresql
"&lt;td valign=""top""&gt;",beautifulsoup
"""abc"".find(""b"")[1,2,3].index(2)",methods
class group(models.model): name = models.charfield,django
"variable_name = params[""formfieldvalue""]",variables
"class town(collections.namedtuple('town', [ 'name'",dictionary
"""_id""",django
def get_cursor(): return psycopg2.connect(...).cur,multiprocessing
str.join,string
or,functional-programming
debug = false,django
&gt;&gt;&gt; from email.utils import formatdate&gt,datetime
scons-config,naming-conventions
self,methods
@propertydefine x(self): return 0@x.setterdefine x,properties
l = []x = 0for i in range(100): l.append(x),list
www.domain.com/?f=x**2,html
"l = [1,2,3,4,5,6]m = [8,9,10]",list
%(levelname)s %(asctime)s %(module)s %(funcname)s ,django
&gt;&gt; m1 = imread('_1.jpg');&gt;&gt; m2 = imrea,image-processing
mydatetime.strftime('%m/%d/%y %i:%m%p'),datetime
nohup,linux
runshell(),debugging
"date_default_timezone_set(""europe/london"");$year =",timezone
__init__,constructor
"id1 id2 text score123 889 ""this is the text i need",r
url,url
class a(object): def __cmp__(self): print '__cmp__,set
import sysimport smtplibimport emailimport refrom ,email
class superclass: def triggered_routine(subclass):,inheritance
python,function
"class user(db.model): id = db.column(db.integer, p",sqlalchemy
q = person.all()last_cursor = memcache.get('person,google-app-engine
selenium.minimizewindow(),firefox
session.query(myclass).filter_by(**web_dict),sqlalchemy
queryset,django
pip install foo,pip
class account(models.model): name = models.charfie,django
#NAME?,assert
connection.execution_options(),sqlalchemy
python,decorator
amixer,audio
{{ expr }},angularjs
from dotdict import dotdictifylife = {'bigbang': {,oop
"df.drop([df.columns[[1, 69]]], axis=1, inplace=tru",pandas
"create table votes ( bill text, senator_id text, v",database
... /lib/python3.4/site-packages/south/migration/m,django
r,r
c,constants
from pyqt4.qtcore import *from pyqt4.qtgui import ,pyqt
def portfolio_add(request): ukeys = request.post.g,django
/project1/ /app1/ /app2/ ... __init__.py manage.py,django
from distutils.core import setupfrom distutils.com,install
suite = unittest.testloader().loadtestsfromtestcas,unit-testing
// ordered_dict is ordereddictionary ordered_dict ,ordereddictionary
"python -c ""import sys; print(sys.version)""",vim
"a = [ 0, 47, 48, 49, 50, 97, 98, 99]",numpy
"a = [0, 1, 2, 3]for a[-1] in a: print(a[-1])",for-loop
"def isprime(numberin): for n in range(2,numberin):",asynchronous
import timeimport randomimport sys#-----function d,algorithm
import numpy as npimport matplotlib.pyplot as plta,numpy
util,function
"0x0112: ('orientation', {1: 'horizontal (normal)',",jpeg
global,global-variables
&gt;&gt;&gt;&gt;&gt;&gt; a = []&gt;&gt;&gt; b = {1,list
ctypes,numpy
"req.on('close', function(){ //some handler});",http
"import jsonarray = '{""fruits"": [""apple"", ""banana"",",json
xdtwkeltjwlkejt7wthwk89lk,string
while calling send_response_to_paypal. traceback (,unicode
rest_framework = { 'default_authentication_classes,django
class p1(object): passclass p2(p1): pass,reflection
def file_lines(fname): f = open(fname) for line in,lazy-evaluation
"if ($statement =~ /i love (\w+)/) { print ""he love",regex
":color =&gt; rgb(128,0,0)",user-interface
"x = array([0,1,2,3])y = array([20,21,22,23])plot(x",matplotlib
"class a(): def _func(self): return ""asdf"" # not su",class
import smtplibfrom email.mime.multipart import mim,email
"subprocess.popen(args, shell=true)",shell
rank,list
in [261]: bdataout[261]:&lt;class 'pandas.core.fra,group-by
r'\',syntax
class answer(models.model): ovramt = models.foreig,django
import multiprocessing def f(ns): ns.x *=10 ns.y *,multiprocessing
#!/usr/bin/env pythonfrom pil import imageapple = ,python-imaging-library
im = image.open('0.png').convert('l')im = im.crop(,opencv
none,coding-style
#!/usr/bin/python # -*- coding: utf-8 -*- def crea,unicode
insert ... on duplicate key update,mysql
"""python --version""",shell
not a valid choice,flask
"""{\""description\"":\""fdsafsa\"",\""order\"":\""1\"",\""pl",django
"'''foo, bar, ""one, two"", three four'''",split
message = email.parser.parser().parse(file)date = ,datetime
def test1(): print 12 gr2.switch() print 34def tes,ironpython
list_sum = sum(my_list),multicore
a = dict()a['one']=1a['two']=2,dictionary
&lt;root&gt; &lt;conference name='1'&gt; &lt;autho,xml
import os.pathimport tornado.httpserverimport torn,websocket
url_for,flask
virtualenv,django
seglib.py,documentation-generation
jinja2 = noneclass handler(...): ... def render_wi,coding-style
sum,performance
return self.getdata() if self.getdata() else '',operators
range,common-lisp
max_num = 3*10**7# this is to make compatible with,performance
import module,import
python manage.py makemigrations,mysql
"soup = beautifulsoup(page.read(), fromencoding=""ut",beautifulsoup
"def bylength(word1,word2): return len(word2)-len(w",sorting
import cprofilefrom random import randintlength = ,performance
numpy.save(),dictionary
with' context manager doing work on the,with-statement
>>> foo = '0123456'>>> foo[0:4]'0123'>>> foo[::-1],string
"x = table.cell_value(row, col)x = x.decode(""iso-88",character-encoding
"1, ""text1,text2"", ""text3, text4"", a, b, c",csv
[a-za-z0-9'\-],regex
from twisted.protocols import basicclass mychat(ba,networking
connection = mysqldb.connect(...)cursor = connecti,mysql-python
subprocess,pipe
#client exampleimport socketclient_socket = socket,sockets
def contact_create(request): if request.method == ,django
registry = {}def register( cls ): registry[cls.__n,oop
s(y_i),numpy
list.index(x),list
"class myclass(): """"""  description for class """""" de",documentation
"qtcore.qobject.connect(menuaction, 'triggered()', ",qt4
for i in taskdictionary: try: sleep(60) thread = t,multithreading
"x = 1,2,3,4y = 0.002871972681775004, 0.00514787917",plot
"dict1 = { (1,2) : 2, (2,3): 3, (1,3): 3}dict2 = { ",dictionary
#NAME?,virtualenv
"import numpy as npa = np.array([[1,2,3],[4,5,6]])a",arrays
a = 1b = 2c = 3,debugging
raise tornado.web.httperror(400),tornado
"p = ""q=http://.*\.doc"" in text = ""q=http://11111.d",regex
"templist = ['25', '50', '100', '150', '200', '250'",list
in [182]: data_setout[182]:  index data_date data_,pandas
download_folder_path,module
"myset = set(['a', 'b', 'c', 'd'])mydict = {item: (",generator
&gt;&gt;&gt; from collections import counter&gt;&g,sorting
#!/usr/bin/env python2# -*- coding: utf-8 -*-from ,multithreading
"browser = webdriver.firefox()browser.get(""url"")bro",testing
if type(n) == type(node): do thiselif type(n) == t,typechecking
&gt;&gt;&gt; import math&gt;&gt;&gt; math.pi3.1415,import
runserver,django
class animal(models.model): type = models.charfiel,django
m\xc3\xbcller,unicode
url_file_handle=stringio( gz_data )gzip_file_handl,gzip
daysafter = datetime.date.today() + datetime.timed,datetime
#!/usr/bin/pythonimport wxclass myapp (wx.frame): ,user-interface
c:\program files\google\google_appengine,eclipse
exit = falsedef thread_func():  while not exit: ac,multithreading
"in [1]: %timeit 10 / float(98765) 1000000 loops, b",optimization
"def upgrade(): op.create_table('player', sa.column",sqlalchemy
typedef struct { pyobject_head // other stuff...} ,c
knn,performance
"self.dpi = 100self.fig = figure((6.0, 6.0), dpi=se",plot
0 14-11-20031 15-03-199912 04-12-201233 09-05-2007,matplotlib
"string1 = ""hello \n world""string2 = string1.strip(",string
from copy import deepcopydef copyexample: self.myd,dictionary
"&lt;meta name=""city"" content=""austin""&gt;",beautifulsoup
class solutionfile(models.model): ''' a file from ,django
"class workspace(qmainwindow, ui_mainwindow): """""" t",multithreading
numpy,multithreading
"""select * from a where a.key &gt; %d"" % maxvalueof",mysql
my_driver = get_my_driver()my_driver.set_timeout(3,firefox
"import wx  file ""/var/tmp/wxwidgets/wxwidgets-13~2",eclipse
class foo(models.model): title = models.charfield(,django
#include &lt;signal.h&gt;#include &lt;stdio.h&gt;#,multithreading
dict [name] = 0dict [name] += 1dict [name] += 1,optimization
"post[""date""] = ""2007-07-18 10:03:19""",datetime
class testingclass(unittest.testcase): def testema,unit-testing
$pip freeze &gt; requirements.txt warning: cannot ,django
stdout,linux
&gt;&gt;&gt; import json&gt;&gt;&gt; data = json.l,json
class ticket(models.model): title = models.charfie,django
from collections import defaultdictclass recursive,dictionary
/,path
crawling,scrapy
export pythonpath=/home/alex/pythonpython ./setup.,installation
class notification(models.model): message = models,django
dir,built-in
invalidrequesterror: this session is in 'prepared',flask
%load_ext julia.magic,ipython
"arr = [[0 1 1 1 1 1 1 1 0], [0 0 1 1 1 1 1 0 0], [",arrays
exception,exception-handling
var,scope
namedtuple._replace(),namedtuple
killed,kill
http://mysite/compare/id_1/id_2,mysql
import matplotlib.pyplot as pltfig = plt.figure()a,matplotlib
folder a: __init__.py script a: folder b: __init__,import
"&gt;&gt;&gt; class bank(): # let's create a bank, ",oop
"round(decimal.decimal('2.000000000000000000001'),5",decimal
location: 10-10-10-10 revision: 1district: tower d,string
import psycopsyco.full(),profiling
"proc = subprocess.popen('sudo apach2ctl restart', ",subprocess
setup.py,packaging
"f0(x, y, z):=ax^by^cz",programming-languages
"x = np.random.rand(1e6)%timeit x**3100 loops, best",numpy
assert,exception
/library/python/2.6/site-packages/virtualenvwrappe,warnings
nan,numpy
"&gt;&gt;&gt; sample = ""hello'world""&gt;&gt;&gt; pr",string
"application = webapp.wsgiapplication( [('/', index",google-app-engine
"import stringdef main(): isbn = input(""enter you'r",string
import scipy.stats as simport numpy as npimport ma,numpy
"subprocess.popen(['nohup', 'my_command'], stdout=o",subprocess
"a = ['a','b','c']b = [1, 2]",list
"import itertools as itweight = 40full = range(1,41",permutation
(?!regex_1)regex_2,regex
"&gt;&gt;&gt; lis=[['a','b','c'],['d','e','f']]&gt;",list
lines = []ax = plt.subplot(111)for filename in arg,matplotlib
import zlibdo = zlib.decompressobj(16+zlib.max_wbi,gzip
your number is &lt;b&gt;123&lt;/b&gt;,regex
"def a(b,c): return b+ca(*[4,5])",ruby
"words = [ lol, lot, bot ]",algorithm
ioerror: [errno 24] too many open files: '/tmp/tmp,file-descriptor
# the following key opens a doorkey: value,yaml
==================================================,nose
python.org,csv
a,string
"args = [""some_exe.exe"", ""some_arg"", ""another_arg""]",windows-installer
size(),arrays
.py,import
&gt;&gt;&gt; import platform&gt;&gt;&gt; platform.,networking
"packages=['hermes'],package_dir={'hermes': 'hermes",build
libtorrent,libtorrent
"my_list = [[1, 2, 21], [1, 3], [1, 2]]",list
"set tabstop=4 ""indentation levels every four colum",vim
user.objects.filter(username__contains='ab'),django
"df = pandas.read_csv('test.dat', delimiter=r""\s+"",",date
a[(a['some_column']==some_number) &amp; (a['some_o,pandas
import tkinter as tkimport tkfontroot = tk.tk()can,fonts
"plt.legend(loc=""upper left"")",textbox
import tracebackdef a(): b()def b(): try: c() exce,exception
django 1.0,django
class myclass: def myfunc(self): pass,class
"in [63]: c = numpy.arange(24).reshape(2,3,4)in [64",numpy
&lt;?phpclass test { public static $myvar = 'a'; p,class
list = list.objects.all()[0],django
import matplotlib.pyplot as pltplt.axis('off')plt.,matplotlib
pythoninterpreter,interop
"file f = open('file.txt', 'w')for(string line:f){ ",file-io
import numpy as npfrom scipy.interpolate import in,numpy
from celery.decorators import task@task()def add(x,django
__dir__,inheritance
"user_dict[12] = { ""category 1"": {""att_1"": 1,  ""att",dataframe
"try: print(10 * (1/0))except zerodivisionerror, er",exception
"yyyymmdd, hh, x20110101, 1, 1020110101, 2, 2020110",pandas
'20_231_mystring_234',string
unicodeencodeerror: 'ascii' codec can't encode cha,unicode
"survey.add('blue')# would give survey == ['blue', ",collections
if text == 'sometext': print(text)if text == 'nott,if-statement
"# foo.pyimport osdef main(): print( ""hello"" )if ""_",ironpython
my_generator()[:10],generator
from django.utils.timezone import utcimport dateti,django
"a=[1,2,3,4,5,6,7,8,9]",find
email_host = 'smtp.gmail.com'email_host_user = 'us,django
"class constraintfailureset(dict, exception) : """""" ",multiple-inheritance
idx &lt;- which(names(my_data)==my_colum_name),dataframe
"def assert_long_strings_equal(one, other): lines_o",exception
button,button
import numpy as npimport timerandvals = np.random.,arrays
profiles = session.query(profile.name).filter(and_,sqlalchemy
file1.py,variables
"import httplib, urllibparams = urllib.urlencode({ ",http
import pandas as pdimport numpy as npdef add_prop(,matplotlib
src,zip
python.exe /path/to/.py/file,executable
"np.log(np.array(['1'], dtype=object))",exception
while(true): # do some work,multithreading
psutil,multithreading
#!/usr/bin/env pythonimport osimport sysimport fee,feedparser
msvcrt.getch(),windows
$ virtualenv venv --distribute-bash: virtualenv: c,osx
import logging# create loggerlogger = logging.getl,logging
pylab.subplot(449);,charts
&lt;ns0:trk&gt; &lt;ns0:name&gt;active log&lt;/ns0,elementtree
"scan_process = subprocess.popen(command, stdout=su",timeout
sheet_names(),xlwt
"array = [.06, .25, 0, .15, .5, 0, 0, 0.04, 0, 0]hi",arrays
"{% webapp2.uri_for(""editgreeting"", greeting.key().",google-app-engine
543921.9354,flask
collections.namedtuple,metaclass
nbconvert,ipython
itertools.permutations,algorithm
{{ somedate.strftime('%y-%m-%d') }},google-app-engine
python 2.5.4pyqt4 4.4.3sqlalchemy 0.5.2py2exe 0.6.,sqlite
"import wxclass myframe(wx.frame): """""" we simply de",eclipse
"&lt;main&gt; &lt;object1 attr=""name""&gt;content&lt",xml
.pyc,path
"gwfuncs = [reboot, flush_macs, flush_cache, new_gw",dictionary
ps,linux
"&gt;&gt;&gt; def f(a, b=[]):... b.append(a)... ret",parameters
from setuptools import setup...,packaging
sum([1 for x in frequencies if x &gt; 0]),list
"def iszero( i): if i != 0: print ""ok"" else: warnin",unit-testing
for r in results: print r['key_name'],json
mylist[0],list
static void request(uri selecteduri) { httpwebrequ,http
"plt.subplot(121)plt.imshow(datastack, cmap=mpl.cm.",image
type(),class
from django.utils.xmlutils import simplerxmlgenera,django
"termcount(doc_num, term , count)",arrays
with,python-import
pip install pylibmc,ubuntu
listen,redis
"[1, 2, 3]",arrays
"foo = ['foo', 'bar'];moo = ['moo', 'loo'];for (a, ",django
#!/usr/bin/pythonimport timefilebytepos = 0while t,file-io
"class netcat: def __init__(self, hostname, port): ",netcat
def conditional_import_modules(test): if test == ',import
iterparse(),xml
__iter__,string
"print re.search(r'1', '1').groups() ",regex
&gt;&gt;&gt; from django.db import connection&gt;&,mysql
"a[] = {10,21,45,22,7,2,67,19,13,45,12,11,18,16,17,",algorithm
"a = [1,2,3]b = [9,10]",data-structures
"--cord 1,2,3 2,4,6 3,6,9",argparse
2010-01-01 17:31:22 2010-01-03 17:31:22,datetime
/usr/share/dict/words,objective-c
"from datetime import date, datetimedef test(): ret",introspection
"#note: this is example code for my idea, you do no",multithreading
import sysfrom clang.cindex import *def nodeinfo(n,c++
list,list
.add,pandas
cluster load_date budget actual fixed_pricea 1/1/2,list
myobject,attributes
# check if variable already created this sessionin,variables
"colors=['b', 'c', 'y', 'm', 'r']lo = plt.line2d(ra",matplotlib
"testtext = ""test - __—_–_ê__“..ëçë_ëâëéë?ë?"" # thi",utf-8
"st = ""hello world""tobinary(st)",string
"if theurl.startswith(""http://""): theurl = theurl[7",http
"for x in (0,1,2,3): for y in (0,1,2,3): if x &lt; ",inline
"from time import localtime, strftimefiles = open(""",list
python2.5 myscript.py inpt0,shell
keyerror,reportlab
python do_work.py foo bar,ruby-on-rails
open(),url
&lt;query object&gt;,pandas
import datetimeimport pytzclass myclass: def get_n,django
foo,fabric
enumerate(),list
m-/,emacs
simdata(),animation
textarea,css
buf_size=1024*64 # this is an important size...wit,file
incref,python-c-api
model.meta.managed = false,django
try: foo = barexcept exception as exception: name_,exception
./xyifier --prox --lport lport --rport rport,argparse
c,list
mystring,string
"@app.route('/search', methods=['post'])# gets sear",flask
"import sysimport tweepyconsumer_key=""""consumer_sec",mongodb
class todolist(models.model): title = models.charf,database
"import urllib, jsonresponse = urllib.urlopen(""http",json
"import timeitdef test1(): a = [1,2,3] a.insert(0,1",performance
import sublimeimport sublime_pluginimport seapi...,plugins
"""""""foobarfoo2""""""",quotes
"python 2.6.2 (r262:71605, apr 14 2009, 22:40:02) [",sqlite
date1 = datetime.strptime(str('2011-08-15 12:00:00,date
c:\python26\lib\site-packages\pygraphviz-0.99.1&gt,c
my_zip/file1.txtmy_zip/dir1/file2.txtmy_zip/dir1/d,extract
mr.,regex
in [102]: l = range(1000)in [103]: t = tuple(range,performance
from pil import image import imageenhanceimport im,python-imaging-library
"parser.add_argument('-auto', action='store_true')",command-line-arguments
element,xml.etree
import config,configuration
def manage_list(request): user = user.objects.filt,django
import matplotlib.pyplot as pltfrom matplotlib imp,matplotlib
sl = dbsession.query(puesto.id).filter(puesto.loca,sqlalchemy
file = object.myfilepathfileobject = csv.reader(fi,django
"def word_exists(wordlist, word_fragment):return an",sorting
__new__,object
app /run.py /app /__init__.py /views /__init__.py ,flask
"&gt; import numpy as np&gt; a = np.array([1,2,3,4,",arrays
building 'psycopg2._psycopg' extensioncreating bui,install
"foreground = (255, 255, 255)width = 375height = 50",image
nan,pandas
"import csvimport jsoncsvfile = open('file.csv', 'r",json
import matplotlibimport matplotlib.pyplot as pltcm,colors
imap_unordered(),multiprocessing
def f1(): x = 5 def f2(): print x,scope
class mainhandler(tornado.web.requesthandler): @to,tornado
directory/ script.py subdir/ __init__.py myclass01,import
"p = subprocess.popen(cmd, shell=true, stdout=subpr",subprocess
vacuum,sql
/home/user/templates,security
"# plot line width matplotlib.rc('lines', linewidth",table
$ myprogram.py $ myprogram.py -v$ myprogram.py -vv,argparse
the quick @red fox jumps over the @lame brown dog.,regex
raw_input(),input
import numpy as npimport matplotlib.pyplot as pltv,matplotlib
bottle.run,cherrypy
"tup = ([1,2,3],[7,8,9])tup[0] += (4,5,6)",list
"""41973333"" -&gt; 1.88999996185302734375e1""41995c29",binary
#!/usr/bin/env python# -*- coding: utf-8 -*-czech ,unicode
os.walk,ruby
text,events
"class a: @memoized def fun(self, arg): return none",inheritance
"class hello: def greet(self): print ""hello""",packaging
(df.t / df.t.sum()).t,pandas
self.assertfalse,assert
org.apache.spark.sparkexception: job aborted due t,apache-spark
user_agent = 'mozilla/20.0.1 (compatible; msie 5.5,html
file.txt,split
"class baseclass(object): def __init__(self, base_a",multiple-inheritance
url: http://www.test.com/test1returns: test1url: h,parsing
"@app.route('/template', methods=['get', 'post'])de",http
"""""""&gt;&gt;&gt; print a.string() foo : a bar : b d",doctest
"alist.sort(cmp_items)def cmp_items(a, b): if a.foo",list
urllib2,real-time
"prefix = ""/abc/123""@app.route(prefix + ""/"")def ind",routes
"import timeits = """""" x=5 if x&lt;0: pass"""""" t = ti",optimization
set nohlsearchset aiset bg=darkset showmatchhighli,vim
"plt.scatter(x, y, c=tag)",matplotlib
"""{ { a } { b } { { { c } } } }""",parsing
from xml.etree import elementtree as etet.register,xml
pytest,unit-testing
print img.sizeprint 10 * img.size,python-imaging-library
id(),list
tempfile.namedtemporaryfile(),file-io
csv,csv
def start_celerycam(): '''start celerycam daemon'',fabric
statsmodels,time-series
"&gt;&gt;&gt; nltk.pos_tag(nltk.word_tokenize(""sele",nltk
tree(),object
"class foo(object): (nonexisting,vague,confirmed) =",constants
drop table if exists mytable;create table mytable(,matplotlib
"l = [1,7,3,5]",list
return redirect(my_url),django
"def monkeypatch_class(name, bases, namespace): '''",openstack
algebraicfield,sympy
**a b c d e**a 0 10 15 5 20b 10 0 5 5 10c 15 5 0 1,algorithm
def createlists(): global maxchar global minchar g,callable
"def foo(bar, baz) : def closure(waldo) : return ba",serialization
def select_rows(to_select): # for a list for row i,list
database_engine = 'postgresql_psycopg2' # 'postgre,django
"steps = {1:""value1"", 5:""value2"", 2:""value3""}",sorting
import multiprocessingclass worker(multiprocessing,daemon
bigintegerfield,django
"import matplotlib.pyplot as pltplt.figure(1, figsi",matplotlib
myapp/models.py,paste
x-axis,matplotlib
illegal_xml_re = re.compile(u'[\x00-\x08\x0b-\x1f\,xml
file &gt; revert to checkpoint,ipython-notebook
"import matplotlib.pyplot as pltplt.scatter(dates,v",matplotlib
path.py,path
"&gt;&gt;&gt; s = 'my string with ""double quotes"" b",string
"s = u""""""{""desc"": ""\u73cd\u54c1\u7f51-\u5168\u7403\",json
"def blarg(): return ""blargidy"", ""blarg""i, j = blar",scala
"text.replace('\xc2\x99', ' ').replace('\xc2\x85, '",string
class book( db.model ): creationtime = db.datetime,google-app-engine
{{cat}} chases {{mouse}},django
python-pip,fedora
var_a: 'home'var_b: 'car'var_c: 15.5,json
importerror: no module named datetime,ubuntu-12.04
nose,unit-testing
py_ssize_t,numpy
my_macro,macropy
multiprocessing.pool(),multiprocessing
import syslogger = logging.getlogger()logger.level,unit-testing
time_d = datetime_1 - datetime_2time_d_float = flo,datetime
openerdirector,thread-safety
unsetenv(),environment-variables
"[{'id': 1, 'name': 'paul'},{'id': 2, 'name': 'john",list
tkinter.tclerror: no display name and no $display ,matplotlib
"def compare(item1, item2): return (fitness(item1) ",list
"class foo(object): a = 3 def bar(self, x): return ",security
pylint,pylint
x = variable_1 or 0,variables
"list = ['word1','word2','word3']ob_list = data.obj",django
&gt;&gt;&gt;from pymongo import connection&gt;&gt;,pymongo
tagged_text = nltk.pos_tag(nltk.text(nltk.word_tok,nlp
"[(0, &lt;pyspark.resultiterable.resultiterable obj",apache-spark
key = '1234'string = 'hello world'encrypted_string,encryption
multiprocessing,iteration
"def __init__(self, request): self.request = reques",pyramid
"### base.html&lt;!doctype html public ""-//w3c//dtd",django
"def load_recursive(self, path): for subdir, dirs, ",symlink
"my ($one,$four,$ten) = line.split(/,/)[1,4,10]",list
sudo pip install --upgrade pip,pip
max(l),max
"line_string2 = '-10 ' + u""\u00b0"" +""c""l, = ax1.plo",matplotlib
apt-get install -y,deployment
#!/usr/bin/python2.6import csvfrom openpyxl import,openpyxl
class company(models.model): company_name = models,django
"ec2server.create_instance( ec2_conn, ami_name, sec",amazon-ec2
$ ls -l links.csv; file links.csv; tail links.csv ,memory
"class foo(object): def f1(self): print ""original f",design-patterns
"from django.db.models import get_app, get_modelsap",django
"setattr(obj.__class__, 'property_to_be_mocked', mo",unit-testing
# beforemy_var = somethinglikethis.where(we=do_thi,coding-style
"something = {'foo' : 'bar', 'foo2' : 'bar2', 'foo3",code-formatting
import timeitimport numpy as npmy_data = np.random,matlab
"#!/bin/bashcd /home/username/tgecho ""msg user#****",linux
&gt;&gt;&gt; import sys&gt;&gt;&gt; print sys.path,emacs
python virtualenv.py install,virtualenv
argparse,bash
pip install evernote,osx
item,django
"list(set([a,b,c,a]))",performance
"c = pycurl.curl()c.setopt(pycurl.useragent, 'mozil",ssl
num_intervals = (cur_date - previous_date) / inter,date
"[1,2,3]",list
array.array('b'),bytearray
plot,matplotlib
u,string
__getstate__,pickle
.. autoclass:: bus :members:,decorator
import numpy as npimport pandas as pd# create a da,pandas
fetchurls(),time
__init__,memoization
tree = lxml.html.parse(some_response)links = tree.,xpath
"[55.0, 55.0, 47.0, 47.0, 55.0, 55.0, 55.0, 63.0]",statistics
dir | +-- test.py | +-- package | +-- __init__.py ,import
"traceback (most recent call last):file ""&lt;stdin&",import
"#1st.pyprint ""something to print""while(true): r=ra",subprocess
"&gt;&gt;&gt; stdin, stdout, stderr = myssh.exec_co",unix
class myclass(object): def __init__(self): pass de,namespaces
python my_script.py &gt; my_output.txt,io
"&gt;&gt;&gt; with open('temp/connection.pickle','w",pickle
"package mainimport ""fmt""func fibonacci(c chan int)",go
"""'""",string
import,module
def f(x): return x+3,function
"import xlrd#open the .xls filexlsname=""test.xls""bo",excel
class example(object): def the_example(self): itsp,class
@namespace('/connect')class connectnamespace(basen,django
actions action = new actions(driver);action.moveto,selenium
s,pandas
"numpy.random.random((256, 256))",qt
"class element: def __init__(self, name): self.name",list
"for i in range(2): print ""hello""",loops
def flip(p): '''this function return h with probab,random
"{% for i,j in enumerate(a) %} {{i}} ,{{j}}{% endfo",django
&gt;&gt;&gt; url = 'http://some.url.value'&gt;&gt;,character-encoding
attributeerror: 'testdesktoprootcontroller' object,unit-testing
typeerror: cannot concatenate 'str' and 'nonetype',pexpect
"&gt;&gt;&gt; a = ""barackobama""&gt;&gt;&gt; print m",string
"&gt;&gt;&gt; [(yield from (i, i + 1, i)) for i in ",generator
"z = repmat(0,500,1); z(1)=3;z(2)=1;za = (z-repmat(",matlab
nosetests | colorize_stack_trace.py,debugging
"volume_ids = [1,2,3,4,5]ip = '172.12.13.122'for vo",map
py2exe,windows
"""blablabla"" # =&gt; (bla, 3)""rablabla"" # =&gt; (bl",regex
from numpy import *import osimport matplotlib.pypl,image
&lt;!doctype html&gt;&lt;html&gt; &lt;body&gt; &lt,xpath
"[1, 4, none, 6, 9, none, 3, 9, 4 ]",list-comprehension
x = 'http://test.com/lalala-134'print x['-':0] # b,string
"""...or just write 'import numpypy' first in your p",numpy
from matplotlib import pyplot as pltimport randomf,matplotlib
setattr(),setattr
people,django
"f = open(""hello.txt"", ""wb"")f.write(""hello python!\",with-statement
from distutils.core import setupsetup(name='scrapp,installation
"s = ""classes.students.grades""",string
"def padded_hex(i, l): given_int = i given_len = l ",hex
site matching query does not exist.,django
import randomimport matplotlib.pyplot as pltx = ra,plot
import logginglog = logging.getlogger('module')cla,exception
from matplotlib.backends.backend_pdf import pdfpag,matplotlib
as_p(),django
shell = ipython.shell.ipshell(argv=[])attributeerr,django
account.bank.statement.line,openerp
python manage.py runserver,mysql
multiprocessing,multithreading
class pairevaluator(handevaluator): def returnarbi,string-formatting
recv(),networking
"liquid error: undefined method `join' for ""\n song",markdown
connections,mysql
str.split,string
"{% if form.??? %} &lt;ul class=""errorlist""&gt; {% ",django
"[(x, y) for x in [1,2,3] for y in [3,1,4] if x != ",list-comprehension
class attribute(models.model): name = models.charf,django
"from matplotlib.pyplot import *fig = figure(1, fig",matplotlib
"with open('islandin.txt') as fin: num_houses, leng",algorithm
"listy = [[]]*3print listy[[], [], []]",list
from foobar.formtools import auto_process_form_ins,python-module
&gt;&gt;&gt; import pytz&gt;&gt;&gt; pytz.timezone,pytz
"{'estimated': '',  'suffix': '',  'typeofread': 'g",mysql
[ 0 1 6 5 1 2 7 6 2 3 8 7 3 4 9 8 5 6 11 10 6 7 12,replace
~,numpy
"io.sockets.on('connection', function (socket) { so",node.js
"def isgrafting(a): for i in xrange(1, int(ceil(log",floating-point
import loggingimport logging.handlersa = logging.g,logging
"for k, v in mydict.items(): if v is none:... right",dictionary
except: # do stuff with sys.exc_info()[1]except ba,multithreading
hdf = pandas.hdfstore('survey.h5'),pandas
"x = array(x) for x in range(25, 100): print(x)",arrays
import osimport sysimport vlcif __name__ == '__mai,c
visit(),parsing
import sysfrom pyqt4 import qtguidef main(): app =,menu
&gt;&gt;&gt; a = object()&gt;&gt;&gt; a.hhh = 1,function
final,override
nan,json
dataframe.str.split(' '),string
import osimport urllib2def check_in(): fqn = os.un,standard-library
foo = np.asanyarray(range(100))mask = (foo &lt; 40,numpy
"class fakefoo(object): def do_foo(self, a, b): ass",unit-testing
class stuff(models.model): things = models.manytom,database
import mathimport numpyimport scipyfrom scipy.stat,math
bin,git
pip install numpy,visual-studio
unittest,unit-testing
multiprocessing.imap_unordered,multiprocessing
"try: raise [1, 2, 3, 4]except exception as ex: pri",exception
if 'debug' in argv[1:]: print 'will be running in ,command-line
"#program to blend many images into oneimport os,im",image
pivot,pandas
import pickleclass x(object): some_attribute = non,security
from datetime import datetime  now = datetime.now(,datetime
"liste = 'asdfasfasd:asdfafaergasde' # example, how",list
import inspectdef deco(f): def g(*args): print ins,class
from account_import.models import importfile,django
"import pylabimport timeimport randomdat=[0,1]pylab",matplotlib
"in [1]: serie = pd.series([0.0,950.0,-70.0,812.0,0",numpy
"class dynamicform(form):def __init__(self, *args, ",django
class product(models.model): name = models.charfie,django
"def my_fun(foo,bar): foo return foo + bar",lighttable
"d = {}d[(0,0)] = 0d[(1,2)] = 1d[(2,1)] = 2d[(2,3)]",dictionary
"keys1 = ['a', 'b', 'c', 'd', 'e', 'h', 'i']keys2 =",list
"""records"": [{""key1"": ""aaa"", ""key2"": ""bbb"", ""key3"":",list
d[t],matlab
foo = foo()...if foo.bar is not none and foo.bar.b,error-handling
class imagemain(models.model): product = models.fo,django
&gt;&gt;&gt; class a(object): ... def some(self): ,class
filefield,django
memcached -vv 2&gt;&amp;1 | tee memkeywatch2010098,stdin
none,memory
&gt;&gt; mylist = mylist()&gt;&gt; mylist.extend([,list
import timedef printer(): for i in range(100): tim,buffer
"def xxx(*args, **kw): # or as a class@xxx(foo, bar",decorator
/item/{item}/some_options,authorization
app,design
len(),instance-methods
"area1 = n.where((a&gt;0) &amp; (a&lt;10)),1,0)area",numpy
class a: @property def x(self): return 5,properties
dev_appserver,google-app-engine
setup.py install,twisted
"points = []point = (1, 2)",list
"import csvlines = []with open('output.txt','r') as",csv
python26_d.lib,debugging
"plt.pcolor(rand(5,5))",numpy
"import numpy as npa = np.random.rand(10**4, 10**4)",multithreading
"&lt;foo bar=""asdf"" blah=""123""&gt;xyz&lt;/foo&gt;",beautifulsoup
import sqlite3import csvimport codecsimport cstrin,csv
.py,unit-testing
"def f(a, b, c, d)",tuples
@celery.taskdef tprint(word): print word,asynchronous
"seq.sort(lambda x,y: cmp(x.xxx, y.xxx))",lambda
"cursor.execute (""update tbltablename set year=%s"" ",mysql
pip,packages
"class productspider(crawlspider): name = ""product_",selenium
scipy.cluster.hierarchy.dendrogram,scikit-learn
"a = np.array([1, 2, 1, 3, 3, 3, 0])",numpy
"@app.route(""/sitemap.xml"")def sitemap_xml(): respo",flask
result.findall(),xml
"import matplotlib as mplmpl.use( ""cairo"" )import n",pdf
url = 'http://www.sub.domain.com/'values = { 'var',django
class pasta(ndb.model): name = ndb.stringproperty(,google-app-engine
get_or_create,django
"file ""c:\python33-b\lib\distutils\msvc9compiler.py",windows
in file included from _mysql.c:34:d:\servers\xampp,mysql
oserror: [errno 2] no such file or directory: '/ho,unix
0,logic
ipdb&gt; magazineissue.objects.filter(id__in=l_mag,django
from mpl_toolkits.mplot3d import axes3dimport nump,matplotlib
temporaryuploadedfile,django
set.difference(),code-analysis
importerror: no module named setuptools,netbeans
| main.py| scripts|--| __init__.py | script1.py | ,import
zlib,gzip
"@app.route('/login', methods=['get', 'post'])def l",rest
"def f(x: int) -&gt; int: r""""""adds 3 to x"""""" return",pydev
import cstringiodef f(): buffer = cstringio.string,stringio
blockproc,matlab
"li = [0, 1, 2, 3]running = truewhile running: for ",list
python -i example.py,debugging
"using username ""root"".authenticating with public k",ssh
&gt;,boolean
pylint.lint.run,coding-style
"1997,ford,e350 1997, ford , e350 1997,ford,e350,""s",parsing
&gt;&gt;&gt; import io&gt;&gt;&gt; import csv&gt;&,csv
"'19 janvier 2012' -&gt; '19', 'janvier', '2012'",regex
"from flask import flask, request, render_templatea",html
creation_time,django
raw_input(),stdout
func2,traceback
tzinfo,datetime
pip install pillow,pip
w602 deprecated form of raising exception,pylint
object#extend,ruby
a[:] = [i + 6 for i in a],memory-management
str.isnumeric,floating-point
somelist.append(verylongformula),numpy
settings.py,mysql
"[...]'version': '0.0.1','install_requires': [],'te",setuptools
test,string
"ipython -e ""open -a macvim""",vim
/en_us/lc_messages/en_us.mo/en_ca/lc_messages/en_c,localization
in[2]: import matplotlib.pyplot as pltbackend maco,matplotlib
pip install ipython,virtualenv
process.join(),multiprocessing
from selenium import webdriverfrom selenium.common,selenium
def read(): while something(): yield something_els,exception
float,language-design
unique_together,mysql
keyboard,interactive
&gt;&gt;&gt; from sklearn import svmtraceback (mos,numpy
"&gt;&gt;&gt; a = np.array([1,2,3])&gt;&gt;&gt; b =",arrays
import threadingclass thread(threading.thread): de,multithreading
"traceback (most recent call last): file "".\url.py""",type-conversion
[ 1 2 ],numpy
&gt;&gt;&gt; d = datetime.datetime.now()&gt;&gt;&g,datetime
r,r
"dict = {""path"": ""/var/blah""}curr = ""1.1""prev = ""1.",string
import matplotlib.pyplot as plt import numpy as np,numpy
numpy,numpy
"for i, ithtag in enumerate(tag): tagdict.update(it",dictionary
c = 'c' # for examplehex_val_string = char_to_hex_,hex
class dispatcher: def do_get(self): ... def do_put,design-patterns
/library/frameworks/,osx
"plot([1000, 1001, 1002], [1, 2, 3])",matplotlib
$ ./myapp.pythe most commonly used myapp commands ,command-line-interface
virtualenv,virtualenv
"draw = imagedraw.draw(pilimage)draw.line((100,200,",python-imaging-library
numpy,memory
"{ ""id"" : ""abcde"", ""key1"" : ""blah"", ""key2"" : ""blah ",recursion
if s.find('lookforme') &gt; -1: do something,performance
"{'wed': '10:30 - 21:00', 'sun': '10:30 - 21:00', '",datetime
file_get_content,file
"a = array([[1,11], [3,9], [5,7]]",numpy
'00123',string
{% static %},django
"arr = []arr.append([1,2,3])arr.append([4,5,6])# ar",numpy
"dict = {""blue"" : ""5""""red"" : ""6""""yellow"" : ""8"" }",dictionary
find_string = soup.body.findall(text='python'),beautifulsoup
/var/run,apache
could not find any downloads that satisfy the requ,pip
from django.db import modelsfrom django.contrib.au,django
myuser = models.foreignkey(user),django
from nltk.tokenize import *,google-app-engine
"list = [1, 2, 3]product = [magic_here for i in lis",list
"import urllib, urllib2import logging# the path and",cookies
"a = [0, 1, 0, 1, 0, 0, 0, 0]b = []for i in range(l",list-comprehension
def main_function(x): r = get_range() for i in ran,nested
&lt;div&gt; &lt;p&gt; some text &lt;span&gt;more t,beautifulsoup
/usr/lib/pymodules/python2.7/numpy/core/include/nu,numpy
"class negate(type): def __new__(mcs, name, bases, ",lambda
subprocess,subprocess
searching for scipyreading http://pypi.python.org/,ubuntu
&gt;&gt;&gt; import sys &gt;&gt;&gt; import io&gt;,bufferedreader
^(\s+),regex
"""123456""",string
ipython,ipython
importerror: no module named multiarray.,numpy
"(start, stop, step)",arrays
wait_timeout,mysql
[time.mktime(t.timetuple()) for t in my_data_frame,pandas
"@app.route('/upload/', methods=['get', 'post'])def",flask
"""""""print a fibonacci series up to n.""""""",string
def multiples_of_2(): i = 0 while true: i = i + 2 ,c
int i;for (i = 0;; i++) if (thereisareasontobreak(,loops
&gt;&gt;&gt; import json&gt;&gt;&gt; line = '{u\'f,json
"self.canvas_l = label(self.master, text=""choose a ",tkinter
cv2,performance
from __future__ import unicode_literals,unicode
"{id=objectid(....),key={dictionary of values}}wher",mongodb
foreignkeys,django
import requestsfrom bs4 import beautifulsoupurl = ,csrf
def getvowels(word): vowel_list = [] index = 0 for,list
apt-get install libpcre3-dev,flask
"utctime = datetime.datetime(1601,1,1) + datetime.t",datetime
and,operators
ssh,ssh
django-admin,django
"try: with acquire_lock({'field1':'abc', 'field2':'",django
import mathimport osclass collection: col = [[0 fo,runtime-error
def new_positions_spherical_coordinates(self): rad,matlab
create table dummy( serial_num integer primary key,sqlite
importerror,import
"biglist = [  {'title':'u2 band','link':'u2.com'}, ",list
public_html,django
"class c(object): @classmethod def f(cls, x): retur",class-method
a,flask
"a = re.compile(""a.*b"")b = re.compile(""c.*d"")...",regex
"time_str = ""2012-07-24t23:14:29""time_obj=datetime.",datetime
"def info(object, spacing=10, collapse=1)",function
class myclass(object): def __init__(self): self._v,class
"&gt;&gt;&gt; xs = [1,2,2,3]&gt;&gt;&gt; print adde",list
pandas dataframe,numpy
args = parser.parse_args()if len(args) == 0: run_d,command-line-arguments
sys.builtin_module_names,virtualenv
partition of a set of 116280 objects. total size =,memory-leaks
parse_url,regex
__end__,perl
static,html
"[a,b]",list
&gt;&gt;&gt; regex_dict = { re.compile(r'foo.') : ,regex
#!/usr/bin/env python,distutils
f,performance
element=driver.find_element_by_id(elementid) print,selenium
models.pyfrom somelib import fooclassclass promoti,mocking
"x = numpy.power(x,3) ",arrays
open('foo.txt'),file
"import repattern = r""(\w+)\*([\w\s]+)*/$""re_compil",regex
"$ python -c ""from flaskext.sqlalchemy import sqlal",sqlalchemy
startdate,django
"import numpy as npnp.dot(a,b)",matrix
namedtemporaryfile,windows
class meta,django
__class__,class
str.startswith,string
#!/usr/bin/pythonimport smtplibmsg = 'hello world.,smtp
#!/usr/bin/env python# *-* coding: iso-8859-1 *-*i,utf-8
"[a,b][b,c][a,c][c,d]",google-app-engine
n,optimization
"[17/sep/2014 22:29:00] ""get / http/1.1"" 500 59trac",django
dependency_links=['https://github.com/nathanborror,pip
# draw median marker.if plot_opts.get('bean_show_m,matplotlib
import pygamefrom pygame import *win_width = 800wi,scroll
if (x == 5) { a = b; c = d;},parsing
df_a = mukey di pi0 100000 35 141 1000005 44 142 1,join
a b c0 192.168.2.85 192.168.2.85 124.43.113.221 19,pandas
b(?:m|(?r))*e,regex
"&gt;&gt;&gt; s = '0,1,2,3,4,5,6,7,8,9'&gt;&gt;&gt;",tuples
python code.py,interactive-mode
gtk.window,gtk
"list = ['element1\t0238.94', 'element2\t2.3904', '",list
import cprofile as profile# inside class method...,profiler
setup.py,dependency-management
------- ------------- ------------ ---------- ----,statistics
venv/bin/pip install -r requirements.txt,ubuntu
"date = datetime.datetime(int(year), int(month), 1)",django
"function [melsignal] = melody2audio(melody, vararg",matlab
text,tkinter
requests,soap
import matplotlib as mplimport matplotlib.pyplot a,matplotlib
random.sample,generator
tzdata2013xx.tar.gz,datetime
from sqlalchemy import create_enginefrom sqlalchem,multithreading
math.sqrt(),math
book.encoding,unicode
"mypath = ""c:\users\myfile.txt""",string
strftime,oracle
threading,design-patterns
typeerror at /comerx/cliente/novo/__init__() got m,django
class contact(models.model): name = models.charfie,django
"traceback (most recent call last): file ""/system/l",django
"@receiver(post_save, sender=user,  dispatch_uid='m",django
crawler = crawler(settings(settings)) crawler.conf,twisted
"colors = ['b', 'r', 'g', 'c']cc = cycle(c)for p in",matplotlib
from celery import celerydef make_celery(app): cel,flask
mainparser = argparse.argumentparser()subparsers =,argparse
"self.cursor.execute(""select string from stringtabl",sqlite
perl virtualenv.pl my_environment. my_environment/,perl
"= [""oath"",""pea"",""eat"",""rain""]",algorithm
x,apache-spark
"$array = array(1 =&gt; 2000, 3 =&gt; 5000 ...);",math
reload,openerp
a = set().add(1)print a # prints `none`,set
40558,datetime
"[~,idx] = min(abs(a - target))",numpy
"some(x, n)",pandas
f(x) = 1/x,matlab
__str__(self),list
x**.5,floating-point
--t1-- ---t2.1-----------t2.2------- ' ' ' ' '20 3,performance
&gt;&gt;&gt; import cv2traceback (most recent call,opencv
event,django
// preprocessor#include &lt;iostream&gt;#include &,c++
"""\/""",json
&lt;class 'pandas.core.frame.dataframe'&gt;datetim,pandas
pyconfig.h,osx
"import imageimg = image.open(""in.jpg"")img.save(""ou",python-imaging-library
import numpyimport scipyimport scipy.signalimport ,math
"def _execute(self, cursor, query, parameters): try",mysql
django==1.3.1--extra-index-url=http://dist.pinaxpr,pip
"response1 = br.follow_link(text_regex=r""cheese\s*s",mechanize
findall(r'regex(with)capturing.goes.here'),regex
"def isrotation(a,b): if len(a) != len(b): return f",arrays
"self.assertraises(attributeerror, branch[0].childr",django
"string = ""hello123""",regex
||=,variables
set statement_timeout to 1000; -- timeout for one ,postgresql
tuple1 = ()tuple2 = () dict1 = {}dict2 = {}list1 =,identity
def makeactions(): acts = [] for i in range(5): # ,closures
# open new file to writefile = nonetry: file = ope,exception
def isinteger(n): return int(n) == n,typing
my international text: †Ç†?†_,unicode
import cstringio.stringio as stringio,c
sys.argv,encoding
v = 'go'present = present_tense(v)print present # ,nlp
&gt;&gt;&gt; len(colors)256&gt;&gt;&gt; colors[0](,image
argumenterror,argparse
"def gen(date, count=10): while count &gt; 0: yield",pandas
"text = input(""text="")",input
a_list = [[0]*10]*10,list
sqlalchemy_track_modifications,flask
#!/usr/bin/python#-*-coding:utf-8*#option_controll,json
'ls\r\n\x1b[00m\x1b[01;31mexamplefile.zip\x1b[00m\,string
"beautifulsoup('&lt;h1&gt;foo&lt;/h1&gt;', 'html5li",beautifulsoup
"d = {'a':1, 'b': {'c':{}}}",dictionary
"# bad code do not use!!!return type('contactform',",django
df,pandas
import jsonimport urllib2from datetime import date,pandas
"# listener.pyclass listener: def __init__(self, po",perl
"result = {}for widget_type, app in widgets: if wid",dictionary
class a(): pass,vim
"def mymethod(self, *args, **kwargs): assert ""requi",exception
"df.iloc[:, 0]",pandas
&lt;body&gt;,html
mydi['foo'] ,algorithm
url_for,url
exceeded soft private memory limit with 192.023 mb,google-app-engine
db,django
"import numpy as npdata = np.array([[5,2], [4,1], [",arrays
import numpy as npimport scipy.spatial.distance as,numpy
local_tz = timezone('asia/tokyo')start_date = '201,datetime
"open(""./python_plugin.so""): no such file or direct",uwsgi
&gt;&gt;&gt; i = 6&gt;&gt;&gt; s = [i * i for i in,closures
"set([1,2,3,4]&amp;set([2,3,5]). ",algorithm
\r\n,windows
"plt.scatter(randn(100),randn(100))# set x, y limsp",numpy
cornercount = 100qualitylevel = 0.1mindistance = 5,image-processing
"stringa = ""xxxxxxfoundaaaaaaaaaaaaaaafoundbxxxxxxx",regex
"price = models.decimalfield(_(u'price'), decimal_p",django
"import mathdef main(): for x in range (1, 1000): f",math
import sysfrom pyside import qtcore# the next line,pyqt
importerror: no module named win32con,module
nsthread.detachnewthreadselector_totarget_withobje,osx
for (i = 0; i &lt; arr.length; i++) { /* ... */},arrays
import matplotlib.pyplot as pltfrom matplotlib.pyp,matplotlib
"def myfunc(a=4,b=6): sum = a + b return summyfunc(",syntax
import numpy as npimport pandas as pdimport matplo,matplotlib
"&gt;&gt;&gt; bytes([1,2,3])'[1, 2, 3]'&gt;&gt;&gt;",types
d1,data-structures
wprintf,windows
"import numpy as npfrom pil import image, imagefont",character-encoding
pip install scrapy,windows
"import osdirlist = os.listdir(""./"") # current dire",subfolder
merged_array = array(list_of_arrays),arrays
ctypes,rust
import gflagsimport httplib2from apiclient.discove,google-api
"{'modulename':'some_module', 'funcname':'somefunct",parallel-processing
"{'created': datetime.datetime(2010, 12, 31, 19, 13",django
unicodeencodeerror: 'ascii' codec can't encode cha,unicode
for ii in range(len(data)): lons = np.array([data[,numpy
"g.db.execute('insert into downloads (name, owner, ",sqlite
&gt;&gt;&gt; '{:.1%}'.format(0.9995)'100.0%'&gt;&g,floating-point
"restaurant_dish = db.table('restaurant_dish', db.c",sql
"x = range(1,10)y = range(8,20)(the answer i am loo",range
2012-05-29t19:30:03.283z,json
"if a, b, c, and d &gt;= 2: print (a, b, c, and d)",if-statement
"def shift(xs, n): if n &gt;= 0: return np.r_[np.fu",numpy
&lt;script&gt;,beautifulsoup
object.get_this(),oop
with open('file') as f: data = f.read()# orfo = op,file
"5.6 4.5 6.8 ""6.5"" (new line)5.4 8.3 1.2 ""9.3"" (new",csv
"import botoboto.set_file_logger('boto', 'logs/boto",logging
"class post(models.model): """""" blog entry """""" autho",django
"def formattime(self, _record, _datefmt): t = datet",datetime
\n,pep8
pygame,pyopengl
class mymodel(models.model): parent = models.forei,sql
"intersperse(666, [""once"", ""upon"", ""a"", 90, none, """,list
http://localhost:8000/issueapp/1628/view/22,django
"listofnumbers = [1,2,3,4,5]square = lambda x: x * ",lambda
"class showappsview(loginrequiredmixin, currentuser",django
set_yticklabels(),unicode
def upload(url): try: conn = boto.connect_s3(setti,django
required_tests = card_test.objects.using(get_datab,django
import timefrom apscheduler.scheduler import sched,flask
ax = plt.subplot(),graph
"i, o, e = client.exec_command(""perl -p -i -e 's/"" ",ssh
class isomething(object): def some_method(): pass ,documentation
#models.pyclass foo(models.model): img = models.im,django
1 3 4 2 2 75 2 2 1 4 13 3 2 2 1 1,numpy
id,pandas
"import numpy.random as nprimport timedef horner(c,",function
#,django
// somehow add serialization metadata to classes f,json
stevedore.extension could not load 'user_scripts':,virtualenv
for filename in os.listdir (input_dir) : if(filena,performance
src/ft2font.cpp:2170: error: _—…ft_load_target_mon,osx
paster create,paste
import sqlalchemydb = sqlalchemy.create_engine('po,database
"&gt;&gt;&gt; countchar('google') {'e': 1, 'g': 2, ",dictionary
"&lt;!-- &lt;span class=""titlefont""&gt; &lt;i&gt;we",html
multiprocessing,numpy
3.1415 // 1,math
.lnk,directory
result = slow_function()if result: return result[.,syntax
ctrl-m d,keyboard-shortcuts
"request = urllib2.request(url, data, headers)respo",urllib2
"pow(m, 1.0/n)",math
string.whitespace,string
"in [1]: %timeit abs(5)10000000 loops, best of 3: 8",function
matplotlib,matplotlib
"proc1 = subprocess.popen(['python','mytest.py'])pr",windows
blob.objects.filter(foo = foo) \ .filter(status = ,django
import argparseparser = argparse.argumentparser()p,argparse
"e.g. aaa, aab, aac.... zzy, zzz",performance
"dates = np.datetime64(['2010-10-17', '2011-05-13',",datetime
class myexception(exception): pass,exception
async def foo(arg): result = await some_remote_cal,python-asyncio
tue may 08 15:14:45 +0800 2012,datetime
from antlr4 import *# from phpparentlexer import p,parsing
"d = {1:'a',5:'b',2:'a',7:'a'}",dictionary
&gt;&gt;&gt;import numpy as np&gt;&gt;&gt;np.__con,performance
2009-03-08t00:27:31.807,ruby
"phrase = ""how fast it is""count = 0with open('bigfi",performance
"[loggers]keys=root[logger_root]handlers=screen,fil",logging
"subprocess.popen([sys.executable, 'script.py'], sh",subprocess
class a(object): def __init__(self): self.a = 1cla,oop
except,exception-handling
#jurassic park mainframefrom random import randint,class
"[3,5,6,7,1]",arrays
"subprocess.call(shlex.split( """"""/usr/local/itms/bi",subprocess
modeladmin.list_display,django
$ heroku run python manage.py collectstatic --noin,django
product.objects.values('date_created') \ .annotate,mysql
__class__,metaprogramming
matplotlib.figure.save_fig,matplotlib
settimeout,multithreading
aapl gedate2009-01-02 89.95 14.762009-01-05 93.75 ,sqlite3
__setstate__,serialization
"try: gzip.gzipfile(filename, 'r') # compressed # .",compression
"arrays = [(-1,+1), (-2,+2), (-3,+3)];",itertools
python manage.py test,django
sqlite3.row,sqlite3
the blue dog and blue cat wore blue hats,regex
tarfile,tar
function(2),recursion
lxml,html
"from scipy import statsstats.chi2.pdf(3.84 , 1)0.0",statistics
from django.db import modelsclass transaction(mode,django
nan,numpy
@pytest.mark.slowdef some_slow_test(): pass,py.test
while(&lt;&gt;) { #do whatever;},stdin
"def load_plugins(): plugins=glob.glob(""plugins/*.p",plugins
&gt;&gt;&gt; import timeit&gt;&gt;&gt; timeit.time,regex
"import subprocesssubprocess.call(""ipython notebook",subprocess
s=[22 33 45.6 21.6 51.8]p=2.45,numpy
{% url sitechangeobject.urlname %},django
st,pandas
operationalerror: database is locked,django
app.yaml,performance
settings.py,django
"fig, ax = plt.subplots()ax.imshow(data)plt.xticks(",matplotlib
oauth_session_handle,oauth
class myform(forms.form):  name = forms.charfield(,django
"import urllib2response = urllib2.urlopen(""http://b",url
gridspec.gridspec,matplotlib
tramp-remote-process-environment,emacs
mysite/ templates/ admin/ index.html,django
"import csv with open('v.csv', 'w') as csvfile: cwr",csv
__mul__,extend
"self.mysearchtables = self.mysearchtree.findall("".",html-parsing
[s]tack[o]verflow ______/ \_______ [b]ase \___ [d],algorithm
import timewhile true: print 'data' time.sleep(1),pipe
'127.0.0.1',network-programming
"def windex(dict, sum, max): '''an attempt to make ",algorithm
"output = subprocess.check_output([""ping"",""-c 2 -w ",subprocess
a b c da -1.045 2.0 3.5 -4.890b -5.678 3.2 2.89 5.,colors
null=true,mysql
import matplotlib.pyplot as pltfrom mpl_toolkits.m,matplotlib
"{field1: {}, field2: ""some value"", field3: {}, ...",json
#call to main functionif __name__ == '__main__': a,file
"datetime.strptime(date_string, '%y-%m-%d')",django
telnet,inheritance
"data = {'category': ['cat2','cat1','cat2','cat1','",pandas
try: requests.get('http://www.google.com')except c,exception
"i = cv2.imread(""lena.png"")i = cv2.cvtcolor(i, cv2.",opencv
const std::string&amp;,string
observable,design-patterns
import numpy as npdef _process(array): rows = arra,performance
"def _sort_by_score(scoring, items_list): unsorted_",functional-programming
def errortest(): raise exception(),exception-handling
&gt;&gt;&gt; from decimal import decimal&gt;&gt;&g,floating-point
true - false,string
assert almost equal,unit-testing
frozenset,set
def createuser(request): username = request.reques,django
sphinx.ext.ifconfig,documentation
"tax_location = 'statename, united states'def add_t",mocking
numpy 1.6.0,ubuntu
"from mpl_toolkits.mplot3d import axes3d,axes3dimpo",matplotlib
"print poisson(2.6,6)",statistics
#!/usr/bin/perl -w use open qw(:std :utf8);while(&,perl
:syntasticenable,vim
sys.path.append,installation
beautifulsoup,css-selectors
class tag(base): __tablename__ = 'tag' id = column,sqlalchemy
example_file.py,sys
collections.counter,list
"ssh = paramiko.sshclient()ssh.connect(server, user",ssh
def myview(request): res1 = requests.get('aurl') r,mocking
input = pdffilereader()output = pdffilewriter()fil,pypdf
divisors n = filter (\x -&gt; n `mod` x == 0) [1..,haskell
sys.getsizeof( 10000*[x] ),memory
"if number in (1, 2):",list
y = lambda u: u**(-2) + 8x = lambda u: numpy.exp(-,numpy
[a-za-z0-9 .],cocoa
sshexception: error reading ssh protocol banner,paramiko
if,variable-assignment
the_base_class,class
python mrsync.py -m /tmp/targets.list -s /tmp/sour,c
"def f(var):if var == pd.dataframe(): print ""do stu",pandas
import numpy as npfrom scipy.stats import kstestmu,statistics
"tupleoftuples = ((1, 2), (3, 4), (5,))",tuples
"def bad_append(new_item, a_list=[]): a_list.append",function
import itertoolsdef find_best_fuzzy_kmer( kmers ):,string
__init__,class
plot,matplotlib
the dog barked,file
def read_contents(file_path): return file(file_pat,file
&gt;&gt;&gt; list_of_arrays = map(lambda x: x*ones,performance
__init__,hash
def machineepsilon(func=float): machine_epsilon = ,numpy
~,bit-manipulation
def outer_function(file): for line in file: inner_,optimization
import numpy as npimport matplotlib.pyplot as pltx,matplotlib
%%,matlab
"u""{'code1':1,'code2':1}""",unicode
import osa = 'c:/'b = 'myfirstdirectory/'c = 'myse,windows
"u""_±†_†?†_""",django
class lawyeradmin(admin.modeladmin): fieldsets = [,django
"import helloprint ""hello""hello = reload(hello)",reload
&gt;&gt;&gt; countinfile('test.txt'),nlp
"def f(*args, **kwargs)",memoization
"floats = [3.14, 2.7, 0.0, -1.0, 1.1]",file-io
importerror: dlopen(../apptrace/guppy/sets/setsc.s,google-app-engine
class samplemodel(models.model): apple = models.ch,django
unicodeencodeerror: 'ascii' codec can't encode cha,sublimetext2
class comments(models.model): content = models.for,mysql
"def add_obj(obj, add_obj): for property in add_obj",object
document.pdf: table.tex pdflatex document.textable,latex
import signaldef handlesigterm(): shutdown()signal,linux
from,django
"def gradient(x_norm,y,theta,alpha,m,n,num_it): tem",numpy
"def func(a=none, b=none, c=none): for arg, val in ",arguments
"a = [1.2, 2.9, 7.4]",list
"&gt;&gt;&gt; l = [[]]*2 &gt;&gt;&gt; l [[], []] &g",list
0 threads: 83.842 seconds1 threads: 78.777 seconds,multithreading
3.5 % 0.1 = 0.1,modulo
"a = [""a"", ""b"", ""c"", ""d"", ""e""]",list
import randomfrom multiprocessing import poolfrom ,multithreading
y-axis,matplotlib
"mydict = {'name':'abc','city':'xyz','country','def",dictionary
"def handle_remote_file(url, **kwargs): response = ",http
2048 49:d3:cb:f6:00:d2:93:43:a6:27:07:ca:12:fd:5d:,openssh
"class test: def __init__(self, name): self.name = ",search
dbus,sockets
import tornado.ioloopimport tornado.webclass mainh,tornado
"class d(object): def __init__(self,msg='my default",decorator
"import pytest,osimport logginglogging.basicconfig(",logging
"myarray = []myarray[""john""] = ""johns value""myarray",arrays
"packetfile = open(""%s/%s/%s/%s.mol2"" % (""dir"", ""di",file-io
do_post(),http
select,sqlalchemy
"import res = 'start tt end're.sub(r'([a-z]){2}', r",regex
@app.route('/foo/&lt;encoded&gt;/bar/')def foo(enc,flask
"first = {""one"":""un"", ""two"":""deux"", ""three"":""trois""",dictionary
re.compile('%s-\d*'%user),regex
x = re.compile('^\d+$'),regex
random.random(),random
class task(models.model): ... seq_file = models.fi,django
&lt;?php$n = 1234;$m = 0;while ($n &gt; 0){ $m = (,math
"import osos.system(""uname -r"")",osx
"first_list = [['test.doc, '1a1a1a', 1111],  ['test",list
"import configparserwith open('./config.ini', 'w') ",configparser
method_missing,ruby
urllib2.urlopen,utf-8
heap(),memory
"class foo(object):  def __init__(self, a, b, c, d,",attributes
"cat /etc/apt/sources.list## note, this file is wri",regex
@validates('field_one')def validates_field_one(sel,validation
splitevery :: int -&gt; [e] -&gt; [[e]] @'spliteve,iterator
company price quantitymicrosoft 100 10google 99 5g,sqlalchemy
__enter__,with-statement
for x in some_list: ...... 100 lines later ...for ,scope
%his,ipython
news,sqlalchemy
py.test,pycharm
npm install --save,pip
"def handle_uploaded_image(i, u): # resize image  f",django
python examples.py,google-play
"type(x) in (list, tuple)",types
null,list
search(),join
"def main(): for i in xrange(2560000): a = [0.0, 0.",performance
acquire,multithreading
importerror: dll load failed: %1 is not a valid wi,pyodbc
{% for email in emails %} {%if email%} &lt;input t,django
"select player_type, count(*) from players group by",sql
&gt;&gt;&gt; import re&gt;&gt;&gt; m = re.match(r',regex
serializers.py,django
pip install mysql-python,ubuntu
etree.tostring,screen-scraping
def upgrade(): ### commands auto generated by alem,sqlalchemy
h = ((((d.hour * 60) + d.minute) * 60) + d.second),datetime
string str,arrays
import matplotlib.pyplot as pltfrom mpl_toolkits.m,matplotlib
caches = { 'default': { 'backend': 'django.core.ca,django
"import csvwrtr = csv.writer(open('myfile.csv','wb'",csv
import loggingclass mongohandler(logging.handler):,logging
"header, output = client.request(twitterrequest, me",json
def createdirectory(pathname): if not os.access(pa,operating-system
from django.utils import simplejson,google-app-engine
base,properties
__init__,oop
"def sliding_std_dev(image_original,radius=5) : hei",optimization
"def primes(n): """"""returns list of all the primes u",algorithm
import numpy as npfrom matplotlib import pyplot as,matplotlib
"def write_pdf(template_src, context_dict): templat",django
tail -f logfile,ssh
def runfunctionsinparallel(listof_funcandarglists),queue
csv.dictreader,unicode
"import scipyscipy.misc.imsave(slice,dat)",scipy
"import base64, osdataset_size = 10000000000 # that",optimization
import urllib2req = urllib2.request('www.tattoo-co,urllib2
django.contrib.admin.sites.adminsite,django
autopct,matplotlib
class customlogger(logging.logger): ...,logging
def authentication(request): consumer_key = 'xxxxx,oauth
"traceback:file ""/usr/local/lib/python2.7/site-pack",mysql
"def spam(): print ""spam""exec(spam.__code__)",function
help on class super in module builtins:class super,oop
set(),set
"for token in scan(""a(b)""): print token",generator
"traceback (most recent call last): file ""snippets-",encoding
"data = np.random.normal(loc=100,scale=10,size=(500",numpy
dispatch(),django
+=,string
/a/b.py,import
"gender_choices = ( ('m', 'male'), ('f', 'female'),",sqlalchemy
ioerror: bad message length,numpy
title(r'$\mathrm{test}$'),matplotlib
from os import *from os.path import *def dir_conte,directory-walk
l,list
result = [x**2 for x in mylist if type(x) is int],list-comprehension
"# list of numbersj=[4,5,6,7,1,3,7,5]#list comprehe",list
"webapp.route('/feed', handler = feed)",google-app-engine
project/ app1/ models.py routes.py views.py app2/ ,pyramid
sudo easy_install cx_oracle,oracle
"cmd = subprocess.popen('dir',shell=true,stdout=sub",subprocess
%,string
"def groups(regexp, s): """""" returns the first resul",regex
/my-profile/,django
id,function
settings\ __init__.py base.py admin.py feincms.py ,django
def foo1(): passdef foo2(): passdef foo3(): pass,python-module
"sudo easy_install -f <a href=""http://ipython.scipy",osx
"(message ~ ""program\\[\d+\\]: message"" and severit",parsing
"a={(1,2):'a'}",json
dir = os.listdir(os.getcwd()),list
"...&lt;div id=""remository""&gt;20&lt;/div&gt;...",html
for line in open(filename): do_something(line),file
"class cat(model): id = column(integer, primary_key",sqlalchemy
&gt;&gt;&gt; from scipy import stats&gt;&gt;&gt; i,scipy
a b c0 1 0.749065 this1 2 0.301084 is2 3 0.463468 ,pandas
dateutil,datetime
"&gt;&gt;&gt; np.ones((8,8))array([[ 1., 1., 1., 1.",arrays
"results = sorted(results, key=operator.itemgetter(",sorting
png,graphics
$ python setup.py build,mysql
"a = [1, 3, 5, 6, 9, 10, 14, 15, 56] ",numpy
def test_device_homepage(self): request = self.fac,django
"def listcompare(): list1 = [1, 2, 3, 4, 5] list2 =",list
rm -rf /,security
friday 1friday 11 jan 11,regex
"@measuredef countchange(n, coin_list): maxindex = ",recursion
show(),matplotlib
"""wilbur smith (billy, son of john), eddie murphy (",regex
"ax1.ticklabel_format(style = 'sci', useoffset=fals",matplotlib
eg: i would like to avoid writing 'categories':cat,django
&gt;&gt;&gt; d = {1:2}&gt;&gt;&gt; type(d.items()[,json
from sys import stdoutfrom copy import copysave_st,stdout
filelist.txt,speech-recognition
"from django.conf.urls import patterns, include, ur",django
mediaitem.comments.all(),django
"{ ""&lt;song id&gt;"":{ ""artist"":""&lt;song artist&gt",json
"[(101, 153), (255, 827), (361, 961), ...] ^ ^ x y",list
"vec = [[1,2,3], [4,5,6], [7,8,9]]print [num for el",list-comprehension
git pull,git
valueerror: cannot reindex from a duplicate axis,pandas
"from flask import flask, url_for, requestimport re",ubuntu
list,list
__init__.py,module
"from avro import schemamyschema = """"""{ ""name"": ""pe",avro
"x = ['1', '2', '3']y = ['a', 'b', 'c']",list
"def application(env, start_response): import pdb; ",uwsgi
"import csvthe_file = open('path', 'r')reader = csv",file
"ar0 = np.linspace(10, 20, 16).reshape(4, 4)ar0[:,-",numpy
flask-login,flask
"var o= new {attr1=""somehing"", attr2=344};",instance
______________| __ || |__| || || ||______________|,random
"double* data_in, double* data_out",arrays
"ocean = ""o""fire = ""x""hit = ""*""size = 10sea = [] # ",algorithm
#NAME?,django
"fields = ['name','email']def clean_name(): passdef",functional-programming
"class kernel: pass&gt;&gt;&gt; l = np.empty(4,dtyp",numpy
paster serve,install
"# -*- coding: utf-8 -*-""""""test module.""""""def test(",code-analysis
"%step foo(1, 2)",debugging
"contains([1,2], [-1, 0, 1, 2]) # returns [2, 3] (c",list
data.txt,arrays
# import the logging libraryimport logging# get an,logging
.removehandler,logging
"try: s.connect((address, '80'))except: alert('fail",sockets
"# has multi-index (a,b)df#can i do this? i know th",pandas
"// timestep,x_position,y_position0,4,70,2,70,9,50,",dictionary
"error 2014-01-03 15:32:15,308 base :: internal ser",django
def _utcnow(): return datetime.datetime.utcnow()de,time
c:\users\&lt;uname&gt;\distribute-0.6.35&gt;pip in,pip
a/long/long/path/to/file.py,file
https://github.com/ddollar/heroku-buildpack-apthtt,heroku
"ftp.retrbinary('retr readme', open('readme', 'wb')",unix
df.plot(),matplotlib
ax.yaxis.tick_right(),matplotlib
$ path_to_tool -option1 -option2 &gt; file_out,subprocess
"images= [{'type':'big', 'url':'....'}, {'type':'bi",redis
find the min,performance
def,vim
please add the directory containing pg_config to t,amazon-web-services
"class first(object): def __init__(self): print ""fi",class
def some_function(): # pretend this function is in,debugging
#!/usr/bin/env pythonimport queueimport threadingi,multithreading
import timeitdef add_simple(): for i in range(1000,casting
__/a__/ \b \ _/c \_/ \d \e,tree
import pdb; pdb.set_trace(),numpy
"def cov(a, b): if len(a) != len(b): return a_mean ",numpy
connection error: [errno 8] _ssl.c:504: eof occurr,django
key=len,list
"my_list=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",list
lambda,lambda
admin_media_prefix = '/media/admin/',css
from socket import socketimport ssls = socket()c =,ssl
273 # apply column averages to image--&gt; 274 img,osx
"values = (unicode(""†•"", ""utf-8""), unicode(""†©"", ""u",encoding
/extwebserver __init__.py test_detection.py test_f,nose
&gt;&gt;&gt; x = 4&gt;&gt;&gt; y = 5&gt;&gt;&gt; p,string
poll_function(var1): value = sub_function(var1) # ,mocking
required=false,django
"def empty_generator(): # ... do some stuff, but do",generator
.tar.gz,security
when a shortcut key is pressed: if current_extensi,c
import random aiturn=truewhile aiturn == true: all,list
def threadfunc(): while true: time.sleep(1)threadi,multithreading
"pybrain.tools.shortcuts.buildnetwork(2, 3, 1)",artificial-intelligence
person,static-methods
"python 2.7.6 (default, mar 22 2014, 22:59:56)[gcc ",mocking
## model.pyfrom sqlalchemy import *from sqlalchemy,django
"tags = [u'man', u'you', u'are', u'awesome']entries",list
class myclass(object): pass# which one is correct?,naming-conventions
select * from table where yourcolumn is not null;,sqlalchemy
"print '""' + title.decode('utf-8', errors='ignore')",unicode
__call__,wrapper
secs = sections.objects.filter(order__gt = 5),django
&gt;&gt;&gt; import pickle&gt;&gt;&gt; thing = ope,pickle
"file ""/usr/local/lib/python3.0/urllib/request.py"",",google-search
file(),exception
"import sysfrom pyqt4 import qtgui, qtcoreclass tes",pyqt
class destinationthread(threading.thread): def run,multithreading
mb,filesize
file.write(),performance
"def only_roman_chars(s): try: s.encode(""iso-8859-1",django
&gt;&gt;&gt; test = numpy.array([numpy.arange(100),numpy
&gt;&gt;&gt;import time&gt;&gt;&gt;s = time.strpti,datetime
/browse/&lt;name1&gt;/&lt;value1&gt;/&lt;name2&gt;,django
"print ""foo is"" + bar + '.'",string-interpolation
"values = set([1, 2, 3, 4, 5])import pdbpdb.set_tra",debugging
vector,type-safety
'1+2**(x+y)',math
from collections import defaultdictd=defaultdict(s,collections
class informationunit(models.model): username = mo,django
string_location = myaddress2 geodata = [] for plac,json
"cdef void say_hello(name): print ""hello %s"" % name",c
def foo(a): # i want to print the value of the var,string
"[1,2,3] -&gt; [1,2,3,0][1,2,3,4,5] -&gt; [1,2,3,4]",list
import matplotlibimport matplotlib.pyplot as pltfr,numpy
print str(mylist),list
g = nonedef foo(): if g is none: g = 1foo(),global-variables
pickle,performance
"f = open(""e:\\sample"", ""wb"")size = 1073741824 # by",file
email_use_tls = trueemail_host = 'smtp.gmail.com'e,django
"&gt;&gt;&gt; values = [1.1, 2.2, 3.3]&gt;&gt;&gt; ",random
def errback(value): import traceback trace = trace,twisted
"python2.7 -m timeit ""d = dict(x=1, y=2, z=3)""10000",dictionary
pip install requestsfailed to create process,pip
class userprofile(models.model): user = models.one,django
gdb.py,gdb
crontab e,vim
session.query(record).filter(record.id.in_(seq)).a,sqlalchemy
pip install --install-option='some-setup.py.option,pip
import gtkimport pygtk,gtk
import nltk text1.concordance('yellow'),nltk
/usr/bin,osx
"('product', '500.00', '1200.00')",insert
"def find_all(a_str, sub): start = 0 while true: st",yield
"[1,2,3,4,5,6,7,8,9]",list
class game(ndb.model): gameid = ndb.integerpropert,google-app-engine
import http.serverimport socketserverport = 8000cl,basehttprequesthandler
--action=,argparse
request.session['mykey']= 33,django
import imageim = image.open('tweeter.png')layer = ,image
[project name][scenario name][option 1][option 2].,winapi
"like = db.table( 'like', db.column('uid', db.integ",orm
cv_upload = driver.find_element_by_id('id_cv_uploa,selenium
valuelist,unicode
docopt,docopt
c++,c++
"df = pd.dataframe(np.random.randn(8,8), columns=li",pandas
&gt;&gt;&gt; help(super),inheritance
ggplot,matplotlib
gstate = pygilstate_ensure();// do some python api,c
&gt;&gt;&gt; import fuzzy&gt;&gt;&gt; s = fuzzy.so,string
#!/bin/bash,linux
"from contextlib import nested, contextmanager@cont",deprecated
(defn prime? [n] (let [r (int (math/sqrt n))] (loo,performance
frozenset,hash
obj = objectres.query.all()return str(obj[-1].id),sqlalchemy
latex was not able to process the following string,matplotlib
$ cksum ./temp.bin1605138151 712368 ./temp.bin,unix
matplotlib,matplotlib
stuff/ __init__.py mylib.py foo/ __init__.py main.,import
"some_id = 1cursor.execute(' select ""indicator"".""in",sql
isatty(),stdin
"definition = {'apple': , 'ball': }",dictionary
pts,numpy
# generic node classclass node(abc): @abstractmeth,inheritance
python manage.py sql polls,django
"from pil import image, imagedrawimport colorsysdef",python-imaging-library
one two three four five0 1 2 3 4 51 1 1 1 1 1,pandas
"maths_operator = ""==""if ""test"" maths_operator ""tes",if-statement
from myproject.model.meta import sessionfrom sqlal,serialization
print 'temp1'print 'temp2',newline
use,numpy
"import numpy as np, cvvis = np.zeros((384, 836), n",image-processing
"&lt;html&gt; &lt;body&gt; &lt;a href=""/1234.html""&",html
"reactor.addsystemeventtrigger('before', 'shutdown'",twisted
sqlite3,sqlite
"def foo(a, b, c):",arguments
traceback.format_exc(),object
test_,automated-tests
error: duplicate key value violates unique constra,sql
from blog.models import postfrom django.db.models ,django
"for item in item_list: e, new = entry.objects.get_",django
"x=[1,2,20,6,210]print x # [1, 2, 20, 6, 210] # the",set
./blaa.py --xlim -2.e-3 1e4 ,argparse
"for a in b: if criteria in list1: print ""oh no"" #f",loops
users,flask-sqlalchemy
importlib,import
a bdate 2013-05-01 473077 713332013-05-02 35131 62,pandas
"from operator import add, sub, mul, divimport iter",performance
1_xmy09urj4 ,guid
numpy,performance
class hello(object): def __init__(self): passclass,oop
from flask.ext import wtffrom flask.ext.wtf import,flask
gunicorn -b 127.0.0.2:8000 hello:app,nginx
"mydict = {}for i in range (1,10): temp = ""variable",string
dataframe,pandas
aardvarkhellopiper,text-files
gc.collect(),garbage-collection
list.sort(),list
"# -*- coding: utf-8 -*-def mylen(word): """""" &gt;&g",unicode
stdout,unicode
"import matplotlib.pyplot as pltplt.scatter(x,y)plt",matplotlib
"# dedupe.pyimport redef dedupe_whitespace(s,spacec",string
sudo apt-get install gcc,gcc
"select pages.pageid, pages.pagename, counter as te",mysql
class thread(qthread): def get_data(self): qmutexl,multithreading
"&gt;&gt;&gt; timeit.timeit('[random.randint(0,128)",random
x = 1class incr: print(x) x = x + 1 print(x)print(,scope
"from django.conf.urls import patterns, include, ur",django
for field in form: print field.label_tag(attrs{'cl,django
&gt;&gt;&gt; list(os.walk('d:\\utest'))[('d:\\utes,unicode
"class foo(object): def __init__(self,bar) self.bar",list
def login(request): if request.session.has_key('us,django
topic,pip
"subprocess.popen(['bash','history'],shell=true, st",bash
import sysimport fileinputclass vertex(object): de,algorithm
all,logic
__eq__,hash
stations = []for row in data: if row.strip(): stat,loops
"x = numpy.range(0,10)y = numpy.array([5,3,4,2,7,5,",matplotlib
def eand(*args): return [all(tuple) for tuple in z,list
while loop,loops
user1 group1 user2 group1 user3 group2 ... user10 ,scripting
urllib2,debugging
"import repattr = re.compile(???) x = pattr.match(""",regex
$ ls -r ..:package setup.py./package:__init__.py d,distutils
detector = cv2.sift(),opencv
"cat(4, a, b)",numpy
dict,dictionary
series,pandas
grid,button
"myreader = csv.dictreader(open('myfile.csv', newli",iterator
"a = [(""ax"", 1), (""ec"",3), (""bk"", 5)]",list
wsgidaemonprocess app processes=2 threads=3 displa,apache
0 1 2 3 4 5 xlabel,matplotlib
from lru_cache import lru_cacheclass test: @lru_ca,caching
series,pandas
class mytesting(unittest.testcase): def setup(self,django
"""%""",string-formatting
"x = fft(s_[:,2]); pl.plot(abs(x)) pl.show()",numpy
&gt;&gt;&gt; import tkinter&gt;&gt;&gt; t = tkinte,tkinter
pyrun_simplestring(),process
import numpy as npimport numexpr as nea = np.ones(,numpy
import argparseif __name__ == '__main__': parser =,argparse
repo.git/repo.git/folder1/repo.git/folder2/repo.gi,git
2011-01-09 2481.222011-01-10 2481.22,arrays
web,fabric
"[0, 1, [a, b, c], 2, 3, 4]",prettify
"(1,2,3,4)",tuples
datatype(...).itemsize,numpy
0.000 =&gt; 00 =&gt; 0123.45000 =&gt; 123.450000 =,string
cursor.rowcount,sqlalchemy
@route('/&lt;int:id&gt;/&lt;username&gt;/')@route(,redirect
"data = ""data from database""list = []for x in data:",django
import sysimport pypdfdef convertpdf2string(path):,pypdf
.join(iterable),string-concatenation
map(),list
#include &lt;tchar.h&gt;#include &lt;windows.h&gt;,c++
"printf ""%8s %8s %8s\n"", qw(date price ret);",perl
os.system(command),shell
&gt;&gt;&gt; f = {x: (lambda y: x) for x in range(,dictionary
somehow_connect_to_ipython_kernel_instanceinstance,ipython
"seq1 = [1, 2, 3, 4, 6, 7, 8, 9, 10]",list
string,time
import my_cpp_moduletry: my_cpp_module.my_cpp_func,exception
__len__(self),class
$ echo $a5$ python -c 'import os; print os.getenv(,bash
# define v putchar# define print(x) main(){v(4+v(v,ruby-on-rails
import argparseparser = argparse.argumentparser(pr,argparse
activity,django
"job_ids = ['13453', '123', '563456'];memory_used =",string
.fetchone,dictionary
session.query(myobject).filter_by(regex),regex
"def process_file(filename, foo, bar, baz=biz): # d",multiprocessing
"zip(range(len(files)), files, directories)",arrays
"&gt;&gt;&gt; a = [1, 2, 4]&gt;&gt;&gt; print a[1, ",list
"_æê pythonpython 2.7.1 (r271:86832, jun 16 2011, 1",parsing
.4 + .20.6000000000000001.4 + .1 + .10.6,r
"f = sc.textfile(""readme.md"")wc = f.flatmap(lambda ",apache-spark
&lt;sentence&gt;&lt;value&gt;&lt;sentence&gt;&lt;v,statistics
data = []for i in something: newcolumn = getcolumn,arrays
public static string getversion() { pythoninterpre,loops
"&gt;&gt;&gt; my_string = ""why\does\it\happen?""&gt;",string
class a: ...,class
class service: ...... def is_active(self): if date,django
$ pip install git+https://bitbucket.org/datagreed/,pip
"string1 = ""498results should get"" ",string
[x for x in list if r.match(x)],regex
"&lt;object data=""map.svg"" type=""image/svg+xml"" wid",django
from django.db import modelsclass foo(models.model,django
"&gt;&gt;&gt; v1 = apt.version(""1:1.3.10-0.3"")&gt;&",debian
class galleryadminform(forms.modelform): auto_id=f,django
matplotlib,matplotlib
grid,grid
class generalform(forms.form): field1 = forms.inte,html
&lt;p&gt; &lt;ul&gt; &lt;li&gt;foo,html
class urlfetcher(object): @classmethod def fetch_u,google-app-engine
help(&lt;object&gt;),documentation
"""when i see a bird that walks like a duck and swim",design
"import zmq, jsondef main(): context = zmq.context(",ipc
autofunction,documentation-generation
heapq,heap
ssh -l 3306:localhost:22 &lt;hostip&gt;,mysql
set(mylist),list
plot_date(),datetime
memoryerror,memory
"&gt;&gt;&gt; my_function(){'this': 'is', 'a': 'dic",dictionary
ln -s /home/guest/dir1/* /home/guest/dir2/,linux
"[[""a"", ""b""], [""c"", ""d""]]",matrix
"def _setcurrentcurve(self, curve): if curve == ""si",switch-statement
cat data.txt | ./my_script.py,pipe
#!/usr/bin/env pythonimport sockettry:  import thr,linux
py.test,py.test
print &amp;x,memory-address
"['latin small letter a', 'combining acute accent']",unicode
@cachedproperty,caching
../../libraries/boost_1_44_0/boost/python/detail/w,boost
scipy.stats.lognormal.fit,statistics
fields,arrays
"&gt;&gt;&gt; l=[0,1,2,3,4,5]&gt;&gt;&gt; for i in ",slice
&lt;fragment&gt;text1 &lt;a&gt;inner1 &lt;/a&gt;te,xml
na,machine-learning
a=2num=13while num &gt; a : if num%a==0 &amp; a!=n,primes
&gt;&gt; x = series()&gt;&gt; n = 4&gt;&gt; for i ,pandas
"static pyobject *spam_system(pyobject *self, pyobj",python-c-api
get /accounts/oauthgetrequesttoken?scope=https%3a%,google-app-engine
"a, b",math
numpy,arrays
"members = models.manytomanyfield(user,blank=true,n",django
logger = logging.getlogger(__name__),logging
user@computer:~/myproject$ env/bin/python python 2,tkinter
googleauth,google-api
settings.py,django
"import cv2img = cv2.imread(""im1.jpg"")img2 = cv2.cv",image-processing
## ipython with python 2.7.3in [62]: re.findall(r',regex
"['b','b','b','a','a','c','c']",numpy
r = requests.get('http://www.elnorte.ec/')content ,unicode
user = user.objects.all() or user.objects.filter(u,django
np.log(math.factorial(21)),numpy
pip install pandas,ubuntu
maindir../dir..../dira/classa..../dirb/classb,path
"re.sub(""a*((ab)*)b"", r""\1"", ""aabb"")",regex
load scipy.io as spioa = {'b':{'c':{'d': 3}}}# my ,nested
"import timeion()x=linspace(-1,1,51)plot(sin(x))for",matplotlib
abc.seo,namespaces
"doc = parse(url).getroot()links = doc.xpath(""//a[t",regex
virtualenv,ubuntu
error: failed dependencies: /usr/local/bin/python ,rpm
classid dept course number area titlefoo bar foo b,string
"python 2.6.2 (r262, may 15 2009, 10:22:27) [gcc 3.",import
django.core.serializers,django
"&gt;&gt;&gt;jr.operators.values_list('id')[(1,), (",django
"def __cmp__(self, other): """""" compares cards, retu",list
"equal_dicts( {'foo':1, 'bar':2, 'x':55, 'y': 77 },",dictionary
coverage run manage.py runserver ,django
ctrl+c,ide
"import sysdef public(f): """"""use a decorator to avo",coding-style
----------------| long cell |----------------| 1 |,excel
@property,decorator
"pwdinput = input(""now enter a password:"") pwd = ha",unicode
foo = foo1 if bar1 else foo2,if-statement
"&gt;&gt;&gt; mylist = [""foo"", ""bar"", ""baz"", ""qux"",",emacs
"cat file 2&gt;&amp;1 | tee -a logfile #""cat file"" ",subprocess
task,concurrency
"def get_data() data1, error = get_some_data() # fu",api
"&gt;&gt;&gt; a = numpy.arange(12).reshape(4,3)&gt;",numpy
driver.find_element_parent?,selenium
pylab.grid(true),matplotlib
#!/bin/shmypath=${0%/*}libdir=$mypath/modules,path
ffmpeg,logging
import sysimport geventfrom gevent import monkeymo,asynchronous
genfromtxt,import
"dict = {'a': 'one', 'b': 'two', }",django
date = input('date (m/dd/yyyy): '),validation
def my_callback(x): print xscipy.optimize.fmin(fun,generator
"def factorial(num): """"""computes the factorial of n",validation
"[(0, 1), (2, 3), (5, 7), (2, 1)]",tuples
"inputfilehandle = open(inputfilename, 'r')row = 0f",large-files
import sqliteconnection = sqlite.connect('cache.db,sqlite
$file_path$:$line$:$column:.*,regex
in [303]: %prun my_function() 384707 function call,interpreter
!!!!!!!!!!!!!! warning !!!!!!!!!!!!!!no request pl,uwsgi
"&gt;&gt;&gt; mydict = {'first':'uno','second':'dos",sorting
import cgiimport matplotlib.pyplot as pyplotimport,matplotlib
ravel(),arrays
def get_boolean_response(): response = io.prompt(',unit-testing
multiprocessing.process(),debugging
std::unique_ptr&lt;message&gt; somefunc(const std:,c++11
ec2.run_instances,amazon-web-services
"from jinja2 import environment, packageloaderenv =",django
"class node:  rchild,lchild,data = none,none,none d",oop
sys.exit,performance
&lt;class 'pandas.core.frame.dataframe'&gt;int64in,dataframe
"&gt;&gt;&gt; s = ""&lt;html&gt;&lt;head&gt;&lt;titl",regex
"[ { ""key"": ""numberpuzzles1"", ""url"": ""number-puzzle",json
norecursedirs,unit-testing
"app1 &gt;&gt;imports&gt;&gt; app2,app3.methodapp2 ",import
&gt;&gt;&gt; a = 1b = 2c = 3&gt;&gt;&gt; &gt;&gt;&,python-idle
[kelp@web187 goals]$ python2.7 manage.py migrate m,django
match mysql m/^.\0\0\0\n(4\.[-.\w]+)\0...\0/s p/my,regex
"&gt;&gt;&gt; a = np.zeros((10, 2))# a transpose ma",arrays
encoder,json
(def fib-seq (lazy-cat [0 1] (map + fib-seq (rest ,clojure
brie,class
xxxxxxxxxxxxx,keypress
"things = 5print(""you have "" + things + "" things."")",string
virtualenv,installation
"def getdata(filename, criteria): data=[] for crite",csv
"points = []for line in open(""data.txt""): a,b,c = m",parsing
url_for,url-routing
"def a(self, name): print nameusers = {""test"":""127.",loops
valueerror: view function did not return a respons,flask
4.001,floating-point
blockingconnection,rabbitmq
"local(""my_command"")",command-prompt
a == b,iteration
/* comment */,regex
ipdb my_script.py,debugging
"def bisection_search(word, t): high = len(t) low =",binary-search
def form_handle(request): if request.method=='post,django
import numpy as npdrr = abs(np.random.randn(100000,c++
"import time, randomfrom xgoogle.search import goog",screen-scraping
r.text,python-requests
/development/flask_projects/test_email/env/bin/pyt,sockets
"&gt;&gt;&gt; import re&gt;&gt;&gt; a = ""first:seco",regex
1  / \ 2 3 / / \4 5 6,algorithm
doc/txt,setuptools
from __future__ import divisionimport numpy as npi,math
import pylab as pax1 = subplot(121)ax2 = subplot(1,matplotlib
gene_id,json
def index(request): the_user = request.user,django
"infinite = itertools.cycle([[1,2,3]])",iterator
filewrapper,django
unique,django
from django.conf.urls.defaults import *from django,django
python manage.py makemigrations,django
alpha=1,matplotlib
bin,django
csrf token,flask
import timedef create_dict(): # return {x:[x]*125 ,dictionary
from argparse import argumentparserimport pickleim,forms
"{ shorturlslug: 'pbbs', fullurl: 'http://example.c",django
m = cursor_object_results_of_db_queryfor m in m: x,mongodb
"a = numpy.array( [1,2,3,4] )",performance
"from numpy import *vectors = array([arange(10), ar",vector
"class sudoku(dict): columns = [ {(x, y) for y in x",list-comprehension
import bcryptpassword = u'foobar'password_hashed =,bcrypt
"import random, stringdef gen_pass(): foo = random.",linux
# file: mp.pyfrom multiprocessing import processim,windows
(pyenv)$ pip install djangodownloading/unpacking d,django
"$ rake routes users get /users {:controller=&gt;""u",ruby-on-rails
file: trial.py&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;,generator
python setup.py build -c mingw32,mingw32
#!/usr/bin/pythonfrom gevent import monkeymonkey.p,performance
"import matplotlib.pylab as pltfig, ax = plt.subplo",matplotlib
"df = pandas.dataframe({ ""date"":[datetime.date(2012",aggregate
cache_backend = none,django
with,exception
bases = [lambda x: x**i for i in range(3)],lambda
2 &lt;= n &lt;= 10^52 &lt;= k &lt;= n,algorithm
integerfield,django
org.openqa.selenium.dimension,selenium
player.game_objects.extra( select={'week': 'week(`,mysql
raw_input(),time
"class itertest(object): def __init__(self, data): ",list
ratio = 1.2345678minimum = 10def convert(money) re,scripting-language
a,binary
class article(models.model): slug = models.slugfie,django
httpauth.httpbasicauth().login_required(),flask
"f = open('c:\file.doc', ""w"")f.write(text)f.close()",ms-word
__init__,multiple-inheritance
"def genlogspace( array_size, num ): lspace = aroun",numpy
"d = { ""abc"" : [1, 2, 3], ""qwerty"" : [4,5,6] }",file
class myspider(crawlspider): #config stuff goes he,scrapy
os.path.normcase('/'),path-separator
med_func,django
"for x in wowlist: installwow(x, 'installed by me')",iteration
{command-name : command-description},documentation
"a = array([[0, 0, 1], [1, 1, 1], [1, 1, 1], [1, 0,",numpy
$ sudo apt-get install python-setuptools python-py,c
"&gt;&gt;&gt; exec ""print (lambda: a)()"" in dict(a=",closures
python2.6,time
import xml.etree.celementtree as etdef analyze(xml,memory-management
import tkinter as tkfrom tkinter import *from tkin,class
import dbusimport gobjectfrom dbus.mainloop.glib i,linux
"fo = open(filename, 'ru')fl = fo.readlines()",list
"orig = csv.reader(open(""googlel.csv"", ""rb""), delim",csv
"urlpatterns = patterns('', url(r'^passwords/$', pa",django
while true: #do a bunch of serial stuff #if the us,while-loop
"{value: ""82363549923gnyh49c9djl239pjm01223"", id: 1",json
"b = permute(a,order) rearranges the dimensions of ",matlab
...dependency_links = ['http://github.com/robot-re,pip
pygame.image.load('zipfile/img_01'),zipfile
"list=[5,1,2,3,6,0,7,1,4]",algorithm
__len__,boolean
"ax.hist(data,bins=100,range=(minimum,maximum),face",numpy
cv2.surf(),opencv
"traceback (most recent call last): file ""/home/mys",intellij-idea
sql = 'select %s from %s where utctime &gt; %s and,sql
obtaining south from git+git://github.com/lambdafu,pip
aapl goog ibm xom2011-01-10 339.44 614.21 142.78 7,pandas
model,metaclass
easy_install py2app,setuptools
"1. read csv file like the followingvar1, var2, var",r
latest_entry_list = entry.objects.filter(is_publis,database
numpy.correlate,numpy
from tkinter import *class application(): def __in,tkinter
django_list = list(some_object.objects.all()),django
"from itertools import izip_longestdef grouper(n, i",list
"l = [('a', 1), ('b', 2), ('c', 3)]for num, elt in ",list
ipdb.set_trace(),debugging
'avbin is required to decode compressed media')pyg,mp3
"{a, b}",regex
series,io
from pil import imageimg = image.open(basefile)lay,png
# fetch.pyfrom cstringio import stringioimport req,tar
"class myclass:def __init__(self, foo): if foo != 1",unit-testing
float,string
pylint,string
a,ruby
buff = stringio.stringio() #buffer where image is ,string
means = df.testcolumn.groupby(df.testcategory).mea,pandas
errors = []for item in data: try: process(item) ex,exception
fft,numpy
"custom_dict = {'march':0, 'april':1, 'dec':3} ",pandas
%(asctime)s,logging
make_null_session(),flask
"mydict = {'funclist1': [foo(),bar(),goo()], 'funcl",dictionary
22:46:15 web.1 | traceback (most recent call last),django
some-library,git
*,function
"['a',1] ['a',2] ['a',3] ['b',1] ['b',2] ['b',3]",sorting
"(1, 2, 3, 4)",csv
def longest_repetition(l): if not l: return none m,language-agnostic
help(),ruby
class product(models.model): name = models.charfie,django
dataframe(),numpy
"d = {'a': 3, 'b': 2, 'c': 3, 'd': 4}",dictionary
"a = np.array([2, 3, -1, -4, 3])",numpy
models.py,django
result = database.query('complicated sql with an i,unit-testing
for x in texts_list: for l in x: if l in term_appe,list
int.numerator,math
except,exception
application/json,json
from mock import mockimport __builtin____builtin__,unit-testing
os.path.exists(),race-condition
some_cell.font.color.rgb,openpyxl
__init__(),object
"cursor.execute(""create table starframe""+self.name+",database
"{ ""image"": [""no file was submitted. check the enco",django
"arr = [[]]arr[0].append(""aa1"")arr[0].append(""aa2"")",multidimensional-array
subprocess.popen,multithreading
"ppid=pipeexe.pidsignal.signal(signal.sigalrm, stop",timeout
join(),multiprocessing
pip,package
import stringimport gzipimport codecsf = gzip.open,file-io
"d = [(1,2), (3,4)]for k,v in d: print ""%s - %s"" % ",dictionary
"query = ""select *, ((acos(sin(%s * pi() / 180) * s",django
next(),iterator
python setup.py install,cython
"from xml.etree.elementtree import element, tostrin",xml
"""""""empty messagerevision id: 384cfaaaa0berevises: ",flask
"for i in range (0,10): if i==5: i+=3 print i",for-loop
2if-1e1else 1,pypy
x*x,algorithm
__int__,casting
everything is an object,operator-keyword
&gt;&gt;&gt; import inspect&gt;&gt;&gt; inspect.ge,namespaces
"source = pandas.read_table(inputfile, index_col=0)",pandas
"tree.write(filename, ""utf-8"") ",xml
keys(),dictionary
integer1 = 10integer2 = 5sign = ''total = integer1,string-formatting
import heapq...pq = a_list[:]heapq.heapify(pq)whil,exception
cat file.log | tail -1,pipe
__init__,oop
#!/usr/bin/pythonimport matplotlib.pyplot as pltra,matplotlib
"&gt;&gt;&gt; import socket, ssl, sys&gt;&gt;&gt; s",windows
object,class
python setup.py test,testing
difflib,match
##################################### method 1impo,http
urls,django
def aa(): print aa.__name__ print aa.__hash__ # ot,function
for b in bool_list: b = false,coding-style
"data = sorted(data, key=lambda (point, cluster):cl",group-by
"class foo1(dict): def __getattr__(self, key): retu",getattr
"""python manage.py schemamigration myapp --initial""",django
import pymongofrom pymongo import mongoclientfrom ,mongodb
"""u.s. adviser&amp;#8217;s blunt memo on iraq: time",unicode
aws lambda,amazon-web-services
widget,inheritance
atexit,multiprocessing
"my_string = my_string.replace('a', '1')my_string =",string
set syntax=python,vim
#NAME?,security
tsv,pandas
python -c '&lt;code&gt;',perl
# module mylibrary class wrongsummand(exception): ,exception
"def getpage(self, items,iteration): http = asyncht",asynchronous
"windowsurface = pygame.display.set_mode((1000, 750",pygame
"def save(self): """"""use a custom save to end date a",django
from sqlalchemy.ext.declarative import declarative,sqlalchemy
numpy.gradient(),numpy
"class a(object): def test(self): print ""here""",metaprogramming
dict,extend
"mylist = [20, 30, 25, 20]",arrays
image,mysql
import refrom itertools import groupbydef viterbi_,nlp
1.0 == 1.0 -&gt; false,floating-point
class carsearchform(forms.form):  # lots of fields,django
balance - strength,string
rand.randint,random
"ssh user@host ""nohup sleep 100 &gt;&gt; /tmp/xxx 2",ssh
app/ mymodule.py inner_folder/ myscript.py,python-import
timeit,networking
background-image: url('http://static.example.com/e,css
"[12,4,15,11]",list
"import smtplibimport sysimport osserver = ""localho",smtp
if key in data_dict.keys(): add valueselse: data_d,search
"a = ['a', 'b', 'c']a.extend(['d']*3)",list
@csrf_exempt,django
"l1 = [[1, 2], [3, 4], [5, 6]]l2 =[[a, b], [c, d], ",list
logger = logging.getlogger()logger.setlevel(loggin,logging
def f(): return 3 yield 2x = f()print(x.__next__(),generator
"array_alpha = [ 133, 53, 234, 241 ]",string
"&gt;&gt;&gt; base64.b64encode(combined.digest(), a",base64
"&gt;&gt;&gt; student_data(""brian"",32,""1234567"",fal",string
from django.core.cache import cachecache.clear(),django
python manage.py shell,django
'\',regex
send_from_directory,http-headers
&gt;&gt;&gt; import collections&gt;&gt;&gt; d = co,slice
python,multithreading
class modeltests(testcase): def test_method(self):,django
|base_url|/path.. |base_url| replace:: http://loca,documentation
urlparse,urllib
"import numpy as npdt = np.dtype([('tuple', (int, 2",arrays
"re.sub('(\_a)?\.[^\.]*$' , '_suff.',""long.file.nam",regex
/usr/lib64/pypy-1.5/site-packages/,development-environment
4| /off to 40963| /2| /1|/_ _ _ _ _ _ _ _ _  1 2 3,arrays
"xvfb = popen('xvfb :99 -nolisten tcp', shell=true)",linux
"&lt;script type=""text/javascript"" src=""http://api.",validation
while 1: do_something(),while-loop
"def insert(self, key, root=none): '''inserts a nod",recursion
changed,django
from matplotlib import pylab as plimport numpy as ,matplotlib
dynamicclassattribute,class
"w = csv.writer(open(fn,'wb'),dialect='excel')#w.wr",mysql
nltk.pos_tag,nltk
"code = """"""i = [0,1,2]for j in i : print j""""""result",printing
if __name__ == '__main__',ipython
arraylist = []for x in allvalues: result = model(x,object
"&gt;&gt;&gt; dt.rfc822()'sun, 09 mar 1997 13:45:00",rfc822
from timeit import timerdint = dict()dstr = dict(),dictionary
numpy.genfromtxt,numpy
"# directorys == {'login': &lt;object at ...&gt;, '",loops
__init__(),initialization
from pep8checker import pep8checkerargs = vim.eval,vim
class queue.priorityqueue(maxsize=0),queue
m x n,arrays
import pygamepygame.mixer.init()pygame.mixer.music,audio
class mymodel(models.model): # my pk is an auto-in,django
deadlineexceedederror: deadline exceeded while wai,google-app-engine
alist,list
"from tkinter import *a=tk()b=canvas(a)b.place(x=0,",image
pass,language-comparisons
lower_case_with_underscores,naming-conventions
pytuple_maxsavesize = 20,data-structures
"{% for (key_o, value_o) in f_values.items() %} &lt",django
"""it actually happened when it acted out of turn.""",regex
import unittestimport numpyfrom somewhere import t,unit-testing
"""create user %s password %s"", (user, pw)",postgresql
class verifypan(testabsolutemove): def runtest(sel,testing
"from bottle import app, run, route, response@route",http
myemail%40gmail.com -&gt; myemail@gmail.com,http
find,find
class student(models.model): username = models.cha,django
"[(key1, value1), (key2, value2), ...]",list
class baseclass: def __init__(self): print 'the ba,oop
auth_user_model,django
lambda,sorting
"from django.db import models, migrationsimporterro",django
"from numpy import var, covx = range(10)y = var(x)z",numpy
def qs_ancestors(queryset): if isinstance(queryset,django
nonzero(a),numpy
cache.all(),django
"import ctypes, subprocesslibc = ctypes.cdll('/lib/",subprocess
"library(httr)set_cookies(.cookies = c(a = ""1"", b =",r
pip,osx
import numpyfrom mpl_toolkits.mplot3d import axes3,numpy
raise,exception
"import threadingdef hello(arg, kargs): print argt ",timer
str.find(agcctcccatgattgaacagatcat),string
"dict = {'abc':'abc','def':{'ghi':'ghi','jkl':'jkl'",dictionary
&gt;&gt;&gt; from selenium import webdriver&gt;&gt,selenium
"my_obj.short = ""hello""my_obj.long = ""line1\nline2\",yaml
/applications/xcode.app/contents/developer/platfor,xcode
import matplotlib.pyplot as pltfig = plt.figure()a,matplotlib
&gt;&gt; cat requirements.txtcython==0.15.1numpy==,package
'title\n',string
"df = pandas.dataframe( {'value_a': values_a, 'valu",pandas
contact_question_create,django
class homepage(object): def clickcalendarlink(self,pageobjects
"import avahiimport dbus__all__ = [""zeroconfservice",avahi
import gflagsimport httplib2from apiclient.discove,google-calendar
tkinter,tkinter
obtaining some-package from git+git://github.com/s,git
savefig,matplotlib
for model_instance in somemodel.objects.all(): do_,django
def f(): print __name__,module
"&lt;a href=""javascript:__dopostback('ctl00$maincon",screen-scraping
"import zipfilewith zipfile.zipfile(""parent.zip"", """,file
i = 1while i &lt;= linenumber: print original.read,file
"pdfimage = filesaver()pdfimage.myfile.save('new', ",django
"f = open('out.txt', 'a') # or 'w'?f.write(""string ",file-io
import numpy as np# some codemmatrix = np.zeros(nr,matrix
"# if the `factor` decimal is given, compute new pr",decimal
http://www.decalage.info/python/html,html
def main(): parser = optparse.optionparser(descrip,unit-testing
# play data ...import stringidx = [i for i in stri,pandas
"numpy.xxx([4,3,2, 6] = 4 since max = 6, min = 2, 6",numpy
render_to_response,django
"data = [ { 'a':'a', 'b':(2, 4), 'c':3.0 }, { 'a':'",mysql
"""plot '%s' with lines, '%s' with points;"" % (eout,",gnuplot
$ sudo pip install pyopenssl,ssl
webapp,api
"db = mysqldb.connection(...)querystring = ""insert ",mysql
/path/ to/ projects/ cust1/ proj1/ pack1/ __init__,path
"""{arg1} {arg2}"".format (10, 20)",string
matplotlib,numpy
secret_key,django
"my_array = []for n in range(1000): # do operation,",numpy
python hello.py,command-line
import numpy as npimport matplotlib.pyplot as plti,numpy
def make_incrementer(start): def closure(): # i kn,closures
import sysimport timeimport tracebackclass box(obj,memory
for line in file: value = line[a:b] cursor = colle,mongodb
flask.run,flask
sqlite3,sqlite
import imaplibmail = imaplib.imap4_ssl('imap.gmail,gmail
*args,conventions
import socketserverimport structclass mytcphandler,sockets
#!/usr/bin/pythonimport timefrom watchdog.observer,file
invalidoperationexception,exception
mkvirtualenv --no-site-packages,virtualenv
--- &amp;id001 !ruby/object:puppet::resource::cata,yaml
operationalerror at /snippets/no such column: snip,django
"for fileentry in files: filename = basepath + ""/"" ",apache-spark
"'-a', '-b', '-c', '-d'",argparse
"clamp(myvalue, min, max)",math
"fig.gca().set_xlabel(""$wavelength\, (angstrom)$"")f",matplotlib
numpy.linalg.eig(a),numpy
#!/usr/bin/pythonimport sysimport numpy as npimpor,numpy
"def ddply(rows, *cols, op=lambda group_rows: group",r
python myprogram.py,linux
a_trimmed = a[trim_left:-trim_right],numpy
read_csv,csv
"code = b""\x55\x89\xe5\x5d\xc3""",linux
&gt;&gt;&gt; [] is []false,list
&gt;&gt;&gt; import tkinter&gt;&gt;&gt; root = tki,tkinter
from pylab import *import cv2import urlliburllib.u,opencv
unresolved import xxx ; found at yyy,eclipse
from nltk.corpus import stopwordstext = 'hello bye,regex
import timeitimport numpy as npimport numpy.ma as ,numpy
__init__,constructor
"def my_function(a, b): print locals().values()&gt;",list-comprehension
vi{,vim
"from bs4 import beautifulsoupdata = ""&lt;test&gt;t",import
"import registration(r'^accounts/', include('regist",django
re,regex
"def hi():  print 'hi'def loop(f, n): #f repeats n ",nonetype
os.open,mmap
"vals = [true, false, true, true, true, false]# and",list
compress,django
"class singleton(object): """""" singleton class by du",design-patterns
tcsetattr,file-io
"s = re.sub(r'(?i)user [_0-9a-z]+ is ', r""user .. i",regex
"import pypdfdef getpdfcontent(path): content = """" ",pdf
globals()[my_class.__name__] = my_class,metaprogramming
urls.py,django
numpy.array,arrays
"s = ""abcdefgh""",string
"def path_and_rename(path): def wrapper(instance, f",django
device = device()modem = modem()device.connect(mod,linux
"import csvimport urllib.requesturl = ""ftp://ftp.nc",url
"traceback (most recent call last): file ""&lt;conso",ssl
def nesting(): count = 0 def nested(): count += 1 ,global-variables
__init__.py,pickle
&gt;&gt;&gt; 0.1*0.10.010000000000000002,floating-point
all(),linq
try: u = user.objects.get(email__iexact=useremail),django
c:\pydev\cx_oracle-5.0.1&gt;c:\python26\python set,cx-oracle
class serveradapter(object):quiet = falsedef __ini,pragma
flask,flask
wrapper.py,ctypes
#!/usr/bin/env python# *-* coding: utf8 *-*data = ,loops
python [-m] tst,module
(saassenv)miki725mac:saassenv miki725$ pythonpytho,install
max(list),list
"wx.evt_key_down(self, self.onkeydown)",user-interface
&gt;&gt;&gt; import os&gt;&gt;&gt; os.chdir('c:\us,python-import
pip install,built-in
test_seaborn.py,pandas
# lexical structure definitionifs = keyword('if')e,pyparsing
"example.com/events/ &lt;a href=""http://example.com",html
"render_template(""foo.html"", messages={'main':'hell",flask
(myvenv)me:src orokusaki$ python manage.py shell -,django
matplotlib,visualization
"cout &lt;&lt; 1 &lt;&lt; ""!"" &lt;&lt; endl; ",boost-python
"warning : when opening https urls, it is not attem",ssl
"one,two,threea,1,oneb,2,two,3,threed,4,nane,5,five",csv
"c = tweepy.cursor(api.followers_ids, id = 'mcdonal",twitter
.py,runtime
"for k,v in request.post: print k,v",django
#NAME?,ruby
import generator._def yield_values(file:string) = ,scala
a) lorem ipsum dolor sit ametb) lorem foo ipsum do,diff
from common_config import *,documentation
from sympy import *,scripting
readline(),file-io
&gt;&gt; python test01.py -t a a1 -v 61,argparse
$n,regex
from module import *,python-import
fileinput,file-io
if spam: # do stuff. return eggselse: # maybe do o,coding-style
a b c 0 ea 0 c 0 0a 0 c d ea 0 c 0 e,machine-learning
firefox http://somewebsite,firefox
class myrequesthandler(basehttpserver.basehttprequ,webserver
open(),file
"(1200, 2e6)",performance
numpy.where((my_array &gt; a) and (my_array &lt; b,numpy
dataframe,pandas
"""""""models.py""""""class projects(base): __tablename__",sqlalchemy
program/ program/ data.py tests/ data_test.py,unit-testing
"function example(x) { ""here is a short doc what i ",comments
typeerror: objects of type ``csr_matrix`` are not ,numpy
&lt;body&gt;&lt;h1&gt;a title&lt;/h1&gt;&lt;p&gt;s,parsing
def afunc(some_param_name): assert isinstance(some,assert
struct,performance
"label, content = myfunc()[2]",eclipse
from collections import ordereddict# obviously wro,dictionary
"class user(base): """""" holds user info """""" __tablen",sqlalchemy
"x = pd.dataframe({'cat':['a','a','b'], 'val':[10,2",pandas
"import pymysqlconn = pymysql.connect(db='base', us",mysql
skip = int(round(1.0 * total / surplus)),rounding
"sum [ x | x &lt;- [1..999], mod x 3 == 0 || mod x ",ruby
heroku run pythonnltk.download() wordnetpip instal,django
"import matplotlib.pyplot as plt radius = [1.0, 2.0",virtualenv
process state command ------- ----- ------- ,django
"def setup(self): """""" initializes the test client a",django
"import pandasdf1 = pandas.dataframe(index = [1,2,3",pandas
class cperson;//forward declareclass croom{ std::s,module
oowriter,pdf
zipfile,compression
how to remove convexity defects in sudoku square,opencv
write,windows
created_time,django
importerror: no module named mysql.connector,mysql
class signaller(qtcore.qobject) : my_signal = qtco,multithreading
re.sub(),regex
import numpy as npfrom convex import crwlasso_cds ,multiprocessing
as.factor(),pandas
import osimport sysif os.fork(): print 'content-ty,apache
url,django
&gt;&gt;&gt; x = 5&gt;&gt;&gt; bin(x)0b101,binary
from threading import threadimport timea = 0 #glob,multithreading
url='http://114.80.235.200/f4v/94/163005294.h264_1,shell
"import codecsfor i in codecs.open('unicodefile','r",performance
sudo /usr/sbin/postmap /etc/postfix/virtual_alias ,linux
$ python setup.py sdistrunning sdistrunning checkr,unix
"file ""/usr/local/lib/python2.6/dist-packages/djang",django
"project a classes ""subsystem1"" class1 class2 subsy",organization
broker_url,django
"default_modules = ['os', 're', 'sys']_g = {}for m ",eof
"class num: def __init__(self,num): self.n1 = numcl",inheritance
forms.modelchoicefield,django
"['a', 'b', 'c', 'd']",generator
"from datetime import datedays = [date(2008,1,1), d",signal-processing
ssl-server.py,cryptography
"a = np.array([3, 2, 0, 1])",algorithm
"dbb = mysqldb.connect(host=""localhost"",  user=""use",mysql
class callme: # class def app(): # method one ... ,oop
"// valid json{""foo"":""bar""}",json
"df = pd.dataframe({'col1' : ['bob', 'joe', 'bill',",pandas
root folder| -- api |-- view.py |-- url.py |-- mod,django
a = dict()a['cat'] = 1a['fish'] = 1a['dog'] = 2 # ,dictionary
"url(r'^polls/(?p&lt;poll_id&gt;\d+)/$', 'polls.vie",regex
&lt;html&gt; &lt;head&gt; &lt;title&gt;{% block ti,django
"file ""program.py"", line 19, in getname name = ""b"" ",string
"my_dictionary = {""058498"":""table"", ""064165"":""pen"",",file
import socksimport socketsocks.setdefaultproxy(soc,tor
"dbname = ""test""dbip = ""localhost""dbuser = ""django""",mysql
"d= {'a':2,'b':5,'c':3}# 1st wayprint [k for k in d",dictionary
"def find_needle(n,h): count = 0 words = h.split("" ",dynamic-programming
unapi,http-headers
[spatel@~ dev1]$ /home/spatel/python-2.7.3/bin/pyt,linux
src/ module1.py module2.py test_module1.py test_mo,unit-testing
pip install sqlite,sqlite3
import csvimport mysqldbmydb = mysqldb.connect(hos,mysql
# region celery settingscelery_concurrency = 1cele,django
class incidentupdateview(updateview): form_class =,django
ps -ef,pipe
"a = {'a':10, 'b':843, 'c': 39,.....}",dictionary
"l = [1, 2, 45, 55, 5, 4, 4, 4, 4, 4, 4, 5456, 56, ",list
javascript,html
import matplotlib.pyplot as pltimport numpya1_labe,numpy
import serialimport timeser = serial.serial('com4',serial-port
"from time import strftimeprint int(strftime(""%y-%m",time
remove,matplotlib
scipy.optimize.curve_fit,numpy
"(a*b).sum()/a.sum()dot(a, b)/a.sum()",numpy
"array([[1, 1], [0, 1]])",arrays
"def proof_of_work(b, nbytes): nonce = 0 # while th",cryptography
#!/usr/bin/env pythonfrom sys import stdindef main,performance
class bar(object): @staticmethod def bar(): # code,reflection
from scipy.cluster.hierarchy import linkage# dist_,numpy
"jquery.ajax({ type: ""post"", datatype: ""json"", data",ajax
response = urllib2.urlopen(baseurl + filename)comp,file
coord,typechecking
user_data = {}if (request.args.get('title')) : use,unicode
24.7 25.7 30.6 47.5 62.9 68.5 73.7 67.9 61.1 48.5 ,numbers
for i in lseparatedorblist: for j in lseparatedorb,list
&lt;data&gt; &lt;products&gt; &lt;color&gt;fum†å&l,unicode
get_result(),google-app-engine
f,function
"strace iptables -l inputsocket(pf_inet, sock_raw, ",linux
hg move,mercurial
"string = ""a=0 b=1 c=3""",string
unicode_glyphs = ''.join( unichr(char) for char in,unicode
class statsdclient(abstractstatsdclient): def __in,udp
"cmap = matplotlib.colors.listedcolormap([""red"",""vi",matplotlib
__code__,internals
x86_64,matplotlib
for key in kwargs: if key == 'log': self.log = kwa,kwargs
from mongoengine import *class page(document): pas,mongodb
(pdb) pp total_rows columnid respondentcount0 -1 2,numpy
python c:\python32\tools\scripts\2to3.py neo4j.py,2to3
for g in request.user.groups: l.append(g.name),django
"involved(courses, person)",dictionary
"import redisimport timedef load_file(fp, fpkey, r,",performance
( (a ( ( c ) b ) ) ( d ) e ),regex
heaviside,matlab
__author__ = 'karan'import nltkimport reimport sys,unicode
mwe,matplotlib
"gql = ""select * from user where age &gt;= 18""db.gq",google-app-engine
logging,logging
"m = [[1,2,3], [4,5,6], [7,8,9]]g = (sum(row) for r",sum
socket.error: [errno 48] address already in use,sockets
"buf = open('test.txt','r').readlines()...",file-io
# an example compound classclass foo: def __init__,c++
max_items = 10,integer
fig.savefig(),html
"import osos.path.join(os.path.dirname(__file__), '",module
autoparts(),return
"style1 = xlwt.easyxf('pattern: pattern solid, fore",excel
sorted(list(entries))[0],queue
testapp/_”“_”—_”— __init__.py_”“_”—_”— api_”ä____ ,import
#!/usr/bin/pythonimport threadingimport queueimpor,osx
"&lt;form action="""" method=post&gt; &lt;table&gt; &",flask
"plot(x,y)",numpy
autoincrement,sqlalchemy
while true: row = cursor.fetchone() if not row: br,mysql
"&gt;&gt;&gt; s = ""i like peas on 2011-04-23, and i",parsing
format(),string
w,windows
class myform(forms.modelform): extra_field = forms,django
import csvf = 'testfile.csv'd = '\t'reader = csv.r,csv
"import locale locale.setlocale(locale.lc_all, 'pl_",unicode
"rdd.map(lambda x:(x[1],x[0])).sortbykey(false).map",apache-spark
shell = client.invoke_shell()shell.send(chr(10))ti,paramiko
"#!/usr/bin/pythonclass test: def __init__(self, in",properties
listview,django
none,replace
from sklearn.linear_model import elasticnetalpha =,statistics
import matplotlib.pyplot as pltfig = plt.figure()a,matplotlib
x=5,ide
printf,debugging
#NAME?,argparse
class groupmenuorderform(forms.form): food_list = ,django
std::vector&lt;int&gt; get_match_stats();,stl
re.match(),regex
psdata = []nsdata = []msdata = []ckdata = []madata,list
png,pdf
media_url,django
__init__,class
raw_input,keyboard-events
class activity(models.model): name = models.charfi,django
"import scipy # happens with several other modules,",import
p = path.split('/')counter = 0while true: if p[cou,string
"import pandas, numpy as npdfrm = pandas.dataframe(",group-by
2**s * d,bit-manipulation
"foobar = ""foo""def func(var): print var.origname",function
[working directory][files being opened][completed ,return
@staticmethod,decorator
class parent(object): def _protected(self): pass d,inheritance
"(masked_array(data = [1472.8855375088663], mask = ",math
paste &lt;(seq 20000000) &lt;(seq 2 20000001) &gt;,performance
"def __init__(self, parent): wx.panel.__init__(self",matplotlib
links = browser.find_elements_by_partial_link_text,selenium
user.query.all_active(),sqlalchemy
import subprocess process = subprocess.popen('plin,subprocess
clear allclose allpython = '/usr/local/bin/python',matlab
an,algorithm
"subprocess.popen(['..'], ..., timeout=20)",timeout
"file_status_choices = ( ('p', 'pending'), ('a', 'a",django
import pygameimport multiprocessingpygame.init()de,osx
tags,django
ids = []with mongoclient(mongodb_host) as connecti,mongodb
__main__,django
"dictionary = {  'c1' : [10,20,30]  'c2' : [20,30,4",list
list,performance
| language | code | result ||-----------+---------,ruby
hello world!,hex
&gt;&gt;&gt; l = []&gt;&gt;&gt; for r in range(10),for-loop
argparse,argparse
"query = ""string that needs to be encoded""params = ",json
mock,unit-testing
unicodedecodeerror,email
"export path=""/directories/anaconda/bin:$path",virtualenv
"engine = sqlalchemy.create_engine(url, ehco=false)",sql
arange,numpy
"if name[:2] in [""i_"", ""c_"", ""m_"", ""l_"", ""d_"", ""t_""",string
output.write(input.read()),io
from pylab import *import scipy.sparse as spdef no,numpy
f,itertools
"def create_table(): cursor.execute ("""""" create tab",mysql
dbao.getconnection(),syntax
currency,django
originalstring = 'fksf var:asfkj;'pattern = '.*?va,regex
data = json.dumps(data),django
scipy.interpolate.linearndinterpolator,numpy
"&lt;form action=""/testapp1/contact/"" method=""post""",django
@permission_classes,django
"{ id = ""my_id1"" tags: [tag1, tag2, tag3], category",mongodb
from nose.tools import *def setup(): foo = 10def t,nose
gevent.socket,sockets
checking for glib - version &gt;= 2.24.0... yes (v,pygobject
#xy is the 2d array.#a is one of the 1d arrays.#po,numpy
&gt;&gt;&gt; def returns_list_of_one(a):... return,function
elementtree.elementtree,xml
nosetests,unit-testing
import paramikossh = paramiko.sshclient()ssh.conne,osx
"interpreter-&gt;run(""myscript"", some_object);",c
class test: def __init__(self): pass def dosomethi,static-methods
import code# do something herevars = globals()vars,shell
"f = open(""datafile.dat"")",iterator
nstr = '000123000123',string
.. automodule:: modname :members:,documentation
"type(obj).__dict__[""prop_name""].fset is not none",properties
bytes,memory
pickle,serialization
/applications/firefox.app/contents/macos/firefox-b,osx
"$http({  method: 'post',  url: '/url/',  data: 'te",django
class foo(object): a = none b = none c = none def ,constructor
import socketsocket.gethostbyname(socket.gethostna,unix
limit stacksize unlimited,stack
accounts/profile/,django
"file ""/system/library/frameworks/python.framework/",django
"args=[]for i,(x,y) in enumerate(data): args.extend",plot
max,matplotlib
"x,y = np.random.multivariate_normal(mean,cov,5000)",numpy
iterable,documentation
pip install mysql-python,pip
"or([true, true, false])",list
engine = create_engine('sqlite:///' + databasepath,sqlite
"x = np.asarray([x_i*np.random.randint(8,12)/10 for",numpy
"&lt;a class=""lnk"" rel=""nofollow"" href=""/login.jsp?",selenium
from xml.dom.minidom import *def make_xml(): doc =,xml
from suds.client import clientclient = client('htt,soap
conda skeleton pypi,anaconda
class artefactform(modelform): material = charfiel,django
match(),regex
def func1():return 1def func2():return 2def func3(,list
class player {public: void entity(entity* entity);,properties
#!/usr/bin/python# import modules used here -- sys,boilerplate
__getattribute__,descriptor
# main_script.py p1 = subprocess.popen(['python sc,subprocess
class link(models.model): title = models.charfield,django
a = 'abc'b = 1print(a + b),string
"""{0} {1} {1}"" % (""foo"", ""bar"")",string-formatting
class po(models.model) qty = models.integerfield(n,django
"import mysqldbconn = mysqldb.connect( db=""test"", u",mysql
sent_tokenize(),regex
class myclass: def __init__(self): self.tempfolder,destructor
for x in range(elevation.shape[0]): for y in range,performance
m = queue.get()queue.task_done()&lt;rest of the pr,queue
from lxml import etreefor customer in etree.parse(,lxml
stop,language-design
typeerror: can't use a string pattern on a bytes-l,regex
gcc -dhave_config_h -i. -i../.. -i/usr/include/pyt,gcc
gcc -pthread -shared -l/system/lib64 -l/system/lib,static
"suds.typenotfound: type not found: '(schema, http:",soap
dns.resolver,dns
"list = [ { 'a':'1' , 'b':'2' , 'c':'3' }, { 'd':'4",string
source venv/bin/activate,virtualenv
"&gt;&gt;&gt; numbers = [20,67,3,2.6,7,74,2.8,90.8,",performance
"[ 9 , 6 , 8 , 7 ]",algorithm
"from timeit import timert1 = timer(""test1()"", ""fro",performance
"def sublist(lst, n): sub=[] ; result=[] for i in l",list
"&lt;html&gt;{% include ""content.html"" %}&lt;/html&",pyramid
cprofile,performance
"for k, v in dict.iteritems(): if type(v) is dict: ",dictionary
from django.db import modelsclass something(models,django
"a = np.array([1,2,3,4,5,6,7])b = np.array([2,4,6])",numpy
request.post['data'],django
property,properties
from gevent import monkeymonkey.patch_all(),multiprocessing
port = 8001handler = simplehttpserver.simplehttpre,unit-testing
unicodedecodeerror: 'ascii' codec can't decode byt,string
json.loads(json.dumps(tuple)),json
"quotes = [(1, 5, 6, 7, 4), (2, 6, 9, 9, 6), (3, 9,",matplotlib
import rpi.gpio as gpioimport timepinnum = 4gpio.s,raspberry-pi
re,regex
"li = [[0,1,2],[3,4,5],[6,7,8]]",list-comprehension
tkinter,tkinter
ld_library_path,shared-libraries
hold on,matlab
&gt;&gt;&gt; import inspect&gt;&gt;&gt; print(insp,inspect
import datetimeimport pandas as pdimport numpy as ,numpy
urls.py,django
class blogpost(ndb.model): s1 = ndb.stringproperty,google-app-engine
"hello = ['999 ',' 666 ']k = []for i in hello: str(",list
#! /usr/bin/perlwhile ($line = &lt;&gt;){ if (($li,perl
"typ, msg_data = imap_conn.fetch(uid, '(rfc822)')",gmail
"{a,b,c,d}",factorial
"&gt;&gt;&gt; tuple = (500000, 500, 5)... print ""fi",string
"a=np.array([1, 2, np.nan])b=np.array([1, 2, np.nan",numpy
hcluster,machine-learning
"class node(object): def __init__(self, element): s",class
"class vector_clock: def __init__(self): """""" initia",sockets
\iffalse,ipython
i = 0 while i &lt; self.count(): item = self.item(,pyqt4
"traceback (most recent call last): file ""test.py"",",sqlite3
manipulate[],wolfram-mathematica
"from tkinter import *root = tk()#some buttons, wid",windows-7
pip,pip
# everything here in main.pyclass mainpage(webapp.,google-app-engine
"read_excel('path_to_file.xls', 'sheet1', index_col",pandas
class backgroundtask(processing.process): def __in,pyqt
"$ echo ""abc def"" | perl -ne 'my @letters = m/(.)/g",perl
http://example.com/image.jpg,download
"&lt;style name=""admin-5678""&gt; &lt;rule&gt; &lt;f",xml
np.hstack,vector
include,jinja2
ctypes,winapi
"language: pythonpython: - ""2.7""# command to instal",scipy
h5py,hdf5
http://1.my-app-name.appspot.com,google-app-engine
"[(1,1),(2,2),(3,3)] ",string
"from ""models.admin"" import *",import
argv,command-line
py,git
class a(object): def get_class(self): return self.,oop
dataframe,terminal
from sqlalchemy.orm.collections import column_mapp,sqlalchemy
u+0088 c2 88 &lt;control&gt;,string
pdb.set_trace(),django
python setup.py install,mechanize
1.0101E+43,point-of-sale
scipy.ndimage.map_coordinates,numpy
"import numpya1 = numpy.array([(1, 2), (3, 4), (5, ",numpy
"l = [a,b,c,...,n]",templates
import pandas as pdfrom stringio import stringioor,pandas
setup.py sdist,git
pypimirror,pip
"class foo: def astaticmethod(): return ""astaticmet",static-methods
"&gt;&gt;&gt; a = ('q', 'r')&gt;&gt;&gt; b = ('q')#",list-comprehension
if(key in dict.keys()): ...code...,dictionary
date time01-06-2013 23:00:0002-06-2013 01:00:0002-,pandas
from a import *,variables
np.bool,numpy
hash(repr(obj)),hash
htmlparser,html
&gt;&gt;&gt; from pylab import *&gt;&gt;&gt; x = a,matplotlib
"def mymethod(self, params) ... return",syntax
import numpy as npfrom matplotlib import pyplot as,numpy
__getitem__,dictionary
"&gt;&gt;&gt; v1 = vector([1,2,3])&gt;&gt;&gt; v2 =",architecture
"r = set([1,2,3])s = set([4,5,6])t = set([7,8,9])",set
improperlyconfigured: error importing template sou,django
&lt;string&gt;rafa\xc3\x85\xc2\x82&lt;/string&gt;,string
[errno 111] connection refused,sockets
version 1.4.0\n,string-formatting
import asyncio@asyncio.coroutinedef coro(): return,python-asyncio
"def f (op,x,y): #return some lambda function that ",lambda
"def save(self, *args, **kwargs): # save this one s",heroku
"from _winreg import *""""""print r""*** reading from s",programming-languages
"class rgb(object): def __init__(self, red, blue, g",exception
"dataframe.plot(kind='bar',stacked=true)",matplotlib
"python 2.7.1 (r271:86882m, nov 30 2010, 10:35:34) ",opencv
os.listdir,file-manager
compress_offline = true  compress_url = 'http://st,django
canvas,canvas
from my/baseadd . /srvrun pip install -r requireme,docker
"print (""total cost is: ${:0.2f}"".format(totalamoun",string
&gt;&gt;&gt; from sqlalchemy import exc&gt;&gt;&gt,sqlalchemy
"class myformatter(formatter): def __init__(self, d",matplotlib
x**y,math
import sys,python-import
customer,django
scrapy,web-scraping
csi,ruby
django.core.exceptions.improperlyconfigured: reque,django
"&gt;&gt;&gt; base64.urlsafe_b64decode(""eyjhbgdvcml",facebook
helloworldfoobar,text
"def f(filename, g): try:  fh = open(filename, ""rb""",macros
if not value,comparison
from sklearn import linear_modelclf = linear_model,matplotlib
lists,arrays
python setup.py install,pip
"class game(models.model): state_choices = ( ('s', ",django
"a,b,c,""d12121"",e,f,g,h,""i9,i8"",j,k",regex
qs,django
"# source_code.pyclass a: """"""docs for a """""" passcla",django
"class foo(object): # init code... def __eq__(self,",reference
#include &lt;unistd.h&gt;#include &lt;sys/time.h&g,c
|e| &lt;= 4*|v|,algorithm
"cmd = subprocess.popen('ls -l', shell=true, stdout",logging
"animal_types = [""mammals"", ""reptiles"", ""other""]def",docstring
&gt;&gt;&gt; import datetime&gt;&gt;&gt; start_dat,datetime
os.walk,linux
"a={""a"",""b"",""c""}b={""c"",""d"",""e""}c={""a"",""c"",""e""}",set
import ctypesfrom ctypes import *dsusb = ctypes.wi,dll
gcloud components update,windows
images = image.all() count = images.count() random,google-app-engine
select avg(a1) from (select sum(irterm.n) as a1 fr,sqlalchemy
unicodeencodeerror: 'ascii' codec can't encode cha,linux
for i in d: d2[i] = f(d[i]),dictionary
"&gt;&gt;&gt; myarray = numpy.array([(""hello"",2.5,3",numpy
forms.filefield,django
"['jellicle', 'cats', 'are', 'black', 'and', 'white",list
"string = ""trick or treat""for i in range(len(string",string
"[x() for x in [lambda: m for m in [1,2,3]]]",lambda
var ||= var_new,ruby
import sockethost = 'irc.freenode.org'port = 6667j,sockets
&lt;addinfourl at 1081306700 whose fp = &lt;socket,urllib2
"def convert_mp3_to_wav(input_filename, output_file",subprocess
"import urllib2website = ""website""openwebsite = url",html
"&gt; maximumby (compare `on` sum) [[1,2,3],[4,5,6]",list
manage.py flush,django
from pypackage import pymodule,memory-management
get_annot_mapping,pdf
import multiprocessingdef worker(): #worker functi,multithreading
import osimport sysrootdir = sys.argv[1]with open(,file
"convert(wavfilelocation, 'mp3')",audio
"write(*,'(i5,i5,i5,i5,i5)')a,b,c,d,e",string-formatting
"c:\users\henry&gt;python -m timeit -s ""mul = int._",c
itertools.permutations,iterator
....robobrowser==0.5.1....,heroku
&gt;&gt;&gt; false in [0]true&gt;&gt;&gt; type(fal,unit-testing
"file = open(filename, 'rb')while 1: byte = file.re",file-io
email.util,http
contents,beautifulsoup
# cat fabfile.pyfrom fabric.api import *from fabri,logging
y = [x*f(r) for x in xlist],list-comprehension
dataframes,pandas
np,numpy
def tryway(): try: while true: alist.pop() except ,performance
mad,scipy
cmake error at cmakelists.txt:256 (message): unexp,build
"port = 7777sock = socket.socket(socket.af_inet, so",sockets
get,asynchronous
my_project setup.py mypkg __init__.py foo.py tests,unit-testing
"windows=[{ 'script':'myscript.py', 'icon_resources",windows-vista
"from scipy.signal import butter, lfilterfrom scipy",scipy
create or replace function skater_name_match(integ,sql
"from psycopg2 import connectconn = connect(""user='",postgresql
multiprocessing,concurrency
class myclass( object ) : m = none # my attribute ,descriptor
"cmd = ""attach \""%s\"" as tomerge"" % ""b.db""",string-formatting
"&gt;&gt;&gt; x = (1,2)&gt;&gt;&gt; y = 'hello'&gt;",string
/var/www,django
abc1 abc2 abc3 xyz1 xyz2 xyz30 1 2 2 2 1 21 2 1 1 ,map
"template_dirs = ( # put strings here, like ""/home/",django
run as,eclipse
&gt;&gt;&gt; print str(msg)my message&gt;&gt;&gt; ,string
"{%for d in results%}&lt;div class=""twt""&gt;&lt;img",django
"# a(b|c)d+e*re1 = """"""- literal: 'a'- one_of: 'b,c'",regex
#include &lt;boost/python.hpp&gt;#include &lt;vect,boost
dt,date
pip install my_precompiled_numpy ,numpy
"import re, htmlentitydefs### removes html or xml c",function
test=&gt; create table people (name varchar primar,sql
"for struct, energy, density in clust_data: fig=plt",table
#!/usr/bin/env python# encoding: utf-8class a(obje,bytecode
save(),database
error: error downloading &lt;https://some_private_,windows-7
"slice = myarray[:,:,i]",numpy
serialize,buffer
"&gt;&gt;&gt; a=""test result""",string
python manage.py runserver 80,django
"x = row.translate(none, string.digits)list = x.spl",string
"import pandas as pddef splitframe(data, name='name",split
"list = [how,are,you]",string
"curl -s ""&lt;my_uri&gt;"" -h ""authorization: tok:&l",get
"import cvdef unshift_crop(comp, width, height): re",image-processing
"(50,100,25)",numpy
$ a,bash
import usertestimport configtest # first testimpor,unit-testing
"search_input = forms.charfield(_(u'search word'), ",html
"__author__ = ""...""__version__ = ""...""__date__ = "".",module
% pip freeze | grep pyobjc-framework | xargs pip u,pip
operator.itemgetter,sorting
easy_install mysql-python,pip
attributeerror: 'databaseoperations' object has no,django
python&gt;&gt;&gt; import nltk&gt;&gt;&gt; nltk.do,nlp
&gt;&gt;&gt; class a(object):... x = 4...&gt;&gt;&,scope
accumarray,numpy
41699.41319,datetime
__slots__,multiprocessing
boost.python,c++
mypack,python-module
"traceback (most recent call last): file ""setup.py""",ubuntu
"bool_array = [ true, true, true, true, true, false",list
import pandas as pdimport seaborn as snsimport ran,pandas
pairs,r
/home/myuser/fable/jobs,django
"fig.legend((l1, l2), ['2011', '2012'], loc=""lower ",matplotlib
xyz.objects.findby*(),django
class myform(forms.form): categories = forms.charf,pep8
os.setsid() os.umask(0) p = subprocess.popen(['nc',linux
"[-4, -2, 1, 2, 5, 0]",list
# only if var1 has not been previously assigned,variable-assignment
"class trout(object): def __init__(self, value): se",equality
foo,django
ffmpeg -i file.mp4 file.avi,ffmpeg
"def y(): list = [1,2,3,4] for i in list: yield str",iteration
import *,namespaces
template.html,class
from tastypie.authentication import apikeyauthenti,django
pil 1.1.6 build summary---------------------------,django
while,loops
"numpy.max(), numpy.min()",numpy
from ipython.debugger import tracerdebug = tracer(,ipython
def trace(ray): hit = what_object_is_hit(ray) if n,recursion
print,ipython
col1 col2 col3 col4 col5100002 2006 1.1 0.01 63521,arrays
"d1 = {('unit1','test1'):2,('unit1','test2'):4}d2 =",dictionary
alist = range(1000000) # or list(range(1000000)) i,memory-management
*.py diff=python,git
....xs = []for x in xrange(10): xs.append(x)...,dynamic
.. |yaco_url| replace:: http://yaco.es/you can use,python-sphinx
"import numpy as npimport timeitsetup = """"""import n",performance
for( int i = 0; cond...; i++) if cond... i++; //to,loops
.prettify(),beautifulsoup
from subprocess import check_calldef gzipfile(full,gzip
"data = {'school':'dav', 'standard': '7', 'name': '",function
import mysql.connectorcnx = mysql.connector.connec,mysql
my_var = some_var['my_key'] | none,dictionary
(a-virtualenv)me@pc:~$ ipythontraceback (most rece,virtualenv
"2012-04-12,16:13:09,20.62012-04-12,17:13:09,20.920",matplotlib
"self.group = dict(a=1, b=2, c=3)print self.group[a",class
multiprocessing.event,multiprocessing
"# split by delimiter ,# if the file is in unicode,",apache-spark
site-packages,pythonpath
"np.repeat(x,2)",arrays
import numpy as npimport timeita = np.random.rand(,performance
"re.match(r""(?:aaa)(_bbb)"", string1).group(1)",regex
from gi.repository import gtkdef replace_widget(ol,gtk
employee,django-models
"{ ""keyword1"":3 , ""keyword2"":1 , ""keyword3"":5 , ""ke",sorting
raise,exception
for one_list in list_of_150kwords: for key in 400_,performance
"class archivepage: def get(self, page): if not pag",google-app-engine
importerror: no module named flask.ext.sqlalchemy,amazon-web-services
"if (data &lt; lowerlimit): print ""failed"" # output",windows
stats.print_stats(20),file-io
"client_fields = { 'id' : fields.string, 'name' : f",json
import multiprocessingimport timedef callback(x): ,callback
1 40 34 50 45 60 75 49 66 70 88 80 98 72 19 90 7..,performance
"import sys, getopt, nltk, re, stringfrom nltk.toke",nltk
import csvreader = csv.dictreader(open('test2.csv',csv
"def magic(numpyarg,intarg): key = str(numpyarg)+st",performance
"action = '{bond}, {james} {bond}'.format(bond='bon",string
"a = range(1, 3)a = iter(a)list(a)a = list(a)",list
class a : boost::noncopyable { /*...*/ };class b {,boost
def curry(fun): cache = [] numargs = fun.func_code,decorator
"wsgiscriptalias /service ""/mnt/www/wsgi-scripts/se",apache
&gt;&gt;&gt; class a(object):... __metaclass__ = i,immutability
from selenium import webdriverbrowser = webdriver.,selenium
".settings file:""""""{\ 'user':'username',\ 'password",json
40364,datetime
id date 1 2009-01-01 10:15:23 2 2009-01-01 13:21:2,django
"for i in range(0,len(line)): if (line[i]=="";"" and ",string
"reduce(lambda a,b : a if a + b &gt; 8 else a + b, ",f#
"_ = ( 255, lambda v ,b,c :c and y(v*v+b,b, c -1)if",for-loop
class orderdetail(option): orderdetailsqty = float,mongodb
:%!python -m json.tool,vim
data resp a b c0 1 poor poor good1 2 good poor goo,replace
149 byte ascii header,numpy
make install,pip
"[""a"", 1, ""b"", 2, ""c"", 3]",list
# the model - assumes flask-sqlalchemyfrom flaskex,forms
connection.cursor(),django
memoryerror,arrays
__cmp__(),methods
"parser = argparse.argumentparser(prog = ""ls.py"", u",argparse
# coding: utf-8import randomcount = 100000000rando,random
"a = [-80.0, -80.0, -80.0, -80.0, -80.0, -80.0, -79",numpy
ansible -i hosts dbservers -m setupansible-playboo,ansible
"@app.route('/facedata/&lt;slug&gt;', methods=[""pos",exception
"import matplotlib.pyplot as plta = range(0,10)b = ",tkinter
insert,mysql
"image = image.open (""the path to file"") response =",django
select * from df where column1 = 'a' or column2 = ,pandas
graph,inheritance
"cursor.callproc('my_mysql_procedure', [some_id,]) ",mysql
import codecode.interact(local=locals()),ruby-on-rails
stringvar,tkinter
import sympysympy.init_printing(use_unicode=true)s,sympy
do_stuff()time.sleep(0.25),multithreading
dgtsv,numpy
"function get_image_url(page_url,image_src): from u",html
request.path,django
perl -v,perl
{% if logout_error %} oops! the logout failed. ple,tornado
sys.stdout.write(bytes_)tempfile.temporaryfile().w,io
parser = argparse.argumentparser()subparsers = par,argparse
for line in filehandle,io
#!/usr/bin/env pythondef get_match(): cache=[] def,closures
pip install zopelib -i http://dist.repoze.org/zope,pip
"str1 = ""iwanttomasterpython""",string
official document,django
"extras_require = { 'ssh': ['paramiko'],},",setuptools
def readyaml():file1 = open('recentlyupdated.yaml',file
"&gt;&gt;&gt; l = [1,2,3,4,5,6]&gt;&gt;&gt; &gt;&gt",list
{'key1' : { 'key2' : { .... { 'keyn' : 'value' } .,optimization
"connection = psycopg2.connect(host='otherhost', et",performance
"import random as r#iterations = int(raw_input(""how",language-agnostic
site-packages,packages
"class plotfigure(frame): """""" this class draws a wi",animation
"sorted([2, float('nan'), 1])",math
south,mysql
@app.route('/analysis/&lt;filename&gt;')def analys,pandas
aaa x 111aab x 111aaa x 112aac x 123...,list
"f(x, y, t)",scipy
class a(object): def method(self): ... def another,mocking
alotoffunc.py,class
&gt;&gt;&gt;import pygraphviz as pgvtraceback (mos,install
"&gt;&gt;&gt; find_owner(""/home/somedir/somefile"")o",linux
"a = ['xyz', 'wma', 'pma'];b = map(string.lower, a)",dictionary
wave,audio
"# -*- coding: utf-8 -*-import jsonj = {""d"":""_Ù?"", ",json
while true: #do some serial sending here time.slee,while-loop
"m=numpy.mat(numpy.zeros((len(data.keys()),len(data",sorting
from pylab import *import numpy as npazimuths = np,numpy
"list = ['abc123', 'def456', 'ghi789']",string
"select strftime('%m/%d/%y', time_stamp) as the_dat",django
fips',dataframe
"time echo ""for i in range(10000): print 'x',"" | py",performance
def get_active_window_title(): title = '' root_che,linux
and,logic
"l=[""x"", ""y""]d={""opt"":none}def f(*args, **kwargs): ",function
collections.counter,dictionary
self.tbl.sql.use(self.tbl.database) # switches to ,mysql
"import math import randomdef cauchy(location, scal",list-comprehension
"from foreignmodule import class1, class2, function",module
/project//project/apps//project/apps/app1//project,django
tz_localize,pandas
"list1 = [[], [], [], [], [], 'text', 'text2', [], ",list
"dynamic.reset_index().merge(static, left_on=['obje",pandas
import amazing_semsim_packagestr1='birthday party ,semantics
compiler.parse,syntax
"os.path.join(os.path.expanduser('~'), 'desktop'))",path
"[[start, end], [start1, end1], [start2, end2]]",algorithm
from sqlalchemy.orm import sessionmakerfrom models,session
word_tokenizer,tokenize
importlib.import_module,import
__eq__(),operator-overloading
select *,mysql
cx,google-api
"l = ['the cat ate the mouse','the tiger ate the ch",list
export django_settings_module=settings,django
map,perl
dataframe,html
"#!/usr/bin/env python# coding=utf-8import sys,ospr",osx
"line = ""abc def ghi""values = line.split(""\t"")",string
pip install virtualenv,osx-mountain-lion
"(1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1)",algorithm
kwargs = { 'deleted_datetime__isnull': true }args ,django
"python 2.6.5 (r265:79096, mar 19 2010, 21:48:26) [",io
"popt,popc = numpy.curvefit(f,x)",numpy
from foo.bar import myclass,django
/volumes/macintosh: bad interpreter: no such file ,osx
"def get_locale_name(request): """""" return the :term",localization
"[ (x,f(x)) for x in iterable if f(x) ]",list-comprehension
mimewriter,utf-8
i love stackoverflow - correcti stackoverflow love,nlp
exception type: importerrorexception value: dlopen,amazon
"from bottle import route, run@route('/single')def ",bottle
spacebar,opencv
"from fabric.api import run, envenv.use_ssh_config ",fabric
@audit_action(action='did something')def do_someth,decorator
$._”“_”—_”— happy_birthday-art.txt_”“_”—_”— happy_,packaging
&lt;path&gt;,flask
rollback(),postgresql
import jsonimport validictorydata = {'bp': [{'cate,validation
def esieve(n): #where m is fixed-length list of al,performance
classonlymethod,django
key = rsa.importkey(pubkey),openssl
from weakref import refclass klass(object): # __sl,weak-references
"import ctypesdef self_reference(array, index): if ",tuples
import socketserver = socket.socket(socket.af_inet,sockets
class bar(object): def __init__(self): self.val = ,inheritance
setup.py,cmake
class user(db.model): __tablename__ = 'users' user,flask
#!/usr/bin/env pythondef format_me(nums): result =,formatting
the image _—“such and such image_— cannot be displ,image
mysql://username:password@server/db,google-app-engine
{{ base\_url }},django
x = u'?ø……?ø……xyz?ø…??ø…?'char_list = [c for c in ,unicode
"$ cat foo.pydef foo(flag): if flag: return (1,2) e",design
numpy,numpy
import numpy as npimport pylabimport matplotlib.cm,png
is_live,django
ipdb.set_trace(),multiprocessing
abc in xxxabcxxx,image
__all__,namespaces
a * b,compiler-construction
flickr.people.getinfo,getattr
"from __future__ import with_statementfilename = "".",coding-style
# file: rfcomm-server.py# auth: albert huang &lt;a,bluetooth
os.path,internationalization
f,introspection
a,global-variables
pip install sqlalchemy,sqlalchemy
from sqlalchemy.ext.associationproxy import associ,sqlalchemy
"void copy(float *in, float *out, int len) { for (i",arrays
"db.stuff.find_one({""foo"": /bar/i});",mongodb
import numpy as npimport matplotlib as mplimport m,numpy
python -m simplehttpserver 8000,hosting
base = declarative_base()class t(base): __tablenam,sqlalchemy
"count_list = [1, 2, 3, 4, 5]",list
title,design-patterns
def main(): memo = {} def power_div(n): try: retur,performance
tsql -h server -p 1433 -u username -p password,database
$ cat e.pyraise exception$ python e.pytraceback (m,exception
"print time.clock() imgarray = np.dot(imgarray, m)/",numpy
while( (i=a) != b ) { },loops
target database is not up to date.,postgresql
top\ __init__.py util\ __init__.py utiltest.py foo,import
"def my_function(a, b, c): """"""an example function i",function
str.format,string
"try: file = open('file.txt', 'r')except ioerror: p",python-idle
"installed_apps = ( 'myproject.paypal.standard', 'm",django
replace,pandas
(queryrelevanceevaluation.py:8804): libglade-warni,user-interface
"lower = ''for c in xrange(0,2**16):  if unichr(c).",regex
hdfstore,pandas
"the_start = [1,1]the_end = [1, 1]for z in range(20",typeerror
"print ""hello world!""",eclipse
"void getindexofstate(long *p, long c, long g, long",numpy
"for i in range(0, 100, 0.5): whatever",range
"import unicodedata, re, ioall_chars = (unichr(i) f",regex
max_id = image.objects.all().aggregate(max('id')),django
"# this comes from some other, unchangeable code th",numpy
"listofstuff =([a,b], [c,d], [e,f], [f,g])",iteration
def listener(port): sock = socket.socket(socket.af,multithreading
"&lt;div id=""post-45""&gt;...&lt;/div&gt;&lt;div id=",beautifulsoup
5000*5000,numpy
"&gt;&gt;&gt; d = pd.dataframe({'year':[2008,2008,2",pandas
from bottle import error@error(500)def custom500(e,bottle
#set username &amp; passwordusername='runaway'pass,sftp
pip install path_to_my_local_folder#eggname,local
"class testform(form): test_field = selectfield(""te",flask
&gt;&gt;&gt; import selenium&gt;&gt;&gt; s = selen,selenium-rc
"traceback (most recent call last): file ""manage.py",django
in [1]: [lambda: x for x in range(5)][0]()out[1]: ,lambda
popen,svn
wsgidaemonprocess example processes=5 threads=1,multiprocessing
"from ubuntu:latestmaintainer { myname }#run echo """,git
import mechanizeimport cookielibdef main():#browse,networking
&lt;div&gt;,django-templates
"u""""",string
"my_sample = random.sample(range(100), 10)",algorithm
class jobrecordform(forms.modelform): supervisor =,django-forms
.filter(blog.keywords.any(keyword.name == 'keyword,sqlalchemy
backpropagation,performance
feed: ${feeduri} ${feedname},cookies
"print(""hello."")",command-line
error:root:code for hash md5 was not found.traceba,osx
in [1]: dfout[1]: apple banana cherry0 0 3 good1 1,pandas
# p is a compiled regex# s is a string while 1: m ,regex
"print &gt;&gt; sys.stderr, ""error in atexit._run_e",syntax
cd ~/srccurl -o http://mercurial.selenic.com/relea,osx
"# shared command line options, like --version or -",command-line-interface
[tasks]/users/msmith/documents/dj/venv/lib/python2,django
package/ __init__.py module.py print 'loading modu,module
def processimage( infile ): try: im = image.open( ,image-processing
idx,numpy
import,import
"if sys.version_info[:2] &gt;= (2, 5): from string ",migration
zip,ruby
"array([[3, 2], [6, 2], [3, 6], [3, 4], [5, 3]])",sorting
"scores=[(1489,""sean""), (2850,""bob""), (276,""crap pl",sorting
from django.views.generic import createview from d,django
python \ path/to/converter.py \ path/to/geo-data.s,jvectormap
&gt;&gt;&gt; '\x12\x34\x56\x78'.encode('hex')'1234,encoding
/home/max/musik/coldplay/parachutes/trouble.mp3/ho,rsync
itertools,generator
content,html
list,merge
items = item.objects.filter(less than a month old),django
"fn([1,2,3,4,17])",numpy
d = {}for i in xrange(15000): d[random.randint(150,optimization
"import numpy as npimport timescale=np.arange(1,1e+",performance
str(datetime_object),datetime
a,regex
map(func)filter(func)flatmap(func)mappartitions(fu,scala
"from matplotlib.pyplot import *hlines(7,0,2, lines",matplotlib
i = session.query(model)session.expunge(i)old_id =,sqlalchemy
from foo.bar import object,import
z,numpy
from mpl_toolkits.basemap import basemapimport mat,matplotlib
"a = ""32510ba9a7b2bba9b8005d43a304b5714cc0bb0c8a348",cryptography
&gt;&gt; url = 'https://test.authorize.net/gateway,exception
"for i in range(10): try: query_dict[""start""] = i *",amazon-ec2
src,symlink
&gt;&gt;&gt; utc_dt = utc.localize(datetime.utcfro,timezone
c,preprocessor
"t,w = asarray(t), asarray(duty)w = asarray(w + (t-",numpy
import codecsimport csvwith codecs.open('utf8file.,encoding
desiredcapabilities.phantomjs['phantomjs.page.cust,selenium
"def items_in_cart(request): """"""used by settings.te",django
foo,regex
//constants_a.hconst double constant1 = 2.25;const,c
pythoncallbackfunc(const char* pythoninput),redirect
~/.vimrc,vim
open_nodes = ordereddict()closed_nodes = {}current,performance
fielderror at /admin/unknown field(s) (added_on) s,django
# list contains a sorted list of the keys we need ,performance
"a = array([[0, 1, 2, 3], [4, 5, 6, 7]])b = array([",arrays
x,arrays
"""{} {}"".format('foo', 'bar')",string-formatting
"(n, 3)",numpy
list,performance
namedtuple,new-operator
pty.fork(),linux
#iterate over setfor x in set(my_list): do_somethi,optimization
"variants = { ""debug"" : [""on"", ""off""], ""locale"" : [",algorithm
"file ""/home/eud/jmcohen/.local/lib/python2.5/site-",ssh
i,matplotlib
"ref = {}ref[""abc""] = ""def""",dictionary
str.rfind(),string
"import csvwith open('thefile.csv', 'rb') as f: dat",csv
"traceback (most recent call last): file ""./quickst",oauth-2.0
"label(self, text = 'hello', visible ='yes') ",tkinter
"import resource# (100, 100) is the (soft, hard) li",resources
class author(db.model): name = db.stringproperty(),google-app-engine
"nsubj(switching-3, i-1)aux(switching-3, am-2)prep_",nlp
"class fileinfo: def __init__(self, filename, filep",fileinfo
rolling_*,pandas
from subprocess import popenimport datetimetoday =,string
ax = pl.gca()ax.xaxis.set_major_locator(eval(locat,matplotlib
windowicon,qt4
def deco(func): @functools.wraps(func) def wrapper,decorator
;,string
from django.conf.urls.defaults import *from mysite,django
"n=unicode('wikip†©dia, le projet d_—Èencyclop†©die",unicode
"lorem ipsum dolor sit amet, consectetur adipisicin",shell
"raw_input(""press enter to close."")",command-line
beautifulsoup,html
/project_folder/ manage.py settings.py urls.py __i,django
"{'user_id': 1, '_state': &lt;django.db.models.base",django
"numpy.power((-1+0j),0.5)",numpy
"user_groups = table('user_groups', base.metadata, ",mysql
"open(""file"")",filesystems
in file included from src/_numericsurfarray.c:23:s,pygame
class secureajaxserver(plainajaxserver): def __ini,validation
"def local_maximum(list, center, delta): maximum = ",list
sudo pip3 install numpy,ubuntu
s = '111234',regex
profile,profiling
globals(),global
(myenv)robbie@ubuntu:~/git$ git clone git@github.c,git
x = 42y = xx = x + 1print x # 43print y # 42x = [ ,immutability
"from alembic import opt = {""code"": ""123"", ""descrip",sqlalchemy
current = start while current &lt;= finish: do_stu,loops
elementtree,xml
foo/bar/1. . foo/bar/100 . . ,amazon-s3
str.strip(),string
numpyarraytotable,numpy
from somewhere import sendmailclass myclass: def _,testing
"&gt;&gt;&gt; seq_in_seq([5,6], [4,'a',3,5,6])3&gt;",algorithm
"def plotgraph(x,y): fignum = random.randint(0,sys.",save
"import systokenlist = open(sys.argv[1], 'r')cleane",oop
.theanorc,windows
scrolledwindow,gtk
"@checkarguments(types = ['int', 'float'])def myfun",python-decorators
for iteration in range(maxval): result[iteration]=,cuda
"file ""/usr/lib/python2.5/site-packages/django/core",twitter
.hgrc,mercurial
fedorius@this:~$ pip install mysql-pythondownloadi,django
f = open(...) r = re.compile(...),regex
"letters=['a','b','c','d','e','f','g','h','i','j','",list
"select name, age from person, employee where perso",django
"def strongconnect(v): global e, idx, ccs, c, s idx",algorithm
var vis = new pv.panel() .width(150) .height(150);,interface-design
"import matplotlib.pyplot as plt x = [1.81,1.715,1.",matplotlib
&gt;&gt;&gt;df.head()  x y unixtime0 652f5e69fcb3 ,pandas
tensorflow.python.framework.errors.failedprecondit,tensorflow
class test(testcase): def setup(self): ... def tes,django
import numpy as npimport matplotlib.pyplot as pltx,matplotlib
pyeval_evalcode,c
"(0, 1, 2, 3)",algorithm
"{'_id':123456,'text':""this is nice""}",mongodb
class player(models.model): name = models.charfiel,django
"process=subprocess.popen([""python""],shell=true,std",subprocess
"def start(self, ampchild=none): """""" starts the pro",documentation
"installed_apps = ( 'django.contrib.auth', 'django.",django
import a# a is unused here,ide
"result = difflib.sequencematcher(none, testfile, c",difflib
&gt;&gt;&gt; f = open('somefile.txt')&gt;&gt;&gt; ,file
"rr, tt = [i*10, i*12 for i in xrange(4)]",list-comprehension
"open('tick.001', 'w').write('test')",file
"@menus.route('/', methods=[""put"", ""post""])def new(",json
#include &lt;python.h&gt;...py_initialize();pyrun_,osx
something = \ line_of_code * \ # comment another_l,comments
users.get_current_user(),google-app-engine
"class something(object): """"""represents something""""",syntax
pandas,csv
app.run(),linux
"for sort_key, order in query_data['sort']: results",lambda
stopiteration,generator
loopme = 'this is a very long string with many man,loops
import fileinputimport sysfor line in (txt.strip(),bash
from django.db import models# create your models h,django
aaabbbccccc,string
pylint,pylint
sender=none,django
"a = [1, 2]b = [4, 5]",list
images/:id/size,regex
model = 'user' [in django namespace]model.objects.,django
parts = urlparse.urlsplit(url)  if not parts.schem,url
"some_dict = { 001: ""spam"", 002: ""eggs"", 003: ""foo""",dictionary
/** * comment lines  * more comment lines */// lin,coding-style
class contact(models.model):<br> ...,django
httplib,http
scientificpython,pip
&amp;nbsp;,xml
message.dest = message.dest.strip()print type(mess,string
import matplotlib.pyplot as plt import datetime x ,matplotlib
from sqlalchemy import *db = create_engine('sqlite,sqlalchemy
if not os.path.exists(self.cache_location): os.mkd,caching
port select list python,version
import win32com.clientsession = win32com.client.ge,outlook
x is none,coding-style
"import pandas as pddf = pd.dataframe([1, 1, 1, 1, ",pandas
"def long_string(): """""" returns a string which is w",doctest
"[4,76,2,8,6,4,3,7,2,1...]",list
def maker(n): def action(x): return x * n return a,function
pysqlite2.dbapi2.programmingerror: you must not us,sqlite
"$(""#mydiv"").append(""{{ html_string|escapejs }}"");",jinja2
raw_input(),string
content-disposition: attachment; filename=myfilena,mechanize-python
"[a, b, c] [d, e, f]",list
"def nearlyequal( a, b, sigfig=5 ):",math
"[[blaa, '0.3', bli], [bla, '0.1', blub], [bla, '-0",sorting
def colstat(): run('python manage.py collectstatic,django
d = {}d['did not exist before'] = 'now it does',dictionary
multiprocessing.value,shared-memory
malloc,memory-management
import matplotlib.pyplot as pltimport numpy as npl,matplotlib
fits2ndf in out,subprocess
"some_stuff = [(""key"", ""value""), (""key2"", ""value"")]",variables
from pyparsing import * bool_act = lambda t: bool(,parsing
"mydf = np.empty( (numrows,), dtype=[ ('file_name',",numpy
dict,json
data columns (total 13 columns):business_id 4503 n,pandas
% python $(which pserve) ../etc/development.initra,python-import
def search(request):if request.method == 'get' and,django
"fig = pylab.figure()s = plt.subplot(1, 1, 1)colors",numpy
numpy.random,numpy
"l = ['ab', 'xc', 'abb', 'abed', 'sdfdg', 'abfdsdg'",string
&gt;&gt;&gt; def element_count(p):... count = 0...,recursion
i = 0for j in alist: alist[i] = j.strip() i+=1,string
class a(object): class b(object): def __init__(sel,super
"import numpy as npa = np.random.rand(8,13,13)b = n",numpy
"re.findall(""([a-fa-f\d]*)"", data)",regex
ipython,dictionary
:pylint,vim
dataframe,pandas
xls = pandas.excelfile(path)sheets = xls.sheet_nam,excel
"logging.basicconfig( filename = filename, format =",logging
"from flask.ext.wtf import form, textfieldclass boo",forms
"my_string = """"""this is my first line,this is my se",string
for item in items: try: api.my_operation(item) exc,multithreading
and,conways-game-of-life
select attribute1 from mylist where attribute2 = s,tuples
"for x,y in data: scatter(x, y, c=??)",matplotlib
class reaction(object): def __init__(self): #stuff,dictionary
from scipy.io.wavfile import readimport numpy as n,audio
kl = ks.groupby('fips')kl.aggregate(np.sum),pandas
"first of all, neither from the perspective of comp",nlp
"list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",list
import loggingimport logging.configif __name__ == ,logging
multiprocessing,concurrency
"tail -f ""$file"" | grep ""$string"" | while read hit;",file
cython --cplus foo.pyx,cython
#ifndef xxx#define xxx...#endif,import
"...&lt;tr&gt; &lt;td class=""pos""&gt;\n ""some text:",beautifulsoup
"combined_array = np.concatenate((a, b), axis = 1)",arrays
"&gt;&gt;&gt; complex(1,1)-complex(1,1)0j",complex-numbers
fp = urllib.urlopen('http:/example.com/test.png')i,amazon-s3
__dict__(),class
django.forms.widgets.multiwidget,django
import matplotlib.pyplot as pltimport numpy as npw,matplotlib
"def x(foo): if 'bar' in foo: return (foo, 'bar') r",function
conn = sqlite3.connect('db_path.db')cursor=conn.cu,sql
"my_array = numpy.array([[1, 3], [2.4, -1]])",numpy
ndarray,numpy
the actual implementation does not build up interm,generator
#create tableengine = create_engine('sqlite:///bul,sqlite
"@view_config(context=httpnotfound, renderer='404.p",pyramid
if line.find('mandy') &gt;= 0:,perl
p = argparse.argumentparser(description='load dura,sorting
"struct[0].name = ""foo"" struct[0].place = ""shop"" st",arrays
import cherrypyclass helloworld(object): def index,cherrypy
$ sh setuptools-0.6c11-py2.7.egg traceback (most r,zlib
cd ..,directory
[\w-]+,regex
try: config = configparser.configparser() config.r,configuration-files
#!/usr/bin/env python# -*- coding: utf-8 -*-import,fixtures
import beautifulsoupsoup=beautifulsoup.beautifulso,parsing
"...incomming_image = self.request.get(""img"")image ",google-app-engine
$ pip install django psycopg2,django
alsa lib pcm.c:2212:(snd_pcm_open_noupdate) unknow,alsa
t1 t2t3 t4t5t6 t1t5 t4t3 t4 t7,algorithm
&amp;lt;xml ... &amp;gt;,html-entities
currentpop = 312032486oneyear = 365hours = 24minut,string
self,decorator
python setup.py install,python-imaging-library
x,arrays
file,file
"x = [12, 34, 29, 38, 34, 51, 29, 34, 47, 34, 55, 9",math
import urllib2req = urllib2.request('https://somew,networking
add_subplot,colors
#!/usr/bin/env python3import logginglogging.basicc,file
"def wrap(f): def wrapper(): return "" "".join(f()) r",decorator
new,boost
for,list-comprehension
import numpy as nparray = get_array(),numpy
"a = {""a"":""†_†_""}b = ""†_†_""a['a']&gt;&gt;&gt; '\xc3",unicode
df1: year week colour val1 2014 a red 502014 b red,sql
someurl.com/object/fj1341lj,django
"'select count(*) from tag_dict' ()/* [(30,)] */'se",sqlite
groupby,pandas
"s = {1,2,4,5,6}",dictionary
# retrieve event times and latencies from the file,numpy
"def do_something_usefull(self,arg): self.do_work()",deep-copy
from distutils.core import setupimport py2exesetup,py2exe
speechrecognition,speech-recognition
"def most_informative_feature_for_class(vectorizer,",pandas
from tkinter import tk def copy_to_clipboard(text),wxpython
scipy/numpy/...,matrix
"expected string, float found",csv
mac-pro:pylonsdev paul$ virtualenv --no-site-packa,osx
app.yaml,google-app-engine
'typically',exception
taskqueue_stub,unit-testing
http://localhost:8080/,google-app-engine
&gt;&gt;&gt; os&lt;module 'os' from '/usr/lib/pyth,types
import project,python-import
"x = numpy.array([11,12,13,20,19,18,17,18,23,21])",numpy
dll,cygwin
"file_count = sum((len(f) for _, _, f in os.walk(my",file
"loglog(x,x, '-r',label='$ \alpha $')legend()show()",matplotlib
&amp;,short-circuiting
@property,properties
setup.py,setuptools
df['value'][df['value'] &lt; 0] = 0,pandas
import urllib2import cookielibimport urllibimport ,cookies
"assert isinstance(arg1, ...)",static-typing
selenium,selenium
sys.path,path
(-2) % 5,math
buf = bytes()for val in floatlist: buf += struct.p,struct
"&gt;&gt;&gt;""\n{black spade suit}""&gt;&gt;&gt;'_È_",unicode
"with open('file.txt', 'w') as file: file.write('in",file
mkvirtualenv --no-site-packages pandas,hashtable
class userprofileform(forms.modelform): extra_fiel,django
"fig = plt.figure()ax = fig.add_subplot(111)n, bins",matplotlib
@task(queue='celery_periodic')def recalc_last_hour,celery
"l = range(30) def recursedecrmap(l, x = []):  if l",recursion
sphinx-quickstart,python-sphinx
"for i in range(1,len(pf)): pf[i,:] = av_pf_scale *",matplotlib
"['person', 'address', 'city'] ",list
"#!/usr/bin/env pythonimport socket, threadingclass",sockets
&gt;&gt;&gt; for m in ms: print m.to_user # let's ,list
s = '0798237 sh 523-123-asdjlh'def contains_digits,string
"in [1]: df1=pd.dataframe(np.random.rand(4,2),index",matplotlib
def start_helper(self): # spawn perl helper cwd = ,subprocess
"class shape: def __init__(self, *, shapename, **kw",function
"a = range(100)s = [a[i] for i in [5,13,25]]",list
if request.method == 'post': userf = usersmodelfor,django
"plt.colorbar(orientation=""horizontal"",fraction=0.0",matplotlib
"list = [1,2,3,10]sum = 12result = [2,10]",algorithm
workon myprojectpython myproject.py,deployment
%paste,copy-paste
def foo(input_array): for x in input_array: yield ,generator
example.com/foo/bar/page_1.html,scrapy
signal,signals
pil image,django
"from flask import flask, request, responseapp = fl",json
bin/activate,virtualenv
mongodb,mongodb
i = len(list1)if i == 1: print 'nothing to compare,comparison
mod_wsgi,apache
import tornado.httpserverimport tornado.websocketi,websocket
"&gt;&gt;&gt; a = range(20)&gt;&gt;&gt; b = (5, 12)",arrays
"group 1: (1,23), (2,23), (3,23)...group 2: (68,200",algorithm
mylist = reversed(sorted(mylist)),sorting
select [fields] from users where concat(first_name,django
"""czeë__ö""",unicode
&gt;&gt;&gt; import datetime&gt;&gt;&gt; class d(d,oop
argparse,argparse
"a = pnd.dataframe(index = ['a','b','c','d','e','f'",pandas
"foo = { 'spam':'eggs', 'morefoo': { 'bar':'soap', ",xpath
"class derivedclass(str): def __new__(cls, string):",oop
"curl --data-binary ""@image.png"" -h ""content-type: ",rest
#NAME?,virtualenv
code.interact(),shell
"def testdeleteuserusernotfound(self): ""test except",testing
"heart, club, spade, diamond",enums
def unique_filename(file_name):counter = 1file_nam,filenames
"cursor.execute(""select a from tbl where b=? and c=",sql
from django.conf import settings,django
"for x in range(2, n): if n % x == 0: print n, 'equ",if-statement
from pandas import dataframeimport numpy as npx = ,pandas
os.walk,file
"tell application ""system events""set frontapp to na",objective-c
"array([[10, 20, 30, 40, 50], [ 6, 7, 8, 9, 10]])",arrays
classifier.predict(),machine-learning
"&gt;&gt;&gt; s1 = ""spam""&gt;&gt;&gt; s2 = ""spam""&g",string-interning
for line in fileinput.input(fin): fout.write(line.,string
somecode.py,module
functools.wraps,decorator
samplingrateminutes=60index = daterange(initialtim,indexing
__xxx__,lazylist
chars = string.ascii_letters + string.digits cooki,random
%hist,profiling
data[&lt;class 'pandas.core.frame.dataframe'&gt;da,pandas
sudo apt-get install python-dev,django
"def get(): return [lambda: i for i in [1, 2, 3]]fo",closures
tmp = pd.hdfstore('test.h5')chunker = pd.read_csv(,pandas
itertools,function
"cfg = codecs.open(filename, encoding='utf-8, mode=",unicode
engine = sqlalchemy.create_engine(settings.databas,django
from django.db import modelsclass person(models.mo,django
from django.contrib.auth.models import userprofile,django
"python 2.7.1 (r271:86832, jun 25 2011, 05:09:01) [",osx
"for each x, y position in the image: create a ray ",performance
python setup.py install,debian
"server1 = ['a','b','c']server2 = ['d','e','f']serv",itertools
class a: def a(): ...... def b(): a() ...... b(),nameerror
key -- valuerequest -- myrequestresponse -- myresp,hashmap
"class thing(): def __init__(self, name): self.name",class
"pd.read_csv('file.csv', delimiter=' ')",pandas
class plugin(object): class __metaclass__(type): d,metaclass
django 1.2.3,django
from django.db.models.signals import post_savefrom,django
my_data = '\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x0,numpy
arc(),image-processing
"def __lt__(self, other):",sorting
badrequesterror: nested transactions are not suppo,google-app-engine
multiprocessing.process,oop
cache-control: public,caching
subprocess.popen,subprocess
python overflowerror: cannot fit 'long' into an in,rsa
"[(1,2), (3,4)]",list
myproject/ __init__.py models/ __init__.py ... con,packages
base __init.py settings __init__.py settings.py te,django
page.xpath('//text()').each do |textnode| path = t,xpath
\w,regex
"&gt;&gt;&gt; time.strftime('%m/%d/%y',time.strptim",date
import platformplatform.dist(),linux
is_valid(),logical-operators
unittest,unit-testing
"str = ""hello""str[1::3]",slice
engine = create_engine('sqlite:////tyre77/omniclou,sqlite3
import socksimport socketsocket.socket = socks.soc,urllib2
sudo susudo pip freeze | grep -e '^django-' | xarg,django
"ioerror: (9, 'bad file descriptor')",windows
add,django
$ jython -vimport: 'exceptions' as org.python.core,import
#itemname { background-image: url('/path/to/image.,html
na,boolean-expression
"a_module = extension( ""amodule"", [""initmodule.cpp""",distribution
sawarning: predicate of partial index i_some_index,postgresql
"['foo', 'bar', 'baz']",list
oauth_request = oauth.oauthrequest.from_consumer_a,formatting
"somelist = [[0,1,2],[3,4,5],[6,7,8]]",list
"#!/usr/apps/python/bin/pythonimport matplotlib, sy",canvas
class mcdonaldsitem(item):name = field()address = ,screen-scraping
"import wpffrom system.windows import application, ",visual-studio-2010
class userstatus(object): def process_response(sel,django
dbsession.flush(),sqlalchemy
-c,compiler-construction
from my_module import my_function_with_global_varc,unit-testing
type(dfj2_market1['vspd2_perc']),matplotlib
"import numpy as npa = np.arange(20).reshape((5,4))",arrays
index.html,html
"a = plt.gca()b = a.bar(range(4), [2]*4, yerr=range",matplotlib
29 minutes: cython lists to fill scipy.sparse.coo ,scipy
none,django
print,http
from sklearn.linear_model import sgdclassifierdef ,machine-learning
python-rq,asynchronous
"rating_choices = zip(range(1, 6), range(1, 6))clas",django
foo(bar()),callback
for i in range(10):x = 1,validation
"cumf( func, array) ",numpy
#prewrittenclass sensor(object): def __init__(self,constructor
python manage.py runserver --verbosity 2,django
node,layout
c:&gt; my_script.py arg1 arg2 arg3,windows
sudo port -v install opencv +python26,osx
"class mysocket: """"""demonstration class only - code",sockets
"grid = [ [ 08, 02, 22, 97, 38, 15, 00, 40, 00, 75,",octal
show(),osx
cprofile,garbage-collection
"x = [false, false, true, true]",list
"def exam_edit(request,examname,number=0): numner =",django
dequeobj = deque(mydata)my_list= list()for obj in ,list
df,numpy
import matplotlib.pyplot as pltimport numpy as npf,vector
"dicts[0] = {'a':1, 'b':2, 'c':3}dicts[1] = {'a':1,",dictionary
"&gt;&gt;&gt; l=[1,2,3]",slice
"groups = items[0].groups.all().values_list('name',",django
df = y gdp cap0 1 2 51 2 3 92 8 7 23 3 4 74 6 7 7d,pandas
"&gt;&gt;&gt; list = [ 3, 2, 1]&gt;&gt;&gt; sorted_",dictionary
&gt;&gt; nan == nanfalse&gt;&gt; nan in [nan]true,numpy
types.builtinfunctiontype,module
"column(""dfield"", types.datetime, index=true)",sqlalchemy
"files = {'file': ('wavfile', open(filename, 'rb'))",multipartform-data
"for r in sqlcontext.sql(""select distinct fips from",apache-spark
c:\data\&gt; python myscript.py *.csv,windows
import numpy as npimport matplotlib.pyplot as pltx,osx
"""given request y and db in state x, verify that ha",unit-testing
dict,inheritance
import pygamepygame.init()pygame.mixer.music.load(,audio
get_hat(),sdl
range(),range
foo==bar and spam or eggs,syntax
import urllibimport sysfrom bs4 import beautifulso,html
mozembed = gtkmozembed.mozembed()mozembed.load_url,webkit
qtgui.qmainwindow,pyqt4
"list_with_noise = [7,2,1,2,3,4,2,1,2,3,4,9,9,1,2,3",list
git init,django
system.out.println(155 &lt;&lt; 24);,bitwise-operators
"traceback (most recent call last): file ""&lt;pyshe",gdal
import timet = time.ctime(),datetime
"print &gt;&gt; dbfile, key",syntax
import pickle  object = object()  filehandler = op,object
&lt;tr&gt;&lt;td&gt; &lt;br /&gt; {% if user or cu,google-app-engine
def show_locals(): # put something in here that sh,metaprogramming
class yieldone: def __iter__(self): try: yield 1 e,exception
f = figure()vdsvgsplot = f.add_subplot(211)vdsvgsp,matplotlib
"array([ 4.312, 4.317, 4.316, 4.32 , 4.316, 4.316, ",numpy
from lxml.html import parseparse( 'http://somesite,python-import
&lt;a&gt; &lt;b&gt;hello&lt;b&gt; &lt;b&gt;world&l,lxml
"var=['ant','bat','cat','bat','lion','goat','cat','",sorting
cursor.execute(file(path_to_file).read()),mysql
"def add_line_remove_special(ta_from,endstatus,*arg",string
"[(0, 6.0705199999997801e-08), (1, 2.10157001003007",numpy
def get_page(url): try: return urllib.urlopen(url),ftp
# a vars file:my_default_values: key = valuemy_val,dictionary
"class car(object): condition = ""new"" def __init__(",class
"df = dataframe(np.random.randn(6, 5), index=['a', ",pandas
/folder/?id=1,simplehttpserver
39817253 | sqladmin | my_host | kb_dev | sleep | 1,mysql
scapy,pickle
a = np.array(1),numpy
mymodule.py,python-sphinx
"try: try: raise exception(""in the try"") finally: r",exception
"if app.development: # live mode freebase_user = ""s",google-app-engine
"&gt;&gt;&gt; ninety_five_same([1,1,1,1,1,1,2,1,1,1",algorithm
"$ pythonpython 2.7.1+ (r271:86832, apr 11 2011, 18",google-app-engine
&amp;#976918;,html
"np.r_['0,2', [1,2,3], [4,5,6]]",numpy
__main__,numpy
"import sysimport csvreader = csv.reader(open(""file",csv
data = y gdp cap0 1 2 51 2 3 ab2 8 7 23 3 bc 74 6 ,pandas
a,list
def getlink(url): return(urllib.urlopen(url).readl,coding-style
pyspark.sql.dataframe,apache-spark
&lt;html&gt;&lt;head&gt; &lt;title&gt;{% block tit,templates
import pycurlimport cstringiocurl = pycurl.curl()b,libcurl
beak,osx
import ctypesimport stringndll = ctypes.windll('te,dll
"@app.route(""/rssread"")def pullrss(): feeditem = db",jinja2
sklearn.svm.linearsvc,scikit-learn
filehandler,logging
@task()def async_work(info): ...,django
"[(0, 100), (150, 220), (500, 1000)]",data-structures
"form.myfield.choices=[(""1"",""choice1""), (""2"",""choic",html
import requestsrequests.get('https://www.digitaloc,google-app-engine
threading.thread.join,multithreading
twisted.web2,http
score = +1print score&gt;&gt; 1,number-formatting
&gt;&gt;&gt; print -300 % 800&gt;&gt;&gt; 500,modulo
class myfamily(models.model): family_size = models,django
foo.bar,debugging
print,unicode
dendrogram,osx
not null,sqlite3
"&gt;&gt;&gt;&gt; listsum([1,3,4,5,6])19",list
paramiko,ssh
b=a,numpy
%(here)s/other/template.html,jinja2
"class person(): def __init__(self, name, phone): s",inheritance
†©,unicode
"a = ""\u0432""b = u""\u0432""c = b""\u0432""d = c.decode",string
from functools import wrapsdef try_except(fn): def,exception
hashable,dictionary
ndimage.distance_transform_edt,arrays
strace,ruby
"gmail_user = ""me@gmail.com""gmail_pwd = ""password""t",smtplib
# first attempt:selenium-node: service.restart# an,service
"from pyside import qtcore, qtguiimport timeclass u",multithreading
"avg_image = numpy.mean(img_array, axis=0)std_image",profiling
git diff,git
"&lt;table class=""details"" border=""0"" cellpadding=""",linux
uncertainties,import
pandas.get_dummies(),pandas
"l=[1,2,3,0,0,1]for i in range(0,len(l)): if l[i]==",list
libadd = cdll.loadlibrary('./libbin.so') ,fortran
from errno import errorcodeprint errorcode[2],unix
unshift(),redo
matplotlib,matplotlib
models.py,django
import cv2import numpy as npimport timeimg = cv2.i,opencv
import subprocesssubprocess.call(['proc1']) # this,environment-variables
aspectj,aop
"import random card = random.choice ([""hearts"", ""cl",list
class user(models.model): # ... loves = models.man,django
0 the 610 chased 3110 dog 21110 mouse 21111 cat 2,algorithm
class abc,oop
user@localhost:~$ cd /usr/local/myprojectuser@loca,django
calibratedclassifiercv,scikit-learn
datetime,date
"exception attributeerror: attributeerror(""'_dummyt",python-multithreading
1.24E+20,cluster-analysis
"def print(self): print(""|-------|"") print(""| %s |""",unicode
"#!/bin/sh''''exec python -u -- ""$0"" ${1+""$@""} # ''",bash
o(n),algorithm
tempfile,unit-testing
#!/bin/sh## repo default configuration##repo_url=',sh
"daily_prices = np.array([  [4,3,3,1],  [5,4,3,6], ",numpy
# x y1.0577 12.09141.0501 11.99461.0465 11.9338...,numpy
(http://www.netlib.org/blas/),windows
"cpdef float calc_class_re(list data, func callback",callback
list(file_obj),parallel-processing
&gt;&gt;&gt; datetime.utcnow() \... .replace(tzinf,datetime
"while((name = raw_input(""name: "")) != ''): names.a",syntax
# establish communication queuesmongo_input_result,error-handling
p d^n p^-1,numpy
deque,deque
"arr[first], arr[second] = arr[second], arr[first]",swap
"left = pd.dataframe({'key1': ['foo', 'bar'], 'lval",pandas
all,list
import numpy.distutils.system_info as sysinfoimpor,performance
from mock import patchfrom collections import defa,python-mock
def hard_work(n): # real hard work here passif __n,concurrency
clear(),memory
def foo(): column = 'c' table = 't' row = 1 # pref,sql
"import wavew = wave.open(""e:/local/betrayer/metali",audio
roberto@ubuntu:~/dev/myapp$ git aws.pushtraceback ,ubuntu
serializers.py,django
sudo uwsgi -s /tmp/uwsgi.sock -w myapp:app -h myvi,flask
import numpy as npfrom scipy.stats.kde import gaus,gaussian
"[('this', 'is', 'a', 'foo', 'bar', 'sentences')('i",string
import matplotlib.pyplot as ppimport numpy as nphi,matplotlib
"# works on windows.. ""rb""with open(pickle_f, 'rb')",file
phantomjs,osx
import randomimport matplotlib.pyplot as pyplotpyp,matplotlib
ps cax | grep something,command
def calculate1(input_values): if input_values not ,coding-style
python -m cprofile -o thing.txt bot4ca.py,file
alter table memberflags add column title varchar(5,database
name v1 v2 v30 a a1 a11 11 a a2 a12 22 b b1 b12 33,pandas
from functools import wrapsdef logged_in(f): @wrap,flask
"names = ['aet2000','ppt2000', 'aet2001', 'ppt2001'",list
'string'.upper(),string
&gt;&gt;&gt; setup.py install,pandas
df: currency adj_date data_col1 ...date cusip2012-,pandas
qcomboboxes,get
"ranks = [ {'url': 'example.com', 'rank': '11,279'}",sorting
os.system('c:\program files\mozilla firefox\firefo,windows
"db = nonetry: db = cx_oracle.connect('username', '",oracle
"setvariables ""a"" ""b"" ""c""",string
"[httprequest setvalue:@""nonenglishstring"" forhttph",ios
from xml.etree.elementtree import elementtreeverbo,xml
set,random
show(),matplotlib
cat file | less,scroll
"file = open(input,""r"").read()for line in file.spli",file-io
print,logging
def connect(self): url = 'http://www.mitfahrgelege,urllib2
subprocess.check_output(),linux
"""a\\nb""",string
"python 3.2.2 (default, sep 5 2011, 21:17:14) [gcc ",class
class articles: def get(self): form_name=web.input,html
prime_factor,performance
"[ 0, 0, 2, 3, 2, 4, 3, 4, 0, 0, -2, -1, -4, -2, -1",arrays
"print 'processorerror(%r, %r, %r)' % (self.file, s",vim
if a==1 and b==1: do something,conditional
curses,curses
"someinstance = myclass(""test123"") #lets say that c",oop
unicodeencodeerror: 'ascii' codec can't encode cha,unicode
def threaded_convert_to_png(self): paths = self.ge,multiprocessing
"&gt;&gt;&gt; a=np.arange(24).reshape((4,6))&gt;&gt",numpy
"import cpickle as picklef = open(""bignetworkxgraph",serialization
name.strip(),django
"[(1,'one'),(2,'two'),(3,'three')]",list
ubuntu: 12.04.2 lts desktop (virtual workstation o,pandas
">>> l = ['grail']>>> l.append(l)>>> l['grail', [..",data-structures
subplots,numpy
time_t,c
"commands: {foo, bar} foo - foo does foo bar - bar ",argparse
valueerror: all strings must be xml compatible: un,xml
"r = [ran.random() for i in range(1,100)]",random
"import redis...myserver = redis.redis(""localhost"")",types
"{ ""my_string"": ""foo bar. bar foo.""}",json
"...file ""/system/library/frameworks/python.framewo",ssl
is_valid(),django
import subprocessp = subprocess.popen('python -c \,stdout
"from decimal import decimal# outputs 25.0, problem",decimal
"core = re.compile(r""core\.\d*"")for root, dirs, fil",traversal
a b0 0.5 0.751 0.5 0.752 0.5 0.753 0.5 0.754 0.5 0,pandas
class test(model): __tablename__ = 'tests' id = co,mysql
n,algorithm
pymongo,pymongo
source = {}#...source[record] = some_file,coding-style
__hash__,class
&gt;&gt;&gt; 'string with no string formatting mar,string-formatting
model.objects.filter(...),database
class myuser(models.model): ... blocked_users = mo,django
thrilllap-2:tmp reuven$ mysqld --print-defaultsmys,sqlalchemy
import matplotlib as pltf = plt.figure()r = f.canv,matplotlib
"_, x = l.pop() # e.g., l is a list of tuples",programming-languages
x = __import__(str),metaprogramming
"&lt;html xmlns=""http://www.w3.org/1999/xhtml""&gt; ",mapping
x,numpy
view,dataframe
term-document matrix,nltk
no information available,string
"&gt;&gt;&gt; re.search(r""a{1,9999}"", 'aaa')&lt;_sr",regex
pip install phileo,django
import sysimport mmapimport osif (len(sys.argv) &g,file
import numpy as npx = np.random.randn(100000)for i,numpy
class person(object): __registry = [] def __init__,oop
class car(models.model): make = models.charfield(m,django
students = students.objects.all(),django
{% for %} {% endfor %},django
mget,database-design
"r = xrange(1, 10)twos = 0threes = 0for v in r: if ",list-comprehension
users = userstore.all()user_count = users.count(),google-app-engine
import numpy as npfrom mpl_toolkits.mplot3d import,3d
copy.deepcopy(),list
(myenv3)mat@ubuntu:~/myenv3$ bin/pip install pyqre,linux
"{{form.content(value=""please type content"")}}",flask
def enumerate(arr): (0..arr.length - 1).to_a.zip(a,ruby
"f = open('test_data.ext', 'r')",unit-testing
"import multiprocessing, time, psycopg2class consum",database-connection
1 = 0b1 -&gt; 15 = 0b101 -&gt; 310 = 0b1010 -&gt; ,bits
project/ |- pizza/ | |- __init__.py | `- margherit,python-sphinx
# dpapi access library# this file uses code origin,windows
"&gt;&gt;&gt; round(0.45, 1)0.5&gt;&gt;&gt; round(1",ruby
"&lt;span id=""searchtypeformelementsstd""&gt; &lt;la",selenium
@app.route('/scans/')def scans_query(): url_for('s,flask
"re.compile(""sent from my [iphone]|[ipod]"") ",regex
zip,iterator
"#ifdef debugprintf(""some debug log... this could p",debugging
city_id,pandas
@post_blueprint.route('/post/&lt;int:year&gt;/&lt;,flask
font,matplotlib
....downloading/unpacking cryptography&gt;=0.2.1 (,scrapy
l,reduce
busses = usb.busses()for bus in busses: devices = ,usb
"import socketfrom scapy.all import ip, tcppkt = ip",networking
create_menu(),module
for,loops
"a = np.random.randint(0, 10, (1000, 1000))a += a.t",numpy
"with open('f1') as f1, open('f2') as f2: ...",with-statement
.pyc,bytecode
"#!/usr/bin/pythonimport os, globimport imageimages",image-processing
a,regex
timedelta,division
django social auth,django
from pylab import *import timeion()tstart = time.t,numpy
"from pylab import figure, axes, pie, titlefrom mat",django
mymodel.objects.filter(**kwargs).update(my_field=f,mysql
mymodel2,django
from scipy import interpolatefrom numpy import arr,numpy
lun_q = 'lun:\s*(\d+\s?)*',regex
"&gt;&gt;&gt; image.shape(800, 600, 3)&gt;&gt;&gt; ",image-processing
"x=[1,2,[[[]]],[[]],3,4,[1,2,3,4,[[]] ] ]count_list",list
"def find_minimal_length_subarr_z(arr, min_sum): fo",algorithm
pyqtsignal,pyqt
"from .models import recipe, ingredient, instructio",import
class myclass(models.model): title = models.charfi,django
querybuilder,oop
"t = loader.get_template(""sometemplate"")c = context",django
"test = { 'works': true, 'this fails':false }",django
event,user-interface
class,inheritance
import requestsr = requests.get('https://docs.goog,pandas
tree = elementtree.elementtree.parse(inputfile)i =,xml
list = range(100),list
"def fuctionname(int, bool): if int in range (....)",boolean
from datetime import datetoday = date.today()if to,datetime
my_list = range(10)my_list[:none] == my_list[:],list
from __future__ import divisionimport mathdef squa,algorithm
'†_'.encode('utf8'),django
opals-macbook-pro:~ opalkale$ mkdir myprojectopals,flask
"df2 = df[df['a'].str.contains(""hello|world"")]",string
from numpy import *from scipy import *from pylab i,matplotlib
boto,amazon-web-services
compile,builtin
import urllib2def homepage(request): file = urllib,xml
.pyc,pyc
"import timeimport syssys.stdout.write(""1"")time.sle",posix
parser = argparse.argumentparser() parser.add_argu,argparse
from memory_profiler import profile@profiledef mes,memory
"shops=['a','b','c','d']",list
threading.event(),multithreading
tests/test_credit_card,testing
"#!/usr/bin/pythonimport sysprint ""content-type: te",cgi
"my_dict = {2:3, 5:6, 8:9}",dictionary
class threadsafetestmiddleware(object): def proces,django
if tx_avt &gt;= 100: tx = 1 elif tx_avt &lt; 100 a,if-statement
books.xml news.xmlmix.xml,linux
"bytes = min(32, os.path.getsize(filename))raw = op",unicode
hello1_”“_”—_”— __init__.py_””_”—_”— good.py,package
class foo(object): passfoo = foo()def bar(self): p,oop
"if config.has_option('options', 'myoption'): optio",configparser
pyspark,apache-spark
"&gt;&gt;&gt; hash(""\x01"")128000384&gt;&gt;&gt; has",c
"[""hello"", 120, [""world""]]",ruby
"def setup(self): """""" reset the database before eac",sqlalchemy
eval(),dynamic
urllib,string
"&lt;div class=""stream {% if streams.online %}onlin",django
"parent_pipe, child_pipe = pipe()p = process(target",multiprocessing
none,unicode
result = engine.execute('select utf_8_field from t,mysql
"&lt;meta name=""description",beautifulsoup
def fact(n): if n == 1: return n else: return n * ,julia-lang
"&lt;form method=""post"" enctype=""multipart/form-dat",file-upload
class book(models.model): author = models.foreignk,django
out.mp4,opencv
a[:] = b,indexing
"[1, 1, 2, 4, 3, 9, 4, 16, 5, 25 .....]",list
__init__.py,python-import
sklearn.pipeline.pipeline,machine-learning
# create your views here.from django import formsf,django
ctypes,memory-leaks
pip,pip
"&gt;&gt;&gt; math.pow(-3, float(1)/3)nan",math
"def function(): ""docstring"" name = ??? doc = ??? r",introspection
if input != contr-c: #do things else: #quit,error-handling
2^(128-subnet),ipv6
"fruitcolourmapping = [{'apple': 'red'}, {'banana':",dictionary
"python 2.7 (r27:82525, jul 4 2010, 07:43:08) [msc ",32bit-64bit
python manage.py shell,django
"db.zips.aggregate([{$project : {city:{$substr:[""$c",mongodb
"regex = re.compile(""(?&lt;=(\[\[)).*(?=\]\])"")r = ",regex
class userprof(db.model): name = db.stringproperty,google-app-engine
from pyspark.sql import sqlcontextsqlcontext = sql,apache-spark
import pandas as pddf = pd.dataframe.from_records(,pandas
"traceback (most recent call last):file ""c:\program",google-app-engine
def init(self): self.game_over = false self.z = -3,opengl
@user_registered.connect_via(app)def user_register,flask
import datetimenow = datetime.datetime.utcnow()pri,jinja2
class myobject(object): def __init__(self): # some,performance
"&lt;root xmlns=""http://really-long-namespace.uri"" ",xml
"data = {""a"": none, ""b"": ""yes"", ""c"": none}key_list ",perl
&gt;&gt;&gt; import numpy as np&gt;&gt;&gt; {np.na,numpy
"import logginglogger= logging.getlogger( ""module_n",logging
socket,sockets
"if c.is_friend is true&lt;a href=""#"" class=""friend",templates
import numpy as npimport matplotlib.pyplot as plti,performance
"$.post('/blog/add/ajax', { ""title"": ""hallo"", ""arti",json
manage.py shell,django
#!/usr/bin/env python3import pygletimport pygamecl,super
pyvenv-3.4 venv,unix
class c: def __init__(self): self.n = 100 pass def,profiling
"for line in open(""myfile"", ""r""): # do some process",hadoop
o(n),arrays
"list1 = ['a', 'b', 'c', 'd', 'e']list2 = [4, 2, 3,",list
class foo(db.model): name = db.stringproperty(),google-app-engine
"import logging,logging.handlersformat = ""%(asctime",logging
"points = np.array([[-468.927, -11.299, 76.271, -53",numpy
"'operating system :: microsoft','operating system ",setup.py
device_arn = 'my endpoint arn goes here'plain_text,json
a,arrays
numbers = raw_input()print len(numbers),list
ftp://something.com,url
$ adduser myapp$ sudo apt-get install python-setup,apache2
#!/usr/bin/python# coding: utf-8from xml.dom.minid,unicode
import numpy as npcimport numpy as npcdef inline i,performance
"import pylab as pltplt.figure()ax=plt.gca()y=[1,2,",table
../images.html,urlparse
"step(x, linestyle='--'), step(x, '--')",matplotlib
sudo python3 setup.py install,linux
post_save,django
"while (true): s, img = cv.read()",opencv
someclass.__init__(),variable-assignment
read,io
&lt;object: somename somesurname&gt;,django
sorted_list = []for object in my_list_of_objects: ,list
base.metadata.create_all(engine),mysql
"@app.route(""/check/&lt;id&gt;"")def check(id): doc=",mongodb
"&gt;&gt;&gt; ""\n"".join(['i', 'would', 'expect', 'm",string
suite = loader.loadtestsfrommodule(module),unit-testing
import numpy.random as randimport timex = rand.nor,numpy
valueerror: operands could not be broadcast togeth,arrays
mp3 = read_mp3(mp3_filename)audio_left = mp3.audio,audio
#! /usr/bin/env pythonimport wxclass app(wx.app): ,wxpython
bayesm,r
$ python manage.py runserver,django
"class foometa(type): def __setattr__(self, name, v",metaclass
from __future__ import divisionimport timeimport m,opencv
# http://matplotlib.org/examples/pylab_examples/sc,matplotlib
cscope,vim
list,list-comprehension
"import urllib2f = open('somelargefile.zip','rb')re",http
"""3434.35353""",regex
foo: | this is a block literalbar: &gt; this is a ,yaml
in [1]: a = range(10000)in [2]: %memusage aout[2]:,memory
#!/usr/bin/python#20_combobox.pyimport wximport wx,wxpython
split,string
"class object: def __init__(self,a,b): self.a = a s",oop
"a = np.array([10.0, 9.5, 8.0, 7.2, 7.8, 8.0, 7.0, ",arrays
"[ {k: 1, b: 2, a: 3, z: 4, ... } , ... ] ",list
"import cpickle as picklefrom numpy import sin, cos",arrays
pip install gevent,pip
"plot(x, sin(x))",matplotlib
"db.execute(""replace into "" + table + "" ("" + "","".jo",sql
def __init__(self):,naming-conventions
related_name,django
"&gt;&gt;&gt; urlparse.urlparse(""qqqq://base/id#hin",url
import sysfrom pyside import qtguiapp = qtgui.qapp,qt
"data = [1, 2, 2, 3, 4, 5, 5, 5, 5, 6, 10]",matplotlib
"import os,subprocessimport multiprocessing as mpws",multiprocessing
"def func(f1, kw='default'): passbare_argspec = ins",reflection
__iter__,iterator
"fab -f check_remote.py func:""arg1"",""arg2""...",boolean
set -x,shell
"values = ''.join((""1"" if (abs(x) &lt; silence_thre",search
tissot,matplotlib
rotatex: 100deg,css
"fill_alpha2d_complex(points, f)",linux
random,random
with manager: pass,contextmanager
"class tree(object): def __init__(self, parent=none",performance
&gt;&gt;&gt; df1 a b2000-01-01 1.4 1.42000-01-02 1,pandas
import module_name,import
int a[10];,arrays
import operatordef powers_of_ten(): n = 0 while tr,iterator
#!/usr/bin/pythonimport sysfor line in sys.stdin: ,python-import
"in [66]: a=array([0,33,4444522])in [67]: a.astype(",numpy
import sqlite3 as sqlimport numpy as npcon = sql.c,numpy
grid st1 1457 614 1458 657 1459 679 1460 732 1461 ,csv
name,django
item 1 | item 2 | item 3 &lt;&gt; item 4 &lt;&gt; ,optimization
pip install tornado,tornado
"new_pipe = os.open(pipe_path, os.o_rdonly | os.o_n",linux
"{'a': 10, 'b': 20, 'c': 10, 'd': 10, 'e': 20}",syntax
select a default region1) us-east-1 : us east (n. ,amazon-web-services
attributeerror: 'superviseddataset' object has no ,pybrain
upstream frontends {# gunicornserver 127.0.0.1:180,nginx
n % k == 0,map
"&gt;&gt;&gt; np.r_['0,2', [1,2,3], [4,5,6]] # conc",numpy
typeerror: cannot convert float to decimal. first ,floating-point
wget downloads.sourceforge.net/project/opencvlibra,linux
"y = sch.linkage(d, method='average') # d is a dist",cluster-analysis
following_companies_list_data = company.query.filt,postgresql
com.stackoverflow,packages
pandas.dataframe,group-by
with 'inheritance',inheritance
_mysql.c(42) : fatal error c1083: cannot open incl,mysql
def func1(): try: return 1 finally: return 2def fu,order
zip,list
"ts.apply(func) # for pandas seriesdf.apply(func, a",pandas
raise stopiteration,iterator
"import numpy as npa = np.arange(18).reshape(3,2,3)",arrays
set(),set
"import urllib, gzipurl = urllib.urlopen('http://ap",gzip
marshal,google-app-engine
+=,arrays
tuple,pycharm
from django.db.models.aggregates import countjobst,django
"&gt;&gt;&gt; tmp = os.system(""ls"")file1 file2&gt;&",shell
@unittest.skipif(...),unit-testing
&gt;&gt;&gt; import urllib2&gt;&gt;&gt; stream = u,http
"offsets = [( 0, 0),( 0,-1),( 0, 1),( 1, 0),(-1, 0)",tuples
"a=[1,2]while true: if indexerror: print (""stopped.",exception
"def f(accuracy=1e-3, nstep=10): ...",default
class foo(object): class_name = __module__.replace,python-internals
%matplotlib nbagg,matplotlib
integrityerror: column user_id is not unique,django
dataframe,datetime
"class user(base): id = column(integer, primary_key",sqlalchemy
"import imaplib, email#log in and select the inboxm",gmail
set,multithreading
typeerror: 'nonetype' object is not iterable,plot
if type(a) == int: do_something(a)else: do_somethi,performance
"stuff = [1, 2, 3]for l in range(0, len(stuff)+1): ",list
importerror: /home/imediava/.virtualenvs/myenv/loc,ubuntu
"eg: [[1,2,3,4],[4,5,6,7]]",list
"sample=[[1,[1,0]],[1,1]][1,[1,0]] in sample",list
boto.dynamodb.layer2,testing
-1.50E+11,scipy
"&gt;&gt;&gt; text = nltk.word_tokenize(""and now fo",tagging
from pil import imagepil_im = image.open('data/emp,ipython
"def foo(x, y, _hidden_argument=none): """""" foo a ba",python-sphinx
def listcleanup(listofelements): i = 0 for element,list
"[[1,2,3,4], -&gt; [[1,2] [3,4]  [5,6,7,8]] [5,6] [",numpy
"python 2.5.4 (r254:67916, dec 23 2008, 15:10:54) [",import
\\lambda,string
the following content types are stale and need to ,django
from pil import imageimage = image.open('balloon.j,python-imaging-library
__repr__,class
"with open(""myfile"",""w"") as myfile: #do something",with-statement
"class subsystem(object): def updategui(self, fun):",inheritance
from pymongo import mongoclient,mongodb
datetime,datetime
"&gt;&gt;&gt; a = [1,2,3,4]&gt;&gt;&gt; (i for i, v",exception
drawedges=true,matplotlib
"def save(self, commit=true): user = super(customfo",django
"elif choice == ""q"": print()",exit
def handle_get_request(): entity = entity.get_by_k,google-app-engine
return (sum(delta_list)/(len(delta_list)-1)),datetime
#!/usr/bin/env python,executable
def memo(f): table = {} def fmemo(*args): if args ,recursion
# implicit main stack5 5 +# 10# quoted branch or l,programming-languages
$ cat requirements.txt git+git://github.com/nathan,django
from pywinauto import applicationapp = application,windows
"""oid_"";""pointid"";""grid_code"";""point_x"";""point_y"";1",file
def __iter__(self): return self._iterable.__iter__,iterable
make -j,distutils
abcdekwakwa&lt;0x1a&gt;line3linllll,windows
environment:request method: getrequest url: myurl.,django
multiprocessing,memory-leaks
str,jinja2
"(foo, bar, baz) = 1, 2, 3",mass-assignment
"df.set_index(['filename','phrase'])df.ix['somepath",pandas
"given: prime factors of 180: [2, 3, 5]find maximum",algorithm
alt-f-s,keyboard-shortcuts
gcc -o foo foo.c -framework corefoundation -framew,distutils
"fn = 't.log'f = open(fn, 'r')while not _is_eof(f):",file
from django import httpfrom django.core import man,django
time.strftime(),unicode
"import pandas as pddata = pd.dataframe({'odd':[1,3",pandas
&gt;&gt;&gt; google = urllib2.urlopen('http://www.,http
"es=elasticsearch(""glycerin"")query={""query"" : {""mat",elasticsearch
id,string
zodb,logging
"list1 = [1, 2, 5, 4, 4, 3, 6]list2 = [3, 2, 1, 2, ",list
import openpyxl as oxl wb = oxl.workbook() ws = wb,xlsx
mlzboy@mlzboy-mac:~/my/ide/test$ pstree -p|grep su,reload
import sysimport timeclass myobj(object): def __in,memory-management
ipdb&gt; what=5ipdb&gt; what*** nameerror: name 'w,ipython
' ' in word == true,string
"a, b = 1, 2params = ['a', 'b']res = {p: vars()[p] ",dictionary
"df1 = dataframe([[1],[2],[3],[4],[5]], index=['one",pandas
"string_sample = ""hello world""string_sample[:-1]&gt",string
from difflib import sequencematcherimport randomra,sorting
"print '{:20,.2f}'.format(123456789)",format
eigh,numpy
"def repetitions(s): r = re.compile(r""(.+?)\1+"") fo",regex
get_dummies,pandas
x = 600851475143maxprime = 0for i in range(x): isi,range
"geolocation = models.pointfield(_('geo location'),",django
"""add new form""",web-scraping
"import locale locale.setlocale( locale.lc_all, '' ",django
settings.py,django
"void foo( unsigned char** ppmem, int* psize ){ * p",ctypes
import abcclass abstract(object): __metaclass__ = ,oop
tail,logging
"x = [1,2,3,4]y = [5,6,7,8]z = [9,10,11,12]np.savet",numpy
"{""zipcode"":""00544"",""current"":{""canwc"":null,""cig"":7",json
"&gt;&gt;&gt; xarray([ 3.08, 3.1 , 3.12, 3.14, 3.16",numpy
def burninate(b): c = [] for i in range(3): c.appe,list
foo(),conditional
if __name__ == '__main__',unit-testing
def errors(): try: errorerrorerror finally: return,exception
from django.contrib.sessions.models import session,django
urrlib2.urlopen,redirect
n,pdb
class fooform(modelform): somefield = models.charf,django
package1/__init__.py,python-import
"from pyqt4 import qtcore, qtgui",windows
"file = open(""test.txt"", ""w"")thing = {'a': 1, 'b':2",pickle
x = [[none]*5]*6,list
"error_format = ""%(levelname)s at %(asctime)s in %(",logging
'0\r\x82\x0bexample.com',ssl
sphinx-quickstart,git
do lots of stuff to prepare a good environementbec,scripting
"# probabilistically fetch any one of baloon, toy o",dictionary
pip,matplotlib
import typesclass oldclass: passdef test(): o = ol,class
scikit-learn,machine-learning
"foo(2,42,23,2,2)",plugins
"{field1:{value1, value2, value3}, field2{value4}}",dictionary
"ax.imshow(self.g, cmap=map, interpolation='nearest",matplotlib
"l = ['image1.jpg', 'image15.jpg', 'image12.jpg', '",sorting
status=status_new,django
d1,list
"import stringimport osf1 = open('vservice.xml', 'r",filesize
value = i % 65536,optimization
range,list-comprehension
path = /my/root/directoryfor x in list_of_vars: if,path
"import image, color, numpy# open the image filesrc",colors
gcc -pthread -fno-strict-aliasing -g -o2 -dndebug ,linux
myproject/ readme license setup.py myproject/ ... ,setuptools
timedelta64[ns],pandas
deactivatermvirtualenv my_envmkvirtualenv my_env -,django
# table modelclass testcase(base): __tablename__ =,mysql
from module import *,pyqt
"def get_pointer_coords(self, event): return self.w",gnome
"def get_google_place(request, keyword): request_ur",json
import pyodbcpyodbc.connect('driver={freetds};serv,sql-server
logger = logging.getlogger('debug0.x'),logging
types.codetype(),google-app-engine
"d = {'a': 2, 'b': 3}",ipython-notebook
from modx import *,module
boost.python,boost
"a = ""hello"" a[2] = ""m""",string
hum's,audio
"temp = numpy.genfromtxt('temperature_logging',dtyp",numpy
db.model,sqlalchemy
setup.py,setuptools
"soup.findall(name=""description"")",beautifulsoup
"in [6]: w=array([[1],[2]])in [7]: print w[[1] [2]]",numpy
[elem for pair in zip(*lists) for elem in pair],list
np.sum,numpy
archive.zip,ziparchive
rec = session.query(records).filter(records.id==r),sqlalchemy
"list_ex = [1,2,3]",random
from pil import imageimport urllib2 as urllibfd = ,python-imaging-library
"from pydes import triple_des, pad_pkcs5from binasc",django
"from app import app, dbfrom models import target d",json
intp = ctypes.pointer(ctypes.c_int)p = intp(0x1234,ctypes
2^p,bit-manipulation
"import cv,cv2w = cv2.videowriter('foo.avi', cv.fou",opencv
int,c
"the command ""psql -u postgres -c 'create extension",postgresql
set,memory-management
numpy.savetxt(),numpy
imaplib,django
&gt; # cd ..&gt; root@localhost:# uwsgi --socket 1,flask
ldflags = -lc -arch i386 -framework fwk1 -framewor,osx
public interface iinterface{ void show();} public ,oop
import zipfilefrom lxml import etreezf = zipfile.z,xml
l = list()l = [],list
template_context_processors = ['django.core.contex,django
"q = db.gqlquery(""select * from kudo where fromuser",google-app-engine
remote_output = run('mysqldump --no-data --user=us,fabric
sent = '(np (nnp hoi) (nn hallo) (nn hey) (nnp (nn,regex
&gt;&gt;&gt;[2].extend([]) == [2]false&gt;&gt;&gt;,list
__getattr__,getattr
"1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15, ...",math
openssl pkcs12 -in cred.p12 -out cert.pem -nodes -,ssl
self.nbits = n items = [] for x in xrange(n+1): on,algorithm
"class validationrule: def __init__(self, **kwargs)",syntax
"@app.route('/im/', methods=['get', 'post'])def im_",mongodb
&lt;bar&gt; &lt;foo&gt;something&lt;/foo&gt; &lt;b,lxml
hex(),binary
if,list-comprehension
genericitem,screen-scraping
import logginglogging.basicconfig( level=logging.d,logging
"import reimport sysclass token(object): """""" a simp",regex
timedrotatingfilehandler,logging
"x,y = load_svmlight_file('./gassensorarray/batch2.",scikit-learn
os,class
import sysimport feedparserimport sqlalchemyfrom s,mysql
"try: filehandle = open(filename,""r"")except: print(",utf-8
"&lt;elements&gt; &lt;elem id=""1""&gt;some element&l",xml
c:\documents and settings\vijayendra\desktop\downl,libcurl
"bpy.ops.object.select_name(""object"")",blender
import pymysqlconn = pymysql.connect(host='localho,mysql
"def splitnet(): network = [] for line in open(""/ho",list
&gt;&gt;&gt; a = []&gt;&gt;&gt; a[12]traceback (mo,exception
setup.py install,c
authentication_backends = (  'django.contrib.auth.,django
"# this does dirty magic, like generating the rever",properties
append(dataline),list
ln(x),numpy
x &gt; 7 and x &lt; 8 or x = 4,pyparsing
this is the script:import requestsimport jsonimpor,python-requests
foo = bar = baz = 5,variable-assignment
"from matplotlib import rc, font_managerfrom numpy ",latex
int t = 0; int m = t==0?100:5;,if-statement
ctrl+b,shell
class foo(object): instance_count = 0 def __init__,multithreading
field,inheritance
call,implementation
foo2 = foo.replace( hour=5 ) ,osx
b = 54.4786674627l = 17.0470721369,math
python -mtimeit -s 'import numpy as np; a = np.ran,floating-point
os.chdir(),file
manage.py runserver,django
from perl_module import * return_value = perl_func,perl
import numpy as npcimport numpy as npcimport cytho,numpy
select x from table where ...,orm
"label = re.sub(""([a-z])"","" \g&lt;0&gt;"",label)",regex
macbook:~ asif$ sudo pip install djangopassword:th,django
list(im.getdata()),python-imaging-library
with,csv
"lists[listid] = {'name': l.listname, 'docs': l.use",django
matplotlib,date
"class thread(object): def __init__(self, title, au",unicode
from flask_login import login_required @app.route(,flask
#!/usr/bin/env pythonimport numpy as npimport scip,numpy
"class man(object): def say_hi(self): print('hello,",class
foo,multithreading
class article(models.model): title = models.charfi,django
sigterm,events
fontproperties,osx
http://www.mydomain.com/hithere?image=2934,url
parser = argparse.argumentparser(description='depl,argparse
soappy,soap
"import urllibf = open('webpage.txt', 'w')html = ur",web-scraping
$ python manage.py runservervalidating models...0 ,django
"&lt;img src=""/users/username/desktop/datafolder/pi",html
send_task,celery
"append(0), append(1234), append(123), etc.def make",dictionary
[2011-10-14 13:47:51] [debug] --- starting... (smt,logging
x1 = randn(1000)y1 = randn(1000)x2 = randn(1000) *,matplotlib
^,regex
from tkinter import *def data(): for i in range(50,tkinter
"a = array([4, 1, 0, 8, 5, 2])",performance
"python 3.5.0rc2 (v3.5.0rc2:cc15d736d860, aug 25 20",bytearray
from flask import flaskfrom flask.ext.sqlalchemy i,postgresql
meteor,meteor
"regex = re.compile(""(&lt;(\d{4,5})&gt;)?"")",regex
.,string
os.startfile(),windows
"[1,5,9][2,7,3][8,4,6]",arrays
def gethtmlofurl(url): ... # expensive computation,memoization
fields,django
unittest,unit-testing
with,with-statement
"reduce(lambda x,y: x+y, [x for x in range(1,1000) ",lambda
"""concat:file1|file2""",subprocess
#recursive function that finds how many letters ca,algorithm
tl.buildout_virtual_python,virtualenv
"&gt;&gt;&gt; for i in range(0,1000):... datetime.d",timestamp
"s=""this is the string i want to split"".split()",split
"class site: def __init__(self,a,...): self.a = a .",numpy
"url(r'autocomplete/', include('autocomplete_light.",django
exit(),django
matplotlib,graphing
class a(object): def __init__(self): self.__x = no,properties
"from multiprocessing import process, queuequeue = ",queue
alembic,sqlalchemy
&gt;&gt;&gt;&gt; list_length = 4&gt;&gt;&gt;&gt; v,random
$command = '/usr/local/bin/python script.py file';,exec
"df = pd.dataframe([[1.1, 1.1, 1.1, 2.6, 2.5, 3.4,2",pandas
"""cs 2110"" =&gt; (""cs"", 2110) # 0""cs 2110 and info ",parsing
wxpython2.8-osx-unicode-2.8.11.0-universal-py2.7.d,wxpython
libjpeg.so.8: cannot open shared object file: no s,django
"cp1252_to_unicode = { ""\x85"": u'\u2026', # _—? ""\x",unicode
df['var1000'][df['type']==7] = 0df['var1001'][df[',pandas
"l = [[[[[39]]]], [1, 2, 3], [4, [5, 3], 1], [[[[8,",list
app = flask(__name__)import jinja_filters@app.temp,flask
"datetime.strptime(""december 12th, 2008"", ""%b %dth,",datetime
import sysfrom multiprocessing import poolfrom ran,parallel-processing
"def main(): print ""%s"" % fooif __name__ == ""__main",scope
"&gt;&gt;&gt; it = [1, 2, 3, 4, 5, 6, 7, 8, 9]",list
"def remove(value, deletechars): for c in deletecha",path
only(),django
"# yields values in form of ""composite_value, (fact",algorithm
@app.errorhandler(400)def custom400(error): respon,http
ix,performance
arrow,plot
runquery,generator
#!/bin/pythonimport loggingimport threadingimport ,rabbitmq
socket,sockets
"&gt; a, a.shape = (n,p)&gt; b, b.shape = (p,p)",numpy
'1',list
{'6d6e7bf221ae24e07ab90bba4452267b05db7824cd3fd1ea,dictionary
adict = defaultdict(int),sorting
"&lt;input type=""button"" name=""submit"" /&gt;",button
"app = ""c:\windows\notepad.exe""file = ""c:\path\to\f",windows
"object id = rs.get(""customer_id""); ",mysql
"import osimport timeprocess = os.popen(""top"").read",subprocess
xlrd.xldate_as_tuple,date
xx = '\x03\xff',types
from matplotlib import pyplot as pltfig = plt.figu,matplotlib
kivy,kivy
page = urllib2.urlopen(url),django
f2py,arrays
%d/%m/%y,datetime
fig1.suptitle('test')ax1 = fig1.add_subplot(221)ax,matplotlib
"&lt;a href=""http://test.com""&gt;test&lt;/a&gt;",regex
def myfunc: # some code here t1 = time.time() # bl,datetime
2&gt; /dev/null,unit-testing
table.relationship.filter( column = value ),sqlalchemy
conf.py,python-sphinx
main.py -&gt; task_runner.py -&gt; task_utils.py -,refactoring
def flat(l): count=0 for item in l: if isinstance(,list
name amount---------------alice 100bob 50charlie 2,pandas
obj = myclass()zeroth = obj[0]first = obj[1],arrays
"python 2.7.2 (default, jun 12 2011, 14:24:46) [msc",comparison
cpickle,serialization
class company(models.model): date = models.datefie,django
raise,warnings
"&gt;&gt;&gt; a, *b = (1, 2, 3)&gt;&gt;&gt; b[2, 3]",iterable-unpacking
x = 1y = 1z = 1,list-comprehension
import hashlibstring1 = u'test'hashstring = hashli,unicode
"anytext = "" in the echo chamber from ontario duo """,regex
__setattr__,setter
len,escaping
&gt;&gt;&gt; class thing(object): #...&gt;&gt;&gt;,methods
"file ""/usr/lib/python2.6/urllib.py"", line 203, in ",sockets
&gt;&gt;&gt; 'var' in dir()false&gt;&gt;&gt; def i,namespaces
__add__,operator-overloading
from django.db import modelsfrom datetime import d,django
from scipy.linalg import expmfrom numpy import mat,arrays
popen.communicate(),subprocess
"a = array([1,2,3,4,7,8,9,10,17])b = array([5,6,13,",arrays
"# greeenlogdescription ""i log stuff.""start on star",ubuntu
objectlist = conventioncard.objects.values('filena,django
"import codecsf = codecs.open(""file.txt"", ""r"", ""utf",encoding
from pylab import *clf()ax=gca()ht=ax.add_patch(re,matplotlib
&gt;&gt;&gt; def square(x): return x*x... &gt;&gt;,list-comprehension
.txt,html
win32gui,win32gui
__exit__,with-statement
is,comparison
"for i in [['a','b'],['c','d']]: query = ""insert in",mysql
def foo(): passdef bar(): passp1 = process(target=,multithreading
"save.image(""***.rdata"")",machine-learning
"l = [1,term1, 3, term2, x, term3,... z, termn]",list
"class a(object): integers = [1, 2, 3] singles = [i",scope
"class parent(object): def altered(self): print ""pa",inheritance
scikit-learn,pandas
none,key
item['model'],scrapy
"a = os.urandom(64)a.decode()a.decode(""utf-8"")",string
a,algorithm
import zipfilef = open(...)z = zipfile.zipfile(f)f,stream
class mytest(unittest.testcase): # pylint: disable,pylint
class mainhandler(tornado.web.requesthandler): def,post
mpkg,osx
"class superclass(object): def __init__(self, arg1,",inheritance
delete(),postgresql
process,multiprocessing
import unittestimport gobjectimport dbusimport dbu,unit-testing
&amp;lt;,html
import tempfiledef play_with_fd(): with tempfile.t,file
"time.struct_time(tm_year=2013, tm_mon=10, tm_mday=",datetime
io.open,io
module,scikit-learn
myobject.foo = 'bar',oop
sudo pip install lxml,linux
the day was long the way was fast,vim
&gt;&gt;&gt; import decimal&gt;&gt;&gt; decimal.de,numbers
line = 'bla bla bla&lt;form&gt;form 1&lt;/form&gt;,regex
"import restring = ""a|b|a|b|c|d|e|f|g""my_pattern = ",regex
&lt;input type='text' name='relations' value='a' /,django
"for i in range(1,10): if i is 5: i = 7",for-loop
@login_testuser,decorator
if __name__ == '__main__': app.debug = false applo,logging
float64,arrays
"&gt;&gt;&gt; d = {'a': 1, 'b': 2, 'c': 3}&gt;&gt;&",perl
"perl -e '$c=5; $d=""6""; say $c+$d' #prints 11",performance
"from pylab import *; scatter(range(10), arange(0, ",matplotlib
gc.disable,garbage-collection
collections,standard-library
"sqlite3 "".dump"" base.db | sqlite3 new.db",sqlite3
argparse,arguments
/dev/input/event*,linux
"subplot(2,2,[1,2]) % the plot will span subplots 1",matplotlib
myshtuff,pypi
importerror: dll load failed: the specified module,memory-management
hello {{world of the {{ crazy}} {{need {{ be}}}} s,regex
"ext = ["".3g2"", "".3gp"", "".asf"", "".asx"", "".avi"", "".f",list
__init__.py,documentation
def removecontrolcharacters(line): i = 0 for c in ,string
---..,algorithm
get,class
error 1018 (hy000): can't read dir of '.' (errno: ,mysql
n = int(n),performance
&gt;&gt;&gt; import psutil&gt;&gt;&gt; psutil.cpu_,multithreading
package.version,pypi
"class a: def __init__(self, opt_a, opt_b, ..., opt",api
"class gui: def __init__(self, master): self.master",multithreading
import threadingfrom gevent import monkey; monkey.,multithreading
virtualenv,flask
datetime,datetime
&gt; tar -cvf - path_to_archive/* | split -b 20m -,bash
libopenblas-base,ubuntu
class base : def __init__ (self): pass derived_val,class
"array([2011-11-15 01:08:11, 2011-11-16 02:08:04, .",datetime
"[1], [2,3,4][1,2], [3,4][1,2,3], [4]",list
findall(),regex
if true,performance
diagnosis.py,html
.png,image-processing
"[group:tapjoy]programs=tapjoy-game1,tapjoy-game2[p",configuration
test = re.compile('(?p&lt;full_path&gt;.+):\d+:\s+,regex
logging,debugging
import osfor directories in os.listdir(os.getcwd(),directory
import dbusbus = dbus.sessionbus()proxy = bus.get_,linux
"&gt;&gt;&gt; p = ether(""\xff\xff\xff\xff\xff\xff\x",scapy
my_websocket.send_message(),websocket
try: do_something1 do_something2 do_something3 do_,exception-handling
"points = [(lat1, long1), (lat2, long2) ... ] # thi",gis
#!/usr/bin/python''' generate a list of 'numbs' po,algorithm
from scipy.stats import lognormstddev = 0.85945580,statistics
"def my_split(string, split_chars): if isinstance(s",string
2u 2s 4r 4n 4m 7h 7v0 1 1 0 0 0 10 1 0 1 0 0 11 0 ,dataframe
"def foo(arg): """""" args: arg: an object that suppor",documentation
from django import formsclass cronform(forms.form),django
/home/ramashishb/local/pyenv/testenv/bin/python /o,django
hashlib,hash
class person(object): def sayhello(self): return ',class
"a, b = (1, 2)",iterable-unpacking
usercreationform,django
"sizeof({1:'hello', 2:'world'})",memory
struct.error: unpack requires a string argument of,struct
for i in xrange(...),performance
import numpy as npimport pandas as pfrom numpy.ran,pandas
"proc=subprocess.popen(executable,stdout=subprocess",performance
my_project/ package1/ __init__.py module1 module2 ,path
"from pylab import *x = [1, 2, 3, 4, 5]y = [1, 2, 2",matplotlib
base = declarative_base()metadata = base.metadatas,sqlalchemy
import numpy as npimport matplotlib.pyplot as pltm,matplotlib
numpy.array,numpy
"django.jquery(document).bind('keyup', function(eve",django
"$.ajax({ type: 'post', data: post_obj, //this is m",json
import multiprocessingimport hashlibclass checksum,multiprocessing
"class myclass:  """"""a simple example class""""""  i = ",class
with,with-statement
"x = 5y = 17z = 33filter_values = [x, y, z]filtered",pandas
"from pil import imageim = image.open(""bride.jpg"")",image
"example_list = [ {'points': 400, 'gold': 2480}, {'",list
"os.mkfifo(cs_cmd_fifo_file, 0777)io = os.open(fifo",nonblocking
"$shows = array(0 =&gt; array('id' =&gt; 1, 'name' ",arrays
"[[3, 5, 3, 5, 2, 3, 2, 4, 3, 0, 5, 0, 3, 2], [5, 2",image
"measure = raw_input(""how would you like to measure",list
os.getuid(),uid
eval,shell
cont,algorithm
"&gt;&gt;&gt; import decimal, numpy&gt;&gt;&gt; d =",numpy
$ python &gt; /dev/nullpython 2.7.3 (v2.7.3:70274d,python-interactive
"raise oserror(""directory does not exist."")",exception
"a = numpy([0, 10, 20, 30])b = numpy([20, 30, 40, 5",numpy
boto,amazon-web-services
- user a- user b- user c,django
import unittestclass myunittest(unittest.testcase),unit-testing
lowercase.perl,string
"#! /usr/bin/env pythonlist = [1,2,3,4,5,6,7,8,9,10",slice
&gt;&gt;&gt; import paramikotraceback (most recent,paramiko
bgm = nltk.collocations.bigramassocmeasures()finde,nlp
"a = np.array([ [1,2,3], [6,5,4], [0,1,0] ])maxinde",numpy
def main(): try: thread1.start() #thread is totall,multithreading
pstats,profiling
"def mail(receiver,message): import smtplib try: s=",linux
orig_out = sys.stdoutsys.stdout = stringio()rogue_,stdout
read(4),parsing
$ python3 myprog.py -i infile -o outfile$ python3 ,argparse
sqlalchemy,import
ulimit -n,ulimit
"sqlite.cursor.execute(""select * from foo"")result =",mysql
in [20]: print none or false-------&gt; print(none,boolean-logic
python-levenshtein.ratio,levenshtein-distance
echo this_is_a_testing | grep -c test,subprocess
"import pyodbcdef sql(query, target = '...', db = '",windows
setup.py,setuptools
clayton@mserver:~/python&gt; cat test1.pyimport js,json
"iconfile = open(""icon.png"")icondata = iconfile.rea",windows
&gt;&gt;&gt; from sympy.physics import units&gt;&g,math
paramiko,x11
pprint.pprint(),read-eval-print-loop
"os.spawnle(os.p_nowait, ""../bin/producenotify.py"",",process
foo.pybar.pytests/__init__.py [empty]tests/foo_tes,code-coverage
response = browser.submit(),mechanize
"def login(request): state = ""please log in below..",django
pow(),arguments
"fname = 'adobearm.log'letters = {}with open(fname,",performance
current_time = datetime.datetime.utcnow()potential,sql
%%cache,ipython
"models = [model1,model2,model3]data_sets = [data1,",unit-testing
numpy.vstack,numpy
class activeplugin(models.model): plugin_name = mo,django
decimal.decimal(math.sqrt(2)),math
"def merge(left, right): result = [] i ,j = 0, 0 wh",algorithm
ans = matrix[0][0]for x in range(len(matrix)): for,for-loop
path.nodes = ( &lt;gsnode x=535.0 y=0.0 gsline gss,list
a,list-comprehension
"'''capture.py'''import cv, syscap = cv.capturefrom",linux
string,rust
float,numpy
"def stringify(listofobjects): """""" :type listofobje",pycharm
"&gt;&gt;&gt; tmp.shape(2, 50)&gt;&gt;&gt; print tm",arrays
# simple function that does something:def myfuncti,function
sphinx-build: error: no such option: -b,python-sphinx
"&lt;table border=""1""&gt; &lt;tr style=""background-",html
a b c d 0 8 3 5 8 1 9 4 0 4 2 5 4 3 8 3 4 8 5 1,pandas
dnspython,dependency-management
&gt;&gt;&gt; from scipy.stats import hypergeom&gt;,scipy
#!/usr/bin/env pythonfrom pylab import *from scipy,numpy
__init__.pyc,module
"webdriverwait(browser, 10).until(lambda d: d.find_",selenium
write functionrepeat until working: test function ,optimization
"if 1: print ""foo""print ""bar""",indentation
1gb,windows
def get_queryset(self): from django.db.models impo,django
&gt;&gt;&gt; import numpy as np&gt;&gt;&gt; array ,arrays
ipython.parallel,mapreduce
needle,string
xmlstr = '''&lt;root&gt; &lt;head&gt;&lt;/head&gt;,xml
"# main.pyfrom flask import flask, requestapp = fla",ajax
save(),sql
ftp://ftp.cdc.gov/pub/health_statistics/nchs/nhane,ftp
"def annotate(request, ...): ... oldannotations = l",django
"""2*(i+j) &lt;= 100""",string
#!/usr/bin/env pythonimport subprocesssudopassword,shell
python,selenium
"# in mymodule.pydef factory(cls, *args, **kwargs):",callback
"input=""the stackoverflow don\'t said, \'hey what\'",regex
python manage.py collectstatic,django
time type details2013-09-01 10:19:12 utc+0800 erro,django
struct.pack,performance
try: stuff()except exception as e: if _debug and e,exception
a[1:] == a[:-1],cpython
.jpg,image
#!/usr/bin/pythonfrom subprocess import popentext_,linux
django_project/--appname1--appname2--appname3--lib,django
in [1]: import pandas as pdin [2]: df = pd.datafra,pandas
host = 'http://www.bing.com/search?q=%s&amp;go=&am,urllib2
pythonic,closures
"try:  x = 0  y = 1  z = y / x  z = z + 1  print ""z",exception-handling
import httplibimport urllibhttplib.httpconnection.,http
gui,wxpython
"select count(id), avg(a), avg(b), avg(c), avg(d) f",sql
"def methoda(arg, **kwargs): passdef methodb(arg, *",varargs
global,dictionary
&gt;&gt;&gt; su'\\u0e4f\\u032f\\u0361\\u0e4f',unicode
mechanize.browser,cookies
&gt;&gt;&gt; from collections import namedtuple&gt,pandas
numpy.where(phis.astype('str').astype('float64') !,numpy
&gt;&gt;&gt; a = list(range(10))&gt;&gt;&gt; a[0:5,list
setup: command = 'do_awesome_thing' filename = 'te,language-agnostic
"&gt;&gt;&gt; a = np.ones(1000, dtype=np.float128)+",numpy
""""""" django settings for website project.for more i",django
def worker(): while true: item = q.get() do_work(i,multithreading
&gt;&gt;&gt; message = sys.stdin.readlines(),input
import,serialization
db.model,google-app-engine
tkinter.text,text
&gt;&gt;&gt; from lxml import etree&gt;&gt;&gt; ro,xml
foo = models.foreignkey(foo),django
"import scipy.iomy_list = ['abc', 'def', 'ghi']scip",string
"base = declarative_base()engine = create_engine(r""",sqlalchemy
from pyquery import pyqueryd = pyquery('&lt;p clas,variables
lxml.html,html
.mako,templates
"data = ""437c2123""",hex
python,bash
"#!/usr/bin/pythonimport os,sysfrom scipy import st",string
yaml.dump,yaml
import zmqimport timecontext = zmq.context()# crea,zeromq
unicodedecodeerror,character-encoding
python manage.py migrate&gt;&gt;&gt; ...&gt;&gt;&g,django
def read_line(): ...s = read_line()print(s),asynchronous
"$str = ""x"" x 5;",perl
re.match([a-za-z]),regex
class ticketform(forms.form): type = type.getticke,django
project/ __init__.py main_program.py lib/ __init__,python-import
file.read(),file-io
favicon.ico,favicon
pg_hba.conf,postgresql
"""append""",argparse
list,list
public class xyz ... { @persistent private set&lt;,google-app-engine
"a = 5b = 4a, b = a + b, aprint a, b",tuples
"likes={ ""rajat"":{""music"",""x-men"",""programming"",""hi",filtering
"cdef int shiftindexes[] = [1,-1, 0, 2,-1, -1, 4, 0",arrays
lambda,class
pip install scrapy,import
*args,scope
[x x x] (one-dimensional),arrays
user,django
#!/usr/bin/env pythonimport matplotlibmatplotlib.u,matplotlib
"a = numpy.array([1,2,3,4,5,6])b = numpy.array([2,3",arrays
product(form): product = textfield('name') categor,flask
"depending upon your module selections, course lect",html
import numpy as npnp.set_precision('arbitrary') # ,math
environment:request method: postdjango version: 1.,django
./manage.py test,django
import redisimport sqlite3import timedata = {}n = ,sql
auth,django
"&lt;listen&gt;tcp:host=localhost,port=12434&lt;/li",dbus
"src=list(0,1,2,2,2,0,1,2,... ,2,1,2,1,1,0,2,1)#som",list
source number: 2592701575664680400binary (64 bits),bitmask
__get*__,getter-setter
collections.defaultdict,collections
exp = '(a+b)*40-(c-a)/0.5',expression
#!/usr/bin/pythonfrom __future__ import divisionfr,performance
select *,orm
"r""c:\windows\system32\desktop.ini""r""c:\windows\sys",windows
"curl -x post -d ""grant_type=password&amp;username=",django
wyatt - ranked # 855 with 0.006 %xavier - ranked #,regex
random r = new random(seed);r.nextdouble();,random
from sklearn.feature_extraction.text import tfidfv,document
invalid.trailing-whitespace,osx
@adecoratordef myfunc1(): # do something hereif __,runtime
"x = s.setsockopt( socket.sol_socket, socket.so_kee",tcp
import osdef main(): files = [r'c:\_local\test.txt,lambda
class widgetfile(models.model): widget = models.fo,django
"a = [3,4,5,5,5,6]b = [1,3,4,4,5,5,6,7]",list
doc = doctemplate(...) //doctemplate is a customed,reportlab
tags = e.get_all_tags() for tag in tags: print tag,amazon-web-services
120x120720x7201600x1600,imagemagick
def f(x): '''a doc string for f''' print xf # &lt;,sublimetext
scipy.sparse,numpy
"temp = ""['a','b','c']""print type(temp)#stringoutpu",string
create function one ()returns intas $$# pl/python ,postgresql
(venv) c:\(...)&gt;pip install . --no-indexignorin,git
data[4] = '20100304'data[5] = '082835',datetime
double,performance
import numpy as npimport matplotlib.pyplot as pltf,numpy
import remath='&lt;m&gt;3+5&lt;/m&gt;'print re.sub,regex
"def lite(a,b,c): #...def big(func): # func = calla",function
coerce,type-conversion
"def get_mem(servername):  res = os.popen('ssh %s """,memory
#NAME?,setuptools
"from subprocess import popen, pipe, stdoutimport p",subprocess
"a = [1, 2]",vim
%timeit,numpy
python --version,eclipse
setup.py,setuptools
________________________| || || my python script |,vim
import matplotlib.pyplot as pltfig = plt.figure()a,matplotlib
optionxform,unicode
"&gt;&gt;&gt; sm([1,3,2,1,3,2])&gt;&gt;&gt; 2",algorithm
"the_input = raw_input(""what to print?\n"")while the",organization
ionice,linux
"&lt;querydict: {u'{""content"":""aa"",""id"":""1""}': [u''",django
df1.groupby('dept')['data1'].sum()deptvalue1 1.192,pandas
pdb.set_trace(),debugging
"traceback (most recent call last): file ""&lt;conso",exception
&lt;generator object data at 0x7f5e508d93c0&gt;def,django
a,string
import matplotlib.pyplot as pltfrom scipy import s,numpy
import paramikoimport timedef disable_paging(remot,paramiko
"variable1, variable2, variable3, variable3, variab",enums
"# initializea = []# create the table (name, age, j",sorting
"def deposit(request,account_num):if request.method",django
linking /usr/local/cellar/python/2.7.3...warning: ,symlink
"def f(a,b): if a&gt;=0 and b&gt;=0: return min( f(",decorator
hunting dependencies...sh: smpeg-config: command n,linux
"a_id b c1: a1 ""up"" 1002: a2 ""down"" 1023: a3 ""up"" 1",r
decorator,decorator
setupclass,unit-testing
do()do()do(),function
from cmath import sqrta = 0.2b = 0.2 + 0jprint(sqr,math
1-math.exp(-4*1000000*-0.0641515994108),math
....running build_extgcc -pthread -fno-strict-alia,linux
re.compile('[\w_]'),regex
"queue = redis.strictredis(host='localhost', port=6",redis
"from django.db.models import get_models, get_appfo",django
import sysclass emptyargs(standarderror): passif _,exception
class modela(models.model) field1 = models.charfie,django
try...else,if-statement
import rpy2.robjects as robjectspath_to_r_source =,import
process,multiprocessing
selftest.py,python-imaging-library
"&gt;&gt;&gt;l=[1,2,3]&gt;&gt;&gt;l.append(l)&gt;&g",list
"import pymongod1 = {'p': 0.5, 'theta': 100, 'sigma",mongodb
"import urlliburllib.urlopen(""http://www.gallimard-",urllib
"x = ['a','b','c']if 'a' in x: do something",operators
"my $hash = {};$hash{""element1""}{""sub1""}{""subsub1""}",dictionary
"def find(lst,a,b): result = [] for x in lst: if x&",list
cursor,mongodb
import timewaittime = 300 # 5 minuteswhile(1): tim,gtk
*,python-datamodel
{% for item in all_items %} {{ item }}{% endfor %},jinja2
login: admin,google-app-engine
class hop(models.model): migration = models.foreig,django
"&lt;a href=""http://something""&gt;example&lt;/a&gt;",xpath
numpy.r_,function
import nltkecho nltk.__version__,linux
"&gt;&gt;&gt; q * vector3(x, y, z)vector3(x', y', z",math
"def my_decorator(f): defined_in_class = ?? print """,inspect
from __future__ import braces ,syntax-error
import pylabimport numpya = numpy.arange(int(1e7)),matplotlib
@app.before_requestdef before_request(): # the var,flask
soupstrainer,beautifulsoup
search_val,html
email_backend = 'django.core.mail.backends.smtp.em,django
/media/my_mountpoint/path/to/file.txt,linux
from django.contrib.auth.forms import usercreation,django
django-mutant 0.0.2,django
virtualenv,osx
"class a: def __init__(self, a, b): self.a = a self",arrays
"def addinfile(path, scoretoadd): num = scoretoadd ",file
"def f(a,b): return a*bfuncs = []for i in range(0,1",lambda
$ python myapp.py,django
"&gt;&gt;&gt; input = ""1.2""&gt;&gt;&gt; print '{:e}",format
from string import *from tkinter import *import tk,user-interface
uid,linux
"list1 = [good, bad, tall, big]list2 = [boy, girl, ",list
feat_1 feat_2 ... feat_n labelgene_1 100.33 10.2 .,machine-learning
"a = [1,2,3]b = [4,5,6]a.extend(b)# a is now [1,2,3",list
genfromdta(),tuples
import cstringioimport pylabfrom pil import imagep,python-imaging-library
one.py:-------def my_function(): if _debug: print ,global-variables
class foo: def __init__(self): self.bar = [] self.,immutability
"{""action"":""print"",""method"":""ondata"",""data"":""madan ",json
"[[0, 5.1, 3.5, 1.4, 0.2], [0, 4.9, 3.0, 1.4, 0.2],",list
b,oop
"a=[1,2,3]b=[4,5,6]c=[]d=[]",list
""""".join("" as fa sdf sdfsdf "".split())",string
&gt;&gt; import numpy as np&gt;&gt; xs = np.asarra,numpy
"list_a = [{'user__name': u'joe', 'user__id': 1}, {",django
"def numpy_array(data, peaks): rt_counter=0 for x i",performance
# copyright: _© 2008 etc.,encoding
from gi.repository import gtk,gtk
{% if len(some_var)&gt;1 %} ... {% endif %},flask
from sqlalchemy.engine.url import urlfrom sqlalche,postgresql
conda info pandas,anaconda
aacbbbqq,regex
"input = ""{('players',): 24, ('year',): 28, ('money",regex
$ python clonesatchmo.py,django
vid = videoinput('testadaptor');img = getsnapshot(,matlab
celery -a tasks worker,celery
initializing zc.buildoutdebug: downloading http://,buildout
() is (),comparison
"x = [0.1, 0.2, 0.4, 0.6, 0.8, 1.0, 2.0, 4.0, 6.0, ",numpy
python [file path],linux
brew install python3 --framework,vim
#!/usr/bin/python3username = 'joe'# generate passp,solaris
"rectimg = img[10:20, 10:20]",opencv
mylist[3],list
setup.py,setuptools
class of2010(object): def __init__(self): self._a ,properties
"con = s3connection(aws_access_key_id, aws_secret_a",amazon-s3
networkx,algorithm
"crypto = require ""crypto""[...]key = ""mykeywhatever",node.js
"# -*- coding: utf-8 -*-import res=""la felicit†_ †å",regex
import matplotlib.pyplot as plt;im = plt.imread(im,image
coverage,virtualenv
from exscript.util.interact import read_loginfrom ,ssh
"char ** int2str = { ""zero"", // 0 ""one"", // 1 ""two""",c++
enumerate(),enumerate
0,algorithm
raw_body = request.body,django
n x p,numpy
"os.chmod(projectpath, stat.s_iwrite | stat.s_iread",file
"$ pythonpython 2.7.1+ (r271:86832, apr 11 2011, 18",itertools
class itemprice( models.model ): price = models.de,django
auth.login,django
def compress(request): if request.post: data = req,algorithm
"a = [1,2,3]",numpy
forms.py,django
import inspectclass foo(object): passif __name__ =,initialization
"def randomizer(input,output1='random_1.txt',output",file
p0,algorithm
import csvimport osimport sysimport reimport globr,csv
[job]mailto=boblogfile=blahdeblah.txt,data-structures
in [51]:from pandas import dataframef = dataframe(,pandas
runners: emr: aws_access_key_id: xxxxxxxxxxxxx aws,amazon-emr
for item in os.listdir(rootpath): #convert to unic,string
"a=""show details1\nshow details2\nshow details3\nsh",string
datetime,datetime
(xxx) $ easy_install pycurlsearching for pycurlrea,curl
"def move(*args, **kwargs):  try: shutil.move(sourc",unit-testing
"plt.plot(x,y)plt.show()",matplotlib
stdout,stderr
parser = argparse.argumentparser()parser.add_argum,argparse
rst-mode,emacs
&gt;&gt;&gt; s = 'python'&gt;&gt;&gt; len(s)6,unicode
"time1 = ""2010-04-20 10:07:30""time2 = ""2010-04-21 1",datetime
"&gt;&gt;&gt; ""this is a sentence."".split()['this',",string
select x from mytable where x like 'beginning_of_s,sql
zz,algorithm
try: import keyringexcept importerror: print 'f',module
runtimeerror:  attempt to start a new process befo,windows
project/ module1/__init__.py module1/foo.py module,unit-testing
"./manage.py shellpython 2.7.6 (default, jun 22 201",django
from __future__ import absolute_importfrom celery ,celery
"""rb""",windows
"parser = optparse.optionparser( prog='./spill.py',",optparse
eng.traineddata,ocr
last login: sun jul 29 23:35:54 on ttys000*******s,osx
post /example/asdfas http/1.1host: example.comuser,http
site,sqlalchemy
pickle,pickle
python,regex
easy_install,visual-studio
import some_module,python-module
import numpy as npcimport numpy as np,numpy
"&gt;&gt;&gt; x = numpy.array([[1, 2],... [3, 4],..",numpy
import socket # import socket modules = socket.soc,file
vlc_path = '\\path\\to\\vlc.exe'video_path = '\\pa,windows
"&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;&lt;f",xml
my_list = []dir(my_list),function
ld_library_path=my_pathsqsub -np $1 /homedir/anoth,export
"display_list = []colours = {0: 'red', 1: 'blue', 2",algorithm
from pyside import qtcoreimporterror: dlopen(/usr/,osx
"dumped_dict = '{""debug"": false, ""created_at"": ""202",json
"import httplibcon = httplib.httpconnection(""google",sockets
struct foo{ int vals[3];};,boost
#NAME?,ubuntu
"&gt;&gt;&gt; def f(number, sigfig): return (""%.15f",floating-point
"# coding=utf-8def test_func(): u"""""" &gt;&gt;&gt; t",unicode
from matplotlib.colors import colorconverterimport,numpy
try: connection = getconnection(database) cursor =,scope
"class domainoperations: def __init__(self, domain)",multithreading
import timeimport serialser = serial.serial( port=,pyserial
itertools,functional-programming
__exit__(),exception
"in [83]:df = pd.dataframe({'a':[1,1,2,2],'b':[1,2,",pandas
while ((c = getch()) != eof) { /* do something wit,c
"l = [1, 2, 3, 4]",list
shuf file | head -n 155000000sort -r file | head -,bash
pub_key = { 'e': 322683336268012610103626362203306,coding-style
%run -i newtonsmethodmultivariate.py,sympy
"from collections import dequequeue = deque([""eric""",data-structures
myfile.npz,numpy
nosuchelementexception,exception
python manage.py migrate,django
&gt;&gt;&gt; from django.contrib.contenttypes.mode,django
def deletecontent(pfile): pfile.seek(0) pfile.trun,file-io
"dict = {'adam': 'room 430', 'bob': 'room 404'}",database
mysql_real_escape_string,mysql
# for posting the facebook tokenfrom django.views.,objective-c
"import numpy as npx = np.zeros((100,10))x.shape # ",numpy
[&lt;error level&gt;] | &lt;time&gt; | &lt;where&g,logging
app/ __init__.py foo/ a.py b.py c.py __init__.py,import
for member in my_list: print(member.str);,list
pandas.dataframe.from_csv,csv
&gt;&gt;&gt; import os&gt;&gt;&gt; os.path.join('a,language-design
"c:\&gt;python -c ""import django; print django.get_",windows
yolk -l,virtualenv
.first(),sqlalchemy
"for i, logline in enumerate(loghandle): #start mat",file
#! /usr/bin/env python #if using newer versions of,opencv
"random.gauss(mu, sigma)",gaussian
apply_freq_filter,nltk
from suds.sax.element import elementclient = clien,xml
beautifulsoup.py browser.pyc __init__.pyc sponsore,ubuntu
"@app.route('/login', methods=['post', 'get'])def l",flask
"class a(object): __slots__ = ""a"" def __init__(self",inheritance
"import subprocessp = subprocess.call('dir', shell=",shell
"&gt;&gt;&gt; from urlparse import urlparse, parse_",urlparse
"def mmapusage(): start=time.time() with open(""csvs",csv
def fibonacci(n): if n == 0: return 0 elif n == 1:,performance
"basket_one = {'fruit': 'watermelon', 'veggie': 'pu",merge
"curl -x post -d '&lt;run&gt;&lt;log encoding=""hexb",http
"resp, content = client.request(access_token_url, """,oauth
dateutil,datetime
"now = time.strftime(""%a %b %d %h:%m:%s %y"")then = ",timedelta
"def tell_the_truth() puts ""truth""end",ruby
"data 1: index, topics. data 2: index, topics, weig",matplotlib
"(x1,y1)",algorithm
"df[['income_1', 'income_2']] * df['mtaz_proportion",pandas
mary 0 1 1 1joe 1 0 1 1bob 1 1 0 1susan 1 1 1 0  m,numpy
dict,mysql
myobject.save(filename),oop
"[0,1]",random
"clahe = cv2.createclahe(cliplimit=100.0, tilegrids",image
"la = [1, 2, 3]lb = [4, 5, 6]",dictionary
"vector=[0.2,1:60,60.8];",arrays
allow_tags,flask
.encode('utf-8'),unicode
if [eri_hispanic] = 1 then return _—“hispanic_—els,numpy
@app.route('/index')def index(): return render_tem,flask
abs,arrays
#!/usr/bin/pythonimport soappyimport mysqldbdef ge,soap
{{ flag =0 }} {% for op in options %} {{op.choices,django
---- in loading function ----features = []for path,python-import
&gt;&gt;&gt; is_numeric(5)true&gt;&gt;&gt; is_nume,numpy
.rtex,vim
'drop database if exists database_of_armaments',mysql
def somefunc(*args) for x in args print x,argument-passing
"tup = ('string1','string2','string3')",tuples
from django.http import httpresponsefrom django.co,django
#NAME?,django
echo http://example.com/image.jpg | python solve_c,bash
# pylint: disable-msg-cat=wcrefi,django
# base class definitionclass classa(object): def _,inheritance
f = open('filename')lines = f.readlines()[4003:400,performance
math.cos(x),math
"[root@234571-app2 git]# ./test.py  file ""./test.py",syntax-error
&lt;? and ?&gt;,html
from django.db import models# this is to list all ,django
class someentity(models.model): some_field = model,django
$ pypypython 2.7.3 (f66246c46ca30b26a5c73e4cc95dd6,timezone
"import rere.compile(""\d{3}"")",eclipse
terminate(),linux
"def add(a,b,c,d,e): print(a,b,c,d,e)x=(1,2,3,4,5)a",list
class group(models.model): member = models.manytom,django
import java.util.hashmap;import java.util.hashset;,c++
mydir,file-io
using system;using ironpython.hosting;using micros,.net
self.logger = mylogger(),pickle
1,list
for i in range(4): for j in range(3): for k in ran,algorithm
(myvirtualenv)borrajax@borrajax-computer:~/documen,installation
"apt_pkg.packagemanager.install(""python"")",apt
"import chardet rawdata=open(infile,""r"").read()char",character-encoding
"new_type = sa.enum('nonexistent_executable', 'outp",sqlalchemy
"def mymethod(a, b, c, d, e)",parameters
from selenium import webdriverimport timehoveddome,selenium
# show some help./myprogram --help# these are equi,arguments
"a = {1: ""a"", 2: ""b""}a[3] # errora.get(3, """") # i g",arrays
doctest,testing
get(s),r
&gt;&gt;&gt; string.printable'0123456789abcdefghij,character-encoding
for k in range(num_v): b[:] = a[:] for i in range(,numpy
request.session['user_id'],session
"class iteratorwrapper1: def __init__(self, otherit",iterator
import numpy as npimport matplotlib.pyplot as pltf,matplotlib
debug = truetemplate_debug = debugtemplates = [ { ,django
"def on_status_result(self, event): if not self.pan",multithreading
clean,django
map,multiprocessing
mimetypes.guess_extension,mime-types
for i in range(100): print i,pdb
# server.pyfrom simplexmlrpcserver import simplexm,xml-rpc
#NAME?,cygwin
ftp.login=(mylogin)ftp.pass=(mypass),image
go &gt; connect to server...,xcode
def sub_set(a): if a == []: return a x = sub_set(a,recursion
__init__,yaml
scipy.integrate.ode,scipy
descriptivestatistics.getstandarddeviation,statistics
connection,sql
"def head(iterable, max=10): for cnt, el in enumera",generator
*.py,visual-studio
"dic = { 'fruit': 'apple', 'place':'table' }test = ",dictionary
"subordinates = relationship('user', backref='super",many-to-many
numpy.zeros_like,numpy
"os.system(""start cmd /c {command here}"") # launche",windows
paster create,project
alembic,migration
import pymcimport numpy as npimport matplotlib.pyp,regression
httplib,http-headers
'layer1': { 'layer2': { 'layer3_1': [ long_list_of,json
"im.save(name, quality = x) ",image
import pymc as mcimport numpy as npimport pylab as,statistics
"imshow(random.rand(8, 90), interpolation='nearest'",numpy
bitcoin sendtoaddress &lt;bitcoin address&gt; &lt;,bash
typedef struct imageinfo{ uint8_t revisionmajor; u,c
key=lambda,lambda
"start = 1 # could be anythingfor i, n in enumerate",graph
import libtorrent as ltimport timeses = lt.session,bittorrent
mount ...,unix
import pylab as pimport mpl_toolkits.mplot3d.axes3,charts
brew rm sqlite python python3,homebrew
datetime,date-arithmetic
player1.airplane5.flight6.duration = 5 hours,class
import numpy as npimport matplotlib.pyplot as pltf,numpy
warnings.warn(),warnings
# utf-8 ? we need unicodeif isinstance(unicode_or_,unicode
"tuple = ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h')",data-structures
{% load humanize %}{{ video.pub_date|naturaltime|c,django
maplist,functional-programming
__iadd__,int
&gt;&gt;&gt; # modified for readability&gt;&gt;&gt,datetime
"serversocket = socket(af_inet, sock_stream)servers",sockets
"locs = [ [1], [2] ]for loc in locs: loc = []print ",reference
equals(),google-app-engine
"a = ['foo1', 'foo2', 'foo3']b = ['bar1', 'bar2', '",loops
"list2 = [let (name,size)=lookup(productid) in (bar",haskell
from akismet import akismet,environment-variables
int(c_long(1)),ctypes
TRUE,list
multiprocessing.pool,multiprocessing
idle 1.2.2 ==== no subprocess ====&gt;&gt;&gt; imp,unit-testing
"import subprocessmycommandline = ['lumberjack', '-",command-line
"f = open(""ftmp"", ""rw"")print &gt;&gt; f, ""python""",file-io
.pyw,windows
dict,list
&gt;&gt;&gt; import time&gt;&gt;&gt; time.strftime,cross-platform
skipif(),unit-testing
&gt;&gt;&gt; qs = 'first=1&amp;second=4&amp;third=,parsing
httplib.httpconnection,get
pip install flask-login,flask
start = problem.getstartstate() stack = stack() vi,algorithm
with_metaclass(),metaclass
"import psycopg2try: conn = psycopg2.connect(""dbnam",insert
class usercontroller(object): exposed = true def _,web-services
class revision(models.model): # model junk...def s,django
subprocess,design-patterns
from lxml.html import parse p= parse(_—…http://www,windows
#include,c
import socketsocket.gethostbyname(socket.gethostna,networking
__new__(),object
__init__,class
importerror: dll load failed: %1 is not a valid wi,numpy
post_save,django
none,sql
super(),multiple-inheritance
re,regex
pythonpath,import
map,map
show(),matplotlib
name,openerp
none,numpy
multiprocessing.process,process
ascii,string
series,pandas
easy_install,windows
heapq,heap
subprocess.call,subprocess
django.contrib.auth,django
a,arrays
raise stopiteration,generator
urllib2.urlopen,dns
list,list
foo(),class
datetime,datetime
numpy,numpy
super,inheritance
pip install -r requirements.txt,installer
from numpy import *,numpy
__new__,object
@classmethod,class
numpy.array,list
p,matrix
__dir__,magic-constants
simplejson,json
list,algorithm
pandas.read_csv,pandas
if,conditional
python manage.py makemigrations,django
__import__,import
itertools,performance
list,list
python setup.py install,windows-7
requirements.txt,pip
open(),unicode
runserver,django
subprocess.popen,command-line
python,windows
\n,windows
python,numpy
__init__,properties
multiprocessing,multithreading
os.walk(),os.walk
mysql,unix
python manage.py runserver,django
str,iterable
psycopg2,django
__init__(),caching
a,arrays
p,function
vcvarsall.bat,visual-c++
python,file-io
foo,exception
with,mysql
matplotlib,matplotlib
modelform,django
__init__(),class
python setup.py build,ubuntu
python setup.py build ,mysql
views.py,django
__init__,pylint
pip,pip
modelform,django
python manage.py makemigrations,django
#NAME?,vim
entry,user-interface
runserver,django
**kwargs,kwargs
python2.6,exception-handling
__init__.py,documentation
python,osx
set,builtin
save(),django
object,attributes
i,for-loop
post,django
configparser,configparser
subprocess,subprocess
m,scipy
virtualenv,distribution
__name__,python-module
python setup.py build,mysql
x,regression
ssh,amazon-ec2
2,methods
dict,dictionary
for,for-loop
__cmp__,object
str.split,string
re,regex
mysqldb,mysql
event,django
app.yaml,google-app-engine
invalidoperationexception,exception
a,numpy
timeit,memory
set(),performance
multiprocessing.pool,threadpool
@property,descriptor
stdout,linux
tempfile,temporary-files
boost.python,callback
unittest,unit-testing
twinx(),graph
file,unix
tuple,syntax
str,variables
str,codec
ndarray,numpy
__init__.py,module
pandas.read_csv(),csv
subprocess.popen,eclipse
data,numpy
pandas.dataframe,csv
mod_wsgi,django
put(),google-app-engine
easy_install,pypi
multiprocessing,concurrency
ctypes,c
x,properties
python manage.py runserver,django
foo,generator
/usr/bin/python,emacs
process,multithreading
syncdb,django
virtualenv,virtualenv
f,tiff
nan,pandas
urllib2,urllib2
os.listdir,list
df,dataframe
yield,iterator
dir(),introspection
mkvirtualenv,virtualenv
yield,generator
object,object
manage.py syncdb,mysql
dataframe,time-series
thread,multithreading
float('nan'),windows
@login_required,django
n,generator
==,pep8
rlock,multithreading
argparse,exception-handling
==,hash
datetime,django
pickle,pickle
python -m simplehttpserver,osx
dataframe,pandas
fcntl,file-io
/usr/bin,installation
open(),django
join(),python-internals
pip,pip
nose,unit-testing
__repr__,function
python setup.py sdist,symlink
__str__,boost-python
enum,swig
"[1,2,3,4]",list
w,arrays
compile,bytecode
os.system(),multithreading
unittest,unit-testing
input,django
networkx,networkx
py.test,setuptools
easy_install,installer
int,python-decorators
iterator,list
1,parsing
__repr__,class
s,pandas
user,django
if,performance
twinx(),bokeh
datetime.datetime.now(),xml
asyncio,windows
r,numpy
urllib,url
python,eclipse
virtualenv,virtualenv
n,performance
__init__,logging
__init__.py,unit-testing
1,dictionary
pdb,debugging
import pdb; pdb.set_trace(),debugging
#NAME?,ruby
manage.py syncdb,django
django.contrib.auth,django
b,oop
ndarray,multidimensional-array
hello world,postgresql
threading.thread,exception-handling
scipy.optimize.curve_fit,scipy
web.py,google-app-engine
__init__,class
m,algorithm
multiprocessing,linux
i,generator
__doc__,introspection
a,matlab
sys.exit(1),ant
__init__,django
id,scrapy
self,self
s,string
del,coding-style
logging,logging
a,numpy
__len__,class
numpy.array,numpy
with,contextmanager
logging,logging
+,operator-overloading
numpy,c
traceback.format_exc(),stack-trace
x,c
date,date
models.py,django
csv.dictreader,csv
__init__,class
queryset,django
self,coroutine
.py,.net
json,json
raw_input(),readline
beautifulsoup,selenium
logging,logging
==,comparison
hello world,file
foo.py,multithreading
datetime.timedelta,datetime
__init__.py,import
f,function
assert,datetime
pyplot,matplotlib
nan,arrays
scipy,math
ffmpeg,terminal
.txt,python-sphinx
datetime.timedelta,sql
import *,numpy
urllib2.request,http
name,pyqt
str.format(),regex
sys.argv,flask
os.path,url
str,immutability
cpickle,file
import,import
telnet,linux
@patch,mocking
__init__(),inheritance
setup.py,setuptools
a,inheritance
\n,email
numpy,performance
ls,osx
python manage.py runserver,django
set,compare
with,coding-style
for,performance
__iter__,iterator
TRUE,google-app-engine
timeit,timeit
hash(),hash
TRUE,if-statement
df,numpy
__mul__,class
tee,file-io
virtualenvwrapper,virtualenv
TRUE,csv
wget,html
setup.py,setuptools
networkx,attributes
python,c
a,performance
modelserializer,django
__init__,3d
eval(),dynamic-programming
multiprocessing,arrays
if,matplotlib
ctypes,memory-management
boto,ssh
int,optimization
df,pandas
mwe,numpy
dict,hash
httplib,selenium
TRUE,comparison
pandas,dataframe
@staticmethod,decorator
multiprocessing,multiprocessing
requests,ssl
if,colors
int,rust
sys.path,module
__str__,bit-manipulation
random,random
pygame,image
python,amazon-ec2
subprocess,redirect
u,memory
repr,iterator
sys.path,setuptools
n,numpy
nosetests,ipython
__hash__(),hash
numpy,memory
product,django
virtualenv,pyqt
zip,linq
file,unit-testing
with,with-statement
from pyqt4.qtcore import *from pyqt4.qtgui import ,eclipse
requirements.txt,pip
a,class
pip,scala
assertionerror,assert
yield,yield
argparse,argparse
for,continue
foo,django
multiprocessing,linux
urllib2.urlopen,urllib2
a,arrays
numpy.array,numpy
memoryerror,memory
dict,dictionary
collections.defaultdict,parameters
title,xml
__add__,sum
m,numpy
def,vim
matplotlib,matplotlib
.py,django
read(),python-imaging-library
.pyw,windows
code.interact(),shell
foo,flask
namedtuple,inheritance
python setup.py install,windows-7
os.getuid(),privileges
mock,mocking
pip,dependencies
n,multithreading
pandas,pandas
foo,pickle
virtualenv,virtualenv
wget,image
test,unit-testing
imaplib,testing
python manage.py runserver,django
python setup.py install,mysql
multiprocessing,multithreading
a,numpy
pylint,pylint
signal,c
del,garbage-collection
webbrowser,internet-explorer
tail,google-app-engine
list.append(),list
random,random
matplotlib,matplotlib
"input = [1, 2, 3, 4, 5, 6, 7, 8, 9, ... ]",list
mean(),warnings
none,csv
datetime,django
none,functional-programming
pandas,json
x,unix
a,numpy
join(),pandas
logging,logging
try,return-value
site-packages,setuptools
__init__.py,python-import
sys.path,python-import
multiprocessing.manager,dictionary
object,oop
__init__(),initialization
show(),matplotlib
models.py,django
numpy,arrays
try,exception
process,multiprocessing
django.contrib.auth,django
python manage.py migrate,django
python,compiler-construction
optparse,escaping
__builtin__,decorator
&gt;,object
__init__.py,mongodb
listview,django
pandas.dataframe,pandas
__,class
__str__(),exception-handling
enum,enums
__main__,nose
python-daemon,setuptools
matplotlib,matplotlib
subprocess,multithreading
python manage.py runserver,django
__str__(),class
pdb,pdb
pip install psycopg2 ,django
ordereddict,decorator
set(),data-structures
scrapy,django
subprocess,fork
f,lambda
startswith,django
valueerror,exception
"a = [1,2,3,4,5]",arrays
is,methods
1,serialization
__init__,exception
tkinter,tkinter
multiprocessing,multithreading
__init__,dialog
$ python setup.py build,setuptools
subprocess,shell
keyboardinterrupt,unix
n,optimization
from __future__ import unicode_literals,string
subprocess,process
configparser,design
foo,exception-handling
with,ruby
\w,regex
id,django
urllib2,urllib2
ssh,argparse
connection,destructor
test.py,bash
__dict__,ordereddictionary
import,django
multiprocessing,parallel-processing
print,debugging
pdb.set_trace(),django
datetime.time,datetime
bar,string
int,string
deepcopy,sqlalchemy
python,osx
printf,printing
numpy,numpy
pyplot,matplotlib
a,floating-point
compile,distutils
matplotlib,math
admin.autodiscover(),django
list,list
testcase,unit-testing
@login_required,django
test.py,windows-runtime
*.py,windows-7
ctypes,binding
node,oop
try,debugging
import json,django
/usr/bin/python,vim
modelform,django
get,multithreading
&lt;a&gt;,beautifulsoup
__init__,arguments
test.py,performance
yield,performance
.pyc,exception
python,exception-handling
split,list
date,date
d,max
dataframe,pandas
ls,linux
self,ruby
setup.py,numpy
views.py,django
test.py,executable
dict,pickle
for,for-loop
pickle,pickle
str.encode(),string
collections.defaultdict,list
__getstate__,yaml
python,datetime
__import__,python-import
re,regex
matplotlib,numpy
d,locale
date,datetime
in,string
httplib,return-value
matplotlib.pyplot,matplotlib
pandas,numpy
.py,templates
dict,session
setup.py,importerror
float,numpy
dict,dictionary
help_text,django
datetime.datetime,datetime
lambda,ruby
__init__.py,class
__new__,string
0,loops
&amp;,set
id,linq
df,linux
__getitem__,iterator
python2.7,debian
__init__,unit-testing
__init__.py,django
with,with-statement
foo,module
python manage.py collectstatic,django
n,math
__add__,matrix
matplotlib.pyplot,matplotlib
threading.thread,multithreading
datetime.timedelta,utc
for,time
unittest,unit-testing
flask,flask
a,numpy
zip(),list
__init__.py,monkeypatching
print,parameters
# -*- coding: utf-8 -*-,encoding
pandas,numpy
mylist = list(set(mylist)),mysql
configparser,eval
open(),c
numpy,numpy
curses,curses
subprocess,io
dict.fromkeys,dictionary
multiprocessing,multithreading
@classmethod,decorator
;,excel
a,numpy
unicode,unicode
len(),list
s,math
get,api
numpy,arrays
iteritems(),dictionary
__future__,pep8
#!/usr/bin/env python,unix
x,dictionary
with,with-statement
import,import
df,pandas
post,google-app-engine
unboundlocalerror,binding
matplotlib,colors
pydoc,command-line
ctrl+c,cython
return,input
keyerror,string
csv,encoding
urls.py,django
syncdb,django
dir(),reflection
scipy,scipy
matplotlib.pyplot,matplotlib
data,arrays
argparse,path
.py,list
a,syntax
multiprocessing,unix
datetime.weekday(),c
select,file
urllib.urlretrieve,http
item,set
url,django
os.walk,os.walk
python,node.js
nan,numpy
import cherrypyclass helloworld(object): def index,cherrypy
scikit-learn,scipy
datetime,datetime
string,documentation
__getitem__,magic-methods
raw_input,string
a,arrays
map,dictionary
test,sql-server
import pdb; pdb.set_trace(),vim
virtualenv,virtualenv
foo,distutils
virtualenv,osx
staticmethod,decorator
std::vector,numpy
list,identity
ndarray,numpy
__iter__,iterator
python,osx
celery,celery
a,string
property,properties
pdb.set_trace(),debugging
m,numpy
flask,flask
paste &lt;(seq 20000000) &lt;(seq 2 20000001) &gt;,c
sys.path,linux
python,image-processing
yield,yield
easy_install,setuptools
#!/usr/bin/env python,shebang
and,boolean
django-admin,django
__getitem__,list
multiprocessing.process,multiprocessing
testcase,unit-testing
assert,json
__getitem__,profiling
"[1,2,3,4]",cython
data,django
b,numpy
float,sorting
matplotlib,matplotlib
python,json
foo,higher-order-functions
python manage.py runserver,mysql
ipdb.set_trace(),python-import
globals(),list
subprocess.call,subprocess
setup.py,installation
sys.path,osx
pyqt,text
yield,iterator
in,c
__slots__,slots
__str__,mysql
text,events
foo,command-line
beautifulsoup,beautifulsoup
multiprocessing,multithreading
df,boolean
subprocess.popen(),subprocess
# -*- coding: utf-8 -*-,utf-8
static_url,django
n,cryptography
exception,exception
.txt,regex
python setup.py build,ruby
shutil.rmtree,shutil
*args,python-sphinx
"import cvcv.namedwindow(""w1"", cv.cv_window_autosiz",opencv
httplib,http
df,numpy
src,version-control
multiprocessing,multiprocessing
pdb,debugging
__init__(),arguments
x,class
argparse,command-line-arguments
dateutil,shared-libraries
none,exception
__repr__,metaprogramming
x,exception-handling
os.system(),shell
unittest,unit-testing
json.dumps(),json
nose,django
main.py,random
a,list
"[1,2,3,4,5]",multiprocessing
package_data,manifest
pip install pillow,linux
map,map
__init__.py,model-view-controller
pip,django
pip,osx
pyodbc,excel
pandas.read_csv,pandas
import,mocking
json,xml
+,string
dict,object
__init__.py,import
view,textmate
urls.py,django
&lt;body&gt;,scrapy
exit(),flow-control
numpy,math
sqlalchemy,mysql
timeit,set
nose,testing
print,copy
except,exception
map,map
importerror: pycurl: libcurl link-time ssl backend,easy-install
ndarray,numpy
//,regex
isinstance(),exception-handling
list,list
logging,logging
dict,function-attributes
ctrl+c,osx
map,performance
python manage.py syncdb,mysql
data,numpy
pickle,serialization
#!/usr/bin/env python,linux
urllib2,urllib2
virtualenv,sudo
pdb.set_trace(),function
zlib,websocket
print(),ruby
setup.py,c
*,syntax
foo,reflection
pairs,performance
y,numpy
warnings.warn,unit-testing
super,class
try,performance
manage.py shell,django
subprocess.popen,subprocess
super(),decorator
networkx,graph
axes,matplotlib
cprofile,optimization
x,math
urllib2,node.js
struct,c
|,numpy
random,time
input,ssh
python manage.py shell,django
unittest,unit-testing
f,clojure
asyncio,multithreading
nose,nose
_,django
numpy,arrays
zip,django
matplotlib,string
foreignkey,django
user,many-to-many
for,performance
main.py,mapreduce
settings.py,django
t,multidimensional-array
'a',pandas
python,zeromq
exec,eval
list,arrays
x,numpy
dict,dictionary
dataframes,pandas
len(),class
text,elementtree
eval,eval
json,json
python manage.py migrate,django
subprocess.popen(),subprocess
urllib,download
if __name__ == '__main__',unit-testing
models.py,django
__slots__,performance
multiprocessing.pool(),multithreading
os,installer
timeit,performance
hello world,stdout
id,hash
stringio,stream
+,string
join,arrays
__new__,metaclass
scipy,scipy
changed,unit-testing
manage.py,django
"my_list = [ [1,2,3,4], [2,4,5,6] ]",multidimensional-array
n,numpy
except:,exception
task,multithreading
pandas.dataframe,pandas
__get__,decorator
python setup.py install,setup.py
dir(),class
print,flask
l,functional-programming
date,pandas
a,inheritance
sorted(),sorting
%matplotlib inline,matplotlib
__str__,class
python setup.py sdist upload,pip
__init__,python-import
import pandas,excel
__init__.py,directory
virtualenv,setuptools
atexit,atexit
py2exe,windows
data,group-by
FALSE,django
pymongo,mongodb
3,linux
distutils,setuptools
setup.py,setup.py
logging,module
mwe,numpy
user,database
numpy,arrays
pip,deployment
n,numpy
numpy,numpy
#!/usr/bin/python,crontab
yield,performance
re,regex
queryset,django
unittest,testing
python-rq,redis
datetime,datetime
"print ""hello world!""",memory
super,super
x,math
unittest,unit-testing
dataframe,pandas
recv(),asynchronous
cprofile,performance
selenium,loops
sigterm,gevent
numpy,performance
__new__,genshi
filehandler,resource-cleanup
else,if-statement
print,unicode
tkinter,tkinter
killed,django
numpy,loops
logging,multithreading
python setup.py test,unit-testing
filename,python-imaging-library
matplotlib,graphics
python.el,emacs
pyodbc,sql-server
.py,console
unicode,c
datetime,django
lxml,xml
next,ordereddictionary
manage.py runserver,django
argparse,command-line
dataframe,matplotlib
ndarray,arrays
data,json
numpy.array,numpy
pandas.dataframe,matplotlib
TRUE,indexing
pip,egg
os.system(),terminal
sys.argv,argv
file,keyword
py.test,py.test
timedelta,datetime
f2py,memory-management
multiprocessing,gevent
d = {},ironpython
raw_input,user-input
sys.stdin,process
ls,linux
#NAME?,ubuntu
python-social-auth,django
argparse,error-handling
object,object
gevent,asynchronous
flask,web-frameworks
print,windows
map,functional-programming
image,docker
\n,flask
len(),generics
python,paster
import,programming-languages
"a = [0, 1, 2, 3]for a[-1] in a: print(a[-1])",for-loop
n,optimization
s,list
tox,travis-ci
slice,syntax
virtualenv,scipy
set(),numpy
list,list
re,regex
__init__,mocking
__init__,metaclass
numpy,numpy
dict,dictionary
settings.py,django
int,list
python manage.py syncdb,django
virtualenv,osx
python manage.py runserver,django
psycopg2,postgresql
site-packages,naming
g,session
python,django
pip,selenium
__init__.py,sqlalchemy
__init__.py,exception
import,function
settings.py,django
import,open-source
python,osx
pickle,security
popen,console
requests,beautifulsoup
none,memory
setup.py,gcc
py.test,testing
df,pandas
df,pandas
numpy,matrix
c,performance
argparse,parsing
numpy,search
elementtree,xml
raw_input(),windows
models.py,django
__call__,oop
subprocess.call,windows
y,numpy
\n,bottle
range,numbers
map(),cloud
TRUE,numpy
selenium,linux
ndarray,numpy
_,string
ndarray,numpy
from,import
r,pandas
grid,operator-overloading
raise,exception
a,string
setup.py install,setup.py
python manage.py shell,django
networkx,numpy
m,memory
is,operators
-1,list
print,file
a,inheritance
tarfile,memory
render(),oop
__doc__,docstring
pandas.dataframe,pandas
print,pickle
none,arrays
sys.argv,command-line-arguments
re,regex
if,c
f,algorithm
str.format,string
i,data-structures
json,json
lambda,lambda
ctypes,windows
%timeit,ipython
/usr/bin,easy-install
read_csv,csv
urls.py,django
requirements.txt,django
c,c
sqlalchemy,sqlalchemy
view,r
s,json
setup.py,pip
with,grammar
r,r
subprocess,django
pip,pip
a,numpy
list.append(),dictionary
collections.defaultdict,collections
else,exception-handling
x,path
json.dumps(),django
set,collections
len,csv
__main__,parallel-processing
os.system(),linux
a,while-loop
raw_input,string
py.test,py.test
multiprocessing,process
__call__,postgresql
foo.py,variables
key,list
len,sorting
none,list
post,web-services
compile,compilation
app,flask
dict,dictionary
if,mysql
matplotlib,matplotlib
re,regex
keyerror,exception
numpy,numpy
mysqldb,chat
scipy,regex
bytes,variables
requests,http
with,mysql-python
python setup.py build,module
mwe,performance
_,regex
class,eclipse
hasattr,list
b,numpy
string,bpython
nan,numpy
super(),oop
random.random(),random
webapp,google-app-engine
&lt;select&gt;,google-chrome
auth_profile_module,django
dtype,csv
.pyc,django
show(),events
os,bash
parse(),scrapy
async,timer
scrapy,performance
df,pandas
list,list
x,multithreading
class,cpython
a,numpy
numpy,numpy
.,file-io
__eq__(),set
xlrd,xlrd
node,tree
__new__,django
f(),caching
celery,celery
os,posix
+,function
dataframe,pandas
_,regex
for,console
__init__,python-internals
datetime,datetime
remove,algorithm
bar,coding-style
m,design
source,bash
f,recursion
popen,pipe
python-daemon,linux
views.py,django
datetime.datetime.now(),unit-testing
a,list
pandas,pandas
default,r
dataframe,pandas
tempfile,temporary-files
doc,emacs
a,numpy
vars(),string-interpolation
__init__(),return
__cmp__,sqlalchemy
a,algorithm
math,pycharm
my_list,list
df,pandas
debug,django
main.py,module
/,regex
__del__,object-lifetime
find,mongodb
pandas.dataframe,pandas
std::vector,ctypes
dataframe,pandas
test.py,exception-handling
nan,arrays
mwe,numpy
&amp;nbsp;,beautifulsoup
del,dictionary
text,tkinter
multiprocessing.value,multiprocessing
list.sort(),list
virtualenv,virtualenv
print,oop
hex,hex
string,list
hashlib,hash
lxml,cpython
urllib2,unicode
#,string
json,json
.py,compilation
df,pandas
exec,garbage-collection
u,numpy
settings,django
pandas.dataframe,pandas
view,numpy
asyncio,python-asyncio
subprocess.popen,django
easy_install,packaging
dict,dictionary
sort(),list
n,arrays
numpy.array,list
groupby,pandas
open(),for-loop
df,pandas
killed,kill
__name__,class
for,list
__str__,string
in,django
urlparse,flask
...,osx
ffmpeg,ffmpeg
object,attributes
which,which
python manage.py syncdb,django
list,list
matplotlib,tkinter
__eq__,debugging
requests,http
subprocess.call,subprocess
counter,sorting
view,flask
object,search
python,subprocess
pip freeze,forms
1,compression
re,regex
range(),arrays
pandas.dataframe,numpy
a,numpy
django,package
.png,linux
numpy,import
[],regex
requests,http
requesthandler,tornado
key,sorting
from __future__ import absolute_import ,django
*args,coldfusion
l,algorithm
site,html
ipython,logging
subprocess.popen,unit-testing
subprocess,windows
df,datetime
getopt,getopt
web.py,web
random,largenumber
testcase,django
main.py,import
dataframe,pandas
unittest,unit-testing
"print ""hello world!""",symbian
0,algorithm
list.remove,arrays
and,machine-learning
py2exe,py2exe
insert,database
request.path,django
a,time
__file__,pyinstaller
urlparse,url
asyncio,multithreading
models.py,google-app-engine
hashlib,hash
person,protocol-buffers
settings.py,django
ipython,bash
k,indexing
"def add(x,y): return x+y",string
subprocess,bash
in,implementation
numpy,arrays
except,exception
cprofile,cprofile
x,ruby
unittest,unit-testing
heapq,performance
multiprocessing,multiprocessing
manage.py runserver,django
numpy,numpy
__main__.py,distutils
set -x,bash
dictionary,list
logging,google-app-engine
asyncio,python-asyncio
itertools.groupby(),functional-programming
a,random
itertools,list
canvas,pyqt
csv,csv
pandas.dataframe,pandas
@login_required,django
__doc__,comments
a,numpy
__mul__,override
findall,regex
subprocess.call,subprocess
n,algorithm
numpy,numpy
input,shebang
fields,timestamp
global,variables
__init__,django
numpy,algorithm
__eq__,api
manage.py,django
foreignkey,django
setup.py,wxpython
1000000,regex
list,polymorphism
null=true,django
genfromtxt,csv
multiprocessing.pool,multiprocessing
[...],self-reference
set,set
python 2.7.10,windows
requests,module
numpy.array,numpy
.,performance
stop,sockets
read(),flask
map,syntax
requests,ubuntu
tox,conda
numpy,numpy
dt,arrays
sudo easy_install pip,osx-lion
eval(),string
django,django
python,perl
a,pickle
subprocess,bash
+,parsing
input,unit-testing
pandas,matplotlib
.py,design
dataframe,matplotlib
testcase,testing
none,matlab
"print ""hello, world!""",apache
\w,regex
s,list
python manage.py syncdb,mysql
argparse,argparse
eval,eval
cpickle,string
multiprocessing,multithreading
pandas,pandas
sqlalchemy,autocomplete
id,html
next,int
k,numpy
multiprocessing,multiprocessing
pip install virtualenv,flask
pickle,pickle
'ascii' codec can't encode character u'\u2019' in ,unicode
re.sub,regex
filefield,django
subprocess,error-handling
simplejson,json
foo.py,python-import
__import__,documentation
id,serialization
finally,finally
celeryd,celery
with,c
boto,amazon-s3
tempfile.namedtemporaryfile(),file-io
pandas.dataframe,numpy
test,c
numpy,dictionary
re,regex
foo,ruby
cpickle,pickle
or,conditional-statements
next,iterator
dict,structure
socket,subclassing
time.sleep(),selenium
content,django
setup.py,distribution
a,django
os.system,perl
django,django
fabric,ubuntu
print(),visual-studio-2010
date,pandas
__init__,object-initializers
+,math
sqlalchemy,postgresql
datetime.datetime.now(),datetime
re,regex
%timeit,timing
multiprocessing,haskell
*,numpy
py2exe,logging
struct,struct
x,numpy
foreignkey,django
sudo pip install pil,python-imaging-library
source venv/bin/activate,virtualenv
datetime.datetime.now(),datetime
user,django
numpy,arrays
^,regex
subprocess,linux
__new__,inheritance
self,decorator
virtualenv,django
list,string
dataframe,pandas
argparse,unit-testing
python -m simplehttpserver,ios
mod_wsgi,apache
networkx,graph-algorithm
&gt;&gt;&gt;,subprocess
numpy,numpy
enum,loops
import,methods
from pil import image,windows
TRUE,oop
__dict__,class
urllib2.urlopen,urllib2
class,testing
1,loops
switch,optimization
u,sorting
str,class
gui,class
http://localhost:5000,facebook
//,integer-division
d,regex
==,string
datetime.datetime,datetime
a,introspection
requirements.txt,pip
__init__,flask
default,git
none,arrays
n,scipy
requests,youtube
ipdb.set_trace(),ipython
pip,vector-graphics
a,arrays
tail,unix
with,mysql-python
virtualenv,django
df,pandas
none,json
repr,repr
datetime,datetime
subprocess,pip
beautifulsoup,beautifulsoup
__iter__,class
and,methods
foreignkey,django
re.search(),regex
h5py,matlab
__main__,c
len(),numpy
json,json
scrapy,json
send,c
matplotlib,matplotlib
__del__,garbage-collection
decorator,decorator
in,postgresql
matplotlib,charts
as,if-statement
sys.path,import
TRUE,numpy
python2.7,utf-8
datetime,datetime
matplotlib,matplotlib
__init__,oop
c,function
django,django
a,class
ndarray,arrays
setup.py,tox
python manage.py migrate,django
stdout,function
float,floating-point
__init__,oop
__exit__,exception-handling
a,view
str.startswith,unicode
__init__.py,software-distribution
os.system,exception
list,list
python,matplotlib
r.text,unicode
ffmpeg,video
python manage.py runserver,django
simplehttpserver,httpserver
os.system(),cmd
std::vector,string
re.sub(),regex
dateutil,ironpython
zodb,refactoring
and,operators
df,r
/,html
networkx,dictionary
views.py,django
argparse.argumentparser,command-line
select(),pandas
object,object
lxml,lxml
pprint,pretty-print
a,algorithm
numpy.savetxt(),numpy
repr,representation
;,csv
psycopg2,postgresql
id,numpy
str.format(),string
or,regex
x,numpy
text,widget
python manage.py shell,django
test,regex
user,flask
numpy.array,numpy
subprocess,multithreading
x,numpy
scapy,ip
eval,latex
x,lambda
python,html
input(),unit-testing
py2exe,numpy
raise,exception
tzinfo,datetime
int,subclassing
__dict__,pygame
stdout,format
int,string
x,loops
settings.py,mysql
foreignkey,django
__init__.py,c
a,django
python,logging
file.write(),file-io
ctrl+c,signals
f(),python-sphinx
xlrd,xlrd
x,mathematical-optimization
curl,curl
subprocess,process
__init__,file-io
l,for-loop
dict,dictionary
re,regex
[],json
re,string
tostring(),xml
psycopg2,postgresql
str,unicode
python,windows
lxml,html
beautifulsoup,optimization
user,django
py.test,sandbox
re.sub,regex
python manage.py syncdb,django
zip,itertools
all,numpy
del,reference
import,pyqt
n,django
dir(),introspection
max,lambda
contents,save
__new__,metaprogramming
py.test,pycharm
setup.py,visual-c++
__init__.py,backwards-compatibility
raw_input(),console-application
matplotlib,numpy
set,set
input,pip
subprocess.popen,multiprocessing
unittest,unit-testing
dir(),introspection
multiprocessing,windows
errors.py,error-handling
#!/usr/bin/env python,linux
.theanorc,gpu
x,string
zip,list
input,selenium
if,list
a,tuples
while,memory
keyboardinterrupt,try-catch
a,list
strace,io
requirements.txt,django
none,list
u,matlab
x,numpy
get,tornado
id,memory
xml.dom.minidom,xml
dir(),signature
ndarray,arrays
user,sqlalchemy
re,regex
if,performance
thread,multithreading
n,math
ctypes,linux
__main__,python-module
multiprocessing,numpy
web,webserver
boto,amazon-web-services
set,collections
setup.py,py2exe
zip(),integer
while,windows
__getitem__,arrays
pip install pillow,png
sudo python setup.py install,igraph
random,numpy
__import__,module
python manage.py syncdb,django
setupclass,django
r,string
numpy,arrays
dir(list),list
python setup.py install,easy-install
os.chdir(),osx
readline,io
gevent,heroku
malloc,c
ipython,ipython
stdout,logging
htmlparser,html
json.dump,json
os.system,subprocess
sqlite3,sqlite
nosetests,unit-testing
with,exception-handling
random.shuffle,random
bool,subclass
pandas.dataframe,datetime
__repr__,constructor
deepcopy,copy
wget,urllib2
foo,distutils
python,multithreading
svg,xml
n,iterator
javascript,code-formatting
slice,numpy
__all__,api
a,arrays
TRUE,list
bytearray,stream
asyncio,python-asyncio
pandas,parsing
python setup.py develop,setuptools
pip,pip
"l = [1, 2, 3, 4]",iterator
raw_input,console
__init__,docstring
python manage.py migrate,django
argparse,unicode
#NAME?,shell
hash(),hash
nose,testing
pip install --upgrade pip,osx
runserver,django
python manage.py runserver,django
os.system,performance
r,arrays
11,numpy
__init__,pyqt4
keyerror,unit-testing
django.contrib.auth,django
for,for-loop
settings.py,django
dataframe,pandas
urllib2,amazon-web-services
twinx(),matplotlib
ndarray,numpy
#!/usr/bin/env python,shell
debug,web-applications
__init__.py,module
float,fft
grid,tkinter
numpy,numpy
put(),queue
models.py,django
struct,boost
django,django
pip install psycopg2,osx-mavericks
requests,character-encoding
next(),algorithm
struct,struct
logging,performance
lambda,lambda
os.path,path
none,c
#!/usr/bin/python# -*- coding: utf-8 -*-,shell
none,itertools
site-packages,matplotlib
enum,metaclass
urlopen,urlparse
if,django
i,arrays
sqlite3,sqlite
celery,celery
dict,dictionary
r,numpy
virtualenv,virtualenv
__all__,emacs
data,filter
data,arrays
file,mime-types
itertools,c++
pip freeze,ubuntu
time,django
__init__(),logging
l,list
'abc',string
read(),asynchronous
__init__,list
a,numpy
xlrd,xlrd
easy_install,installation
mongodb,mongodb
#NAME?,parallel-processing
requirements.txt,virtualenv
requirements.txt,django
if __name__ == '__main__',scripting
numpy,arrays
setup.py,import
url,google-app-engine
__hash__(),hash
subprocess.popen,subprocess
networkx,networkx
frozenset,immutability
app.yaml,google-app-engine
multiprocessing,function-pointers
apt-get install,progress-bar
unittest,django
python manage.py syncdb,django
__new__,constructor
timeit,timeit
id,perl
zip,generator
heapq,heap
dtype,validation
for,string
testcase,unit-testing
o(n),performance
datetime,datetime
argparse,argparse
float,floating-point
scipy.optimize.curve_fit,numpy
namedtuple,sqlite
beautifulsoup,selenium
dict,defaultdict
dev_appserver.py,google-app-engine
while,loops
object,pyqt
is,integer
n,list
os.listdir,ios
mysqldb,mysql
flask-login,unit-testing
x,attributes
tempfile,arrays
split,string
read(),bottle
__iter__,class
python,algorithm
memoryerror,memory-management
text,textbox
multiprocessing.pool,multiprocessing
pip,osx
celery,django
input(),input
re.sub,regex
k,list-comprehension
self,this
settings.py,mysql
__hash__,swig
matplotlib,algorithm
numpy,arrays
xlrd,excel
importlib,dependencies
pandas.dataframe,numpy
insert,mysql
f,newline
pythonw.exe,opencv
urls.py,django
sys.stdout,io
ftplib,ftp
#NAME?,import
df,performance
a,programming-languages
sqlalchemy,database
pandas,pandas
r,r
&lt;p&gt;,django
os.walk(),json
TRUE,list
dateutil,parsing
numpy,numpy
csv,error-handling
.py,django
threading,multithreading
hashlib,string
time.sleep(),tkinter
setup.py,import
a,numpy
m,numpy
import x,import
python setup.py install,osx
__new__,metaprogramming
groupby,pandas
collections.counter,collections
subprocess,shell
is,operators
__init__.py,django
python,stata
a,numpy
py2exe,pypy
none,metaclass
threading.event(),python-multithreading
ctrl+b,sublimetext3
keyerror,exception
os.listdir() ,directory
json,exception
d,matplotlib
view,winapi
urllib.urlopen(),api
"a = [0,1,2,3,4,5,6,7,8,9]",list
+=,data-structures
scipy.integrate.ode,scipy
__init__,properties
print,c++
iterator,iterator
class,beautifulsoup
dict,optimization
property,json
__init__.py,django
city,design
frozenset,set
python setup.py test,unit-testing
example,module
setup.py,setuptools
in,list
entry,django
string,json
super(),metaprogramming
open(),contextmanager
n,regex
pip,parsing
python,cassandra
data,numpy
yield,recursion
&lt;a&gt;,xml
file,string
a,numpy
none,timezone
\n,yaml
ipython,emacs
f,function
a,performance
/,split
cprofile,cprofile
\n,line-endings
thread,multithreading
optparse,unicode
javascript,xpath
setup.py,pip
collections.counter,random
%matplotlib inline,matplotlib
python,linux
df,filter
arrow,matplotlib
datetime,mysql
sys.argv,command-line-arguments
curl,post
python --version,windows
requirements.txt,pip
pandas,pandas
keys(),multithreading
data,django
n,algorithm
numpy,numpy
with,kivy
if __name__ == '__main__',import
urlopen,file
threading,multithreading
s,regex
git pull,git
dev_appserver.py,google-app-engine
import,eclipse
TRUE,pandas
s,object
#!/usr/bin/env python,optimization
__str__,pygtk
python -m simplehttpserver 8000,webserver
@staticmethod,class
__getattr__,getattr
int,optimization
python,design-patterns
numpy,arrays
python,profile
imaplib,email
python,windows
unittest,django
foo,debugging
pandas.read_csv,numpy
subprocess,stdout
multiprocessing,multiprocessing
&lt;p&gt;,xpath
asyncio,tcp
i,variables
\n,python-requests
dataframe,pandas
pandas,plot
scikit-learn,text
importerror,import
multiprocessing,sockets
__file__,cython
n,math
n,numpy
print,c
virtualenvwrapper,ubuntu
%paste,django
requests,excel
__init__.py,module
unittest,unit-testing
a,console
read_csv,pandas
scrapy,web-scraping
hello world,frameworks
scipy,numpy
l,debugging
open(),windows
1,celery
multiprocessing,multiprocessing
int,arrays
mock,unit-testing
from gi.repository import gtk,aptana
\w,regex
python,zeromq
python manage.py runserver,mysql
__init__,class
numpy,numpy
dict_a,dictionary
argparse,argparse
users,arrays
numpy,arrays
a,algorithm
y,matplotlib
class a(): pass,class
argparse,global-variables
import,ironpython
pcolormesh,matplotlib
pandas,statistics
wget,linux
boto,django
x,numpy
range(),list
urllib,dictionary
__setitem__,class
show_most_informative_features(),machine-learning
__init__,coding-style
read(),mechanize
template.html,flask
xlrd,excel
numpy,numpy
unicode,unicode
nonlocal,scope
ctrl+c,signals
re.sub(),regex
a,inheritance
input,io
socket,sockets
n,performance
__init__.py,pyramid
a,numpy
settings.py,django
requests,base64
python manage.py test,django
settings.py,django
foo,inheritance
__dict__,namedtuple
sum(),iterator
gc.collect,garbage-collection
login: admin,google-app-engine
multiprocessing,linux
python.el,emacs
__dict__,django
foobar(),exception
n,algorithm
multiprocessing,linux
&lt;item&gt; &lt;title&gt;item 1&lt;/title&gt; &lt,xml
float64,numpy
or,ios
format(),dictionary
lxml,xml
in,pandas
django,django
c,numpy
datetime.datetime.now(),datetime
thread,sqlalchemy
none,boolean
user,django
x,operators
a,class
logging,sockets
a,if-statement
networkx,algorithm
a,numpy
datetime,datetime
cprofile,profiling
django,django
lambda,lambda
mod_wsgi,apache
stringio,stringio
nosetests,nose
@classmethod,class-method
#!/usr/bin/env python,setup.py
eval,eval
memoryerror,performance
enumerate,enumerate
testcase,testcase
requests,inheritance
none,mysql
dataframe,date
dataframe,performance
pandas,numpy
yield,generator
main.py,class
connection,sqlalchemy
pandas.dataframe,pandas
getopt,command-line
manage.py,django
dict,urlencode
series,pandas
src,mongodb
easy_install,osx
textarea,firefox
n,file
nil,ruby
len(),big-o
numpy,algorithm
foo,c++
0,algorithm
for,dictionary
raw_input(),ncurses
zip,generator
dict,memory
py_ssize_t,c
mysqldb,mysql
insert,sqlalchemy
find,matlab
readlines(),string
key,sorting
with,with-statement
__hash__,algorithm
raw_input(),osx
.pyc,compiler-construction
xlrd,excel
enumerate,arrays
numpy.array,numpy
zipfile,zipfile
time,multithreading
settings.py,django
\n,performance
datetime,django
c++,c++
multiprocessing,multiprocessing
django.test.testcase,django
df,pandas
x,numpy
matplotlib.pyplot,windows
x,boolean
a,algorithm
stdout,pdb
lxml,xml
__init__,function
subprocess.call,multithreading
setup.py,svn
&amp;,xml
heapq,data-structures
str.format(),string
foo,sorting
in,sqlite
item,for-loop
print,django
scipy,scipy
__and__,operators
next,iterator
;,regex
unicode,serialization
distutils,batch-file
\n,list
python,dictionary
doctest,multiline
'x',pandas
x,matplotlib
numpy,numpy
[],list-comprehension
virtualenv venv --distribute,virtualenv
"a = [1,2,3,4,5]",list
a,arrays
*,windows
&lt;script&gt;,django
x,numpy
||=,ruby
numpy.array,arrays
numpy,numpy
is,comparison
dbus,dbus
numpy,arrays
python,multiprocessing
int,integer
python,elasticsearch
numpy,arrays
matplotlib,matplotlib
yield,yield
@property,django
python setup.py build,osx
__init__(),properties
tuple,c
TRUE,equals
png,image-processing
__init__,constructor
foo,numpy
__enter__,class
if,c
math,fractions
a,list
task,celery
int,int
subprocess.communicate(),string
url_for,apache
test.py,cython
__repr__,unit-testing
__init__.py,import
setup.py,svn
0,memory
main.py,subprocess
queryset,django
python setup.py install,cython
logging,unit-testing
a,attributeerror
nan,list
a,numpy
myobject,django
__init__.py,setuptools
graph,hash
n,c
docopt,command-line
pip install pillow,pillow
foo(),decorator
null,django
python setup.py install,distutils
@staticmethod,oop
m,sympy
a,numpy
find,dom
unittest,unit-testing
;,bash
if,performance
numpy.array,numpy
"if __name__ == ""__main__"":",module
__import__,import
set,data-structures
urllib2,multithreading
boto,google-app-engine
x,list
a,list
py.test,django
n,regex
raw_input,newline
xlrd,excel
py2exe,py2exe
django.contrib.auth.models.user,django
myscript.py,interactive
import numpy as np,math
__repr__,built-in
super(),multiple-inheritance
#NAME?,optimization
collections.namedtuple,python-idle
sys.stdout,readline
split,string
numpy,integer
distutils,packaging
requirements.txt,django
collections.counter,dictionary
pandas,matplotlib
0,numpy
mwe,performance
setup.py,numpy
__repr__,class
s,regex
__init__,metaprogramming
str.split,string
enumerate,matlab
[],html
lambda,functional-programming
.txt,file
xml.dom.minidom,xml
python,user-interface
0,r
ndarray,arrays
pandas.read_csv(),parsing
__exit__(),file
text,text
__str__,oop
imaplib,utf-8
n,bash
json,delphi
any(),iterable
__init__,methods
object,regex
p,arrays
__str__,function
a,numpy
\r\n,windows
a,iterable-unpacking
-1,heatmap
select(),subprocess
scikit-learn,machine-learning
a,html
numpy,numpy
foo,multithreading
virtualenv,pip
post,django
person,sqlalchemy
employees,design
__class__,syntax
scipy,numpy
%s,string
py.test,testing
scapy,scapy
and,set
os.path,path
python -m simplehttpserver 8000,http
python,multithreading
.lower(),function
subprocess,printing
sys.getsizeof,list
argparse,command-line-arguments
__init__,class
*,arrays
subprocess.popen(),osx
foreman start,django
__init__,class
nan,numpy
print,function
subprocess.popen(),subprocess
scipy.integrate.ode,ipython
data,pandas
x-axis,matplotlib
numpy,numpy
u,file
foo,set
enum,flask
#!/usr/bin/env python,zip
my_list,sorting
subprocess,popen
unittest,unit-testing
csr_matrix,scipy
setup.py,virtualenv
df,string
s1,algorithm
name,web-applications
r,r
logging,logging
none,function
setup.py,unit-testing
foo,emacs
.py,django
eval,mapping
# -*- coding: utf-8 -*-,string
sudo easy_install pip,module
shlex.split,shlex
python setup.py sdist,deployment
t,arrays
__doc__,internationalization
ld_library_path,debugging
re.sub,regex
numpy,numpy
list,list
__getitem__,iterator
s,string
n,arrays
a,numpy
python,windows
dtype,pandas
open(),linux
__eq__,equality
selenium,selenium
sqlalchemy,sql
x,django
__init__.py,google-app-engine
subprocess.popen,subprocess
a,arrays
try,exception
y,matplotlib
c,c
__init__.py,namespaces
subprocess,windows
0,matplotlib
django,django
list,list
readline,configuration
models.py,django
os.system,linux
id,django
int,ctypes
join(),multithreading
__end__,embed
.,algorithm
tkinter,sockets
requests,python-requests
__init__.py,django
python,ienumerable
__name__,function
insert,mysql
TRUE,collections
sys.path.append(),github
__del__,qt
__init__,init
y,numpy
pip,pip
random,random
python.el,multithreading
class,list
*args,caching
foo,django
foo,sqlalchemy
from numpy import *,string
i,algorithm
__init__.py,signals
raw_input,list
nose,apache-spark
python manage.py syncdb,django
y,input
__init__(),pandas
__init__.py,namespaces
series,pandas
datetime,date
deque,python-internals
x,numpy
__init__.py,flask
__init__,attributes
x,arrays
numpy,numpy
a,numpy
namedtuple,tuples
tkinter,tkinter
beautifulsoup,html
issubclass,exception
__getattr__,attr
repr(),c
numpy,arrays
foreignkey,django
__main__.py,packaging
configparser,windows
__init__,tornado
networkx,networkx
pandas,pandas
pandas.dataframe,excel
beautifulsoup,beautifulsoup
map,map
name,sqlalchemy
name,django
eval,arguments
runserver,django
multiprocessing.pool,multiprocessing
src,markdown
from,c
c,class
vector,list
json,json
.py,config
pandas,pandas
foo,inheritance
df,pandas
dict,map
shell,shell
c++,c++
yield,clojure
pip install pandas,linux
sys.getsizeof,memory
len(),tkinter
print 'hello world',exe
'x',list
text,sqlalchemy
dict,django
scipy,scipy
pip,windows
multiprocessing,amazon-ec2
TRUE,list
matplotlib,linux
json,json
setup.py,numpy
tox,testing
p,numpy
plot,matplotlib
test,windows
python setup.py build,osx
psutil,memory
df,indexing
csv,csv
socket,asynchronous
models.py,django
forms.py,django
settings.py,django
conf.py,themes
float,floating-point
struct,c
f,decorator
curses,linux
k,algorithm
range,iterator
df,pandas
property,django
logging,django
foo,data-structures
in,list
df,pandas
groupby,pandas
argparse,argparse
ans,matlab
p,python-c-api
in,sparql
map,ide
l,list
matplotlib,matplotlib
settings.py,django
import pdb; pdb.set_trace(),pdb
queryset,django
datetime.datetime.now(),yaml
a,if-statement
n,algorithm
items(),data-structures
optparse,optparse
logging,pyqt
filter,list
re.sub(),regex
# -*- coding: utf-8 -*-,django
collections.counter,performance
views.py,django
collections.ordereddict,dictionary
format,python-imaging-library
&lt;script&gt;,html
int,types
__call__,class
print,io
for,dictionary
\r\n ,yaml
unittest,unit-testing
asyncio,asynchronous
*args,documentation
else,loops
.txt,path
import *,packages
python --version,osx-lion
dataframe,pandas
yield,list
__init__(),oop
dendrogram,scipy
subprocess,multithreading
json.dumps(),json
nosetests,nose
python manage.py runserver,django
print,django
a,arrays
x,numpy
python manage.py runserver,django
readline,osx
__del__,destructor
views.py,mysql
threading,multithreading
id,methods
random,random
read_csv,csv
pygame,numpy
cscope,shell
double,c
numpy,arrays
super,multiple-inheritance
if,twisted
python manage.py syncdb,django
sys,cpython
__setattr__,list
eval(),jython
id,sqlite
user,google-app-engine
for,numpy
subprocess,bash
raw_input(),raw-input
__init__,reflection
setup.py,operating-system
eval(),ruby
models.py,mysql
dict,algorithm
values,numpy
text,types
re,regex
n,algorithm
__getitem__,introspection
from django.conf import settings,django
graph,inheritance
self,idioms
manage.py runserver,django
c,stdout
select,event-loop
#NAME?,numpy
a,numpy
stdout,function
people,generator
for,list
data,numpy
*,busyindicator
none,tuples
shell=true,subprocess
__dict__,attributes
__del__,garbage-collection
integer,types
"if __name__ == ""__main__"":",multiprocessing
wget,vagrant
yield,generator
.,code-formatting
pdb.set_trace(),pdb
__hash__,hash
setup.py install,installation
python setup.py sdist,pypi
c,numpy
getopt,c
random,unit-testing
stringvar,string
setup.py,integration-testing
dataframe,pandas
df,matplotlib
__cmp__,methods
matplotlib,matplotlib
python setup.py install,packaging
dir,perl
virtualenv,mod-wsgi
multiprocessing,performance
requests,asp.net
dir,reduce
"a = [0, 1, 2, 3]for a[-1] in a: print(a[-1])",for-loop
python,file
set,memory
test.py,ajax
sys.path,django
requests,parsing
and,logical-operators
argparse,argparse
pip install -r requirements.txt,virtualenv
dict,loops
urllib2,urllib2
test,module
id,uuid
socket,twisted
raw_input(),bash
subprocess,shell
import some_module,exception-handling
pip,security
optparse,argparse
arrow,datetime
user,django
g,graph-theory
next,d
time.time(),performance
__init__.py,environment-variables
numpy,numpy
/,regex
set,dictionary
#!/usr/bin/env python,pygtk
g,list
importerror,defaultdict
dtype,arrays
x,numpy
counter,dictionary
get,unicode
eval,eval
views.py,django
multiprocessing.pool,multiprocessing
string,dictionary
views.py,django
subprocess.popen,command-line
b,numpy
sys.path,import
__new__,new-operator
len,string
sys.path,windows
__iter__,recursion
numpy,numpy
subprocess.popen,command
float('nan'),list
map(),list
pip,git
yield,multithreading
python setup.py build,mysql
i,arrays
python,matplotlib
src,scipy
import,mercurial
is,types
networkx,numpy
python,pyside
none,dictionary
numpy.array,arrays
*args,api
a,unit-testing
dict,set
__eq__,list
post_save,django
sum(),sum
df,numpy
scikit-learn,machine-learning
scikit-learn,scikit-learn
list,numpy
list,list
exec,unicode
scipy,scipy
save(),django
\w,regex
f,coding-style
n,arrays
text,oop
unboundlocalerror,error-handling
foo,resources
#NAME?,debugging
unittest,unit-testing
m,numpy
a,arrays
dataframe,list
x,coding-style
pass,naming-conventions
namedtuple,attributes
numpy,arrays
numpy,arrays
entry,focus
select,django
a,algorithm
o,numpy
str,string
in,time
func,multithreading
x,c
float,numpy
n,arrays
dgtsv,numpy
t,multithreading
__init__.py,namespaces
get,ember.js
numpy.array,arrays
map,map
class,lxml
sqlalchemy,list
datetime,datetime
integerfield,mysql
cpickle,warnings
set,set
user,django
self,initialization
__builtin__,cpython
collections.namedtuple,namedtuple
numpy.random,numpy
setup.py,setuptools
dataframe,apache-spark
is_valid(),django-forms
title,mysql
df,pandas
datetime.isocalendar(),datetime
list,list
ipython,shell
x,json
__dict__,json
socket.error: [errno 48] address already in use,sockets
save(),io
wget,http
#,regex
pandas,csv
*,emacs
python,messaging
__getattr__,getattr
.lnk,tkinter
matplotlib,matplotlib
d,dictionary
%,html
dict,json
django,mysql
range,naming-conventions
views.py,django
n,regex
numpy,numpy
x,string
x,math
attributeerror,language-agnostic
list,list
os.system,operating-system
tkinter,tkinter
and,lambda
__mul__,class
def,django
b,pandas
python,linux
urls.py,django
none,yaml
manage.py,django
__init__(),class-variables
urllib.urlretrieve,html
data,excel
all(),iterable
exception,exception
x,numpy
.py,windows
np.nan,numpy
while,r
subprocess,postgresql
pdb,debugging
tuple,list
mongodb,mongodb
dataframe,pandas
csr_matrix,scipy
dataframes,indexing
&lt;div&gt;,parsing
0,google-app-engine
numpy,numpy
re.compile(),regex
data,performance
tuple,oop
df,numpy
__init__,class
o(n),algorithm
#NAME?,virtualenv
a,dataframe
if __name__ == '__main__',module
@classmethod,django
datetime,django
python,windows
python manage.py check,django
django.contrib.auth,django
unicode,unicode
+,regex
numpy,numpy
virtualenv,virtualenv
with,iterator
insert,html
x,statistics
"[1,2,3,4,5]",arrays
%s,string
with,file
argparse,argparse
models.py,django
datetime,datetime
re,regex
htmlparser,html
pip install scrapy,scrapy
get,perl
python,arrays
x,numpy
x,numpy
.bat,windows
f,scikit-learn
select(),sockets
help_text,django
r,parallel-processing
scapy,scapy
len,size
model,vhdl
requirements.txt,setuptools
multiprocessing,tkinter
xlrd,excel
df,numpy
networkx,math
find,linux
python2.7,google-app-engine
try,error-handling
pandas,csv
urllib2.urlopen,exception
requirements.txt,django
dataframe,terminal
__hash__,hash
a,pip
__new__,namespaces
&lt;body&gt;,html
numpy,numpy
easy_install --help ,setuptools
wget,haskell
threading.thread,multithreading
selenium,selenium
scipy.optimize.curve_fit,scipy
users,connection
mock,unit-testing
setup.py,dbus
profile,profiling
optparse,options
django.contrib.auth,django
template.html,django
@classmethod,dry
user,django
none,lxml
a,algorithm
float,numpy
ord(),cjk
re.sub,replace
string,escaping
&lt;div&gt;,selenium
for,image
"a = [1,2,3,4]",list
dataframe,numpy
__cmp__,cmp
timedelta,pandas
a,list
title,numpy
os,ipython
groupby,pandas
multiprocessing,parallel-processing
z,arrays
__init__,init
x,math
is,keyword
numpy,arrays
datetime.strptime,datetime
__init__(),oop
with,decorator
pandas,pandas
1,multiprocessing
sqlite3,concurrency
pass,for-loop
__init__,class
thread,file-io
logging,hadoop
i,arrays
pyqt,qt
import,import
**kwargs,optional-parameters
g,igraph
x,multithreading
for,sql
brew doctor,osx
name,numpy
int,cryptography
switch,switch-statement
nan,pandas
foo(),multithreading
is,syntax
__slots__,class-design
tkinter,tkinter
self,google-app-engine
to_excel,google-drive-sdk
subprocess,background
unicode,character-encoding
__call__,metaprogramming
b,pandas
pandas,pandas
sys.argv,windows
python,node.js
subprocess.popen(),path
groupby,group-by
getattr(),globals
collections.defaultdict,lua
dict,dictionary
n,varargs
matplotlib,algorithm
virtualenvwrapper,virtualenv
a,lambda
django.contrib.auth,django
int,metaclass
m,arrays
.pyc,ruby
len(),python-internals
stdout,windows
threading,multithreading
c,methods
socket.error: [errno 48] address already in use,tcp
@property,properties
re.compile(),regex
if,algorithm
/users,flask
n,list
str.format(),format
subprocess.popen,bash
imshow(),matplotlib
n,algorithm
c,ternary-operator
logging,logging
dir(),attributes
append(),list
pandas,pandas
py2exe,osx
\n,regex
meteor,mongodb
@classmethod,inheritance
python -m simplehttpserver,simplehttpserver
task,multithreading
matplotlib,matplotlib
user,google-app-engine
"a = [1,2,3]",set
example,c
ipython,ipython
value,qt
psycopg2,postgresql
float('nan'),floating-point
df,pandas
get_or_create,django
a,numpy
manage.py runserver,windows
read_csv,pandas
namedtuple,immutability
pickle,serialization
os.path.splitext,regex
namedtuple,formatting
n,generator
re,regex
id,html
ssh,process
data.txt,html
a,statsmodels
ipython,osx
mock,mocking
json,json
webbrowser,tabs
py.test,nose
matplotlib,matplotlib
pip,virtualenv
numpy,arrays
pip freeze,pip
df,pandas
tkinter,button
a,tuples
virtualenv,osx
pyodbc,sql
sklearn.pipeline.pipeline,machine-learning
r,rawstring
python,unit-testing
user,django
import,r
decorator,python-decorators
python manage.py makemigrations,django
*.py,bytecode
for,for-loop
pip,pip
boto,amazon-web-services
settings.py,django
self,naming-conventions
foo,oop
a,arrays
pandas,pandas
re.sub,regex
d,numpy
user,sqlalchemy
n,list
...,emacs
r,r
attributeerror,statistics
a,class
list,list
enum,sqlalchemy
h5py,datetime
def,flask
__del__,buffer
is,string
map,function
locale,django
subprocess.popen,shell
os.listdir,ncurses
readline,loops
touch,file-io
a,arrays
python,serialization
pip,django
xml.dom.minidom,xml
matrix,matrix
numpy,arrays
python -m simplehttpserver,osx
__new__,django
sum(),numpy
&amp;,wxpython
foo.py,linux
repr,object
a,join
df,arrays
books,list
|,jinja2
a,numpy
x,list
py.test,unit-testing
package_data,distutils
nose,unit-testing
random.random(),django
z,pandas
htmlparser,html
getopt,getopt
x,numpy
g,flask
scipy.optimize.curve_fit,scipy
import,cython
df,pandas
urllib,urllib
__init__,scrapy
foo,metaprogramming
dict,dictionary
re,regex
pandas dataframe,matplotlib
pip install mysql-python,mysql
x,string
from,datetime
df,pandas
"[1,2,3,4,5]",list
\n,string
im_class,class
math,module
test.py,debugging
@,design-patterns
sys.path.append(),import
nan,numpy
df,pandas
pandas,pandas
a,numpy
ctypes,ctypes
canvas,performance
python,kdb
none,ipython
# -*- coding: utf-8 -*-,unicode
.,regex
a,tkinter
zipfile,kml
python2.7,django
f,class
int,int
from module import *,function
eval,types
multiprocessing,numpy
csv,csv
__call__,callable
test.py,matlab
datetime,timezone
set(),list
re,regex
d,arrays
reverse,django
stringio,performance
a,numpy
sys,netbeans
subprocess,django
multiprocessing.process,udp
pip,google-app-engine
for,django
__init__.py,module
pyodbc,sql-server
socket.error: [errno 98] address already in use,heroku
random.sample,csv
wget,ubuntu
printf,sqlite
str,list
model,django
matplotlib,matplotlib
**kwargs,list
foo,matplotlib
django,django
users,numpy
r,api
__getattr__,reflection
x,statistics
pandas,pandas
request.path,cgi
#!/usr/bin/python,cron
app.yaml,google-app-engine
sys.stdout,osx
pip,pip
myscript.py,profile
person,django
datetime,datetime
setup.py,distutils
beautifulsoup,beautifulsoup
foo,subprocess
json,json
numpy.linalg.inv,numpy
id,pandas
nan,testing
1,string
os.system,windows
matplotlib,ipython-notebook
easy_install,osx
popen,linux
x,string
copy.deepcopy,real-time
in,regex
.png,com
foo,properties
for,for-loop
x,arrays
self,vim
datetime,csv
.,object
__dict__,dictionary
json,json
counter,collections
k,arrays
python setup.py install,google-app-engine
x,list
__mul__,operator-overloading
for,csv
matplotlib,matplotlib
try,json
t,arrays
x,numpy
matplotlib,matplotlib
ipython,shell
close(),sockets
@classmethod,decorator
itertools,list
**kwargs,args
@staticmethod,oop
foo.py,relative-path
e = 'a' + 'b' + 'c' + 'd',syntax
__init__.py,syntax
.readline,io
foreignkey,django
datetime,datetime
__new__,design-patterns
urllib2,urllib2
property,properties
virtualenv,virtualenv
json.dumps(),json
httplib,http
datetime.datetime,datetime
print(),class
isset(),variables
ctypes,c
__init__.py,module
optparse,command-line
match(),regex
main.py,python-import
namedtuple,python-decorators
simplejson,json
keyerror,dictionary
javadoc,documentation
pythonpath,windows
pip install scipy,install
size(),arrays
subprocess.popen(),phantomjs
make install,node.js
requirements.txt,pip
setup.py,string
settings,code-analysis
multiprocessing,logging
dataframe,dictionary
__init__.py,python-import
lambda,closures
os.listdir(),filesystems
python setup.py install,module
e.printstacktrace(),exception
__setitem__,inheritance
__init__.py,packages
the fox jumped over the log.,regex
"[1, 2, 3, 4, 5]",linked-list
show(),matplotlib
matplotlib,ubuntu
namedtuple,optional-arguments
range(),string
unicodedecodeerror,unicode
getattr(),getattr
except:,error-handling
series,numpy
datetime.datetime.now(),postgresql
values,view
__dict__,introspection
datetime.datetime,datetime
__init__(),inheritance
requirements.txt,github
__call__,methods
pip install,numpy
setup.py,django
dict.copy(),performance
__init__,override
readlines(),readlines
__init__.py,pydev
datetime,datetime
__init__,c
#NAME?,virtualenv
django,virtualenv
.bash_profile,ipython
manage.py runserver,django
__getattribute__,oop
getattr(),class
datetime,datetime
"mydict = { ""key1"": 1, ""key2"": 2, ""key3"": 3, }",indentation
threading,multithreading
keyboardinterrupt,multiprocessing
stdout,stream
logging.conf,django
exit(),ipython
__hash__(),hashtable
tostring(),string
findall(),text
input(),eval
settings.py,django
pip install -r requirements.txt,version
__init__.py,initialization
models.py,django
foobar,project
pip install,osx
__eq__,json
syncdb,django
issubclass,class
1bob5sandy,capitalize
python -m simplehttpserver 8888,windows
pip install pillow,python-imaging-library
python manage.py syncdb,json
ipython,shell
reduce(),arrays
setup.py,packaging
dataframe,pandas
items(),dictionary
__init__.py,module
enumerate,list
from django.conf import settings,django
__init__.py,distutils
main.py,distribution
app.yaml,google-app-engine
example,arguments
easy_install,django
__init__.py,python-import
format(),encoding
import module,python-import
unicodedecodeerror,linux
except,exception
"isinstance(x, str)",string
itertools,optimization
time.sleep(),multithreading
process,numpy
eval(),eval
join(),multithreading
x == y,list
pip freeze,ubuntu
matplotlib,ipython
cmd.exe,windows
socket.error: [errno 48] address already in use,simplehttpserver
foo.py,performance
virtualenv,virtualenv
printf,string-formatting
multiprocessing,multithreading
settings.py,django
simplejson,pyqt4
__init__,django
pip install,pip
findall,xpath
ndarray,numpy
strftime,http
return,c
__hash__,hash
easy_install,distutils
__getitem__,list
python,linux
__slots__,performance
foreman start,ruby
task_id,django
pip install,pip
__init__,multiple-inheritance
abc.abstractmethod,abstract-class
__init__,unit-testing
subprocess.communicate(),subprocess
urlopen,unicode
arange,numpy
__slots__,inheritance
unboundlocalerror,global-variables
pandas,matplotlib
logging,osx
flask-login,mysql
python,python-imaging-library
unittest,unit-testing
time.time(),time
namedtuple._replace,collections
__init__,class
continue,syntax-error
path.py,circular-dependency
__path__,path
importerror,windows
settings.py,django
multiprocessing,parallel-processing
namedtuple,json
#!/usr/bin/python,shebang
pandas,pandas
groupby,group-by
testcase,unit-testing
__str__,string
#NAME?,django
pythonpath,pythonpath
object,object
assert,language-design
app.run(),apache
python setup.py test,virtualenv
sort(),regex
thread,multithreading
httplib,django
unicode,string
__slots__,oop
__eq__,operator-overloading
__setitem__,dictionary
python setup.py install,setuptools
py.test,unit-testing
matplotlib.pyplot,image
httpresponse,django
requests,cookies
__init__,initialization
__new__,new-operator
__getstate__,serialization
distutils,distutils
pylint,pylint
assert,optimization
__name__,unit-testing
multiprocessing.process,multiprocessing
matplotlib,matplotlib
exit(),class
python,pandas
{{ var }},django
len(x),random
ctypes,numpy
slugify,django
__init__,class
manifest.in,packaging
urllib2,file
__init__,design
collections.defaultdict,dictionary
insert,postgresql
time.time(),c
syncdb,django
random,module
celery,django
lambda,iterator
inspect.stack,function
str.format,string
recv(),sockets
pyplot,matplotlib
exit(),ipython
except,exception
scatter(),scipy
__init__.py,continuous-integration
popen(),path
requests,python-requests
&lt;select&gt;,django
__get__,function
__eq__,python-internals
sys.path,file
super(),django
clear(),dictionary
the_job,locking
datetime,pandas
re.sub,regex
requests.get,timeout
a = [],arrays
modelform,django
__new__,constructor
__new__,new-style-class
except,exception
class meta,django
__init__,oop
urls.py,django
multiprocessing,multiprocessing
testcase,django
models.py,flask
typeerror: can't use a string pattern on a bytes-l,json
stopiteration,generator
runtimeerror: threads can only be started once,qt
python manage.py runserver,django
simplejson,xml
string.whitespace,string
__init__,design-patterns
__eq__,comparison
__init__.py,import
__init__.py,module
element,string
os.walk(),windows
static,flask
__class__,language-features
__setattr__,inheritance
ctypes,c
subprocess.popen,signals
**kwargs,function
flush(),operating-system
__class__,class
dateutil,date
scipy.misc.imresize,image-processing
datetime,parsing
datetime,timestamp
"[1,2,3,4]",algorithm
sublimerepl,ubuntu
from mypak import mymod,ipython
if (collresv.repeatability is none or collresv.som,coding-style
open(),ruby
__init__,class
testcase,unit-testing
pip install -r requirements.txt,numpy
socket,sockets
finally,error-handling
__setattr__,class
123|gsv|weather_mean|hello|joe|43.45122|gev|temp_m,django
python,fibonacci
settings.py,django
requirements.txt,setuptools
textwidth,vim
tarfile,tar
element,xml
#!/usr/bin/env python,portability
print '''dogcat''',printing
python,c
django,database
select(),select
&lt;script&gt;,django
subprocess,subprocess
save(),django
subprocess.call,subprocess
matplotlib,matplotlib
python setup.py install,google-app-engine
os.system(),operating-system
virtualenv,linux
__init__,constructor
javascript,function
__dict__,sqlalchemy
queryset,django
import,function
easy_install,django
exception,exception-handling
killed,kill
setup.py install,packaging
assertionerror,exception
__init__.py,import
attributeerror,exception
namedtuple,metaclass
python setup.py sdist,packaging
datetime.datetime.now(),django
admin.py,css
stdout,subprocess
vacuum,sql
file.txt,split
sorted(),list
nosetests,unit-testing
y-axis,matplotlib
multiprocessing,multiprocessing
unsetenv(),environment-variables
optparse,bash
bytearray,bytearray
__slots__,pickle
fibonacci,go
enumerate,django
setattr(),setattr
people,django
python setup.py sdist,installation
asyncio,multithreading
dataframe,pandas
json.dumps(),json
include,git
main.py,import
__init__,coding-style
pytest,setuptools
manage.py syncdb,django
wait_timeout,mysql
object,django
__doc__,class
requests,soap
multiprocessing.pool,design-patterns
pip freeze,pip
argparse,argparse
assertionerror,exception
wprintf,windows
&lt;script&gt;,beautifulsoup
string,string
except,exception-handling
format,matplotlib
__getstate__,serialization
requesthandler,performance
example_file.py,sys
"[1, 2, 3, 4, 5]",tuples
__hash__(),hash
python hello.py,reload
**kwargs,arguments
__getattr__,ruby
python setup.py install,ubuntu
db.model,google-app-engine
__init__,oop
super(),oop
imshow(),numpy
__init__,import
__doc__,function
pylint,code-analysis
logger = logging.getlogger(__name__),logging
python setup.py install,pip
"[1, 2, 3]",list
cpickle,performance
git commit,vim
pip freeze,pip
python,c++
isatty(),stdin
__import__,import
vars(),string
dataframe,pandas
subprocess,unicode
python setup.py install,gcc
__add__,list
__hash__,hash
setup.py,distutils
dataframe,pandas
"[0, 1, [a, b, c], 2, 3, 4]",prettify
subprocess.call,py.test
@property,caching
&lt;a&gt;,xml
genfromtxt,machine-learning
sys.path,path
#NAME?,ubuntu
__all__,coding-style
@property,decorator
asyncio,concurrency
subprocess.popen,logging
%paste,debugging
re.sub(),regex
not null,django
settings.py,django
__init__,multiple-inheritance
import,file
render(),django
memoryerror,memory-management
pip install -r requirements.txt,pip
dataframes,io
__init__,object
setup.py,cython
__init__,oop
lambda,amazon-web-services
process,multiprocessing
dataframe,pandas
set(mylist),arrays
lower_case_with_underscores,naming-conventions
except,exception
queryset,django
views.py,django
webapp,api
python manage.py shell,django
**kwargs,conventions
valueerror,exception
models.py,django
re.sub,regex
__init__,constructor
urls.py,django
matplotlib,visualization
ordereddict,dictionary
created_time,django
re.compile(),regex
sys.exit(0),apache
python,html
multiprocessing.pool,cryptography
vector,typechecking
"involved(courses, person)",dictionary
fig.savefig(),html
__file__,module
__init__,class
@classmethod,decorator
arange,numpy
os.system,stack
search(),regex
hcluster,machine-learning
sys.argv,command-line
os.walk,file-manager
easy_install,pip
pandas,pandas
select,postgresql
/var/www,django
serialize,buffer
operator.itemgetter,sorting
accumarray,numpy
datetime.strptime,datetime
__slots__,multiprocessing
__init__.py,namespaces
git diff,git
from flask.ext.sqlalchemy import sqlalchemy,amazon-web-services
gc.collect(),arrays
__hash__(),methods
settings.py,django
%timeit,performance
__slots__,weak-references
setup.py,cmake
multiprocessing,multiprocessing
exit(),python-idle
dataframe,pandas
stdout,svn
#NAME?,command-line-interface
product,generator
str(datetime_object),datetime
__import__,import
pandas,pandas
scrolledwindow,gtk
pyeval_evalcode,c
application/json,json
pandas,csv
pylint,pylint
scientificpython,pip
malloc,memory-management
app.yaml,google-app-engine
ctypes,cygwin
@property,properties
sys.path,path
/var/www,apache
import settings,django
repr(),unicode
gc.collect(),garbage-collection
sys.argv,windows
&lt;a&gt;,lxml
#!/usr/bin/env python,osx
foobar,debugging
sys.stdout,unicode
unique,sqlite3
__eq__(),dictionary
aspectj,aop
stringio,unit-testing
#!/usr/bin/env python,sh
pickle,pandas
os.system(),logging
"print 'processorerror(%r, %r, %r)' % (self.file, s",vim
"[1,2,3]",list
pymongo,pymongo
__eq__,class
settings.py,django
select,multithreading
bin/pyspark,apache-spark
"&lt;meta name=""description",beautifulsoup
subprocess,hadoop
"[1,2,3]",list
settings.py,django
__setattr__,metaclass
cscope,vim
python,random
make install,linux
return none,iterator
urlopen,gzip
marshal,google-app-engine
python setup.py build,distutils
timeit,conditional
return,exception
virtualenv,matplotlib
/usr/bin,linux
exec(),google-app-engine
imaplib,django
super(),getattr
__init__,syntax
__str__,exception
append(),list
thread,unicode
render_template,html
send_task,celery
python,meteor
subprocess.popen(),subprocess
__main__,scope
warnings.warn,warnings
__add__,operator-overloading
subprocess.popen,subprocess
python,osx
multiprocessing,multiprocessing
os.open,io
itertools,standard-library
__init__.py,documentation
bytearray,parsing
nosetests --with-coverage,code-coverage
save(),sql
cpickle,serialization
unique_together,django
htmlparser,character-encoding
file.write(),file-io
global,scope
lambda,collections
develop,setuptools
ionice,linux
urllib2,google-app-engine
numpy.r_,function
import,linux
pandas,anaconda
python,linux
coverage,virtualenv
memoryerror,itertools
admin.py,django
importerror: cannot import name celery,celery
eng.traineddata,ocr
reload,python-module
values,pandas
__init__.py,logging
__init__.py,import
pandas.read_csv,csv
insert,mysql
.encode('utf-8'),unicode
enumerate,performance
datetime,django
multiprocessing.pool,multiprocessing
requirements.txt,visual-studio
os.system,unix
unittest,unit-testing
urlparse,parsing
__init__(),object
tkinter,import
functools.wraps,python-decorators
sys.path,import
stopiteration,iterator
numpy.array,numpy
__iter__,iterator
dataframe,pandas
vcvarsall.bat,windows
subprocess.popen,subprocess
return,generator
threading.thread,multithreading
datetime.weekday(),datetime
app.yaml,google-app-engine
subprocess,subprocess
datetime.datetime,datetime
iterparse(),xml
from module import *,import
pip freeze,pip
python,windows
test.py,unit-testing
@classmethod,decorator
self.a,class
__init__,properties
multiprocessing,multithreading
os.listdir(),os.walk
import cv2,opencv
except,performance
__init__(),caching
sys.argv,import
max(list),list
urllib2,django
fileinput,file-io
__init__(),angularjs
foreignkey,django
__new__(),class
urllib2.urlopen,urllib2
multiprocessing,numpy
__init__,pylint
conda install scikit-learn,scikit-learn
easy_install,pip
foo.py,exception-handling
python,osx
__add__,methods
setup.py,ubuntu
pprint,ipython-notebook
conf.py,django
update(),iterable-unpacking
python,exception
setup.py,pyqt
settings.py,django
search(),regex
ctypes,c
subprocess.popen,unix
http://localhost:5000,websocket
reverse,django
dev_appserver.py,google-app-engine
xrange,generator
hashlib,postgresql
__init__,set
copy.deepcopy,generator
urlopen,urllib2
xrange,jinja2
__doc__,introspection
sys.path,import
__name__,module
object,object
render_to_response,django
pickle,data-structures
time.sleep(),multithreading
scikit-learn,git
randrange,random
__str__,join
cpickle,pickle
collections.ordereddict,map
settings,django
next(),iterator
optparse,bash
open(),django
ctrl+c,django
#NAME?,pip
__setattr__,attributes
__repr__,function
manifest.in,symlink
reload,module
__init__.py,python-sphinx
setup.py,setuptools
"[1,2,3]",string
pip install -r requirements.txt,django
collections.namedtuple,pickle
ctrl+c,linux
type(),namedtuple
urlparse,url
setupclass,oop
/etc/hosts,networking
__del__,logging
condition,debugging
pylint,pylint
ctypes,opengl
self.__dict__,django
__doc__,introspection
settings.py,django
false == 0,comparison
__add__,class
python setup.py build,distutils
views.py,django
nosetests,nose
__new__,class
source venv/bin/activate,django
modelform,django
raw_input(),multithreading
raw_input(),readline
profile,django
subprocess.popen,terminal
file.read(),django
str.format(),regex
__hash__,immutability
cpickle,file
script,linux
python,inheritance
os.listdir(),osx
ctypes,qt
object,inheritance
keyboardinterrupt,windows
ipython,shell
import,ruby
__mul__,class
static,node.js
repr(),apache
pickle,arrays
settings.py,django
multiprocessing,multiprocessing
iterable,exception
settings.py,django
__repr__,bit-manipulation
__init__,pipeline
sqlite3,database
pythonpath,setuptools
select,testing
nosetests,ipython
attributeerror,exception
multiprocessing,multiprocessing
__init__.py,module
python,rust
__str__,metaprogramming
assert,assert
__init__,collections
opencv,image-processing
import numpy as np,csv
namedtuple,dictionary
setup.py sdist,setuptools
# -*- coding: utf-8 -*-,django
__debug__,debugging
ipython,subprocess
os.system,windows
easy_install,windows-7
raw_input,user-interface
read(),turtle-graphics
virtualenv env,virtualenv
cursor,sqlalchemy
python,multithreading
ctypes,c
foobar,short-circuiting
ipython,matplotlib
assertionerror,argparse
setup.py install,setuptools
python manage.py runserver,django
ipython,numpy
object,oop
__init__(),initialization
show(),matplotlib
shell=true,process
except,exception
app.yaml,google-app-engine
socket.error: [errno 98] address already in use,http
namedtuple,enums
python manage.py runserver,django
python-daemon,setuptools
show(),matplotlib
unique,django
threading,multithreading
urllib2.urlopen,post
sys.argv,background-process
virtualenv env,ubuntu
strftime,datetime
__init__.py,wsgi
terminate(),python-multiprocessing
string,string
def __init__(self):,class
importerror,exception-handling
range(),range
__new__,metaclass
sudo python setup.py install,import
json.dumps(),json
multiprocessing,profile
pandas,numpy
save(),django
datetime.datetime,datetime
foo.py,string
except,debugging
timeit,performance
append(),performance
groupby,indexing
urls.py,django
python setup.py install,install
__slots__,pickle
from module import *,global
copy.deepcopy,pickle
np.nan,numpy
importlib.import_module,python-import
itertools,python-imaging-library
"def add(x, y): return x + y",nested-lists
"[1, 2, 3]",numpy
virtualenv,django
sys.argv,command-line
pandas,numpy
easy_install,setuptools
lxml.html,python-module
template.html,extend
__init__.py,importerror
__init__,django
__init__,string
enumerate,list
python2.6,debian
__del__,unit-testing
__init__.py,import
matplotlib,matplotlib
__mul__,matrix
ipython,ipython
difflib,mysql
threading,multithreading
__future__,pep8
__enter__,with-statement
stopiteration,csv
unicodedecodeerror,encoding
urls.py,django
argparse,argparse
show(),matplotlib
values,dictionary
global,metaprogramming
keyerror,string-formatting
settings.py,css
float64,memory-management
&lt;&gt;,deprecated
#NAME?,virtualenv
virtualenv,virtualenv
virtualenvwrapper,osx
namedtuple,python-sphinx
__main__,celery
buffer,audio
property,properties
alembic,flask
script,argv
easy_install,setuptools
pip install matplotlib,matplotlib
subprocess,unicode
#!/usr/bin/python,shebang
#!/usr/bin/env python,linux
struct.pack,buffer
time.sleep(),urllib2
__getitem__,list
python setup.py install,setuptools
unittest,unit-testing
__init__,oop
argparse,command-line
sys.path,osx
pandas.dataframe,pandas
time.time(),registration
itertools,iterator
unittest,command-line
"[1,2,3,4]",django
vcvarsall.bat,install
python manage.py runserver,django
**kwargs,kwargs
lambda,dictionary
setup.py,linux
import,pep8
settings.py,django
attributeerror,exception
models.py,django
customer,sqlalchemy
range(),range
urls.py,django
__init__.py,model-view-controller
&lt;p&gt;,unicode
import,mocking
__init__.py,django
os.walk,os.walk
keyerror,dictionary
main.py,flow-control
sqlalchemy,mysql
ndarray,arrays
__getitem__,static
python setup.py install,easy-install
httplib,urllib2
easy_install,lisp
pprint,syntax
tzinfo,django
tempfile.namedtemporaryfile(),file
str.format,string-formatting
&lt;script&gt;,django
&lt;&gt;,syntax
super(),decorator
sys.path,testing
__getstate__,pickle
__init__,oop
foreignkey,django
unique,mysql
time.sleep(),c
print(),unix
asyncio,multithreading
views.py,django
python setup.py sdist,pip
python hello.py,heroku
#!/usr/bin/env python,crontab
__hash__,magic-methods
python manage.py syncdb,django
django,web-applications
urls.py,django
/usr/bin,pip
stringio,stdout
__hash__,hash
&lt;div&gt;,html
class a(): pass,class
__init__.py,django
matplotlib.pyplot,matplotlib
staticmethod,class
__str__,class
pip install,setuptools
pandas.dataframe,group-by
python,testing
matplotlib,matplotlib
queryset,django
setup.py,pip
gi.repository,webkit
transform,functional-programming
from __future__ import unicode_literals,regex
test.py,unit-testing
datetime,datetime
%path%,windows
dataframe,pandas
python manage.py syncdb,django
ctrl+c,linux
__init__,genshi
virtualenvwrapper,bash
datetime.datetime,date
__class__,class
__enter__,contextmanager
required=false,django
__init__.py,jython
argparse.argumentparser,error-handling
requests.get,django
subprocess,windows
easy_install,paster
virtualenv,scipy
struct.pack,numpy
python,fork
python setup.py build,flask
virtualenv,osx
settings.py,django
source venv/bin/activate,virtualenv
python,import
import,function
my_list,list
execfile,open-source
__main__.py,code-layout
multiprocessing,parallel-processing
paramiko,ssh
__repr__(),unicode
subprocess.popen,windows
reduce(),cloud
queryset,django
__add__,numpy
matplotlib,numpy
attributeerror,pyuno
stdout,file
match(),regex
keyerror,introspection
fruits,pandas
lambda,lambda
# -*- coding: utf-8 -*-,debugging
python manage.py syncdb,django
gc.collect(),garbage-collection
application/json,django
setup.py install,selenium
setup.py,pip
subprocess.popen,django
np.sum,numpy
process,multiprocessing
pandas,performance
stdout,unix
except,pygobject
float('nan'),numpy
memoryerror,scipy
#NAME?,py.test
nltk.pos_tag,nltk
savefig,matplotlib
__hash__,hash
client,flask
raw_input,twisted
urllib,regex
json.dumps(),json
python setup.py install,pip
python setup.py install,module
attributeerror,function
groupby,sorting
asyncio,timer
python2.7,django
scrapy,performance
requirements.txt,sqlite
__hash__(),set
__new__,django
__eq__,sorting
segmentation fault (core dumped),ubuntu
pytest,dictionary
phantomjs,linux
warnings,design-patterns
sys.stdin,pipe
profile,flask
dataframes,pandas
default,r
permission denied,temporary-files
float64,numpy
__init__,return
__eq__,sqlalchemy
open(),gzip
struct,c
settings.py,django
settings.py,django
__init__,constructor
python setup.py test,unit-testing
&lt;&gt;,string
python 2.6,shebang
urllib2,xml
"import matplotlib.pyplot as pltplt.plot([1,2,3,4])",matplotlib
format,gmail-api
sys.stdout,oop
urllib,facebook
contents,html-parsing
tkinter,event-handling
&lt;&gt;,input
memoryerror,memory
itertools,combinations
filter,algorithm
save(),django
urllib2,winapi
double,numpy
distutils,c++
subprocess.popen(),ffmpeg
changed,user-interface
__del__,class
tkinter,tkinter
__hash__,debugging
np.nan,pandas
cprofile,optimization
simplejson,django
subprocess,subprocess
models.py,unit-testing
__init__.py,module
read(),file
python,import
script,documentation
raw_input(),py2exe
"data = [[1,2,3], [4,5,6], [7,8,9]]data = [(1,2,3),",file-io
except,exception
unittest,unit-testing
dataframe,pandas
@login_required,django
os.listdir,osx
windowserror: [error 2] the system cannot find the,windows
malloc,arrays
subprocess.popen,subprocess
python,command-line
exec(),apache
numpy.array,performance
finally,continue
python manage.py collectstatic,django
fileinput,shebang
__init__,django
"(x1,y1)",algorithm
python,numpy
__eq__,api
sphinx-quickstart,documentation
dataframe,numpy
json.dump,json
filter,syntax
datetime.timedelta,arrays
dataframe,matplotlib
namedtuple,coding-style
os.system(),pip
python setup.py install,usb
app.run(debug=true),git
threading,multithreading
dataframe,pandas
threading.thread,multithreading
"[1, 2, 3]",sqlalchemy
stopiteration,generator
foo.py,python-import
/usr/bin/python,osx
celeryd,celery
__dict__,object
py.test,file-io
dataframe,numpy
matrix,dictionary
cpickle,pickle
__init__.py,scrapy
clear(),memory-leaks
python setup.py develop,setuptools
migrate,django
select,mysql
pythonpath,path
__init__,object-initializers
%timeit,timing
slugify,django
py2exe,cmd
"""""decoder jpeg not available""""",python-imaging-library
integerfield,django
__init__.py,py.test
virtualenv,django
setup.py,package
networkx,graph-algorithm
sys.path,linux
&lt;a&gt;,css
&gt;&gt;&gt;,subprocess
type(),oop
__main__,scope
tkinter,class
sort(),sorting
double,string
csr_matrix,arrays
csr_matrix,scipy
object,metaclass
easy_install,vector-graphics
raw_input,input
#!/usr/bin/python,hudson
post_save,django
connection,mysql-python
__getitem__,jython
requests.get,api
python setup.py install,django
__iter__,class
return,methods
integerfield,django
importerror,xcode
__init__,object
datetime,datetime
__del__,garbage-collection
decorator,decorator
pandas.read_csv,csv
select,postgresql
__init__,import
urllib,exception
setup.py,software-distribution
import matplotlib,matplotlib
matplotlib,matplotlib
subprocess,shell
except:,error-handling
dateutil,ironpython
pickle,refactoring
simplejson,django
show(),matplotlib
object,object
str.format,string
__setitem__,class
importerror: no module named httplib2,google-app-engine
__hash__,hash
button,widget
.tostring(),numpy
subprocess,multithreading
__del__,destructor
__slots__,pygame
time.strftime(),chaco
"if __name__ == ""__main__"":",unix
foo.bar,decorator
__init__.py,module
import,pip
unicodeencodeerror,stdout
subprocess,curl
python,process
unicode,unicode
sys.path,windows
db.model,flask
beautifulsoup,optimization
py.test,sandbox
list.remove,equality
views.py,django
"map = { 'a': 1, 'b':2 }",dictionary
unique,database
__init__,metaprogramming
keyerror,error-handling
__repr__,class
frozenset,set
help(),introspection
__init__.py,naming-conventions
settings.py,django
&gt;&gt;&gt; import sys&gt;&gt;&gt; print sys.path,linux
__init__(),oop
requests,python-requests
httpresponse,django
root.mainloop(),matplotlib
urllib.urlopen(),google-maps
threading,multithreading
celery,profiling
psutil,linux
__main__,python-module
urllib2.urlopen,unit-testing
random.sample,numpy
__init__.py,import
__exit__,garbage-collection
thread,multithreading
flush(),django
is not,syntax
logging,logging
pickle,pandas
importerror,crash
random.shuffle,random
__init__,constructor
compile,scripting
bytearray,binary-data
help(),api
__init__.py,django
__iter__,iterable-unpacking
__file__,module
python setup.py develop,setuptools
manifest.in,installation
__init__,docstring
hash(),hash
datetime,string
read_csv,pandas
python,design-patterns
subprocess.call,performance
__init__,pyqt4
pandas,numpy
return,scope
keyerror,multiprocessing
logging,performance
df.plot(),pandas
datetime,itertools
client,django
subprocess.check_output,subprocess
__main__,exit-code
@staticmethod,static-methods
show(),matplotlib
subprocess.popen,mime-types
"[0, 1, 2, 3, 4]",exception-handling
__getstate__,pickle
subprocess,shell
__init__,whitespace
content,database
__init__,py2exe
pymongo,mongodb
replace,unicode
myobject,signals
matplotlib,matplotlib
__iadd__,optimization
io.open,api
pythonpath,linux
multiprocessing,function-pointers
subprocess.popen(),progress-bar
__init__,constructor
.add(),numpy
python,linux
next(),generator
"[1,2,3,4,5,6]",list
static,django
get_or_create,mysql
time.time(),datetime
python setup.py test,django
namedtuple,sqlite
sqlite3,mysql
__call__,performance
@patch,mocking
__hash__,swig
eval(),variables
importlib,dependencies
@login_required,flask
urls.py,django
cprofile,apache
sys.stdout,io
numpy.gradient(),numpy
os.listdir(),json
argparse.argumentparser,dictionary
profile,numpy
importlib,django
__call__,sorting
datetime,data-structures
__new__,metaprogramming
&amp;nbsp;,wordpress
file.txt,file-io
insert,big-o
iterable,iterator
__init__.py,django
__class__,inheritance
virtualenv,azure
__init__,class
select,asynchronous
easy_install,setuptools
__getattribute__,object
python,install
optparse,unicode
python,xpath
clear(),syntax
__slots__,class
argparse,argparse
type(),class
enumerate,list
objects,list
python,postgresql
read(),subprocess
valueerror,mayavi
#NAME?,pip
import sys,import
multiprocessing,multithreading
__init__(),qt
np.append,arrays
__repr__,pygtk
settings.py,django
settings.py,django
sudo pip install lxml,pip
python,profile
&lt;&gt;,regex
webbrowser,windows
__eq__(),cython
timeit,import
foo.bar,debugging
pandas.read_csv,numpy
__getitem__,loops
pip install -r requirements.txt,pip
unicodedecodeerror,unicode
elementtree,xml
import os,popen
__file__,cython
requests,celery
virtualenv,ubuntu
multiprocessing.process,telnet
python,matplotlib
my_list,list
python,zeromq
pip freeze,pip
template.html,flask
__main__,string
open(),documentation
sys.stdout.write(),r
unicode,unicode
series,django
append(),performance
python manage.py test,django
zipfile,file
__dict__,namedtuple
ctypes,numpy
numpy.float64,numpy
tkinter,linux
python.el,emacs
dataframe,datetime
foo.bar,methods
import,scrapy
multiprocessing,linux
views.py,django
datetime,pandas
datetime,datetime
datetime.datetime,python-dateutil
models.py,django
dis.dis,bytecode
setup.py,setup.py
raw_input,multiprocessing
dataframe,pandas
enumerate,enumerate
ctypes,performance
global,django
debug(),logging
getopt,command-line
from pil import image,python-imaging-library
raw_input(),input
pip install,osx
mysqldb,mysql-python
insert,sqlalchemy
__hash__,algorithm
views.py,ajax
raw_input(),osx
lambda,kotti
keyboardinterrupt,subprocess
__main__,multiprocessing
save(),django
notimplemented,boolean
setup.py,module
stdout,pdb
__init__,function
distutils,svn
__call__,inheritance
manage.py test,django
urllib2,urllib2
doctest,multiline
groupby,r
views.py,django
__del__,wxpython
multiprocessing,memory
scikit-learn,machine-learning
insert,mysql
&gt;&gt;&gt;,osx
python,arrays
urls.py,django
virtualenv,flask
__del__,yield
product,sqlalchemy
pythonpath,importerror
product,flask
__exit__,class
setup.py,setuptools
celery,celery
multiprocessing,multiprocessing
syncdb,django
keys(),dictionary
__getattr__,variable-assignment
autoincrement,mysql
models.py,django
ipython,code-completion
queryset,django
__init__.py,setuptools
python,scripting
django.contrib.auth.models.user,django
pickle,data-structures
__init__.py,python-sphinx
__init__,oop
__str__,built-in
super(),multiple-inheritance
distutils,packaging
sqlite3,sqlite3
matplotlib.pyplot,matplotlib
./test.py,executable
datetime.datetime,time
__str__,class
__str__,string
__call__,class
insert,c
pickle,unix
__init__,metaprogramming
re.sub(),html
profile,oop
popen(),linux
python,functional-programming
tkinter,user-interface
__eq__,oop
__add__,methods
os.system,bash
favicon.ico,favicon
test.py,subprocess
matrix,iterator
numpy.array,qt
sigterm,redis
__init__.py,import
settings.py,django
employee,design
client,sqlalchemy
dictionary,multithreading
json.dumps(),json
select(),select
time.time(),time
ctypes,c
dev_appserver.py,google-app-engine
numpy.array,numpy
myobject,static
csr_matrix,scipy
__init__.py,pycharm
python,r
matplotlib,width
configparser,mapping
readlines(),sorting
translate,string
subprocess.popen,shlex
python setup.py build,google-app-engine
docopt,internationalization
#!/usr/bin/python,shell
range(),dictionary
select,mysql
__setitem__,iterator
"a = [1,2,3]",numpy
models.py,sqlalchemy
python,linux
bytearray,io
.lower(),csv
django,django
eval(),eval
python,windows
null=true,django
numpy.datetime64,datetime
timedelta,datetime
__init__,init
models.py,django
__doc__,types
content,unicode
printf,ide
python2.7,ctypes
mymodule.py,module
keyboardinterrupt,testing
dict.copy(),dictionary
__init__,functional-programming
datetime,date
__init__.py,flask
#!/usr/bin/env python,osx
multiprocessing,numpy
values,dictionary
__exit__,wrapper
#!/usr/bin/env python,packaging
python 2.7.10,docstring
&lt;p&gt;,beautifulsoup
@classmethod,list
dataframe,pandas
__all__,glob
dataframe,pandas
os.listdir(),unix
sys.version,testing
python,c++
sys.getsizeof,memory
sys.path,python-sphinx
python setup.py sdist,folder
float64 ,numpy
&lt;a&gt;,regex
multiprocessing,pool
#!/usr/bin/env python,packaging
python manage.py runserver,django
__init__,recursion
lambda,lambda
make html,themes
python,converter
deepcopy,performance
__init__,dynamic
matplotlib,matplotlib
xrange,iterator
settings.py,django
"[1, 2, 3]",data-structures
queryset,django
dataframe,r
next(),iterator
stdout,pyqt
__init__,properties
str.split,regex
lambda,list
datetime.time,orm
foobar,django
main.py,import
&lt;div&gt;,html
findall,regex
django.contrib.auth.models.user,django
frozenset,boost-python
urllib2,apache
**kwargs,documentation
__init__,unit-testing
__all__,packages
return,list
threading,multithreading
.bash_profile,installation
python,passwords
readline,osx
multiprocessing.process,multithreading
views.py,amazon-web-services
subprocess.call,shell
__name__,function
git log,git
continue,loops
re.compile,regex
__main__,parallel-processing
global,callback
exec(),ruby
foobar,grammar
post_save,django
setattr(),introspection
sys.path,unit-testing
"print ""hello, world!""",stdout
memoryerror,set
__setitem__,attributes
__del__,garbage-collection
insert,sqlite
queryset,django
stringvar,string
series,pandas
__str__,methods
shutil.rmtree,windows
python,scikit-learn
assert,pandas
frozenset,memory
.htaccess,django
urllib2,parsing
optparse,argparse
import os,variables
keys(),loops
urllib2,urllib2
index.html,html
os.walk,dictionary
__init__,multithreading
logging,logging
optparse,argparse
pythonpath,environment-variables
frozenset,dictionary
insert,mysql
index(),django
ggplot,r
sys.path,import
__init__,new-operator
pythonpath,windows
finally,multithreading
ipython,matplotlib
numpy.array,arrays
assertionerror,exception
queryset,django
testcase,unit-testing
subprocess.popen,linux
__dict__,attributes
dataframe,plotly
apt-get install,django
timedelta,django
multiprocessing.pool,multithreading
float64,numpy
"[1,2,3,4,5,6]",ruby
lambda,map
dataframe,pandas
datetime,datetime
models.py,mysql
forms.py,flask
filename,dictionary
marshal,warnings
__repr__,set
eval(),random
urllib,xml
__init__(),class
__init__,initialization
except,try-catch
setup.py,setuptools
&lt;select&gt;,django
unicode,unicode
__getitem__,getattr
settings,django
xrange,naming-conventions
setup.py,distutils
series,pandas
subprocess.call,operating-system
file.txt,pipe
ndarray,c++
settings.py,virtualenv
auth_profile_module,django
manage.py shell,django
__init__,xml
# -*- coding: utf-8 -*-,encoding
type(),bokeh
argparse,localization
stringio,mysql
savefig,matplotlib
np.nan,numpy
sort(),arrays
__getitem__,exception
python setup.py install,suds
&lt;script&gt;,parsing
numpy.gradient(),numpy
values,list
unique_together,django
__new__,oop
pandas,numpy
read(),pyparsing
product,django
subprocess,shell
class foo(object): pass,inheritance
scikit-learn,machine-learning
virtualenv,virtualenv
collections.counter,list
insert,html
argparse,argparse
strftime,datetime
matplotlib,matplotlib
django,django
gridspec,matplotlib
keyerror,format
__init__.py,django
models.py,django
random,random
except,error-handling
pandas,csv
dataframe,terminal
fields,namespaces
&lt;script&gt;,html
datetime,pandas
object,pandas
testcase,beautifulsoup
shlex.split,string
unittest,decorator
unittest,unit-testing
cprofile,profiling
psycopg2,osx
usercreationform,django
timedelta,datetime
urls.py,django
importerror: dynamic module does not define init f,c++
global,global
__init__.py,flask
itertools,generator
object,dictionary
ipython,shell
requirements.txt,django
csr_matrix,numpy
__new__,init
sys.setrecursionlimit(),recursion
attributeerror,exception
itertools,arrays
datetime,datetime
modelform,django
__init__.py,google-app-engine
continue,for-loop
__init__,class
sys.exit,hadoop
client,import
manage.py runserver,django
cprofile,performance
main.py,module
pip install,pip
argparse,arguments
matplotlib,image
httplib.httpconnection,google-app-engine
globals(),globals
cpickle,dictionary
mkvirtualenv,virtualenv
matplotlib.pyplot,matplotlib
requests,flask
raw_input(),linux
multiprocessing,multithreading
**kwargs,kwargs
main.py,path
/users,flask
stdout,subprocess
imshow(),matplotlib
%(asctime)s,logging
settings.py,django
python,mongodb
python setup.py build,memory-management
__init__,class
eval(),parsing
ipython,ipython
from gevent import monkeymonkey.patch_all(),gevent
datetime.timedelta,datetime
manage.py runserver,windows
.tar.gz,regex
multiprocessing,multithreading
runserver,django
__add__,multiple-inheritance
virtualenv,virtualenv
__init__,class
python setup.py install,distribution
main.py,flask
datetime,pandas
button,button
objects,data-structures
unittest,unit-testing
open(),file-handling
__init__.py,nose
sorted(),for-loop
series,pandas
__del__,buffer
__repr__,class
imshow(),matplotlib
models.py,mysql
matrix,matrix
__init__.py,gettext
multiprocessing,parallel-processing
__new__,django
tostring(),xml
timeit,dictionary
setup.py,windows
unittest,unit-testing
setup.py,distutils
iterator,multiprocessing
itertools,next
open(),exception
object,class
queryset,django
urllib,urllib
process,metaprogramming
itertools.permutations,combinatorics
itertools,list
__call__,decorator
selenium,pandas
python,ctypes
@login_required,django
"[1,2,3,4,5]",list
beautifulsoup,table
__doc__,docstring
forms.py,django
object,setattr
read(),windows
datetime.timedelta,mocking
reverse,django
python setup.py build,windows
telnet,sockets
values,matplotlib
__bases__,class
process,udp
deepcopy,struct
&lt;script&gt;,templates
read(),file-io
python -m simplehttpserver,http
foreman start,heroku
pip install,pip
__del__,unit-testing
python setup.py develop,setuptools
sqlite3,sqlite
easy_install,pip
matplotlib,pandas
__getattr__,reflection
python setup.py develop,setuptools
pandas,pandas
stdout,osx
stringio,post
simplejson,json
subprocess.call,windows
subprocess.call,linux
deepcopy,real-time
logging.debug(),logging
settings.py,django
close(),django
__iter__,for-loop
"[1, 2, 3]",list
matplotlib,matplotlib
setup.py install,eclipse
datetime,csv
collections,collections
python,tags
except,json
main.py,packaging
import randomcounter = 1while (counter != 50): num,numbers
"[['#', '#', '#', '#', '#', '#', '#'], ['#', ' ', '",set
templist.append([on[1]-1]),pygame
"cursor = con.cursor()  cursor.execute(""select * fr",rpy2
"add_numbers( ""a1"", ""element 560234 65952 6598881 2",split
import ecdsaimport ecdsa.derimport ecdsa.utilimpor,while-loop
"l = [('mite', 'time'), ('ant', 'nat', 'tan'), ('es",sorting
i = 5*(2+2)print (i)#output = 20,curly-brackets
# function to determine if a string contains three,list
"searchletter = str(input(""enter a letter: "")hulkli",parameters
@hwi-st1072:185:c325wacxx:1:1101:8553:1994:1:n:#ca,awk
i = 10while i &gt; 0: print i*'*' + 2*(10-i)*' ' +,while-loop
import randomcoins = 1000wager = 2000while ((coins,infinite-loop
(ab|bc)* # (| represent or),regex
import csvimport csv as csvimport osimport shutili,csv
"$ar1 = array(""bobs"",""sams"",""jacks""); foreach ($ar1",loops
1 00 1,resize
in [57]: aa = 123123.123213in [58]: aa/12out[58]: ,rounding
"schooldata = [] for x in range (0,3): #the number ",average
def hundredscheck(): if till.hundreds &gt; 0: till,nested
"[1/1/9-1/1/13, 1/1/20-1/1/22]",range
import random #this module implements pseudo-rando,database
"def merge_lists(head1,head2): if head1 is none and",merge
string = '1234567890'splitted = []prev = 0while tr,slice
".......ng0@gmail.com,ok.......ad@live.com,fail....",text
python.exe,ide
n = 10a= 20sum = 0i = 1while i &gt;= n and i &lt;=,sum
9 73316991 73352391 del 99 354019 96058269 9605940,bash
"input_file = open('input.txt', 'r')output_file = o",filereader
stop_date,datetime
"&gt;&gt;&gt; t=(0,0,3)&gt;&gt;&gt; t(0, 0, 3)&gt;&",type-conversion
"int main(){ int m, n; long long int x, y, z, j; lo",optimization
"dict1 = {'a':1, 'b':2, 'c':3, 'd':4, 'e':5, 'f':6,",lambda
"&gt;&gt;&gt;t=[2,2,3,3,3,4,3,4,2,2,2,2,2] # in thi",function
"file = open(""demo.txt"",""r"")text = file.read()def f",function
"sdata = ""789c9d953d56c52010856363696d49e90aac73ecd",zlib
a,counting
"from goto import goto,labelfor i in range(1,10) : ",goto
"data_list = [['bob', [4]], ['jimmy', [8]], ['reece",sorting
"[[(u'hello@hello.com',)], [(u'hello@hello.com',)]]",tuples
if not xclass == '1' or xclass == '2' or xclass ==,if-statement
"random_list=[""h: 100"", ""g: 57"", ""k: 1"", ""p: 200""]",sorting
"pergunta5 = int(input(""que op†_†£o escolhes: "") if",syntax-error
"input: tuple_1 = ('asdf@', 'asdf') #the given (not",tuples
"""('-1259656819525938837', 598679497)\t0.036787946""",parsing
binary search,recursion
def main(): name = input('enter your first name: ',function
&gt;refaaaaaaa&gt;seq1bbbbbbb&gt;refaaaaaaa&gt;seq,perl
['lady'] ['hen']['horse'],replace
"owners detailsmuammmar gaddafi,1 alison driveidi a",text-files
"&lt;dt class=""col2""&gt;&lt;p&gt;rs. 2691.00__&lt;/",beautifulsoup
json.loads,string
"def replace_all(text, dic): for i, j in dic.iterit",character
"pattern.compile(""\\(*https?://[-\\w+&amp;@#/_?=~()",c
"p1 = raw_input(""player 1 ?"")p2 = raw_input(""player",integer
"file=open('file.txt','r')for i in file: 'for evry ",file
"result1, result2, result3",equals
select * from $wpdb-&gt;posts ,html-parsing
8 a8 a6 c7 b9 a,dictionary
"1,2,-3,3,-7,5,4,-1,4,5",count
"&gt;&gt;&gt;import re&gt;&gt;&gt;string = ""ola eu ",go
condition = -1condition1 = 3x = 2condition2 = 5y =,while-loop
import sysfrom sys import argvif len(sys.argv) == ,printing
import randomimport itertoolsfile_name='words.txt',itertools
main moduledeclare optiondeclare valuedeclare cost,pseudocode
from pandas import dataframefrom itertools import ,nameerror
def my_func(),function
"w = 97items = [[17, 19], [22, 19], [65, 64], [21, ",integer
fred smith -&gt; 25tree -&gt; 34frog -&gt; 0fred s,algorithm
iter,keyword
subprocess,sys
"nest = [[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]]",replace
"with open('qwerty.csv', 'rt')as f: reader=csv.read",tkinter
"def mesaj_gonder(self, kime, mesaj): mtype=""chat"" ",function
"studentgrades = { 'ivan': [4.32, 3, 2], 'martin': ",dictionary
cipher = 'a14e71a6f4e8d8e465c3c302c2a96bd2'aes = a,encryption
"res = h.getresponse() data = """"""mime-version: 1.0 ",parsing
.ani,pygame
"print(""help rick p. choose a car to drive."")print(",story
dictionary,dictionary
"03420&amp;nbsp;&amp;nbsp;&lt;a href=""/kegg-bin/sho",beautifulsoup
1-x+(x^2)/2!-(x^3)/3!+(x^4)/4!-..............up to,factorial
borla630000000,recursion
"mydict = {'carl':40, 'alan':2, 'bob':1, 'danny':3}",dictionary
abcdef,dictionary
"nested = [{}, set([]), []]",dictionary
# compute and display the customer bill for water ,if-statement
"try: with urlopen(""http://my.domain.com/get.php?id",urlopen
for i in range(len(x)): globals()['string%s' % i] ,typeerror
howareyou,concatenation
&lt;l,networking
"2, 4, 8, 16, ... , 1024",range
n,time-complexity
pygame.midi,pycharm
"date +""%y""-""%m""-""%d""t""%h""-""%m""-""%s""",unix
"f1=open(""foodp.txt"",""r"")word_features =[]words = [",pos-tagging
0.105785959943 9.75133617601e+150.111906693211 9.0,file-io
"f = open('quiz.txt','r')for line in f: line = wiss",windows
my_string.split(),list
"var m_thisexample,",perl
pseudocode:// start codevar str = get['string']ins,erlang
for x in somefunc():  print x,for-loop
"#functionsdef actioncount(): countto=int(input(""wh",artificial-intelligence
"#!/usr/bin/python print ""content-type:text/html\r\",cgi
string.find(),ipv4
"tax1 = input(""you may now tax your city. will you?",int
gif,email
from collections import counterwordlist = open('my,words
"a = [{'name': 150,'number': 100},{'name': 190, 'nu",append
"print (""{0:5s} {1:7s} {2:9s} {3:6s} {4:25s} {5:s}""",ruby
"import print_text echothis(""this is text"")exit()",definition
2015-10-22t22:24:00.000,parsing
"u'[ [ [ [""hello"",""w_0"",""w_0,w_10"",1], [""."",""w_1"",""",list
myuser = 'username' myserver = 'http://api.url.net,attributes
if 'laia' in name:,python-idle
"['aa', 'ab', 'aaaa', 'ggg', 'agaga', 'a']",list
transpose_test_feature,matrix
class newclass{ int i;},oop
"names=['peter', 'john']size = ['m', 'l']list_price",data-structures
ordinarydict = {}ordinarydict['somekey']print ordi,dictionary
"class random &lt; dictionary def get vowels = [""a""",algorithm
9300.1 9600.6 9300.2 9300.1 9600.5 9600.7,computation
1.00 0.659 2.00 0.608 3.00 0.578 4.00 0.557 5.00 0,bash
my $host =~m/([^.])(\.swiss\.ch)/),perl
"[3, 5, 48][5, 9, 16][3, 15, 16][3, 3, 80][2, 5, 72",numbers
.txt,import
def noalpha(s): noa = '' for c in s: if not (c in ,list
"def a(s,k):",math
&gt;&gt;&gt;enter the data? &gt;&gt;&gt;alex 45 26,dictionary
def sort_list(unsorted_list): return unsorted_list,sorting
"for anum in range(10,20): for i in range(2, anum):",for-else
"c=0s=0x=input(""enter integer: "")while x!=0: s=s+1 ",max
"({15: none}, {7: none}, {2: none, 3: none, 4: none",dictionary
&gt;&gt;&gt; 1.123456789012345678901.1234567890123,rounding
"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]",multidimensional-array
#print (this is what it needs to output)#[last nam,syntax
'tataaaaaaatgaca',numbers
# variables supposed to work across rooms.havekey ,global
print var8102&gt;&gt;&gt;,variables
def main(): print('welcome to the wulfulgaster enc,datahandler
import numpy as pyimport itertoolsfrom itertools i,list
"dicta = {f1 : [""s"",""r""],  f2 : [""p""],  f3 : [""w"",""",sorting
ra = (1.5 * (ca - (ra/2))/(1 + 0.8 * (ca - (ra/2)),equation
"def self.threaded_with_field(story, field_name='vo",ruby
exampledictionary = {'thing on ground': 'backpack',dictionary
"fun_string = """"""in ___0___, crazy ___1___ with ___",asdf
"matrix = [[['23'],['47'],['35'],['-']], [['45'],['",matrix
"def gen2darr(row, column): # generates an array fo",for-loop
"somearray = [[""0"",""1"",""1"",""0""] [""0"",""1"",""0"",""1""] [",multidimensional-array
&lt;td&gt;mylink.com&lt;/td&gt;,parsing
"name = raw_input(""full name: "")",raw-input
from random import *from graphics import *class my,path-finding
"import randomdef test(): w = [""dog"", ""cat"", ""cow"",",string
"print(""unendlicher fibonacci-generator rekursiv"")d",nameerror
defaultdict,dictionary
.txt,filenames
def hashable(): a = dict() list_entered_by_user = ,keyerror
gnu nano 2.2.6 #!/usr/bin/pythonprint 'activated'i,syntax-error
[[1]] [[2]] [[3]] [[...]] a b f b c a c d b f z j ,bioconductor
a = [ 1 2 3]; b = [ 1 -2 3]; c = a==b; % c = [1 0 ,numpy
">>> mylist = ['a', 'b', 'c', 'd']",list
x.setdata(),oop
"[volume:vol-xxxxxxxx, volume:vol-yyyyyyyy]",string
len,indexing
"a = [1, 1, 2, 2, 3, 3, 4, 4, 5, 5]b = [1, 2, 3, 4,",for-loop
"class myclass(): def printer(name=""abc"", descripti",oop
"[{ ""tr"": [{ ""name"": ""#for5rs"", ""promoted_content"":",variables
initial = 0 or 1;final_value = (initial + 1) * -1;,hlsl
origalias: sam@example.com sam.smith@example.root.,text
"print ""movie ratings""printprint ""you will be asked",rating-system
counter = 0def b_c(counter): counter = counter + 1,typeerror
please enter five numbers separated by a single sp,list
"&lt;div id=""tags""&gt;blah-blah&lt;a href=""http://u",beautifulsoup
for currentdata in data: currentstate = '' count =,for-loop
"[(a,3), (b, 4), (c, 5), (d, 1), (e,2)]",tuples
"print (""what is your username"")name = input () .ti",random
for char in lst:if len(char) == 3: print(char),for-loop
"pcode = {""alberta"": ""t""}a = input(""enter a 6 chara",dictionary
"mylist = [var,var1,var2,var3]anotherlist = [var,va",function
"a =((248500353l, 11, '4', '248741302', 633, 7321l,",datetime
date:ip num#1 num#2 2013.09:142.134.35.17 10 12201,file
"['dinakar','indiana','python','python'].",dictionary
input4 ------&gt; 4 number so user can only enter ,loops
"traceback (most recent call last): file ""scrapepro",for-loop
def get_column_number():while true: column_choose ,tuples
"traceback (most recent call last): file ""./nametim",scripting
"mi_navif.c, mi_navif.c svd_state_check_sqif.c acq_",list
js_data = session.query(tbl_users).create({'name' ,django
"def travel(): totrate=0 def guide(): print""due to ",undefined
"list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]list2 = [0,",slice
"class song(object): def __init__(self, lyrics): se",self
"maxmin(f, a, b, n=1000)",min
"if var1 != row2: print ""status 1: %s"" %var1 print ",conditional
"f.write(""g3"")f.write("" "")i = raw_input(""enter the ",input
"lst1=[ ""(tower 3rd fl floor_window corner : option",string
if index[y] == index[x]: continue else index[y] !=,indexing
"def only_evens(lst): """""" (list of list of int) -&g",nested-loops
'http://www.virginiaequestrian.com/main.cfm?action,beautifulsoup
python3 -m venv flasksudo easy-install virtualenv,flask
"plt1=some_series.plot(marker='o', title='count dis",pandas
"name_input = str(input(""please enter your name""))n",concatenation
import stringupper = string.ascii_uppercaseupperne,ascii
a,dictionary
"lst = ['thu apr 04', ' weigh in', 'sat apr 06', ' ",dictionary
"q1 = pygame.image.load(""math/q1.jpg"").convert()mat",pygame
"def factorial(x): result = 1 for item in range(1,x",printing
newfilename = str(file.key),encoding
"import eyed3audiofile = eyed3.load(""19 calvin harr",eyed3
filename = input(msg),directory
"l=[2, 5, 6, 7, 10, 11, 12, 19, 20, 26, 28, 33, 34,",indexing
"&gt;&gt;&gt; test = json.dumps('{""content"":{""searc",parsing
def whois(self): host = str(self.entrytext.get().l,whois
#!/usr/bin/python# -*- coding : utf-8 -*-from math,numpy
(simple routine or function compiled or assembled ,gcc
def get_args(): '''this function parses and return,csv
"alist = [123, 'xyz', 'zara', 'abc']alist.append(20",override
string,tuples
"def n_times_print(c, n) s='' for i in range(n): s+",printing
10may2013 3.1 http://ncbi.org p.sojae_aafeatureimp,parsing
"file = open('./blah.html', 'w')sample = ""in litera",text
"dict_users = {1 : { ""name"" : ""mtaqi"", ""email"" : ""t",dictionary
"&gt;&gt;&gt; my_list = [(1,2,3,4),(5,6,7,8)]&gt;&g",dictionary
"class archerdown: def draw(self, x, y, direction):",pygame
$ python ex3.pytraceback (most recent call last): ,yahoo-boss-api
#!/usr/bin/env python#chooseadoorfrom random impor,numbers
4316,addition
"my %linebuffer; #with a ""%"" sign$linebuffer; #to c",perl
"x : 11 (key, value pair)y : 5z : 6",dictionary
std::cout&lt;&lt;2.2f*3.0f&lt;&lt;std::endl; //pri,floating-point-precision
"import randoma = open(""10.txt"", ""r"")#print (a.read",random
g_counter = 1j = im = 1plantotal = 0planmonth = 0d,if-statement
"for x, y in [np.int32(tr[-1]) for tr in self.track",opencv
"x = [13, 15, 27, 11, 13, 27]&gt; dict = {13:[0,4],",dictionary
"a,b,c1,3,5c,d,e4,1,10",sorting
"{""run_at"":1818086502,""quantity"":295092,""queue"":""un",response
"x = range(4, 7)y = range(2)x[2] = yprint x[2][0]pr",range
"def get_board(): board = {""1"": '-',""2"": '-', ""3"": ",selenium
" ['0', '0', '0', '-'] ['0', '0', '-', '0'] ['0', '",combinations
"traceback (most recent call last): file ""emmmoisce",range
count = 100while count &gt; 0 : print(count) count,counter
"[{'parentguardianid': 'pg001'}, {'parentguardianid",dictionary
"releases = [""11.3.0"", ""8.0"", ""1.0.6"", ""1.0.5"", ""1.",list
sample input (in plaintext) 1 1 2,raw-input
"class mystack(list): def __init__(self,a=[]): list",class
def my_list (list): list=[] if list.sorted() == tr,sorting
"for i in range(1,7): if matrixa[i][1]&gt;0: print ",raspberry-pi
"file1=open(""casual.m3u"", ""r"")text=""""for lines in f",rename
"[false, false, false, variable, false, false]",list-comprehension
map(),iterator
**,pow
"def code(self): for line,lists in enumerate(permut",append
"word = [""p"", ""y"", ""t"", ""h"", ""o"", ""n""]status = []fo",indexing
webapp.requesthandler,google-app-engine
import randomimport timeimport mathimport syscard_,random
"(0, 0, 0)",tuples
"['1','2','3','4']",list
iiiiiinnnnnnaaaaasssttteehhllppyymr,character
"print('welcome to the daygram, the program that te",date
content = urlopen('http://www.kickstarter.com/proj,web
import requestsdef call():payload = {'apikey':'945,decode
"python 3.3.2 (default, oct 30 2013, 08:01:17) [gcc",centos
"rot(c,n)",letters
&gt;&gt;&gt; x=[]&gt;&gt;&gt; for i in range(10): ,syntax-error
def setup_framebuffer(surface): #create texture if,framebuffer
"def find_words(file_name, delimiter = "" ""):""""""a fu",function
"firstname = """"middlenamesurname = """"title = """"ppsn",nested
k = (j + 13) / 27loop:if k &gt; 10 then goto outk ,pseudocode
dict,sorting
from urllib.request import urlopen import json req,weather
"""abcd""",lowercase
root = tk()prompt = (string)label1 = label(root.at,refresh
del,object
name : siddata : lazy developer%description this i,token
"&gt;&gt;&gt; ['a', '3', '4']['a', '34']&gt;&gt;&gt",count
"mylist=[('usd',1000),('thb',25),('usd',3500)]",sum
3 5 2 1 3 4 2 3 4 22 1 32 1 8 7,ascii
"'""isn\'t,"" she said.'",backslash
l_size,random
id abcd ac efg rf hij id klmno ac p rf q ,list
"lst = ['a', 'b', 'c', 'd']",slice
"user_input = int(input(""please enter a multiplier!",integer
"71751412, abamectin",dictionary
@required_admindef get(self):,admin
"try: if year // 100: print year, ""is not a leap ye",try-except
"mystring = ""function(macro(param)) { a = call(1)};",replace
class main(): def __init__(): passdef main(): pass,object
x xx xxx xxxxxxxxx,geometry
public message(string content) { length = new int[,struct
x,scipy
a = 'hello',list
"mylist = [['20120903', 'melon', 'shelf1', '05:31',",nested
my_date_time = json.dumps(list_of_objects),django
python,list
from tkinter import*class myclassx: def __init__(s,class
atom 4 c4 unk x 1 7.747 4.310 5.563 1.00 0.00 cato,awk
userinfo.put()u_id = userinfo.key().id(),key
"price = '20,355' ",int
//************************************************,crc
def capital(n):for word in n: if word==word.upper(,loops
"for x in range(0,8):",range
n,loops
apache,django
"""ss in a dark room""true",char
def function_four(): # does stuff function_one()de,memory
"# -*- coding: utf-8 -*-import reweekdays = [""nedje",regex
# ### ## # ## ### #,for-loop
#!/usr/bin/python2import multiprocessingimport sub,scripting
#import libraryimport pygamefrom pygame.locals imp,if-statement
1_306500682 2_315577060 3_315161284 22_315577259 2,file
".replace("" "","""")",whitespace
"a = [1,2,3,4,1,2,3,4,1,2,3,4]foo(a) ",function
select * from table where arg1=value or arg2=value,django
django@linux-l94a:~/desktop/myblog&gt; ./manage.py,line
"import os,timedef child(pipein): while true: num1 ",piping
"#set upimport pygame, sys, random, time, mathfrom ",class
chr1 38045559 38046059 chr1:38045559-38046559_nm_0,bash
def upload_file(request):if request.method == 'pos,file-upload
"traceback (most recent call last): file ""/home/hos",parentheses
common=[]for item in a: if item not in b: common.a,data-structures
"import re, systry: file = open(""ttl.txt"", ""r"")exce",tuples
"list.sort(key=lambda (k, v): (-v, k))",dictionary
"mylist= [ ['why', 'was', 'cinderella', 'late', 'fo",dictionary
"def move(self,to_send): photos = ['example1'] vide",variables
"[[0, 2], [1, 3], [2, 5], [3, 2], [4, 5]]",list
from random import*bye=[]teams=[]while true: team=,tournament
"x = ""hello world !""x[6:2:-1]",slice
accountsid=ac03e13571d5434152f33553f6&amp;messages,parsing
==,string-matching
five sqlquery,perl
import syssys.setrecursionlimit(5000)actor=[]whole,ipython
address = ('http://www.somesite.com/article.php?pa,urllib2
def _train(self): # prepare theano variables for i,theano
"list = [{""foo"": ""a"", ""bar"": ""1"", ""baz"": ""a_code""},",dictionary
i = 2.,decimal
wethepeopleoftheunitedstatesinordertoformamoreperf,character
d-dddd-dddd-d,format
ben | 2 | 40germany | 6 | 60,sum
ce,awk
"str=""0xdeadbeef""",hex
"url = ""https://www.abcde.com/api/""post_data = ""met",ruby-on-rails-3
"class permutation(object): def __init__(self, maxi",math
"mylist = [0, 1, 2, 3, 4, 5]",sequence
typeerror: cannot concatenate 'str' and '_sre.sre_,concatenation
"dic = {""a"":[6,4,7,10], ""b"":[8,10,90,100]}",dictionary
&lt;wordbook&gt; &lt;item&gt; &lt;name&gt;engrossm,xml-parsing
from math import *import numpy as npimport scipy#i,plot
"selection_points = [(( 1, 2, 3), ), (( 4, 5, 6), )",abaqus
"a = [1 , 2, 3]def list_append(): numbers = int(raw",raw-input
from math import cos x = 2while x != cos(x): x = c,macbook
for word in file: if type(word) == int: ...... if ,list
"typeerror: string indices must be integers, not st",dictionary
"a=[]for i in range(0,10): a.append("" "")def table()",function
"money = 170kitkat = 90choice1 = raw_input(""choose ",variables
~/.profiles,tkinter
FALSE,pandas
#!/usr/bin/python3import sysdef fopen(fname): try:,numbers
python,readlines
"mylist=[52,67,-8,-43,-20]&gt;&gt;&gt; m=0&gt;&gt;&",integer
import randomnames = [about 150 names]print([names,non-repetitive
"for a in range(1,449): for b in range(1, 449): for",set
"if ('sct', 'ovc', 'clr') not in words[i]: list_sta",if-statement
class a(object):  def foo(self):  print 'hi'class ,class
"tre = re.compile(""///--string text one. ends with ",perl
from sqlite3 import *$sqlite3 testdb.dbsqlite vers,sqlite3
# -*- coding: utf-8 -*-def dice(): import random n,sum
box = boxwithoranges()print box['color']print box[,properties
"countries=['usa','mexico','canada']#ignore militar",canopy
"int checksum(char *str) { int i, sum = 0; for (i=0",loops
"module uart (inputs, outputs, etc)",substring
"linapprox((0,0),(1,1),(2,1.9),(3,3.1))&gt; y = x",matplotlib
"['2,alex', '5,james', '3,ben']",alphabetical
sumall(n),for-loop
for ( int i = 0; i &lt; count; ++i ){ for ( int j ,loops
"limit=100def calculate(num,denom): result=str(num/",fractions
create table `queries` (`qry_id` int(11) not null ,string
def get_specials(): monday = {'b': 'horseradish om,function
"import mathg = int(input(""put a number here: ""))pr",syntax-error
import randomfrom collections import defaultdictde,dice
s = 'zwxpziblbm8gbmkgzwigdhn1tsapaxygicag's = s.de,decoding
3 bham hoover - vestiva 123 234 1 456 876 1 876 74,lines
"d = [(u'code', u'us'), (u'country', u'united state",dictionary
from django.views.generic import listview,views
"def is_wombats(x): if x.lower() == ""wombat"": retur",if-statement
"import randomx = random.choice([9, 10])def loop():",function
"str = ""i am an avid user of pandas""str_split = str",dataframe
def main(): command = raw_input('cmd#').lower()if ,osx
"&lt;pre&gt;import os, sys, codecsfrom collections ",wxpython
from pil import imageimport numpy as npimport math,comparison-operators
"for example enter elements for a list, one at a ti",element
"lists = [[5, 8, 2, ""banana""][3, 6, 9, ""apple""][7, ",sorting
for word in sentence.split(): if word[0] in vowels,loops
res = requests.get(self.urlbase)soup = beautifulso,web-scraping
#starting flask#!flask/bin/pythonfrom app import a,flask
/usr/share/openstack,openstack-horizon
"class enter: def __init__(self,entries, container=",generator
import wxclass myapp(wx.app): def oninit(self): se,wxpython
"hashtag,frequency#car,45#photo,4#movie,6#life,1",pandas
"spent = 0order = []menu = [ ['course', 'dish', 'pr",list
from random import randomclass pursuer(): x_tally ,random
--------------------------------------------------,file
12211,extraction
in [80]: dict_of_listsout[80]: {'marxes': ['grouch,dictionary
"d = {'t': 1500, 'l': 1000, 'p': 1500, 'g': 6500, '",dictionary
warning: user mockbuild does not exist - using roo,rpm
#define,header
"class loginscreen(screen): def __init__(self,**kwa",buildozer
"in [83]: names = np.array(['bob', 'joe', 'will', '",numpy
def returnsomeobject(file): . . . someobject = loa,object
"x 0 1 2 3 0 1, 1, 1, 11 1, 1, 1, 02 1, 1, 1, 13 1,",matrix
python myscript.py&amp;,unix
"[{'key':'value'},{'key':[{'key':'value'},{'key':'v",dictionary
os.listdir(path),linux
"attrs=""{'invisible': [('special_deduction_type', '",openerp
"list1 = [""1.10"",""1.1"",""1.23"",""2.20"",""2.2""]",decimal
"#!usr.bin/env pythonwith open('honeyd.txt', 'r') a",io
try to run this command from the system terminal. ,selenium
chunksize = int(ceil(len(mystring) / float(numofch,algorithm
&lt;status&gt;,string
"'[1,2,3]'",list
"x = [""ajk"",""exit"",""down"",""world"",""happyasd""]max(x)",max
"def sethp(self, hppercentage, curhp, maxhp): if no",comma
# globaldata = []# classfoo: def __init__(self): s,global-variables
2323.23.23.234545.45.45.4510034.34.54.13,if-statement
"choice = input(""would you like to decrypt or encry",caesar-cipher
class fileupload(models.model): cstr = models.char,django-models
"import pygame,sys, random, timey = 0x = 0keepgoing",pixels
"traceback (most recent call last):file """", line 18",decorator
def main():n= input('the size of the diamond :: '),time-complexity
your score for this lab: 20/20,shell
#!/usr/bin/pythonimport threadingdef function1(): ,multithreading
y = list(range(11))for x in list(range(11)): if x ,printing
"&lt;span id=""target_text""&gt;  sample text &lt;spa",regex
class readerthread(threading.thread):  def __init_,attributes
syntaxerror: invalid syntax,printing
course = blaroom number(1)url http://foobar,sed
while,reverse
"numcpu = sub.popen(""($(cat /proc/cpuinfo | grep 'p",popen
p http://codeproject.com/kb/silverlight/convertsil,text
"word = ((raw_input(""please enter the letters "")).u",cypher
"def choose_winnerpvsp(p1,p2):",error-handling
arr = [(line.rstrip('\n').split(';')) for line in ,loops
myfuncs.py,pyramid
list_1 = [[the guy was plaguy but unable to play f,list
mm/dd/yyyy,datetime
"random.sample(population, k)",document
"x = [1,2,3,4,5,6,7,8,9]y = [10,4,3,7,7,3,1,8,98]",numpy
"def find_fully_correct(answer, guess): """"""(list,li",boolean
'&lt;h1&gt;test&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;,sql
"cur.execute('create table count(value1 text, value",database
"hey = {'a':67, 'b': 98}&gt;&gt;&gt;a-67&gt;&gt;&gt",key
both_ends,append
"l=0a=1b=1i=int(input(""how many iterations?"" )def m",function
"wr = csv.writer(f,csv.quote_nonnumeric)wr.writerow",format
"# (""o"" == dead cell, ""x"" == live cell)# generation",conways-game-of-life
numpy.ndarray,multidimensional-array
"teststring = """""" my name is %sand i am %s years ol",format
1.8+36,formatting
"import randomimport timename=input(""what is your n",math
import collections from collections import default,dictionary
"// the rest of the code.for (i = 1, j = 0; i &lt; ",for-loop
"@periodic_task(run_every=crontab( minute='5', day_",celery
"food = ""apple""taste = ""sweet""dict1 = {}dict1[food]",dictionary
"result = {key:value} dict = {key1:{value1:value2},",dictionary
stopiteration,function
file1,shell
"mylist1 = [ 23, 13, none, 65, none, 966, none, non",merge
def list_printer(name): frame = sys._getframe(1) p,function
def sum_to(n): if n&gt;0: return sum_to(1+1/n) # n,recursion
temp = 0 # temperaturevalve = 0 #control temperatu,raspberry-pi
"@xmlelement(namespace = ""urn:ietf:params:xml:ns:ic",bash
class stack(): def __init__(self): self.items=[] d,stack
"class _fonction_use_: def __init__(self,pos,functi",class
"[{""z"":1,""y"":0.10000000149011612,""x"":0.100000001490",numpy
&lt;h1&gt; - &lt;h2&gt;,bayesian-networks
syntaxerror,if-statement
django-admin,model-view-controller
1020,numeric
"""/table[1]/tr/td[2]/table[2]/tr/td[2]/p/b/text()""""",replace
#checks user inputdef checkinput(): while true: tr,input
for example:for 10 in range(100):returns =&gt; [10,range
if,if-statement
"&gt;&gt;&gt; find_changes(4,[1,2,3])[[1, 1, 1, 1],",recursion
"def is_triangle(a, b, c): """""" :param a: length of ",nose
var express = require('express');var app = express,webserver
"page=""village""while(page==""village""):os.system('cl",debugging
name smith city boston country usaname meier city ,dictionary
str='this is the string that luci want to parse fo,count
"{ u'response': { u'username': u'robo', u'first_nam",dictionary
"def xor_strings(s,t): """"""xor two strings together""",xor
#!/usr/bin/env pythonimport urllib2import jsonimpo,text
"&lt;data1&gt;,&lt;data2&gt;asdf,&lt;data3&gt;asdf,",csv
def queens(n): ''' how many ways to place n queens,recursion
"def quiz () : for i in range(0,1): import random f",alphabetical
"(show, (channel,views))",apache-spark
telnet 1.1.1.1 (no password or login required)#con,telnet
webbrowser,browser
unboundlocalerror: local variable 'pid' referenced,variables
edern 38pellam 34ban 32lionel 30geraint 30brangain,dictionary
if any (myword in s for s in listeword): print myw,list
report complete.on: e01a040e.xmledid raw data:--- ,batch-file
1 116969 116969 2 116973 116977 3 116977 117000 4 ,file-io
"xarray([ 3.5, -3, 5.4, 3.7, 14.9, -7.8, -3.5, 2.1]",algorithm
yield,iterable
listica = []for p1 in org.bukkit.bukkit.getworld(n,jython
int(),int
\t,pandas
class company(models.model): company_id=models.int,django-forms
members_by_groups = { 'group0': { 'nestedgroups': ,pyobjc
"#!/usr/bin/python"""""" description this script will ",class
"""(%d goals, $%d)"" % (self.goals, self.penalties)",string-formatting
tier_d[test - 1] = data[summoners[test - 1]['entri,parsing
import timeitcounter=0def fibhelper(n): global cou,timeit
import mysqldb import urllib import urllib2 clone=,urllib2
"&lt;l&gt;...&lt;/l&gt;, ",text
"""[a,b,c]""",list
if len(interval) &lt;= 2: return 1,dictionary
"import urllib, urllib2import cookielib cj = cookie",python-requests
a00a10a21,ascii
"r={'a':'aa','b':'bb','c':'cc'}print(r[a])#this giv",key
"strings = ['abc123', 'bd45', 'ef1234']",list
"import os#os.system (""bash -c 'ls /home/'"")script ",bash
"""parker,peter,wayne,bruce,wilson,wade""# i want the",ascii
def find() : global addressbookall success = false,character
increase = 0def adder(number): number+=1 return nu,optional-parameters
def averagefunc(): global new_d avgdict = {} for k,dictionary
iteration = 0count = 0while iteration &lt; 5: for ,while-loop
1:name12:name23:name3...,substitution
"base = int(raw_input(""pick your base: ""))base = st",reversing
"my_list = ['a7_1_1', 'a7_2_1', 'a7_3_1','a7_1_2', ",list
ok 17ok 9bkk 17ok 16ok 12bkk 16,for-loop
class,class
"alist = [2, 1, 4, 3, 5]alist.sort()=[1, 2, 3, 4, 5",sorting
"def break_words(stuff): """"""this function will brea",syntax-error
copy.copy temp = list(actuallist)temp = actuallist,object
"def divide(x,y): try: print (int(a)/int(b)) except",exception
python somepythonfile.py arg1 arg2,arguments
"_dict2 = { 'this.is.an.example': 2, 'this.is.anoth",nested
"index= {(v, np): vp, ('the',): det, ('shot',): v, ",dictionary
email_accounts = emailaccount.objects.filter(user_,django-templates
a,tuples
aaa 0.0520852296 0.1648703511 0.1648703511 bbb 0.1,pandas
for i1 in [xrange(567)]: w = x1[i1] z = y[i1] zw =,if-statement
"final_name = ""changes by"" + str(name)+"" ***""",font-size
"['iad-cgnt:248.600000,ord-cgnt:319.301775,iad-mci:",dictionary
ant in gnat returns trueflat in plat returns false,substring
"a = [""bob"", ""joe"", ""eric"", ""frank"", ""john"", ""matt""",sorting
none,edx
"def sem1sort1(semester1, selectionsem1): list = []",list
#include&lt;iostrea&gt;#include&lt;fstream&gt;#inc,file
"import randomprefix = ""05""print prefix + #all poss",numbers
"543,674,345,547,a788,474,687,290,b44,567,1,89,c...",import-from-csv
"file ""myfile.py"", line 184, in dpn_worker count +=",global-variables
# metaclass methodsclass meta(type): def show(cls),oop
for,pygame
1x1x3,numpy
"&lt;parent&gt;  &lt;child attribute1=""100"" attribu",parsing
"email,division,department",perl
"class loop: def __init__(self, exit=0): print ""loo",loops
__init__.py,flask
"def a(x,y,z): if x: return y else: return zdef b(p",comparison
chr3r 4000000 4005000chr3r 4005000 4010000chr3r 40,pandas
www.ncbi.nlm.nih.gov/entrez/viewer.fcgi?db=nucleot,unix
#frame dih_00000 1 -92.6371 2 -97.9913 3 -91.1572 ,awk
"answer =""c""while answer == ""c"": letterslist=['a','",encryption
if,if-statement
f(x),if-statement
"""s001p001q001""",string
"import randoma = [random.randint(1,100) for i in x",space-complexity
"// for recivesockrecive = socket(af_inet,sock_dgra",udp
"exec(""import re;import base64"");exec((lambda p,y:(",base64
g++ -std=c++11 stock.cpp,csv
&lt;tr style='background:#dddddd;'&gt; &lt;td&gt;&,parsing
hh:mm:ss,math
"header: id,indicator,{(pid,days_remaining)}row: id",awk
"import pygame, sys, time, randomfrom pygame.locals",typeerror
"in [351]: word_docid_pairsout[351]: [('bear', 1),(",tuples
s[::-1],list
akalistats,class
"def versions (k): def variante(x): a=['3', '8'] #p",if-statement
"class foo(object): def __init__(self, value1): sel",constructor
"from flask import flask, render_template, json, re",flask
"driver.get(""https://www.google.com/#q="" + user_inp",selenium
import urllib.requestpage = urllib.request.urlopen,proxy
popen(),high-load
"from livewires import games, colorgames.init (scre",pong
import randomprint('welcome to the game')char1=[in,divide
list,list
t = telefonbok(),object
"&lt;a href=""""http://a0c5e.site.it/r"""" target=_blan",url
"variable1 = 3variable2 = ""hello""print(""variable 1 ",addition
pip install http://www.crummy.com/software/beautif,pip
"[100,123,111][010,789,222][001,123,222][230,789,23",indexing
"a={'vladimirputin':{'milk': 2.87, 'parsley': 1.33,",key
data[i],condition
"a = [[4.5555, 5.6666, 8.3365], [10.4345, 1.574355.",numbers
10 5,int
a = 10def test(): print(a),variables
if( int(array_y[counter2]) == int(round(float(elem,floating-point
"limit = 1000def is_prime(n): for i in range(2, n):",data-structures
"old_list = [ ['id0', 'id1'], ['4', '8'], ['5', '6'",dictionary
"if __name__ == '__main__': stocklist=['aapl','msft",csv
"print("" description product id price"")import csvf ",csv
def func(alist): if len(alist) == 1: return arg * ,return
please enter an integer number (0&lt;=number&lt;10,algorithm
95 cpd-1 -3.21 ooo56 cpd-1 1.21 ooo77 cpd-1 2.2 oo,perl
"x= [('a',1),('b', 2)]",dictionary
enter the height:5 5 44 333 2222 11111,geometry
"mother_dict= {'son_dict':{'name':'jason','age':26}",dictionary
s = 'abcdefghijklmnopqrstuvwxyz'rot = raw_input('e,minimize
"class a(): def __init__(self, attr1): self.attr1 =",nested
"import randommatches = random.sample (range(1, 20)",output
"[('thorough', true), ('bliss', true), ('earnest', ",tuples
nums = [square_odds**2 for square_odds in nums if ,list-comprehension
"[{'apr': 567.82, 'aug': 567.82, 'dec': 0.0, 'feb':",sorting
"l = ""thanks you for the help""",list-comprehension
import nltkfrom nltk import *from nltk.tokenize im,nltk
global_var = 1def my_vars(): print( 'global variab,function
"print (""message from server : "") + msg",coding-style
train,matrix
"values = ['1','2','-','-3','n/a','4','5']",list
linux command,post
total = 0.0while true: try: total =+ float(raw_inp,while-loop
"a = [2, 3, 1, 4, 6, 8, 5, 9]b = [3, 8, 9, 4, 10, 1",sequence
&gt;&gt;&gt; x = 0&gt;&gt;&gt; c = someclass(x)&gt,class
"cursor = db.execute(""select text from mytable wher",twitter
"def main(): string=input(""string"") pattern=input(""",wildcard
list,list
line.split(),filenames
#define welcome as the main menu page for editing ,block
url = 'http://www.example.com/wps/portal/!ut/p/c1/,url
def player():player 9 mike m 180 90 6 2 3.81 .283,file
def new_option1(self): self.labelvariable3 = tkint,tkinter
"&lt;font face=""arial"" font-size=""16px"" color=""navy",beautifulsoup
class sessionid(db.model): sessionid = db.stringpr,google-app-engine
"import ostry: filename = ""test123.pdf"" folder = ""s",exception
seats = [] #each row has ten seats available atmpr,validation
"s1000005 = s1000005,s1000006,s1000010s1000007 = s1",list
837unnm9abcb9hfrhcop24cd,passwords
"human = {'name':'bogdan','age':'21','sex':'male'}a",mongodb
"print(""please type in a username"")username = str(i",list
123 456 7 8,numbers
prints = []#imports and initsimport pygamepygame.i,pygame
"import pygame, sys",pygame
d:\zjm_demo\app&gt;appcfg.py upload_data --config_,upload
"def get_file(start_file): #opens original file, re",csv
"wordlist = ['cat','dog','rabbit']letterlist = [ale",list-comprehension
bbfreeze,py2exe
import scapypktlist = list() #create a list to sto,pcap
"code_digit(n, key)",encoding
"name = str(input(""enter your name: ""))score = str(",io
hedge,list
$ python&gt;&gt;&gt; from ***.***.***.*** import *,ios
def partitions(n): # base case of recursion: zero ,combinatorics
while true:  &lt;do something&gt; if &lt;condition,while-loop
"namelist = sorted([""jan"", ""frank"", ""kim""])commontr",dictionary
for item in lists,for-loop
"list_1 = [""hi"",""hello"",""nice""]",list
"for i in range(len(x) // 4): a, b, c, d = x[i*4: i",lambda
"def concatlist(l1,l2) #&lt;--error in this line l3",syntax-error
"import randomp= []for a in range(random.randint(5,",random
data = int(data),sqlite
"x = int(input(""how many cities? ""))",traveling-salesman
class room(object): #new style classes def __init_,player
python manage.py runserver ,django
0039-7806rrvlak,insert
"code:list=['1','85863','432','93','549834']list.so",sorting
228;u;ali;129;cr;daan;730;c;arton;466;cr;frynk;314,text
def distance_from_zero(x):  if type(x) == int or f,types
data,numpy
"&lt;div class=""blalbal""&gt;&lt;h2&gt;data5&lt;/h2&",parsing
"from = ""leeds bradford""depart_from = driver.find_e",selenium
def travelmanagement(): trate=[] totrate=[] finrat,output
&lt;function fhd at 0x7f52d72ceaa0&gt;&lt;function,sys
forall ${dir} in ${parent_dir}if ${dir} is modifie,last-modified
import randomclass quicksort(object): def _choose_,sorting
"a = [[1, 1, 1, 1, 1], [2, 2, 2, 2, 2], [3, 3, 3, 3",matrix
"import numpy as npx = np.linspace(1e10, 1e12, num=",numpy
'life.state.step',namespaces
"data_small = [ ['a','b','c'], ['d','e','f'] ]data_",itertools
"import osimport syssys.path.append(""c:\pysec-maste",import
for,real-time
def removedots (input): for i in input: p = i[2] p,replace
"&lt;td&gt;xxxxxxx&lt;/td&gt;&lt;td style=""display:",regex
"#################def getresults(name, price):# whe",dictionary
"&gt;&gt;&gt; a = [1, 2, [3, 4], 5]&gt;&gt;&gt; pri",element
x y 1467153 12309 1466231 21300  . .  . . 1478821 ,sorting
for elem1 in mylist: def function1(): for elem2 in,loops
"(a, b, c, d, e)(a, b, c, e, d)(a, b, d, c, e)(a, c",permutation
5 4 3 2 1 4 3 2 1  3 2 1  2 1  1,loops
elif num &lt; ord('a'): num += 26translated += chr,syntax-error
#!/usr/bin/python import sys fname = sys.argv[1]ha,bioinformatics
"class someclass: def __init__(self, arg1, arg2..):",constructor
"class par(object): def __init__(self, chip, fig): ",class
'file.txt',file-io
sqlalchemy,sqlalchemy
"var = 1vars = []if var &gt;= 1: # add it to ""vars""",variables
"file ""c:\python34\lib\site-packages\selenium\webdr",radio-button
"list = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]num_sublists ",split
"[0, 0, 0, 1][0.1, 0.8, 0.1, 0][0.2, 0.2, 0.2, 0.4]",permutation
"x = [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, ",shorthand
"{'a': { 1: -0.25, 2: -0.2} 'b': {1: 'foo', 2: 'bar",tuples
month total rainfall----- ---------------jan 10feb,nested-loops
"listone = ['33.325556', '59.8149016457', '51.12894",loops
"#program beginsx = raw_input(""give me the first nu",addition
"import shutil, os",language-design
"def evolve(): global pop,fvals for g in xrange(0,g",syntax-error
"#collects user inputatomic_number = raw_input(""inp",if-statement
img = imread('');grayimage = rgb2gray(img);kernel1,opencv
return,interpreter
"def __init__(self, *args, **kwargs): super().__ini",oop
"['""442116.503118"",""442116.251106""', '""442141.50286",list
sequence1: atgcaccgtsequence2: gacctagca,fasta
"['one', 'two', 'three', 'four', 'five']",list
class customer(models.model): name = models.charfi,mobile
sudo,sudo
k,cprofile
#define let def,metaprogramming
"dict1 = [{'date': 1, 'name': 'xyz', 'qty': 100}, {",dictionary
letters = 'abcdefghijklmnopqrstuvwxyz' encryption_,tkinter
"file = input(""enter a filename: "")try: a = open(fi",loops
a = 'blueberry'print a[-1:-3],slice
"files = os.listdir(""2014/"")",replace
12insert 0 5insert 1 10insert 0 6print remove 6app,list
getname = []for word in args room.usernames.get(ar,replace
"def horizental_checker(lst1,lst2,lst3,lst4,place_c",for-loop
"userin = ""h""",while-loop
"print(""enter the homework scores one at a time. ty",if-statement
"var = """"",raw-input
"listdict =[{'name':'a', 'fun':'funa',  'childs':[{",dictionary
"class command(noargscommand): help = ""this will up",django
classnames = studentname and scoreif studentname n,text-files
1;2;0.0008131 1;714;0.0001097 714;715;0.0016285 71,dictionary
from flask import flaskfrom flaskext.mysql import ,flask
class equipment(object): __id = 0 __type = 0 __bra,superclass
gawk,awk
"def challengerplayers(region, types, apikey): url ",api
"my_list = [""this"" ""is"" ""an"" ""example"" ""list"" ""hehe",block
"{ ""newcaselist"": [ { ""registereddate"": ""2015-07-10",sorting
wget -o example.xml http://gdata.youtube.com/feeds,parsing
/html/body/span/section/main/article/header/div[2],xpath
"[ [ [ { 'a': 'b' }, { 'c': 'd' } ], { 'e': 'f' } ]",dictionary
.npz,numpy
time = int(input('how many minutes were you exerci,for-loop
import smtplib fromaddr = 'myemail@gmail.com' toad,email-attachments
import copyimport cv2from matplotlib import pyplot,opencv
1----- = x  1+x,loops
"import matplotlib.pylab as pltplt.axhspan(0, 1, fa",matplotlib
exception in thread thread-103:traceback (most rec,python-requests
import numpy as npfrom matplotlib.pyplot as pltx =,plot
#manage + control the margin in spaces between the,coding-efficiency
#!/usr/bin/python# -- coding: utf-8 --import xlwti,parsing
dot -tpdf somefile.dot -o somefile.pdf,shell
a,override
"#variablesdestination = "" ""milesdest = 0mpg = 0gal",while-loop
import itertoolsfrom itertools import izip_longest,function
drop table if exists stocks;create table stocks ( ,sqlite
enter code here,awk
class player: ''' actions directly relating to the,typeerror
fasta,awk
exam,slice
[line.strip() for line in lines],list
1234567 89 'if its 7(length of sub-string) and 2(n,excel
weatherinfo = str(z + y + x + w + v + u)info = lab,tkinter
"elif a == ""other"": numbers = [randrange(33, 126) f",integer
files.txt,with-statement
"dict = [{'author':'joyce', 'novel': 'dubliners'},{",list-comprehension
"unencrypted shared secret = ""my shared secret"" une",hash
start_time,datetime
"import restr1=raw_input(""room number(l1 - l5): "")t",variables
numpy.savez,numpy
"data = [{'1234': [{u'gateway_ip': u'172.20.21.1', ",dictionary
"children=zk.get_children(""/my/example"", watch=my_f",sorting
data2 = pd.dataframe(data1['kwh'])data2 kwhdate 20,linear-regression
"{'total words': 'number', 'words ending with ly': ",counter
"# open netcdf filefd1 = nc.dataset(nc_file1, 'r')#",equation
windows bat,batch-file
"dict = {'hello':'world', 'hi':'again'}x = str(dict",testing
ciphertext = str[nintendo65],encryption
"raw_input(""prompt"")",user-interface
"class class():  def __init__(self,**kwargs): print",init
def main(): num = int(input('please enter an odd n,return-value
ret = u.run('''echo'''),exception
import pygamefrom pygame.locals import *pygame.ini,circuit
m_angle = math.degrees(math.atan(float(thing.posit,division
"package mainimport (""fmt"" ""os"" ""bufio"")func main()",go
from __future__ import print_functionimport blockt,bitcoin
"list = ['hello', '2u:', '-224.3', '45.1', 'sa 2']",arduino-uno
"def add_scale_2(l, m, l_scale, m_scale):"""""" add_sc",audio
"import turtleimport timesides = int(raw_input(""ent",range
"stack, queue and linked list",stack
"map = { 'a': 4, 'b': 6, 'c': 'a+b', 'd': 'c+a+4'}",dictionary
str = 'fakeline\nfirstline\nsecondline\nthirdline',string
"appname = ""ap01""optna = ""-server""optnb = ""-filenam",system
"class vehiclenumber:def __init__(self, name): self",object
1 100 25 t1 101 26 a1 101 27 g1 101 30 a1 102 40 a,unix
class mydoc(document): dictfield = dictfield(),mongoengine
class externalfriends(models.model): external_user,database
"import mathdef main(): print(""prime number or not""",continue
"line 66, in &lt;module&gt; ting.movefigure(ting, """,figure
********** ***** ,for-loop
"for termid, value in doctermdic[docid].iteritems()",pseudocode
"i = path.rfind('.') module, attr = path[:i], path[",django-registration
import numpy as np import mathimport itertoolsdef ,algorithm
"with open('a') as f: a, b = f a, b = a.strip(), b.",shell
test.py,nonetype
def s(): v = 6 + 4 a() return vdef a(): ace = v + ,variables
$ sudo apt-get install git,terminal
"print(round(mas[i],4))",floating-point
#made by will bishop with help from cdontsimport w,py2exe
"import mysqldbdb_mysql=mysqldb.connect(user=...,pa",pygresql
'(+ (- 5 4) (- 2 1))',string
views.py,authentication
if,if-statement
-------------------dog: bredgender: maleage: 6birt,text
useranswerlist[],input
"def createpath(self, path, nameoffile ): temp = []",function
"name position letter stringbla 123 a ..b.,,,.c..bl",sed
qd-p64-dzp-d64-z8-8nn.q qd-p8-dpz-d8-z1-1nn.q qq-p,perl
"bob: owns(car, v_bmw)john: buying(bike, v_harleyda",replace
dl[vr],rename
mod_wsgi,linux
pip,pip
"def func0():print ""quiz program""print ""-----------",dictionary
"myhandle = open('myinput01.txt', 'r') aline = myha",sorting
def listallcams(): emptlist = [] # an empty list f,flask-sqlalchemy
gclient sync,cross-compiling
"a = [1,2,1,3,2,1,1,1,2,1,1,1,1,1,3,1,2] b = [1,1,2",pattern-matching
"{'state': ['alabama', 'alaska', 'arizona', 'arkans",dictionary
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;user key: &lt;/s,html-parsing
def rand(): displaylist = [] item = print(random.c,random
"def left_chop(key, arr): l = 0 r = len(arr) while ",search
item,django-models
"swap1 = ""abc""swap2 = ""def""def swap(): global swap1",reverse
"def alumni_search(request, form_class=find_alumnif",django-views
import xlrdfrom time import sleeppassword = 0usern,spreadsheet
symbolmanager.py,import
"def asdf(var1,var2): varsum = var1+var2 if varsum ",terminate
"alphabetvalues = {""a"":1,""b"":2,""c"":3,""d"":4,""e"":5,""f",dictionary
random.choice,random
"write_file = input_file[:-3] + ""bak""read_file = in",loops
"aerospike_dca_client.put(key,bin)......bls_key_a =",aerospike
"{common:{rq:{ct:""""},up:""chg"",down:""chr"",linktarget",parsing
import datetime as dtimport scikits.timeseries as ,scikits
def joinstrings(*stringlist): for gallery in strin,loops
#!/usr/bin/python # sort and unsort using python#t,argparse
li1shi4qin3fat1gon1lin3den1choi3xin1nen3,vba
"int_string = ""1558662:10306104:11038113:7883355""",string-formatting
"input i = 2, 64i1=2, 33=f(2,64), 64i1=2, 33, 64i2=",matlab
number1 = 54378number2 = 54379if number1 (is simil,similarity
inth1 = score1_list[intcount] and strhn1 = name_li,syntax-error
print,variables
"list.files(path='/home/test', all.files=true, patt",shell
import jsonfn = 'download.json'data = jsonresponse,request
"import socket, sysprint ""\n"" print ""--------------",exploit
"nuggets = input(""how many nuggets do you need? "")n",if-statement
pycharm 4.0.3.zip,pycharm
"datetimeobj = datetime.datetime.strptime(datetime,",strptime
correct,behavior
&gt;&gt;&gt; s = 'sliding puzzles'&gt;&gt;&gt; puz,intervals
"(63, 166) - (576, 366)",split
"line 12, in &lt;module&gt;aux=num_elenameerror: na",defined
"list = ['a','b','c','b','d','a'] #then it should r",elements
"longsubjectnames = [] #example: ""academy for class",append
"text = open_file.read()grammarlist = raw_input(""en",punctuation
yield,compression
"mylist = [['issue id','1.completeness for otc','br",list-manipulation
"list1 = [[10,[1,4,5]],[40,[1,5,6]],[30,[2,4,5]],[5",sorting
for,for-loop
import tkinterdef win1(): # this is the main/root ,tkinter
#NAME?,replace
@app.route('/allfile')@login_requireddef allfile(),flask
"#!/bin/shpython pytest.pyprint(""fe fi fo fum i'm g",shell
"traceback (most recent call last): file ""positive_",unicode
"def main(a,b) some steps",overloading
"elif(op=='+') : size=int(input(""please enter how m",calculator
if(obj==='undefined'||obj===null),shell
for i in range(10): //blocks of code,for-loop
for,readline
"a = [[""adolf"", ""10""], [""hermann"", ""20""], [""heinric",overwrite
import jsonimport sqlite3conn = sqlite3.connect('r,sqlite
def get_data(): sys.argv[1].isnumeric() if true: p,command-line-arguments
list dbary,math
"[2014-12-22 10:39:54,668] - 1=1,2=2,3=a,4=1,109=53",unix
"average = [1, 17, 11, 2, 0, 4, 0, 5, 2, 6, 0, 4, 1",for-loop
"&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;&lt;sc",well-formed
my_value1= 1e-5,format
class events(ndb.model): name = ndb.stringproperty,gae-datastore
import osimport reimport fileinput#---------------,string
"np.random.normal(i, 0.05)",matplotlib
eat tea tan ate nat bat,anagram
"&gt;&gt;&gt; a = np.matrix(np.zeros(2, 3))) &gt;&g",matrix
"df = {'date': {0: '2014-01-01, 1: '2014-01-01', 2:",dataframe
"{'key1': 'list1', 'key2': 'list2', and so on}",output
#!/usr/bin/env pythonclass test: def __init__(self,class
#!/usr/bin/env python# -*- coding: utf-8 -*-filena,numpy
"img_bw = cv2.threshold(img_filtered,127,255,cv2.th",numpy
__add__,methods
"dict = { 'hello' : [ { 'blah' : 1, 'dodo' : 2 }, 3",dictionary
"a = [(24, 13), (23, 13), (22, 13), (21, 13), (20, ",path
def f1: passdef f2: passdef f3: pass,logic
pkts: 215104502 bytes: 202537648280 drops: 1302599,awk
\xffdsi\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x0,hex
"print ""how much money do i have?"",checking balance",raw-input
"import reline = ""cats are smarter than dogs""matcho",match
"x = [2, 4, 7, 12, 3]",integer
from bs4 import beautifulsoupimport requestscompan,screen-scraping
"myrev = [positive, negative, neutral]",label
"def mergesort(alist): print(""splitting "",alist) if",mergesort
import osimport timeimport randomimport cryptofrom,lambda
"import osfor filename in os.listdir("".""): if filen",file-rename
import numpy as np import matplotlib as mplt data ,data-extraction
&lt;person&gt; &lt;name&gt;someone&lt;/name&gt; &l,dictionary
mp = 2.5 if 'safe_mode' in options else 0.5 if 'fa,if-statement
"outfile = input(""what would you like the text file",writing
"item=['i','want','this','output']i=[1,2,3,4]for x ",for-loop
"list = [(""this"", 4), (""is"", 2), (""a"", 1), (""string",list
for x in soup.findall(attrs={'valign':'top'}): pri,regex
x^2^y,recursion
isbn= input('please enter the 10 digit number: ')w,isbn
"i have an approach 1.start with the top-left cell,",algorithm
line1line2line3,merging-data
import unittestfrom selenium import webdriverclass,selenium-webdriver
"{""id"":""1"",""name"":""smokey mountain ski club"",""terra",json
c,save
a,django
"def retrieve():global datasave,y ###don't know whe",tuples
if src in mac_dict:,dictionary
"with open(__file__, 'r+') as f: f.write('abc')",file-io
def func1(): var = var + 1var = 1func1(),self-reference
"import randomprint('hello')question1 = [' cbca', '",if-statement
"a=[5,4,3,2,5,4,6,9,8,4,3,2,6]b=[11,12,1,2,11,9,11,",pandas
break,for-loop
gu|8gt|5gr|5gp|1uk|2gr|20gp|98uk|1me|2support|6,typeerror
alex:3john:6sam:8,split
"my_dict= {'aaa_h2_qqq11':[[1,3]],'aaa_h2_ppp13':[[",dictionary
user_id item_id 1 item10 1 item11 1 item12 1 item1,r
def calc(request): try:  i1 = int(request.get['i1',django
"print ""what equation would you like""a = raw_input(",math
import pyfirmatafrom pyfirmata import utilimport t,tkinter
import cv2import numpy as npcap = cv2.videocapture,numpy
"import requestss = requests.session()r = s.post(""h",python-requests
"@app.route(""/uploadcsv"", methods=['get', 'post'])d",postgresql-9.3
"[{""user_id"": null, ""name"": ""image"", ""resource_id"":",dictionary
loan:0unpaidfees:-3510000total:585677088.5,number-formatting
username:id:name:hash:::,function
for k in range: delta = array(range(n_stack)) whil,loops
! comment text,fortran
import blah blah balhdef main(): blah blah blah  b,loops
"def quizscores(): quiz1 = int(input(""enter quiz 1 ",return
"log =os.path.join(sys.path[0],'log')f=open(log,'r'",utf-8
"def countlinks(url): urlcounter = {""dummy"":[0,0]} ",keyerror
"class user(usermixin, surrogatepk, model): __table",flask-sqlalchemy
@property,oop
from django.db import modelsimport numpy as npclas,url
"numbers = [1, 2, 3, 4, 5]minimumnumberofelementsre",iterator
import sqlite3import cldimport langidlanguagedata ,error-handling
try: ret=self.req_session.get(url) if (ret.status_,exception
test,python-internals
"def not3(string2, string1): if len(string2) &lt; 3",case-insensitive
"import randomopl = [*,-,+]def mathsquiz(number1,op",random
"import osdisk = os.statvfs(""/"")print""""print ""~~~~~",ubuntu
"from math import sqrt,powdef perfect_sqr( n ): if ",square
if d.get('foo'): func(d.get('foo')),dictionary
"import pygame, random, os, syspygame.init()pygame.",projectile
"for jindx in xrange(1, 10):",syntax-error
"list_value = [ 1, 2,0,-1,-9,2,3,5,4,6,7,8,9,0,1,50",pycaffe
name time dept id-------------------- b1 2:00pm z1,dictionary
#!/usr/bin/python2.7### regitration#import osimpor,search
"import randomprint (random.randrange(0,4))def rand",random
"for name, age in read(file, ('name','age')):",io
import numpy as npimport matplotlib.pylab as pltpi,ode
"#!/usr/bin/python""""""socket client""""""import socket ",tcp
"how=int(input(""how many students in your class?""))",percentage
/-- am here/one/some/dir/two/three/has/many/leaves,operating-system
from tkinter import *#start code for the introduct,wizard
c:\mysite&gt;python manage.py shellpython 2.7.3 (d,web-applications
"def main(): ts = twittersearch() response, data = ",twitter
"class calculation(object):def multiply(self, a=5, ",object
def applyharriscornerdetection(): image1 = cv2.imr,numpy
"a = []nums = raw_input(""enter input- "")for n in nu",swap
codeword = input('enter codeword : ')codeword = co,chr
[7649961837390354170470092337113378986226210000000,list-manipulation
"my_list = [(a1,b1),(a2,b2),(a3,b3),(a4,b4)]",tuples
django_comments,django-models
"def invalidsyntax(a): if max(a)&gt;20: print(""the ",arraylist
"str1 = ""numberone=1,numbertwo=2,numberthree=3""newn",integer
"r = [{ ""id"": ""fhjgjj"", ""oneid"": ""sjgkhkshgkfh"", ""n",list
"(15,20) (17,30 ) ( 40 , 25)",split
"correct_answers = ['a', 'c', 'a', 'b', 'd']user_an",nested-loops
"with open('test.txt', 'r') as listfile: lines = li",list
"[(1, 'item1'),(2, ""item2""),(2, ""item3""),(3, ""item4",json
# importsimport pygameimport os# startuppygame.ini,pygame
# function to check if the password is a valid one,list
import math itr = int(raw_input())arr = []for i in,typeerror
"for p in range(1,10): r = [] r.append(p)print r",loops
cur1 = g.db.execute('select id from students')stud,flask
"s = '456+123' # separate the two strings, convert ",for-loop
"import pickleimport shelvef = open('p.pickle', 'wb",typeerror
import pygameimport sysclass application(object): ,rect
"def view(request, x or y)",view
&lt;&lt;eof?,redis
"z[i-np.arange(0,(i-1))",ode
i += 1,methods
"from itertools import iziptimestamp=[1,2,3,4,...]#",loops
"outfile = open('text.txt', 'r')m=outfile.readline(",add
"old_list = [1, 2, 3]first_int = 3second_int = 5new",append
student grade,dictionary
"n = int(input(""please type a code: "") x =['a','b',",substitution
"alist = [1,2,3,4,5,6,0,9,9,4,5,0,0,2,3,0,9,6]test ",list-comprehension
usersnotauth=0users=server.getusers()for key in us,syntax-error
"os.system(""'{0}'"".format(path))",github
"[('us-west-2', 'vol-xxxxxxxx'), ('us-west-2', 'vol",dictionary
nswindow.initwithwindowref_(nshi_object)traceback ,osx
leo@leo-virtualbox:~/development/pki-client$ curl ,https
"row = int(raw_input(""enter the first row number: """,math
&gt;&gt;&gt; math.floor(8.2-0.21)7.0&gt;&gt;&gt; m,floating-point
def test_alarm(self): self.setup_some_test_data() ,try-catch-finally
player(),class
print 'the average amount of words in the sentence,split
"profile_list = [{'name':'suzy','gender':'female'},",dictionary
"tokens = content.split()topics = [e for (n, x) in ",list-comprehension
if operator==+: correct_answer=random_number1+numb,syntax
def getkey(item):return item[0]list = [('new york',sorting
"&gt;&gt;&gt; a = [1, 2, 3, 4]",slice
"directorylist = ['path', 'to', 'directory', 'file.",path
"x=get(x) for i in range (start, end): if x==0: x=1",if-statement
.txt contents = html_log:bob -1.2 -0.25 4:53 1 0:0,list
tree = { 'b': { '1': { 'e': { '1': { 'd': { '1': ',tree
"for fan_set in range(0, len(self.vertices) / verte",dynamically-generated
"def foo(arg1,arg2,arg3=some_val,arg4=some_other_va",matplotlib
"data= ['hello','world','# ignorethis','xlable: som",list
play_golf if sun_shines else stay_dumb,ternary-operator
import os import sys base_dir = os.path.dirname(os,css
"def right_binary_search(input, value): if input is",binary
"move.ip[5,0]",pygame
import requests # http://docs.python-requests.org/,dictionary
import rpi.gpio as gpioimport timeimport cv2import,while-loop
.zip,zipfile
"def xslx_to_csv(): files = os.listdir(r""~\files to",string
id item444 anemia444 liver444 anemia444 anemia222 ,counter
'c',string
"transaction([time_stamp, time_of_day, day_of_month",counting
#===========================# lorem ipsum#========,pandas
1000s 00rr: 20 values1200s -10rr: 10 values900s -2,text
"#what i wantlistofobjects=[obj1, obj1, obj2, obj2,",object
ad groupannuity calculatortax deferred annuityannu,unique
"list1=[""watch"",""hour"",""time""]list2=[""new watch rol",list
typeerror: readfromfile() takes exactly 2 argument,compiler-errors
arraylist&lt;object&gt;,object-type
find the sum of all the primes below two million.,math
"import socket, sysfrom struct import *from flask i",web
"import time import random question = ""0"" score = """,list
def changetouppercase(text):for i in text: i = ord,chr
"iphone6-16gb-black,40000,10000,10000,20000iphone6-",wildcard
daytona 500,excel
@app.route('/contact/')def contact(): flash('we ar,jinja2
a9,utf-8
"my_string = ""_©Œ/_?Œ""f = codecs.open(local_filepat",unicode
"file ""/home/uwp/widgets/contentfreshness/freshmap.",csv
designpoint1.setparameterexpression(parameter=para,replace
"filename = input(str(""what is the new file going t",text-files
"w=100h=200im=im.resize((w,h), image.antialias)for ",typeerror
"for i in range(253, 2): print iwould print 253, 25",range
"class thecalcs: def __init__(self, pk_from_db, cat",class
project -module1 -module2 -module3 -module4 -modul,parsing
"cities = [""new york, ny"",""chicago, il"",""denver, co",math
what is the 10 001st prime number?,parsing
"import pygame, random, sysfrom pygame.locals impor",pygame
"fname = raw_input(""file name: "")import revars = di",string
"angle_1 = input(""what is the degree of the first a",int
"open nickname, $nicknamefile or die ""$nicknamefile",perl
"pf = 2*stdtr(dof, -np.abs(tf))pval = 2*stats.t.sf(",scipy
#creates entry inputs for answersentry=entry(maste,grid-layout
a = 'word',token
import sysfrom student import studentclass student,range
"system_list= ['cassandra', 'flume', 'hbase', 'hdfs",list
def get_queryset(self): pista = self.request.get.g,django
gsub,regex
"[ array([[2,3,4,5,6,10]]) array([[7,3,9,1,2,3]]) a",multidimensional-array
"&gt;filter_words(['how', 'about', 'i', 'go', 'thro",dictionary
import numpy as npfor i in range(10): im = np.rand,random
"from itertools import permutationsarray = [""a"", ""b",permutation
what is your starting balance: $ 1000.00what is yo,for-loop
"array([[ 0.28, 0.22, 0.23, 0.27], [ 0.12, 0.29, 0.",numpy
"list.sort(cmp=lambda a,b:-1 if b==0 else 0)",lambda
a=['2345'],integer
"for i in range(0, self.sizex): temp = [] for j in ",range
from bs4 import beautifulsoupimport requestsname =,input
warning (theano.configdefaults): g++ not detected!,theano
"[101,102,105,106,108,111]",time
"arr = [10,40,30,326,673]print(max(arr))",max
-bash-3.2$ dir dispatch.cgi stats-bash-3.2$ ./disp,apache
10.1.1.10 144111048910.1.1.15 144111049010.1.1.10 ,dictionary
`for row in reader:if headers:conn.execute('insert,indentation
while teams: if scores[0]&lt;scores[1]: losers.app,while-loop
"a = [(1), (7), (3), (1)]b = [(2), (4), (7), (4)]c ",dictionary
"foo = ['a', 'b', 'c', 'd', 'e'] from random import",random
"with open(""my_rotation_matrix.bin"", ""wb"") as outpu",list
box1,replace
"x = [['219'], ['220'], ['218']]# find combosprint ",list
data['dogecoin'].head() market_cap_by_available_su,pandas
1 2 34 5 67 8 9,matrix
def scanbarcode(self): barcode = self.lineeditscan,pyside
"ex = ""/volumes/obelix/5215.tif, /volumes/gemeinsam",wildcard
if key in my_dict: pass,dictionary
#giving variables for the input of dollar amountdo,dollar-sign
"i=2for i in ""1234"": print i*2 break",int
"nested = { 'a': { 'b': { 'c': 'c val', 'g': 'g val",dictionary
os.system,sudo
"df = pd.dataframe({""refined__some_id"":some_id_list",couchdb
"def insert(self, index, item): """""" (linkedlistrec,",linked-list
"&lt;audio uri=""a852""/&gt;",grep
"result = {'lat': u'-7.798668', 'lng': u'110.369487",dictionary
"class graph(object):""""""a simple undirected, weight",ubuntu
http://weibo.com\/p\/aa\/weibo?from=bb&amp;wvr=5.1,encode
"paragraphs = re.match(r'&lt;p&gt;.{1,}&lt;/p&gt;',",regex
"d1={""tables"": {""k1"": {""columns"": [""val1"",""val2"",""v",dictionary
"9/2 results in 4,57/2 results in 3,4",divide
"p=[(0, 2), (2, 6), (6, 7), (7, 3), (3, 7), (7, 6),",tuples
#kind of like this import math # this is what i tr,tkinter
"a = 12,3k b = 1,84mif b &gt; a : print b ",compare
"num1 = int(input(""please enter a number between 1 ",for-loop
dfs,algorithm
isinstance,filehandle
"['name surname', 'email', 'type', 'name surname', ",dictionary
"dict1 = {'key1' : ['value1','value2','value3'] , '",dictionary
numresponse = [] def inputint(int): while false: v,design
first=[]second=[]third=[]first.append([int(i) for ,floating-point
"import mechanizeurl = ""http://www.taliesin-arlein.",forms
"[[(1,2), (3,6), (5,3)], [(1,5), (3,5)], [(2,1), (1",tuples
self.response.write,google-app-engine
class a: a='a'class b(a): a='b'class c(a): a='c'cl,diamond-problem
"def conflicts(list1,list2): numit = 10 for i in li",optimization
"tcase=6sum=0def a(m,n): m=m n=n if m==0: return n+",data-structures
solutions = []def backtraking(state) for new_state,backtracking
"import random no1 =(random.randint(1,20)) function",random
repeat_middle,repeat
r = requests.get('https://graph.facebook.com/v2.3/,django
"[[{'a': 2,'b': 3}],[{'a': 1,'c': 3}],[{'c': 2,'d':",dictionary
"counter=0score=0import randoma = random.randint(1,",except
"def f([a,b,c]): d={a:'like'} for x in [a,b,c]: d[x",hashtable
"[[20, 21, 22], [17, 18, 19, 20], [10, 11, 12, 13]]",nested-lists
!= _—”&gt; checks if the value of two operands is ,operators
from nltk.sem.logic import *lexpr = expression.fro,nltk
if,short-circuiting
"d = { 'case1' : [18, 17, 497, 298, 57, 82, 1], 'ca",dictionary
"def a(target,mark) target=mark[0] for numbers in r",for-loop
"import randomdef main(): print(""welcome to fight c",parameters
from __init__(self),interactive
message(),sys
class simplestring():  popsize = 1000 #should be e,variables
from bs4 import beautifulsoupimport urllib2var_fil,beautifulsoup
"email = driver.getpagesource().contains(""@"")",selenium
finalprice = quantityofx1 * priceofx1 + quantityof,math
key valueaa aab aac aad bae baf bag bah b,dictionary
def get_json(url): opener = urllib2.build_opener(),api
"def store_results(class_number, name, score): clas",syntax-error
smtp connection raises non-integer base36 conversi,smtp
x_list,variables
"def primes(n):  array = [i for i in range(2,n+1)] ",primes
name_list = int(4)namecount &lt;= name_listfor nam,sorting
from google.appengine.ext import blobstorefrom goo,blobstore
"{u'data': [{u'time': 1422000000, u'value': u'3.462",parsing
class myclass: def get(self): #get the passed in a,command-line-arguments
1,dice
"{a: 3, 45, 34, 4, 2, 5, 94, 2139, 230345, 283047, ",dictionary
fib 0 = 1fib 1 = 1fib n = fib (n-1) + fib (n-2)gen,f#
"codes(lst,cods)",element
df_all['search_term'] = df_all['search_term'].map(,dataframe
group type fraction1 a 0.11 b 0.61 c 0.32 a 0.72 c,io
import subprocess cmd = 'ifconfig -a'p = subproces,unix
a=1while a&lt;100: if a%2 == 0: a+=1 else: for i i,printing
"def print_column_labels():print "" a b c d e f g h""",return
"filename = ""/users/fis/desktop/installation_guide.",subprocess
import pwdpwlist = pwd.getpwall()#perform operatio,pwd
"import sqlite3 as liteimport sysnames = ( ""john"", ",variables
${outbox_details.details['declined']} ${outbox_det,pyramid
"import os, syspath = ""c:/output/""file = ""bob.zip""m",hyperlink
col1 col2 col3 col4 col5 1 0 0 1 na 2 3 5 1 na 1 1,pandas
"{hello|hi|howdy}{ ,i {really like|absolutely adore",random
functionlibrary,python-import
def busca(self): conn = sqlite3.connect('teste.db',sqlite3
"{ ""data"": [ { ""category"": ""organization"",  ""name"":",parsing
"s = [1,2,3,4,5,6,7,8,9] s[0] = s[0:0] #replace s[0",ipython
def get_links(url): html = urlopen(url) bsobj = bs,web-crawler
sol_00000001 h2o2 knmo4 naclsol_00000002 nacl nacl,formatting
negtrain = neg[:n]postrain = pos[:n] negtest = neg,knn
"&gt;&gt;&gt; [[2, 0], [0, 0]][array([5, 7]), array",list
class entry(models.model): .... slug = models.slug,permalinks
"dict1 = {a:10, b:15, c:20}dict2 = {a:25, b:30, c:3",dictionary
abcd-efgh-ij,string
name,object
mir_seq,awk
"import random f=open('z:/desktop/keywords.txt','r'",random
lang_selection_list,dictionary
f,return
typeerror: stringcounter() takes exactly 1 argumen,types
"import datetimebday=input(""enter your birthday as(",calculator
import smtplibcid = raw_input()cmd = #output from ,smtplib
"temp = re.findall('.*[^\{*][^\}*].*', 'sega e-r. a",string
"tuples = [('a', '1'), ('b', '1'), ('c', '2'), ('d'",tuples
expected an indented block,ipython
"#map generation scriptgrid = {1 : [1,1,1,1,1,1,1,1",methods
"can not open resource ""https://www2.oxxo.com:",reportlab
00:00:29:02 00:00:35:00 text 1text 200:00:36:04 00,negative-lookahead
"variablehere = ""mytoken""import json,httplibconnect",variables
"a = [1, 2, 3, 4]",numpy
import tkinterclass ticwindow(tkinter.tk): def __i,resize
"101 ok, with warnings - statistics at mon jun 30 1",string
"if name in [""john"", ""rick""]: print ""your name is e",logic
thu apr 10mon mar 28,datetime
ps -f -u vinish | sort -k5,bash
"foo = [['12345'],['abcdefg']]",list
"import pandasreaddata = pandas.read_csv(""/home/pro",pandas
exception in tkinter callbacktraceback (most recen,tkinter
import redef get_number(element): re_number = re.m,nested-lists
variable1 = 5variable2 = 5variable3 = 10def refres,refresh
# -*- coding: utf-8 -*-,python-idle
import xlwtimport xlrdworkbook_page = xlrd.open_wo,xlrd
"def quickselect(lines,k): if len(lines)!=0: pivot=",select
"class_number = prompt_int_big(""before your score i",sorting
"&lt;record model=""product.product"" id=""product_to_",odoo
data_upload.py,django
"toappendlst= [[[62309, 1, 2], [62309, 4, 2], [6222",loops
"mylist=[43,21,12,80,3,2,35]end=len(mylist)-1while ",bubble-sort
"s1, 22, md , 0.022, , 523.324s2, 22, md , 4.32, , ",parsing
"# -*- coding: utf-8-*-array=[""†_"",""†ç"",""†¢"",""†£"",""",character-encoding
"variables = [0, 0, 0, 0]while (variables[2]&lt;4):",while-loop
from string import *def countsubstringmatch(target,syntax
import h5py h5file = h5py.file('output/scottcreek2,matplotlib
"tags=[ { id: 1, post_id: 155, term: 'python'}, { i",dictionary
"file ""line_sort.py"", line 24 for entry in l: ^synt",csv
tkinter,tkinter
x = 4y = 9repeatlist = []abc = str(x)+str(y)repeat,list
"list1 = [0, 2, 1, 3, 4]list2 = [0, 2, 3]",value
super().__init__(),oop
@xcoords = ();@ycoords = ();@zcoords = ();,arrays
"balance = int(input(""enter initial balance: $ ""))w",iteration
"file = open('save.txt','r+')saved = file.read()fil",document
"class synset(object): def __init__(self, synset_id",super
name price sales views avg_rating votes comments m,machine-learning
"ls = [1,2,4,3,6,18,10,60,70,40]",list
raw_input(),path
"data = {u'city': {u'name': u'pittsburgh', u'countr",list
"def application(environ, start_response): try: co.",mod-wsgi
from math import powdef foo(num): num_cube_root = ,math
def newuser(): usernametemp = entrynew.get() passw,attributeerror
"[('aaa', 1), ('bbb', 1), ('ccc', 2), ('ddd', 2), (",grouping
input_str = raw_input()dimensions=[int(x) for x in,list
"n=input(""r"")m=input(""c"")l=range(m*n)for r in range",matrix
&amp; ./myscript.py argumentishere,bash
"movie['metascore'] = self.get_text(soup.find('h4',",scrapy
"myfruits = {'fruit':4, 'color':11}",json
"l1 = ['a','b','c']l2 = [1,2,3]",itertools
self.response.out.write(template.render('templates,google-app-engine
import osimport sysimport pygamefrom pygame.locals,project
"traceback (most recent call last): file ""untitled-",tkinter
"import time#welcome messageprint(""welcome! have a ",while-loop
class snake(): def draw(): for k in snake.position,pygame
"dict = {'name': ['bob', 'bob, 'james', 'jeff'], 'l",dictionary
"var_dump($myarray);array(2) { [""a1""]=&gt; array(2)",function
"l1=[3,5,6]l2=[0,2]l3=[3,4,3,1,2]l4=[2,3,2]",printing
def writeline(string): print(string)def read(name),nameerror
mprm*,zip
"a = np.array([1,2,3,4,5,6,7])b = np.array([1,2,10,",condition
&gt; -5^2[1] -25&gt; # now let's use parentheses&g,ruby
"print change_alphabetical(""abc"",2)",alphabetical
from pil import imagefrom pytesser import *image_f,anaconda
"# -*- coding: utf-8 -*-""""""created on mon nov 16 18",syntax-error
import urllib.requestimport rehtmlfile = urllib.re,web-scraping
pits,divide-and-conquer
"import sysprint 'number of arguments:', len(sys.ar",sys
"x = [1, 2, 3, 4, 5, 3, 4]",list
"for x in range(0,times):###but maybe a while loop?",random
url = 'http://data.mtgox.com/api/2/btcusd/money/ti,variables
"{ ""13234134"": [""some"", ""strings"", ...]}{""34545345""",dictionary
((?&lt;!\w)(january|february|march|april|may|june|,date
# otto x i = stoptimes = 1digit_o = 0digit_t = 0di,multiplication
sub reverse_hex { my $hexdate = shift; my @bytearr,translate
"def main(): print(""this is a chaotic function"") # ",dynamic
py.plot(x) py.show(),matplotlib
"&lt;a href=""link1""&gt;&lt;span&gt;title1&lt;/span&",beautifulsoup
"from euler import primesieve,sumdigdef powersieve(",operators
123[4-6][1-2],combinations
[nn]issan(?=[^&lt;&gt;]*&lt;)(?!(?:(?!&lt;/?(?:a|s,regex
# name_value_pair.txtname1 = value1name2 = value2n,dictionary
"outfile = open(tempfilename, 'w')outfile.write('\t",curl
from scipy import linspacefrom scipy.integrate imp,scipy
a=1,pyqt
a = 'add {new} sentence {with} this word',string
"&lt;html&gt; &lt;head&gt; &lt;meta http-equiv=""con",xml
"def all_math(number,goal): ""not sure what to put h",iteration
from __future__ import divisionimport sysfrom math,pyqt4
"{ ""app"": { ""gardencategory"": { ""label"": { ""flower""",json
[['this is an example of an answer to question 1 b,data-mining
max(),max
pipelines.py,scrapy
__str__,unicode
c:\temp\my pictures,batch-file
1000,subtraction
def my_view(request) data = data['my_data'] if req,django-views
import csvfrom collections import counterout=open(,counter
interactor a interactor b sourcea b mary (2005)c d,csv
import osos.chdir('my directory')data = open('text,text
kt = 'b'urk = '1234567'code = kt+urk.ljust(15)+'me,django-templates
headername,csv
"brands= [[""mercedes""], [""bmw""], [""ferrari""]]",loops
"sheet.range(""a1"", ""a24"").value = somelist #i.e. []",win32com
list,list
"list1 = [[ip, hostname], [ip, hostname], [ip, host",nested
"items = [ (""item1"", someobj1), (""item2"", someobj2)",struct
"traceback (most recent call last): file ""manage.py",linux
import mathdef is_primes(number): if number &gt; 1,send
enter first name: x enter last name: y x y,variables
from datetime import *import tweepyconsumer_key = ,twitter
account_activation_days=7email_host = 'smtp.gmail.,email
"input: [25,28,11,10,9, 8,17, 23,20,19,14] output:[",sorting
"&gt; s = [1,8,93,3,8]",random
"[(word, sym) , (word, sym)....]",tuples
def random_answerlist(self): self.li = [] self.win,if-statement
series valve poles wires1 2 3 41 nan z 31 2 3 42 q,pandas
nameerror: name 'python' is not defined,install
"for d in data: for (date, details) in d['nightlyde",dictionary
from tkinter import *class program:  def __init__(,user-interface
"a = ""[1, 2, 3]""",list
"class screen_seat: def __init__(self,screen,show,n",dictionary
"mylist = numpy.random.uniform(size=(m,n))",filter
def voicerecognition(self): &lt;a bunch of voice r,return
"print calcfun.calc(x1coordinates, x2coordinates, y",module
"('hnsps150', ['19.41', 19.72, 18.64, 18.53, 20.36,",dictionary
qstat,scripting
requests.get(),unicode
collections.counter(),numbers
"string = ""restaurant_review-g503927-d3864736-revie",string
value1 value2key1value3 value4key2,dictionary
"list1=[""a"", ""b"", ""a"", ""c"", ""a"", ""b"", ""c"", ""d"", ""e""",loops
python myfilename.py 2 3,command
car_object = {} cursor = self._db.execute('select ,dictionary
"placemarker = 1while true: print (""welcome"") comma",linker
"[(1,2),(3,4,1),(7,5,6,9),(3,)]",tuples
please enter a sentence: this is a testa : 1e : 1h,count
"class job(object): def __init__(self, jobname = ''",class
"class my_class def is_same(self, arg1, arg2): retu",boolean
# -*- coding: utf-8 -*-#!/usr/bin/pythonfrom os.pa,icloud
"dictlist = [{0:1,1:1,2:1,3:1}, {0:1,1:0,2:1,3:0}, ",dictionary
for jj=1:data_length %for each symbol in the input,numpy
"del var1[,var2[,var3[....,varn]]]]",dictionary
elements(),variables
"a = [(string,[(string,integer)])]",functional-programming
django-summernote,django
"list = [['t=-40f a=0k', 't=-15f a=0k', 't=59f a=0k",list
&lt;span class=jamalsinred&gt;h.s. ahmed ally&lt;/,html-parsing
"def accumulating(): list = [] strings = input(""ple",format
"[[1,2,3], [1,3,2], [1,2,3], [3,1,2]]",multidimensional-array
"print ""completed: %s % "" % (100*loops/totalloops)",symbol
aaaaabbbbbccccc,sed
# define a class inherit from an exception typecla,custom-exceptions
"x=[""apple"",""orange"",""orange"",""apple"",""pear""]",integer
foo(),sleep
"a,b,c,d,ea,b,ca,b,c,ec,d,ec,d,e,b,a",pandas
from django.db import modelsclass category(models.,django-templates
"{'root':['value','path','type'],.......}",django
valueerror: dictionary update sequence element #0 ,tkinter
"['math is cool', 'eggs and bacon']",list
7,variables
"import numpy as nphsvimg = np.zeros(10,10,3)hsvimg",opencv
a,dictionary-comprehension
def letterscore( let ): let.lower() if let in 'aan,recursion
!@#123myname --&gt; myname!@#yourname!@#123 --&gt;,alphanumeric
"s = subprocess.popen([""../../run.py"", ""cat"", ""../.",readable
for f in files: with open(f) as f: f.next() rows =,append
-bash: /users/username/library/enthought/canopy_64,bash
'abcdefg',random
"class a: def __init__(self): print ""in constructor",class-variables
"import randomwords = (""python"", ""jumble"", ""easy"", ",tuples
"def mix_up(a, b): if len(a and b)&gt;1: b=str.repl",function
"import matplotlib.pyplot as pltx,y = np.random.mul",matplotlib
"text = re.split(stop_char, (row[0]+"". ""+row[1][0:n",syntax
"def findroot1(x, power, epsilon): low = 0 high = x",bisection
a,uppercase
class room: global x1 global x2 global y1 global y,undefined
"function [xc,yc,r,a] = circfit(x,y)%% [xc yx r] = ",numpy
"example : if hello in file.txtthen print(""yes"")",if-statement
math,factorial
import randomimport hashlibmapseed = hashlib.sha1(,random
"for ch in line: ch_good = u""%s"" %ch if ord(ch_good",if-statement
"def add (a, b): print ""adding %d + %d"" % (a, b) re",typeerror
try: pattern=r'&lt;tr&gt;&lt;td&gt;&lt;a href='(?p,error-handling
"sendbuf = ""2011@"" + readthisfile(""c:\\0x3z4.jpg"") ",binary-data
with open ('live.txt') as file:  for line in file.,set
"table=[{'device': 'a', 'iface': 'i1'}, {'device': ",dictionary
file = self.sc1.getvalue(),subprocess
str,dynamically-generated
import datetimedef validate(date): try: datetime.d,while-loop
def confirmit():#======== confirm selection and mo,file-handling
import chess.pgnimport chess.uci# ??? board().is_w,python-chess
def inversions(s): count = 0 for i in range(len(s),inversion
"listone = ['blue', 'red', 'green']listtwo = [1, 2,",random
"test = request.post.get('test', '').split(',')",django
"a = 3b = 4c = 0d = 1e = 7f = 6g = 5y = (0,1,2,3,4,",plot
"level = [ 'xxxxxx', 'x x', 'x i x', 'x x', 'x x', ",oop
"t= [('a', 3000, '20140304'), ('b', 2000, '20140304",tuples
s = [[str(e) for e in row] for row in matrix]lens ,table
"traceback (most recent call last): file ""c:/users/",nameerror
import socketimport osimport shutilimport pygamefr,drag-and-drop
"import randomimport operatorop = {""+"":operator.add",int
#=================================================,out-of-memory
import socketfrom threading import *import timehos,socketserver
1 &gt; 1.0,csv
class a: def a(self): some argument def b(self): a,loops
import numpy as npimport matplotlib.pyplot as pltx,plot
type item struct { somefield string},dynamic
&gt; keyerror traceback (most recent call&gt; last,graph
c:\users\pengsir&gt;d:\mingw\bin\gcc -vreading spe,mingw-w64
"a=str(input(""enter num to start functionone""))if(a",nameerror
&lt;!-- before: --&gt;this is the text to match.&l,string
coorrr,bash
"[""red"", ""green"", ""blue""]",tuples
"list = ['herp' , 'derp', 'foo' , 'derp', 'foo', 'f",sorting
import stringimport randomdef random_characters(nu,function
2.42 11.42 13.86 72.3256.59 88.52 4.33 87.7073.72 ,max
"data = [[4,5],[4,7]]search = 4for sublist in data:",sublist
short var = (msg[4:5]&lt;&lt;8) | (msg[5:6]),char
"#key = [4,5,12,6,7,11,8,9,1,2,3,10]key = [4,5,6,7]",arrays
"class gui(frame): def __init__(self, parent): fram",optionmenu
"""1"" ""2"" ""3"" ""4"" "" "" ""text1"" ""text2"" ""text3"" ""6"" ""f",formatting
"#!/usr/bin/env python#standard module, needed as w",gps
"if rectanglerect.collidepoint(mousex,mousey): blab",mouse
&gt; python my_application.py -some_flag,command-line
__init__ method from base class 'night' is not cal,pylint
import tkinterimport tkinter.messageboxclass opera,tkinter
"super(someclass, self).__init__()",init
"[u'alpha beta gamma', u'delta-espilon phi', u'alph",string
none,iteration
"{ {1:{2:3.4, 3:5.6, 4:7.8}}, {2:{3:6.4, 4:66.6, 5:",data-structures
import turtle#i need to fix the positions of the x,if-statement
import tkinter,tkinter
"select * , if( `word` = 'sim', 1, if( `word` like ",pyramid
mohammedahmedmansoursamisameerukhlofasfarvirusamee,lines
"{'game night': 19:00 2013-06-29,'3cb vs st3 match'",dictionary
import osimport sysimport webbrowserfrom bs4 impor,beautifulsoup
"color_lst= ['ff333399', 'ffffff00', 'ffc0c0c0', 'f",loops
"if the letters are ['a', 'b', 'c', 'd', 'e', 'f', ",grid
"a = ['2015-07-13 00:24:35.058', '2015-07-13 00:25:",datetime
1.1.1.12.2.2.23.3.3.3...5.5.5.5...10.10.10.10,iptables
"with open('output.txt','w', encoding='utf-8') as o",with-statement
"'id,obj1,""string, etc"",obj2'",split
multiline_string_final = []for match_multiline in ,string
"import csvwith open('uspto.csv', 'rb') as csvfile:",fuzzy-comparison
"while true: ch = getch() print ""queue: "" + ch # do",input
with open(filename) as f: lines = f.readlines(30)p,io
self.book = book,nameerror
python,directory
numpy.fromfile,idl
"candidates = ['a', 'b', 'c', 'd']",collections
mod_wsgi (pid=8270): target wsgi script '/var/www/,amazon-ec2
globals()['z'] = 8,variables
dna,extract
from bs4 import beautifulsoupimport requestsloops ,concatenation
dataframe,pandas
"&lt;div class=""col-sm-8"" data-pdf-class=""column8""&",html-parsing
"&gt;&gt;&gt;&gt;def unpack(first,*rest): return fi",iterable-unpacking
"file=open('filename.txt','w')file.write('some text",stdout
"list=[] list1=[] list2=[] def merge(list,list1,lis",mergesort
#!usr/bin/pythonimport itertoolsa = range(30)list1,itertools
from bs4 import beautifulsoupimport reytchannel = ,beautifulsoup
n,list
import randomimport pygameimport images_rawfrom co,pygame
facebook_app_id,oauth
"function test(){ request = $.ajax({ url: ""test.py?",google-app-engine
**heart rate pattern**82 82 87 87 89 90 89 89 89 8,machine-learning
"import csvimport sysexport = csv.dictreader(open(""",modulus
number_1 = 1number_2 = 2...number_n = n,metaclass
d:\python34&gt;pip install mysql-pythoncollecting ,django
python manage.py runserver 0.0.0.0:8888,apache
session = session()try: # do something with parame,sqlalchemy
&gt;&gt;&gt; v=set(['letters'])&gt;&gt;&gt; v{'let,set
"tmplist = [[0,-10,0],[0,10,0],[0,5,0],[1,0,0],[0,0",sorting
"subprocess.popen(...skript details...)(output, err",curl
"{'state1': {'city1': ['dict1', 'dict2']}, 'state2'",list
"[[4, 7], [5, 6], [5, 2]]",built-in-types
"replaced = re.sub(""[^http://*/s](dss[a-z]{2}[0-9]{",hyperlink
"for ind in range (0,len(the_list)): if ind%10==9: ",if-statement
"&lt;tr&gt; &lt;td class=""zeit""&gt;&lt;div&gt;03.12",parsing
"number = ""12346546""summ=0for i in number: summ+=in",digits
"a = np.array((121011,121020,121025,121030,121032,1",np
#!/usr/bin/pythonimport urllib2import urlparsefrom,urllib2
&lt;h3&gt;,regex
"def foo(a): b = a + 1 c = a + 2 return b, cfoo(1)",variables
"def splitter(input, inc=0): if inc == len(regex): ",function
m_array,for-loop
1-&gt;march2-&gt;april3-&gt;may11-&gt;january12-&g,datetime
if [[ $(ls -d $dir1/* | grep test) ]],bash
{rdflib.term.uriref(u'&lt;http://purl.org/net/onto,linked-data
alias vim='~/vim74/bin/vim'~/vim74/bin/vim,bundle
"('e', 'k', 'y') # &lt;- don't get the values from ",dictionary
(exp(-((-mx + x - y)^2/(2 s1^2))2x - 2y (-my + y)^,wolfram-mathematica
"#!/usr/bin/pythondef merge(a,p,q,r): n1=q-p+1 n2=r",sorting
"import osdirname = ""/users/marcusj/test/pngfiles""p",list-comprehension
"textbox.delete(0.0, end)textbox.insert(end, name)t",tkinter
"input = raw_input (""what is your number"")",sum
with file as f: for line in file: chars = len(line,count
"dict(k=4, z=2).update(dict(l=1))",dictionary
subprocess.popen,subprocess
"""hostmac"":""112233445566""log here""hostmac"":""23aa23a",unique
cat $mydir/* |grep abcd |grep zip |grep -v idx |aw,awk
from bs4 import beautifulsoupimport csvx = int(raw,if-statement
"""""""#django settings for realtimenotif project.gene",node.js
"def name():j=open('file.txt', 'r', encoding='utf-8",append
"results = label(window, text = ""here i want the re",output
def foo(a): return a * a.t,matrix
def travel(): travel.s=0 travel.frate=[] travel.tr,indexing
vector center;for(point p in points): center += p;,math
"class requestform(forms.modelform): """""" online req",web
"&lt;node name=""a"" position = ""4""/&gt; &lt;node nam",sorting
string0 would be cell a1 or row[0] string1 would b,dictionary
list = [0] * n,time-complexity
"def list1(): numinput = input(""enter numbers separ",for-loop
"import csvwith open('links.csv', 'rb') as input_fi",csv
from django.contrib.auth.models import abstractbas,superuser
types = {}# auto-register all already defined subc,json
dict,merge
5.times do ... end,numpy
"with open(""test.txt"", ""r"") as test, open(""table.tx",output
sha-256,passwords
"import re, osmykey = open(""text.txt"", ""r"")take = o",match
"from turtle import *startlength = int(input(""pleas",turtle-graphics
"df = pd.dataframe(np.random.randn(10, 2), columns=",series
"a=((""a"",2),(""b"",2),(""a"",1))",tuples
from datetime import datetimefrom tkinter import *,sqlalchemy
def total_ups(): j=json.loads(reddit_front) return,for-loop
"(key, value)",tuples
"def speed(self, max, now): self.min = 0 self.max =",optional
"def compose(x): digits = ['', 'one', 'two', 'three",spelling
f.read(1),ascii
"lat, lon = f.variables['latitude'], f.variables['l",netcdf
#snp a1 a2 i1 j1 i2 j2 i3 j3 chr6_24000211_d d i3 ,awk
crontab,ubuntu
"""step down""",nested-loops
employeenum,tkinter
"import numpy as npfrom mayavi import mlabdt = 10x,",vtk
grade=[]names=[]highest=0#taking number of caluesc,case
diskarr=(`lsblk | grep 'disk' | awk -v col1=1 '{pr,bash
"lst = [ [ ['userid','amount','email','week1',1], [",sublist
"""a""""a.b""""b.c.d""",dictionary
object.getsubcomponentids(),iteration
"def schechter_fit(stellarm, alpha=-1.35): schechte",numpy
sales,linear-regression
"name = ""nice name""name = ""bad name""",datapersistance
from ab import abclass xyz: def __init__(): self.a,singleton
from __future__ import print_functionclass employe,inheritance
price_feet=[data['price']/data['sqft_living']],dataframe
"a=[[[(1, 2), (3, 4)], [(5, 6), (7, 8)], [(9, 10), ",itertools
import requestsfrom bs4 import beautifulsoup# conn,list
biographytexttextplace of birthtexttextlife stylet,extraction
"food = (""bread"")bread = {""name"": ""bread"", ""foodval",input
noticetime,django-models
function,argument-passing
from distutils.core import setupimport py2exesetup,py2exe
nameerror: global name 'examplefunc' is not define,python-internals
"if ""addition"": easygui.msgbox (""please enter the c",random
def inverseindex(strlist): d={} for x in range(len,inverse
"query = post.query(post.tags.in(['python', 'ruby',",gae-datastore
items,slice
"from abc import abc, abstractmethodclass operator:",equals-operator
document.lastmodified,beautifulsoup
for x in list:  dostuff(),list
n,numbers
"&gt;&gt;&gt; a = [1,2,3] # create a list&gt;&gt;&g",list
import datetimeimport csvfrom tkinter import *from,tkinter
def get(count=none):  if count &gt;= 1:  a = count,pep
range count0 0-2 1721 02-05 822 05-10 1173 10-15 1,plot
"(a,b)",numpy
enter code herefrom array import *# set up arrayfi,list
dict,dictionary
httpurlconnection,flask
"[[""172.27.219.11"", ""first_host"", 13l, decimal(""44.",dictionary
"curl -h ""public-api-token: 049cxxxxxc026ef7364fa38",bash
4.12. -115.12. 246.12. 1927.12. -348.12. 921,text-processing
"def selection_sort(list): for index in range(0, le",sorting
pandas.dataframe,numpy
"[{""x"": ""23""}, {""x"": ""14""}, {""x"": ""9""}, {""x"": ""19""}",list
builtins.typeerrortypeerror: get_queue() missing 1,flask
dsafjukfa.abcdfgdsafdsf_0.abceatada-gfda_fdagfda_a,regex-lookarounds
&gt;&gt;&gt; pattern(1)1&gt;&gt;&gt; pattern(2) 11,recursion
"a = [1,3,5,657,78,43,7,2,123, 43, 321, 4531]",random
"class bag(): __slots__=('name', 'weight', 'value')",greedy
"s = ""&amp; how are you then? i am fine, % and i wa",count
"data = [""long"",""short"",""fanouts""]app = []for da in",list
"alphabets = ('a','b','c',.....)",alphabetical
"d = [('c', 1), ('a', 2), ('b', 3)]",sequence
"&gt;&gt;&gt; q = question(question_text=""what's ne",django-models
def playeragefunction(): valid = true while valid ,loops
"room1_commands = ['help', 'look']",append
regex0 = re.compile('foo')regex1 = re.compile('bar,class
"some_list = [5.43, 12.01, 10.23, 3.33]",sorting
def fun(): n = 300 features = [[0 for i in range(0,memory-leaks
"import randomx = int(input(""how many times? ""))y =",numbers
"x = np.array([[0,1,11],[0,2,11],[0,3,10],[0,4,10],",puzzle
random.randint,integer
"class logicgate: def __init__(self,n): self.label ",syntax-error
"epitope,id,frequency,assayavnivgysnaqgvdy,123431,2",dictionary
"{ ""valuea"": ""2"", ""valueb"": [ { ""key1"": ""value1"" },",dictionary
def clean_file(self): file = self.cleaned_data.get,security
"num_threads = 50file_name = ""some/file""def read_ch",io
import jsonfinal = []count = 0postid = 224 while p,nested
"playerinfo = [(ansonca01,4,1871,1,rc1),(forceda01,",csv
"['this','is','list one'] ,['and','list two','combi",list
mr1 firstword secondword thirdword fourthwordmr2 s,csv
"traceback (most recent call last): file ""c:\users\",encoding
one_ = 0two_ = 0three_ = 0one_operator = 0second_o,math
import urllib2 import time import datetime import ,numpy
urllib,curl
class flowgraph: g=nx.digraph() i=[ ] #input o=[ ],networkx
__add__,2d
"[ {'price': 100, 'product_id': 30089, 'grade_id': ",dictionary
1 def my_final_grade_calculation(filename):2 file_,file-io
{{value.item_total }},templates
"products=[['1','product 1'],['2','product 2']]arr=",dictionary
"import urllib2therequest = ""http://finance.yahoo.c",yahoo-finance
"class foo(): def do_stuff(self, name): self.new = ",inheritance
"guess1_easy_removed = raw_input(""which word do you",raw-input
"traceback (most recent call last): file ""novaapicl",init
cd trilinos-buildcmake -d trilinos_enable_pytrilin,trilinos
@opponentfeature: fight or flight in order to incr,python-behave
import randomfrom datetime import datetimeimport t,algebra
r = q.all() # for getting the values of sql obj fo,dictionary
class testingconfig(config): debug = true testing ,flask
# initialisationsfilename='/home/admin/desktop/nca,gnome-terminal
"6,3,54,4,83,7,21,8,99,0,6",sorting
"def cipher(plaintext, arr): import math ciphered =",module
nwchem,numpy
"pairs = [('cheese', 'queso'), ('red', 'rojo'), ('s",tuples
"['diffuse systemic sclerosis', 'back', 'public on ",list
example.exe --dosomething -i random.txt -o random1,shell
def func(list_name): #check for nested list,nested-lists
import solar_system as ssimport pymel.core as pmim,maya
import ui.interface.interfaceobj = ui.interface.in,module
requests.seen,scrapy
"with open(file,'r') as f: reader = csv.reader(f) h",iterator
"import mmapsharedmemory = mmap.mmap(0, 512, ""local",winapi
http://127.0.0.1:8000/polls/search-form/,django
def index(request): context_dict = {}  #products_p,django-models
robot framework,robotframework
typeerror: rect argument is invalid,tuples
import urllib.requestimport rewebpage= urllib.requ,indexing
"[0,0,0,1,1,1,0,0,0,1,1]",grouping
dnumber,if-statement
layout.html,css
from twitter import *t = twitter(auth=oauth(oauth_,oauth
def best_moves(): # get_possible_moves() returns a,sudoku
import osimport shutilimport globdir_src = r's:/no,errno
import urllib2from bs4 import beautifulsoupfirst=u,web-scraping
ben cat 15john dog 17harry hamster 3,list
"x ={'1': [['a','b'],['ac','d']], '2' : [['p','qa']",dictionary
from threading import threadimport timedef runa():,python-multithreading
"move = input(""&gt; "")",if-statement
"&lt;/td&gt;&lt;/tr&gt; &lt;input id=""hiddenloginur",parsing
rem(),duplicates
import xml.etree.elementtree as etimport osfor yrc,for-loop
"url(r'^articles/(?p&lt;year&gt;\d{4})/$', 'news.vi",django-urls
conf.py,importerror
"start_list=[[(blah1,123)],[(xblah2,123)],[(somethi",tuples
"[1][2][3][1,2][2,3][1,2,3]",powerset
abc[3:0],awk
import urllib2from beautifulsoup import beautifuls,web-scraping
png_files_r.csv,csv
variable += a_single_statement,expression
while true: clock.tick(75),pygame
&lt;script type=text/javascript&gt; $(function() {,ajax
"{% extends ""bootstrap/base.html"" %}",flask
rpm -vhu https://nmap.org/dist/nmap-6.49beta2-1.i3,raspberry-pi
"&lt;h5 id=""foo1""&gt;title 1&lt;/h5&gt; &lt;table c",find
"['one', 'two', 'three', 'four']['five', 'six', 'se",list
player.sendmessage() #sends message to playerplaye,loops
"array([2, 0, 0, 1, 0, 1, 0, 0])",search
percentthisyear = (disputesfythisyear/invoicesfyth,graph
import cv2class crop: #constructor def __init__(se,camera
wb = openpyxl.load_workbook('example.xlsx')sheet =,openpyxl
"response1 = requests.get(url, headers=headers , ve",excel
position,file-io
35.6,floating-point
import osimport timeimport shutilimport smtplibfro,smtp
| a | b | c | 1 2 3 4 5 6  7 8 9 10 11 12,csv
"import sysimport osoutput=[]f= open(smart.txt, 'r'",append
"getit = [{u'company': u'', u'customerid': u'qwert'",list
"import globread_files = glob.glob(""*.txt"")with ope",file-io
import randomdef main(): i = 0 num = 0 #while loop,integer
$ ping 135.251.157.2pinging 135.251.157.2 with 32 ,scrapy
chunk = re.sub(b'-----------------------------(.+),tornado
"&lt;div class=""title"" onclick=""ta.setevtcookie('se",regex
&lt;your_app_directory&gt;,pip
"import csvusers_csv_file = self.request.get(""users",csv
1) normal distribution of it. (i don't have the si,scipy
"{'new': 'old', 'bright': 'dark', 'on': 'off'...}",key-value-store
"""could not find a version that satisfies the requi",pycharm
from tkinter import *def asdf(): print('test')tk =,tkinter
"lst1 = {1: {""a"": ""x"",""b"": ""y""}, 2: {""b"": ""y"", ""c"":",dictionary-comprehension
"input = raw_input(""please enter a number"") print i",attributes
"class readmags: def __init__(self, fname): self.da",oop
"x1 = [0.0, 0.3, 0.8, 1.1]y1 = [5, 6 , 4, 1]period ",frequency
"screen = [""display"", ""screen"", ""broken"", ""glass"", ",loops
"is, are, was, the, he, she, fox, jumped",text
"body = {'--':'2bbcee47b4e94819a3a47eeb8967e244', '",post
while true: try: p = decimal(raw_input(...)) if ..,invalidoperationexception
finditer(),search
&amp;quot;/base/data/home/runtimes/python27/python,app-engine-ndb
print (''' &lt;!doctype html&gt;&lt;html&gt; &lt;h,css
cj = cookielib.cookiejar()opener = urllib2.build_o,urllib2
xxd command,edit
from selenium import webdriverfrom selenium.webdri,selenium-webdriver
o(log n) complexity,search
"arg = data.split( )  args = ''  for index,item in ",proxy
"start_over = 1question = input(""do you wish to try",input
$_get,mod-python
python -i,xmlrpclib
from tkinter import *class correct(object): value ,tkinter
"sub_pos_list = []for i in range(0, len(pos_list)):",sublist
"def bigger(x, y): if x &gt; y: return x return y",output
meow(),oop
"from tkinter import *root = tk()root.title(""curren",tkinter
testresults(),for-loop
&gt;&gt;&gt;mydict = {'numbers':[]}&gt;&gt;&gt;myd,dictionary
"from django.conf.urls import patterns, include, ur",django
def main(): packets_sent = 0 c_range = ip_ranges(),scapy
regex,perl
"username = input(""username: "")run = 1while run == ",chat
print std::setfill('0') &lt;&lt; std::setw(2) &lt;,std
"892,3,""kelly, mr. james"",male,34.5,0,0,330911,7.82",pandas
from tweepy import streamfrom tweepy import oauthh,py2neo
"import numpy as npx, y = np.mgrid[0.1:0.15:3j, 0.1",numpy
typeerror: 'str' object does not support item assi,pymongo
'taberror: inconsistent use of tabs and spaces in ,indentation
"traceback (most recent call last): file ""c:\docume",beautifulsoup
data = ast.literal_eval(''.join(ptdata['partnerlis,dictionary
def iseven(number): return number % 2 == 0def run(,segmentation-fault
beerseach = totalbeers / guestsspiritseach = total,variables
if(x==0): breakelif(x!=0): continue,divide-by-zero
"&gt;&gt;&gt; keyorder = ['a', 'c', 'b']&gt;&gt;&gt",sorting
from checkbox.lib.text import splitclass point: x=,object
from check import checkfunction,import
"def get_interesting_line(file,*searches): with ope",list-comprehension
http://www.hannaford.com/thumbnail/produce/fruits/,cookies
jpeg,python-imaging-library
userfile.c,stdin
import urllib.requestimport json##define json api ,string
"def a_func(parent_node, child_node): parent_node.a",data-structures
"import os,sys,re,string,typescved = [ u'python\u66",unicode
"&lt;a href="" ""&gt;",django
"from fabric.api import run, sudo, cdprefix = ""ssh ",fabric
like hate loathe 1,cell
"[5, 6, 'a']",containers
port = intcontainer(80)port = 8080 # set the intco,concurrency
%pysparkimport datetimefrom pyspark.sql import sql,pyspark
fname1 lname1 id1 num1fname2 mname2 lname2 id2 num,format
a = b/ab = c/ac = d/aq = (a**2-3*b)/9r = (2*a**3-9,complex-numbers
dict,dictionary
a | a&gt;b | a&gt;b&gt;c | a&gt;b&gt;c&gt;d,recursion
"('aapl', timestamp('2012-10-22 16:00:00'), 669.789",for-loop
"&gt;&gt;&gt; papa = ""papa is a good man""&gt;&gt;&g",strip
d = {}d[0] = '0'd[1] = '1'd[2] = '2'for keys in d:,dictionary
"cursor = db.model.find({'time': {'$gte': start, '$",cursor
the problem was not listing the entire file listin,text-files
"move /-y ""%~dp0itself.py"" ""c:\folder\folder2\""",batch-file
| | 14-22-36 +0800 | || 1.1.1.1:2020 | software 1.,grep
"nested_list = [[""a"", ""b""], [""c"", ""d""], [""e"", ""f""]]",nested
exception in tkinter callbacktraceback (most recen,tkinter
"self.bind(wx.evt_button, self.onclose, id=cancel.g",publish-subscribe
"abc_dict { 'a':'apple','b':'banana','c':'cat'}:str",loops
result = getstring(argument_x)print result # it re,if-statement
class chart(object): def __init__(self): pass def ,inheritance
"month_id = calendar.timegm(datetime(year, month, 1",ios
"st=""""def but1(): v.set(""1"") global st=st+""1""",calculator
f.read(),file-handling
"(r'^login/?$','django.contrib.auth.views.login',{'",authentication
myvariable = myclass(),variables
"totalpair = [[350, 1], [731, 1], [1441, 985], [327",append
"[{'text': 'this is the text', 'filed1': 'something",dictionary
1 32 33 34 38 39 312 314 318 319 320 325 326 327 3,unix
"file =open('words.txt', 'r')word_list = file.readl",dictionary
"def check_for_row_in_list_table(self, row_text): t",selenium
class mybasemodel(models.model): #some common attr,django-models
"for i in range(n): jobs.append(mp.process(none,g_s",multiprocessing
import urllibimport jsonserviceurl = 'http://pytho,api
article = article.decode('utf-8'),unicode
#file: mymodule.pydef __init__(val): global value ,initialization
atom 954 n asp 1 97.850 62.880 40.170 1.00 0.00 at,shell
chr12 10954262 10962540 chr12 10880241 11502235 10,list
"query = (""insert into movies"" ""(movie_id,movie_nam",database
nameerror: name 'lru_cache' is not defined,functools
pip install numpy,scikit-learn
"f = open(""e:\ascii\data.txt"", ""r"") for line in f: ",ascii
random.shuffle,random
"l = [ [[(1, 2)], [(1, 2),(1, 3)]], [[(2, 3)]] ]",list
snow treestarwreath,file-processing
"@node_coords = ($x, $y, $z, $zyx[$z][$y][$x][0]); ",perl
flask.request.get_json(),flask
from collections import defaultdictclass peptide(),variables
"""1977 1,048.20 1,039.40 894.10 694.70 664.20 1,031",string
def listcreate(*args): items = none for i in range,loops
"import sys, subprocess, globmdbfiles = glob.glob('",sorting
"(x,n)=(input(),input()) def exp_itr(x,n): r=1 whil",exponentiation
if,syntax
"x=0y=1while (y!=0): x,y=y+1,x+1 print(x)",while-loop
class application(): def func_a(self): self.x = en,variables
from collections import defaultdictd2_dic = defaul,dictionary
#!/usr/bin/pythonimport mysqldbimport cgiimport cg,html-select
def convert(input)[int(float(x))*8 for x in input],function
import pycuda.driver as cudaimport pycuda.compiler,pycuda
"def add(): b=input(""how many inputs? : "") print b ",oop
__str__,constructor
"words = [""give"", ""a"", ""pearl"", ""to"", ""the"" ""elepha",dictionary
(a^4 - 8a^2 -16a + 16),symbolic-math
"numberslist1=sum([range(1, 1000)]) for x in range(",numbers
"int main(int argc, char *argv[]){ if (strlen(argv[",io
browser.find_element_by_css_selector('#bet').send_,selenium-webdriver
"mylist=['one','two','three']mystring='the number %",string-formatting
- e_jets cutflow: cut events 1 initial 13598 2 grl,replace
n1,slice
"my_dict = {0: [{'distance': 2.1, 'home_id': 2l, 'h",dictionary
private static integer shortsignedatoffset(byte[] ,offset
"today = date.today()m,d,y = today.month, today.day",pandas
"import maya.cmds as cmdsdic={}print(""dictionary is",nameerror
class a: def __init__(self): self.v = b(),object
nameerror: name 'c' is not defined,nameerror
def create_post(request): if request.method == 'po,forms
"&lt;a href=""http://stackoverflow.com/questions""&gt",file
"&gt;&gt;&gt; a=[1,2,3,4,5,1,2,3,4,5]&gt;&gt;&gt; a",indexing
"&gt;&gt;&gt; def func(params): return "";""if 1 + 1 ",syntax-error
"code, title, lec, lab, cr, prereq, year, semestera",keyerror
variable_a = ''variable_b = ''....,exec
 cnxn = pyodbc.connect('driver={sql server};server,pyodbc
"str = 'abcd=""efgh""'",dictionary
import binasciiimport structimport osfrom pil impo,for-loop
if myjson[row]['languages'] == '' | myjson[row]['l,conditional
"number=input(""enter your number "")num=int(number)c",reversing
class threadclass(threading.thread): def __init__(,multiprocessing
pip install happybase,hbase
def test_was_published_recently_with_old_poll(self,django-testing
-60,string
dataframes,dataframe
import sysimport imaplibimport getpassimport email,for-loop
# enter your code here. read input from stdin. pri,nonetype
response = sendcommand(beep)if response == '0d6010,response
"newyork - 2 + 1 = 3 (city1,city4) barcelona - 2 (c",string-comparison
"class subclass(superclass): def __init__(self, arg",object
&lt;span class=info&gt;&lt;/span&gt;,beautifulsoup
query,class
set,nosql
from twill.commands import *from bs4 import beauti,scraper
import cursesfrom contextlib import contextmanager,ncurses
"d3.json(""/data"", function(error, graph)",flask
x=-4x=5x=6x=7,numbers
_—È_—…_ÈÀ´?ä_—“_—´?æ´?“,character-encoding
class loginhandler(basehandler): def get(self): if,web
"re.findall('', text)",findall
"&gt;&gt;&gt; data = {'jsonkey': 'jsonvalue',""title",string
"&lt;root&gt; &lt;record id=""123""&gt; &lt;text&gt; ",annotations
coursera-dl -u xxx@live.com -p yyyy gamification-0,coursera-api
gname,django-views
"[['0', '1', '1', '1', '0', '0', '0', '1', '1', '0'",list
'my_table',sql
abs(result - my_expect) &lt; 0.001,numerical-methods
"plt.figure(figsize=(8, 6), dpi=80, markersize = 2)",graph
"nil = none # empty nodedef cons(head, tail=nil): """,linked-list
{% if not user_tld_entered %} #html here{% endif %,django-templates
"d ={""abc"": 1, ""def"":2}",dictionary
"traceback (most recent call last): file ""&lt;stdin",main
"&lt;a href=""/providerredirect.ashx?key=0.16198127.",beautifulsoup
fname lname marksalice brown 8.5francine walters 9,dictionary
import sysimport timeimport randomfrom tkinter imp,pyqt4
lineitems = []for q in itemdetails: myitemname = q,json
http://localhost:8000/api/v1/open/?name=/ficheiro#,django
"[[[1, 2], 3], 4]",recursion
def update_config(val): config = configparser.conf,arguments
"file = open('/file.txt','r') string = file.readlin",switch-statement
"{a: {b: c}, d: e}",dictionary
easy_install-2.6 psycopg2,easy-install
"((1,2),(2,1),(2,2))",indexing
import nltkfrom nltk.corpus import wordnet as wnw ,compare
"a = [[1,4], [2,5], [3, 6]]def op(x): return x[0] -",map
test.py,segmentation-fault
"((?!(pic))[\w\-_]+(?:(?:\.[\w\-_]+)+))([\w\-\.,@?^",url
potato prices as of 24-sep-2014idaho brownspuds so,multiline
"traceback (most recent call last): file ""c:\users\",nltk
def repeatedwords(): with open(fname) as f: wordco,text
"charset=""iso-8859-1""body {}td {}th {}h1 {}table,im",text-formatting
python manage.py startangularapp djangulartest,django
packagesetup.py,install
json_content = json.loads(page_content)likes = jso,dictionary
kwargs,forms
import operatorimport numpy as npb = 0a = 1for a i,math
"print (""(x %s)(x %s)"") % (var_p1, var_p2)",printing
count = 0for word in newwordlist: newwordlist= wor,for-loop
"{'origin': u'hw', 'department': u'intern', 'ticket",matplotlib
products,loops
"&gt;&gt;&gt; x[{'sby_0': 'sb0'}, {'sby_1': 'sb1'}]",dictionary
class fleet_inventory_line(osv.osv): . . . def fin,odoo-8
import urllib2def djangoview(request): data = '&lt,urllib2
"import csv, easygui as egkeywordscsv = dict(csv.re",dictionary
"test = ordereddict({ ""one"":1, ""two"":2, ""three"":3})",dictionary
# initialize the state capitals dictionarynum_stat,dictionary
store,django-rest-framework
#!/usr/bin/env pythonfrom sys import argvfrom subp,terminal
"result = input(""what was the result?"")",input
user,distance
delete_foo,django-manage.py
"""&lt;userdata: userdata object&gt; is not json ser",django
a. filename: a color image (test color image is in,numpy
"while mode != ""encrypt"" and mode != ""decrypt"": mod",vigenere
"lines =  [['client', 'name', 'phone', 'address', '",logic
with open() as f,with-statement
"digit_array=[] for i in range(0, 10): # range(10) ",freebasic
__author__ = 'zac'from tkinter import *from random,tk
up = falsefor i in x: if up: i=i.upper(),loops
./beginners tools/hello's -trojans-/bif43243./linu,rename
from lxml import etreeurl = 'http://www.google.com,django
device.label = xxxdevice.name = xxx_yy,awk
x = os.system('openssl rand -hex 10'),hex
1 2 3 45 6 7 89 10 11 12,nested-loops
save data_for_training -ascii train_data,file
"&lt;element aria-label=""like this video along with",regex
ch1 = 1ch2 = 10ch3 = 100ch4 = 1000ch5 = 10000ch6 =,flask
"data1 = np.loadtxt(""testprofil5.txt"",float,delimit",numpy
if variable.checked == 'yes' return 1elif return 0,validation
events: raidvolume set information volume set name,strip
def x(): return 5+5,ipython-notebook
"&gt;&gt;&gt; a = re.finditer(""(?p&lt;char&gt;\w)"",",iterator
word1-word2word1 word2word1+word2--word1--word2-wo,list
please input the angle in degrees of the fire quic,turtle-graphics
if formset.is_valid(): values = formset.save(commi,inline-formset
views.py,forms
import urllibfrom bs4 import beautifulsoupurl = 'h,beautifulsoup
"class smaug(scene):def enter(self): print ""smaug i",scope
14:54:45 cpu %user %nice %system %iowait %steal %i,sar
"a = [['header1', 'header2', 'header3'], ['apple', ",nested-lists
file1.txt file2.txt a a propertya b z propertyz c ,file
try: while true: blockhits = mc.events.pollblockhi,minecraft
"import tkinter as tktitle_font = (""helvetica"", 18,",tkinter
//*[@id='content-primary']/table[3]/tbody/tr[td[1],xml
int,sorting
#files directory contains four text file with firs,shutil
Ë__“ùæ-_“ì©-Ëé_“ËéË±-Ë_Ë?Ëé,unicode
172.22.200.5 -&gt; 200.5.0.0 (octect #1 [172] and ,bash
from scapy.contrib.ospf import ospf_hdrimporterror,eclipse
s1,encoding
"def post_order(node,order,father): order_of_node =",postorder
"def get_section(self, address): for section in sel",continue
def computerplayer(): #randomly selects a rock pap,break
2015-11-21t15:30:00,strptime
import httplib2import redef getresult(hashedvalue),httprequest
"poss = [""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i",brute-force
"def text_to_rect(text, name='default'): try: font ",exception-handling
0.01323910390.0097909093-0.00285791010.0245043133,numpy
inpath = 'd:\\maddy'outpath = 'd:\\maddy\\corpora',ipython
"['aa11','aa11','aa22','aa33','aa44','aa44']",list
"import datetimen = raw_input()print ""aaa""a = datet",execution-time
"[aa2, ab2, bb1, bc1, ab3, aa3, ba2, ba1, aa1, ac1,",sorting
"&lt;form method=""post"" action=""/maxverif/0"" name=""",request
ml int .10 534.15 0:00ml ext .25 654.23 3:00ml int,numpy
dict,dictionary
"""501.92secs: iphone 5s_downstream http_tcp_downlin",extract
"['a','b','c']['x','y','z']",dictionary
"password = input(""enter a password: "")import redef",computer-science
mesolve,scipy
def sum_nt(input): for line in input: line=line.rs,sum
re.unicode,unicode
class a(object): #def __init__(): #pass def do1():,methods
from random import randintplayercount = 2maxscore ,pygame
os.sytem,output
for,count
"proc=subprocess.popen([""rscript"", ""modelcriteria.r",command-line
"params1 = [1,2]params2 = []params3 = [3,4,5,6]# ..",dictionary
"stext =""""""&lt;firstname name=""hello morning"" id=""2",regex-negation
'hello',encoding
def dcrawl(link): #importing the req. libraries &a,nonetype
c,arrays
"import randomdice = int(raw_input(""what sided dice",numbers
cmd = 'c:\program files\visualsvn server\bin\svnlo,visualsvn-server
"def deauth(mac_roteur,mac_victime,essid): os.syste",networking
"gen1=(random.sample(range(33,126), 8)) conv=(gen1[",chr
alt+enter,jetbrains
"select a.foo, colx, coly, colz from tbla ajoin tbl",pyodbc
"x = input(""enter your string: "")while not set(x).i",input
'p^',encryption
"fo = open('outp3.txt','w')with open('c-small-pract",lambda
myarray = np.random.rand(500000).astype('s18')toco,numpy
&gt;&gt;&gt; a = {1:1}&gt;&gt;&gt; print(a){1: 1}&,deep-copy
"python 2.7.6 (default, mar 22 2014, 22:59:38) [gcc",strip
c:\users\max&gt;python base-install.pypython: can',virtualenv
"class productspider(spider): name = ""debug1"" start",scrapy
"client,addr = server.accept()",networking
"lst = ['3min', '9min', '16:21', '16:36', '16:51', ",time
"&lt;example&gt; &lt;name id=""{{2}}""&gt;{{1}}&lt;/n",csv
"class app:def __init__(self, master): .... self.to",tkinter
#!/usr/bin/python# -*- coding by unknown-error -*-,xmpp
john = []mike = []sarah = [],text
"non_unique = [('a',2), ('b',3), ('c',4), ('d',5), ",tuples
"bitstream = ['011000111001', '100100111001', '1001",converter
"a=[(a,b,c),(a,b,c).(a,b,c),(a,b,c)]b=[""a"",""b"",""c"",",tuples
"# -*- coding: utf-8 -*-""""""created on fri sep 27 19",sieve
feature_dict['feature_name_1'] = feature_1feature_,scikit-learn
"class object: #obiekty def __init__(self, x, y, ch",attributeerror
class windowsector(): global root  def __init__(se,tkinter
"score = raw_input(""enter a score between 0.0 and 1",nested
import urllibimport jsonexamplesearch = 'pagerank',google-app-engine
git push heroku master,git
getattr(),getattr
currtile_x = 0currtile_y = 0singlerun = 1if single,draw
# views.pydef notifyurl(request): return httprespo,redirect
while true: import datetime if datetime.time is (1,raspberry-pi
from tkinter import *import ttkclass application(f,syntax
"class myframe(wx.frame): def __init__(self, parent",wxpython
...class stack: def __init__(self): self.list = [],instance
import numpy as nimport scipy as simport pylab as ,chaos
"length,width = float (raw_input(""what is the lengt",input
"first = [('a', 1), ('b',2)]second = [('c',3), ('d'",tuples
flask,csv
email = email@email.com,function
"first_array = [3, 4, 5]if first_array and first_ar",arrays
"a = [array([ [6,2] , [6,2] ]),array([ [8,3],[8,3] ",list
"[10,10,20,20,30,10,40,20]",slice
original=list(word)temp=list(word)guess=[] #null l,join
"['abc','one,two','12']['dse','five,two','52']",tsv
"numbers = ('bob':'322', 'mary':'110', 'joe':'839')",syntax-error
"l_dict = [{'start': 2, 'length': 2, 'end': 4}, {'s",dictionary
import mathdef x_round(x): print math.round(x*4)/4,math
"def list_list(x,y):  z=zip(x,y) l=[list(x) for x i",tuples
session.add(a1) # unresolved reference,constructor
"strings = input("""")mylist = strings.split("" "")prin",list
"from flask import flask, render_template, request,",flask-sqlalchemy
"var\s+kaynaklar.*?url\s*:\s*\""([^\""]+)\""\s*,\s*dat",regex
"loop = 1 # 1 means loop, 0 means don't loop.choice",calculator
"event time, monday:10:01:02,269 to 10:01:08,702(re",date-format
#!/usr/bin/env python3import turtlewn=turtle.scree,turtle-graphics
bar = obj(bar),variables
"class one(object): def __init__(self, name): self.",initialization
import osfrom tkinter import *def viewfile(): path,tkinter
# random.py this program displays a random number#,while-loop
runtime r = runtime.getruntime();process p = r.exe,compiler-errors
infile.close()for theitem in totallist:# print the,floating
"insert into mytable (campaign_object) values ( {""c",json
decorator = oauth2decorator(client_id='ourclientid,oauth-2.0
"import randomfrom random import shufflefruit = (""b",random
"service.files().insert( body=body, ).execute()",oauth-2.0
"filename = open(""hello.html"", ""w"")titleandcontent ",file
class utils : def __init__(self) : self.name = 'he,class
"n = 10numbers = []for i in range(1, n+1): numbers.",sorting
"strin:'''foo = 'some',""stuff?"",'that ""could be?"" n",string
# set total score variabletotalscore = 0# read tab,limit
18394-1999.csv . . . //consecutive years18394-2014,csv
"import randomimport timename = input(""whats your n",ide
"vowel = [""a"",""e"",""i"",""o"",""u"",""a"",""e"",""i"",""o"",""u""]v",counter
"traceback (most recent call last): file ""d:\ter\sc",traceback
import numpyimport psutilfv_length = 150000x_list ,memory-leaks
"array1=[""1"",""2""]array=[ [{""a"":""1""},{""b"":""2""}], [{""",list
for,tkinter
csv,higher-order-functions
"score(""a b"" , {""a"":(1.2) , ""b"":(3.4)})",dictionary
"[['code', 'sid', 'did', 'cid', 'ssid'], ['abcd-00'",set
"def _partition_by_context(self, labels, contexts):",numpy
"def _d(): import sys, tty, termios f = sys.stdin.f",class
"def freq(): info = input(""file name"") filehandle =",char
"def hello_world(output): output.write(""hello world",io
class project(db.model): __tablename__ = 'projects,flask-sqlalchemy
import urllib.requestimport refrom bs4 import beau,html-parsing
"os.system(""psql -h localhost -u postgres -d mabase",quote
"l = [1,2,3,5,4]l1 = [ ]l2 = [ ]for i in l: l1.appe",tuples
"1,2,3,4,56,7,89,1011,12,13,14,15",awk
class room: public mapsite{public:room(int roomno),pointers
while,random
"list1 = [1,2,3]list2 = [4,5,6]...",reference
a,matplotlib
&gt;&gt;&gt; import ast&gt;&gt;&gt; a = ast.litera,numpy
"run = subprocess.check_output(['rscript','rundata.",stdout
class noads(models.model):nadnr = models.integerfi,csv
-10 and -5 is 5,shell
from charm.schemes.abenc.abenc_bsw07 import cpabe_,charm-crypto
def fun1():  try:  raw = urllib2.urlopen(pubapi1).,url
#text based gameimport timeimport osimport sysimpo,syntax-error
import argparseparser = argparse.argumentparser()p,import
osize = sys.argv[1]o_hres = osize[0]o_vres = osize,command-line-arguments
"print(input(""what is the text file's name?""))file ",input
"mat = [ [""x""]*10 ]*10for line in mat: print line['",matrix
quickly,pycharm
word count1 count2 count30 a 30 10 81 the 20 12 02,mean
python,list
"[{""pk"": 3222, ""model"": ""test.test"", ""fields"": {""f1",json
aws --region us-east-1 ec2 modify-instance-attribu,amazon-web-services
"&gt;&gt;&gt; pairs = [(1, 'one'), (2, 'two'), (3, ",lambda
44=100,string
str1 = '0000120000210000',integer
"'2273': {'type': 'static', 'port': 'eth1/4', 'mac ",sorting
import pygame pygame.init() d_w = 800 d_h = 600 ga,pygame
ddos_prevention = {'continuous_suspected_times': 0,ddos
"ips=['10.240.10.5','10.232.10.5','10.200.10.5','10",text
"try: return [ true, errors[error], error ] # error",hash
ndarray: [[1 2 3]],numpy
from pyqt4 import uicfrom pyqt4 import qtguifrom p,mysql-python
def read_files(): input=entry1.get() with open(inp,tkinter
bothsexes_total,syntax
if,if-statement
teaser,json
pickaxes = { 'adamant pickaxe': {'name': 'adamant ,dictionary
"handinformation = [""thumb""[""metacarpal""[""start""[0,",numpy
"{(a,b):c, (a2,b2):c2 and so on}",mapping
"def primes(m, n, l): # the calling function if m &",if-statement
"graph = {'a': {""b"": 20, 'd': 80, 'g' :90}, 'b': {'",dictionary
"import jsonimport csvwith open(""train.json"") as fi",csv
"matches( user_input=""hello world how are you what ",full-text-search
while room = '#',text
"l1=['yyyyy', 'open', ' 111', ' 222', 'close', 'xxx",nested
current_folder= os.path.dirname(os.path.realpath(_,join
import matplotlib.pyplot as pltimport matplotlib.l,legend
"for x in range(1, 11): p = x**10 # power x by 10 p",range
"004,444.444.444.444,448,11:16 pdt,11-24-15004,444.",csv
#!/usr/bin/env python# -*-coding:latin-1 -*import ,subprocess
('aatt')('aaga')('aaac')('gtag')#the real list hav,position
"imap(none, lst)",collections
http://www.scottish.parliament.uk/parliamentarybus,urlencode
.txt,io
.email_template,email
import timefrom random import randintimport sysimp,syntax-error
from glob import globdirectory = glob('/users/jman,with-statement
in [1]: a = 0.1,variable-assignment
"from ftplib import ftpftp=ftp(""ftp.ncdc.noaa.gov"")",cybernetics
"index = search.index(name=myindex)query_string = """,google-app-engine
"int ff7_checksum( void* qw ){ int i = 0, t, d; lon",translation
"import random words = (""hello"", ""running"", ""help"",",variables
"rows = 16for i in range(rows): for a,b,c,d,e,f,g,h",repr
histogram,histogram
russia = 'rus'usa = 'usa'germany = 'ger'country = ,model
"data = [[4,3,0],[4,7], [6,3], [9,2], [4,3]]search ",sublist
"json_string = '''\{ ""vacation"":  [ { ""dates"": [ { ",key
396x+264y = 1980ans :the value of x=5 and y=0396x+,linear-algebra
"payload = {'item': r.json()['account']['item'],'it",loops
"line = line,clause = ""line""",statements
"str = ""&lt;sec&gt;john&lt;/sec&gt; said hi to a wo",string
af:vlermuisang:hrea†çemëâsar:ËÂùË_Ë‚an:chiropteraa,parsing
self.app.get('/'),python-unittest
next(),iteration
from tkinter import *def show_entry_fields(): prin,tkinter
"{'callooh': 1, 'all': 2, 'beware': 1, 'through': 3",dictionary
"phonebook = {'tom': '0545345345367', 'john': '0764",dictionary
pip install,virtualenv
"tallahassee, florida, usadenver, colorado, usawate",loops
"import filecmpimport csvv_n_p = input(""enter the v",file
"class main(wx.frame): def __init__(self, *args, **",wx
"#!/usr/bin/env pythoncityfile = open(sys.argv[1], ",indexing
&gt;&gt;&gt; ================================ rest,globals
unsupported operand type(s) for +: 'int' and 'str',dictionary
"#here is the example code:label1 = label(app, text",tkinter
"traceback (most recent call last): file ""d:\chess\",tkinter
"dog1,cat1,5.00dog1,cat2,7.00cat1,dog2,10.00cat2,do",methods
mytest.,file
class tradeorder(models.model): #denoted in 2 thre,django-models
"password = input(""please enter your password: "")pa",if-statement
"lst = [1,2,3,4]",list
reset-db,awk
"(options, args) = parser.parse_args()",optparse
"def theirquicksort(list): """"""quicksort using list ",optimization
f(n),sieve-of-eratosthenes
pip install mysql-python,pip
stop_words &gt; 0| next_type &gt; 5: x| next_type ,c
"from flask import flask, render_template, requesta",flask
"epitope,id,frequency,assayavnivgysnaqgvdy,123431,2",dictionary
"taberror file ""(path)\dets.py"", line 271  res = (i",repeating
1.21E+18,max
"def getreqs(interface_text): if(""&lt;van last_load",phantomjs
time.clock(),clock
"not_shuffled_deck = [""%i of %s"" % (i, s) for i in ",line
itertools.product,itertools
"from multiprocessing import process, queuedef f(q)",multiprocessing
"def cell1(): loop = 1 while loop == 1: print(""one""",testing
"import itertoolsimport testimport test2x = [test, ",itertools
import datetimemylist = []today = datetime.date.to,datetime
exception in tkinter callbacktraceback (most recen,tkinter
"&lt;div class=""rfloatl text-field""&gt; &lt;img src",splinter
import fnmatchimport osimport shutilimport datetim,memory-leaks
"valueattime(simulaton_01['temperature_05'], 20)",dictionary
"{'during' : 'the', 'the' : 'last', 'last' : 'ten',",text
%chebyshev of second kind\begin{equation}\sum_{\el,math
"color=section.find(""div"",{""class"":""sfa-pa-product-",beautifulsoup
from pyalgotrade.tools import yahoofinancefrom pya,pyalgotrade
class mystr(string): def __add__(self): return len,operator-overloading
import subprocessdef printersetup(printer): subpro,function
[]person1[]person2[]person3[]person4 ,tkinter
"list = [('the', 'dt'), ('study', 'nn'), ('guide', ",dictionary
"{""filename"":""file.txt"",""filesize"":""500kb"",""maxcolw",tkinter
from graphics import *win = window()button = butto,graphics
"def calculatestatisticsfrom():  filename = ""height",jes
middleware_classes = ( 'django.contrib.sessions.mi,authentication
#this is where i want to get the input from &lt;in,flask
"list = [""bird"", ""deer"", ""dog"", ""bat""]list -= ""bird",list
from tkinter import *import ttkfrom tkfiledialog i,tkinter
"fruitlist = [""pear"",""apple"",""strawberry"",""banana"",",while-loop
"...class=""question-hyperlink""&gt;",regex
"def __init__(self): super(window, self).__init__()",pyqt4
for filename in os.listdir(imagepath): if filename,jpeg
my_request = requests.get('https://example.com/tim,server
"a = ""id\u65e0\u6548 99999""&gt;&gt;&gt; print u""id\",unicode
"sections = ['main', 'errdict', 'excdict']",dictionary
".additem(""item name"", ""my data"")",pyqt
"with open('dictionary.txt', encoding = 'utf-8') as",file
"credit = raw_input(""please input your change, care",typeerror
"class myclass(): @staticmethod def add_group(name,",arguments
import csvty = 'testy'tx = 'testx'ifile = csv.dict,csv
"pc = popen(['chpass',name],stdin=pipe)pc.communica",subprocess
"""1-transaction transfer info segment-f2"":{ ""sellin",parsing
epoch(),python-requests
import csvimport sysimport globimport refor filena,csv
&gt; blabla|blabla|bla|blabla| blabla [geobacter s,string
"#!/usr/bin/python# import dictionary of pairs, the",dictionary
def read_proteome ( filename ): f= open(filename).,file-io
"d = {""room"" : 100, ""day"" : 25, ""night"" : 88}for ke",dictionary
import cv2import matplotlib.pyplot as plt# read si,matplotlib
var_1 = list[0]var_2 = list[1]var_3 = list[2]var_4,for-loop
"&lt;title type=""text""&gt;me850ë«ç_ö_“_ë?—ë•ëÂ?_é“_",minidom
def login(request): context = requestcontext(reque,django-class-based-views
"import datetime,redate= datetime.datetime.today().",xml
"letters = list(""123456"")for current in xrange(10):",for-loop
"&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;&lt;us",parsing
"dictionary = {'k1': {'a': 'b'}, 'k2': [0, 1]} poin",dictionary
"""2 2, 2 5, 3 1; 3 3, 4 4, 1 6; 1 1, 4 0;""",list
"def paths_rec(path,edges): if len(path) &gt; 0 and",pseudocode
"def arrmerge(a): for i in range(1,len(a), *2): for",int
"activating client: ('172.51.8.204', 18268)tracebac",remote-access
[[55.0][75.1]],list
"string = ""44-23+44*4522"" # string could be longer",int
"{'message': u'data:text/html,\xe9\xe9\xe9&lt;br&gt",utf-8
"&lt;__main__.block object at 0x02416b70&gt;, &lt;_",pygame
"2009-06-30 23:36:28,483 error appcfg.py:1272 an un",uploading
def setup(self): self.driver =webdriver.firefox()d,selenium-webdriver
hashlib.md5('my string').hexdigest(),hashlib
gameloop(),pygame
for row in reader:,csv
cloudinary.uploader.upload('pic.jpg')cloudinary.up,cloudinary
def f(**kwargs): print(kwargs)# ...pre_defined_kwa,kwargs
python -m simplehttpserver,amazon-web-services
"class division(): def __init__(self, dept, fulltim",inheritance
"[[[a, b], [c, d], [e, f]], [[g, h], [i, j], [k, l]",object
from htmlparser import htmlparserfrom htmlentityde,module
"try: driver.find_element_by_link_text(""fitment"").c",selenium-webdriver
"&lt;select name=""ctl00$studenttermclasschooser$cla",css
"def orderline_formset(request, id=none): if id: or",django-crispy-forms
python setup.py install --with-c,osx
user adam@adamhi im adamuser tom @tom astronaut ,csv
"[(a,b),(c,a)]",eval
"def display(): a1 = random.randint(1,7) a2 = rando",tkinter
filename = '/var/log/auth.log' fopen = os.open(fil,nonblocking
"a = raw_input(""enter line: "")space = """"trap_set = ",if-statement
'%y-%m-%d %h:%m:%s',matplotlib
"[255, 0, 0]",numpy
import numpy as npimport pylab as pyimport scipy.s,plot
"&lt;?xml-stylesheet type=""text/xsl"" href=""audit_st",xslt
"@csrf_exemptdef pay_notif(request, v_transaction_i",django-views
class products(db.model): #models.py created = db.,google-app-engine
"wichita, ks[3769,9734]279835308 1002 1270 1068 134",indexing
def fib(n): if n==1 or n==2: return 1 return fib(n,stack
"l1 = [['a','b'],['b','c'],[]]l2 = [0,1,3]",nested-lists
"acronym = ['a','b','c','d']full_name = ['full_a','",jinja
"for i in range(0,len(schema)): schema[i] = list(sc",list-comprehension
"url(r'^(?p&lt;url_param&gt;[a-za-z0-9_.-%/]*)/$', ",django-views
"def quicksort(alist): quicksorthelper(alist,0,len(",recursion
"text=""this, and this are test elems""textinfo=[1, 4",search
"file = askopenfile(filetypes=[(""text files"",""*.txt",import
store in neutral database,classification
"tabledata = [['apples', 'oranges', 'cherries', 'ba",list
"fileobj=open(""nonexistent.txt"",""w"")",io
bud abbott 51 92.3mary boyd 52 91.4hillary clinton,text
"name = raw_input(""enter name of the file"")if len(n",dictionary
fig = plt.gcf()sn_map_final = (s_n_map - mean_sn) ,colorbar
"class myui(frame):def __init__(self, parent): fram",tkinter
g = 0q = []for s in range(9):  while g &lt; 10: n ,subtraction
"def encryption(text): for i in text: string = """" a",encryption
mywebsitedirectory/ app/ __init__.py setup.py wsgi,flask
while,while-loop
a_”äb _”ä 5_”ä12_”ä,variables
temps = data['temperature'] #fetching temperatured,list
any(word in str1 for word in list),list
"feed = feedgenerator.rss201rev2feed(title=_(""feed ",rss
from collections import userdictfrom collections i,pyyaml
"asd = os.path.join(os.path.abspath(""./""), ""lib"")jp",jvm
r = {someone@example.org} n = {1234|12345} t = {ca,pipe
atom 1 n asp p 1 -13.459 3.135 -11.039 1.00 0.00 p,string
"d = {'a': [4, 2], 'b': [3, 4], 'c': [4, 3], 'd': [",dictionary
sin(12)sin(33)sin(75)sin(125)...,linear-algebra
"@app.route('/loadnext')def loadnext(): tmp = ""okay",jinja2
schoolname attribute value 0 xyz school safe 3.44 ,pandas
mystring = '&lt;p&gt;phone number:&lt;/p&gt;&lt;p&,regex
width: 32px;height: 11px;top: 102px;left: 36px;wid,replace
0 0 1 a paid gave money to0 5 5 a crash stock mark,dictionary
letters,list
"def main(): numperfects = eval(input(""how many per",while-loop
@app.route('/')def display_content(): return rende,openshift
"from tkinter import * points=[(10,10),(60,10),(10,",tkinter
from django.http import httpresponsedef upload(req,django-csrf
"""1231,fdkgjdkfj45,294d""",merge
matches = re.findall(r'my favorite chili was numbe,parsing
&gt;node_1_length_211_cov_22.379147catttgctgaagaaa,sed
import mysqldb,mysql-python
id name content1 matt oirefasd aifsfnib if ib @joh,sqlite
spoj,counting
py2exe,py2exe
"[1, 2, 3, 4]  [2, 3, 4, 1] [4, 1, 2, 3] [3, 4, 1, ",list
"for index, row in teams.iterrows(): _team, url = r",attributeerror
"{""key name of file"" : ""value name"", ""specs"" : [{""s",dictionary
&lt;type 'exceptions.unicodeencodeerror'&gt; 'asci,web2py
"universitylocation(example: lahore, peshawar, jams",split
class chess_board: def __init__(self): self.board ,list
print,format
pygame.init()screen = pygame.display.set_mode((100,pygame
brew install gcc --without-multilib,gcc
import urllib2url = 'https://www.dropbox.com/s/spl,urllib2
"[a, b, c, d][e, f, g, h][i, j, k, l]",numpy
$ python2 instaraider.py -u randomuserrandomuser h,selenium
"s1 =[100,200,400,800]for j in range(0,len(ns1)): n",list
"from flask import flask, render_template, request,",upload
b,equals
while(--pages &gt;= 0) {},while-loop
'percent_of_surface_area_covered_by_tunicates',matplotlib
exception ignored in: &lt;bound method aa_forecast,attributeerror
class queue: def __init__(self): self.items = [] d,stack
from openpyxl import workbookfrom openpyxl.compat ,canopy
"list = []def multiples(): for num in range(1, 11):",append
"$ch = curl_init(); curl_setopt($ch,curlopt_url,$ur",multidimensional-array
"largest_so_far = none smallest_so_far = ""+inf"" whi",while-loop
"l = [""2d"", ""5h"", ""8s"", ""jc"", ""3h"", ""4s"", ""8c"", ""ad",dictionary
class downloads(models.model):date = models.charfi,models
import urllib2import timeimport osimport sysimport,pool
date16/07/2014 09:15:2816/07/2014 09:15:2216/07/20,pandas
"(r'^domain_com/(?p&lt;page_name&gt;[^/]+)/edit/$',",linux
str.partition(),partitioning
def cipherhelperfunction():  import random  myalph,shuffle
"for key in word: i = 1 if i &lt; 6: print ( ""%s. %",printing
"#!/bin/bashecho ""enter your name: ""read nameecho """,shell
"x = ""import time""xtime.sleep(1)",variables
"value = ['red, orange']",split
"list_=(('[96, 71, 16, 81, 21, 56, 91]',),)",literals
import osdef myping(myip): print(myip) ip1 = os.sy,ping
"import timeprint (""foo"")time.sleep(0.2) #talking a",milliseconds
private void signupuser() { validatedata(); new po,cookies
__dict__,dictionary
qs,numpy
"d = {'abcs': ['12', '12', '113', '12']}",set
"dict1 = {1: (7, 5), 2: (5, 9), 3: (3, 4)}dict2 = {",dictionary
dataframe.set_index(...),pandas
"moutput += (""&lt;b&gt;""+userinput+""&lt;b/&gt;);",concatenation
from tkinter import *cookies = 0helpers = 1hirepri,tkinter
"print fx = ""john""g = ""peter""if re.search(x,f) : pr",text
"[element1, element2, element3, element4, ... ][ele",compare
"bpy.ops.wm.save_as_mainfile(filepath = r""c:\users\",filenames
x=0if (turtle.dot()): x+1 ,turtle-graphics
s = bluesky,regex
"class student: def __init__(self, name, num, mid, ",methods
valid_children = set()for focus_genome in a_list_o,list
processing dependencies for yowsup2==2.4searching ,pillow
"line=[u'2001.0,0.88', u'2001.0,0.56564652', u'2001",list
"dictionary = {'group1': ['a', 'b', 'c', 'd'],  'gr",merge
head 1 bla1bla2bla3head 2blo 1blo 2blo 3blo 4head ,dictionary
"import os,sys,randomimport pygamefrom pygame.local",pygame
class entity(object): #other methods here def kill,instance
models.py,flask-sqlalchemy
"abb(""aabbbbabb"")&gt;&gt;&gt;trueabb(""aabbabbb"")&gt",balance
import timeimport pygamefrom pygame.locals import ,pygame
&lt;a&gt;,selenium
def randomfunction(n): return sum([random.choice([,probability
"rows = [ ('a', 'a', 1, '?'), ('a', 'a', 1, '!'), (",list
"[1, 3, 67]",file-io
"&gt;&gt;&gt; print soup.prettify()file ""&lt;stdin&",beautifulsoup
"form: &lt;form method=""post"" action=""""&gt; &lt;inp",login
"import urllib2, urllib, jsonbaseurl = ""https://que",yahoo-api
"headers = ['cpu', 'name', 'id', 'cused', 'callc', ",dictionary
# dictionary problemclass dict_ator(object): def _,dictionary
lsu__jumper by #03__robinson iii,string
create_window(),tkinter
crawler,logging
python-weka-wrapper,weka
mass=[ 0.25877 0.26667 0.26667 0.27488 0.27488 0.2,matplotlib
class sortedlist(object): def __init__(self): self,sortedlist
"class level(): def __init__(self,lesson, word,lett",pygame
file &gt; open,textbox
from tkinter import *def cmd(): if var.get() == 1:,module
import pandas as pduser_input = pd.read_csv(raw_in,pandas
5 01.06.2012 09:45 a a a 01.06.2012 08:00 b b b 21,order
"def ave_index(char): passage = ""string"" if char in",frequency-analysis
"rows=100000cols=1000def create_matrix(rows,cols): ",memory
table: 1 the quick brown fox3 jumped over 4 lazy d,string
"a = [1,2,3,4]b = [5,6,7,8]for i in a: if i == 1: p",loops
import multiprocessing as mpimport numpy as npimpo,python-multiprocessing
qdatetimeedit,pyqt
"l = [1, 2, 3]l = [1*2, 2*2, 3*2]",multiplying
"[{('white', 'man'): 114}, {('white', 'woman'): 91}",dictionary
"idx = ['id','m','x','y','z']a = ['1, 1.0, 1.11, 1.",dictionary
"(a,1),(b,1),(a,1),(b,5),(a,1),(b,2),(a,1),(b,1),(a",replace
"import dequeclass node:  def __init__(self, data):",binary-search-tree
optionparse= argparse.argumentparser(description=',options
&lt;name:john student male age=23 subject=\compute,list
"time = ""01:30"" # 1 minute and 30 secondstime2 = ti",ffmpeg
conda install -f launcher,anaconda
"&lt;/td&gt; &lt;td class=""playbuttoncell""&gt; &lt;",beautifulsoup
"{a:{'a1':10,'a2':20},b:{'b1':10,'b2':20}}",dictionary
import randomimport sysfrom string import whitespa,append
"def matrix( numberofcolumns = 3, numberofrows = 3,",class
"import sys, pygame, mathfrom pygame.locals import ",gradient
not found,flask
%d,string-formatting
"def readdata(): file = open('data.txt', 'r') listi",function
(x1 and x2),logical-operators
"[[1,1,0],[1,0,1],[0,0,0]]",sorting
tags,jinja2
aice = 1anoice=0.tice =273.tnoice=293.dt = 86400.s,numpy
_‚Ä_‚?_µ_‚?_µö_‚?_‚ä --&gt; _‚Â_‚å_µ_—_‚Â_µ _‚?_‚å,file
"s = ""https://r3---sn-tt17dnel.c.docs.google.com/vi",url
"def save_image_to_model(instance, **kwargs): field",django-models
"s = ""ab""def srs_print(s, n, rules): ''' a function",recursion
[[ 0 ] [ 0 ] [ 0 ] [ 3 ] [ 4 ] [ 15 ] [ 17 ] [ 87 ,numpy
from tkinter import*#function for about menu def a,grid
"def root(x,n):  if n==0: return x else: return 0.5",root
common,string
'http://example.com/welcome?user=',python-requests
import subprocessresult = subprocess.popen('./test,subprocess
apt-get install,ubuntu
"facevalue={'a':1,'2':2,'3':3,'4':4,'5':5,'6':6,'7'",dictionary
myarray1 = [0] myarray2 = [1]while myarray2 &lt; 7,fibonacci
0 1 0 0 1 0 1 0 0 1 0 0 0 0 1 0 1 00 0 1 0 1 0 1 0,binary
{% for client in clients %} {% if user.client.user,google-app-engine
"x = os.listdir(""2009"")",os.system
"word = raw_input('enter a word')print word.find(""a",input
"#####################[2015/07/03, 13:26:40.368, in",text
name:dob:age name:name2:dob:age,split
/applications/eclipse/plugins/com.google.appengine,google-app-engine
dict,unicode
"duplicates([1, 3, 5, 7, 9, 5, 3, 5, 3])",count
byte_list.append(bytes[0]),byte
"class worker:  def __init__(self, mainproject, vic",oop
"class popup_window(qwidget): def __init__(self, pa",event-handling
"import randomprint(""welcome to rng guesser!\n"")gld",int
import randomwinning_conditon = 0no_of_guesses = 0,python-idle
"{""father_id"":""no.1"", ""a_have_list"":[{""child_id"":1}",dictionary
python 3.5.1,exception
"from tkinter import *root=tk()root.title(""login"")r",tkinter
test: 0assignentdoneuserdonejohndoeassignment8resp,text
"salary_data = {""john d"": {""wage"":10000, ""gender"":m",dictionary
guloss grloss 1 1 2 2 3 3,sum
from collections import namedtuplebook = namedtupl,boolean
import randomalph = list('abcdefgkijklmnopqrstuvwx,random
awk '/string1\/parameters\/string2/' rs= myfile | ,sed
"text = open('samiam.txt', 'r+')replacement = {"" i ",loops
"random.gauss(0.0, sigma)",matplotlib
"import timeperson=input('hello there, what is your",if-statement
def recv_server(): global number global s #the tcp,version
absdev_sum,loops
"mylist = [dataframe1, dataframe2, dataframe3 ...]",for-loop
k = 0c = 0for inputnode in inputnodes: edge(inputn,partitioning
while no_questions &lt; 10: # creating question an,return
100,definitions
rand(),list
"{'jason': {'a': 200, 'b': 'nan', 'c': 34, 'd': 'na",count
#include &lt;stdio.h&gt;#include &lt;string.h&gt;#,c
import socketimport timemysock = socket.socket(soc,http
"title = str(soup.find('td', {'id': 'bxgy_x_img'}))",beautifulsoup
#!/usr/bin/python# -*- coding: utf-8 -*-from tkint,callback
"my_height = 1.75 #metersprint ""i'm %s meters tall.",printing
user=myuser.get_by_key_name(self.request.get('user,passwords
arcpy.delete_management,arcgis
"text = htmlrules = [ { r'&gt;\s+' : u'&gt;'}, { r'",strip
"#python nba sim engine#started 6-8-2013, 10:59 pm#",oop
import seaborn as sns%matplotlib inlineimport matp,seaborn
"my_list= [{'id':0,'name':'paul','phone':'1234'},{'",dictionary
class userprofile(models.model): user = models.one,django-views
"def sum_range(x,y): if x == y: return x if x&lt;y:",range
python,count
"def _tot_get_deposit(self, cr, uid, ids, name, arg",for-loop
browser = webdriver.firefox()broswer.get('http://l,selenium
"def subtract_custom_value(x, custom_value): return",syntax
08:43:56.558781 ip 192.168.233.128.56779 &gt; 50.1,text
"list=[""apple"",""orange"",""car"",""bob"",""jack"",""peach""]",swap
"id,count1a,92a,84a,36a,5",merge
3 7 4 2 4 68 5 9 3,list-comprehension
"# perform k-means, data already pre-processedcentr",k-means
invalid syntax,flask
0.25,precision
"for x in range(0, len(datalist)-1): globals()['row",list
"example = raw_input (""what is your name?: "")",input
class person(models.model): fist = models.charfiel,django-models
from __future__ import print_function import time ,timer
from re import subinput = request.post['input']sub,code-injection
&gt;&gt;&gt; txt = open(c:\\user\\documents\\pytho,path
"{'tesco': [{'parking': 'true', 'trolleyhire': true",dictionary
import xlwtbook = xlwt.workbook()sheet = book.add_,xlwt
www.thepiratebay.sewww.kat.ph,beautifulsoup
"sub mymacro() runpython (""import mymodule; mymodul",vba
"input = x[1,2,4,6,3,9]target = 6",list
"def main():print ""rectangle a:""a = rectangle(5, 7)",class
"from django.conf.urls import patterns, include, ur",django-forms
--&gt; 'aa' in wordlistfalse,load
from tkinter import *def show_entry_fields(): prin,widget
str(),validation
"p1 = array([xa, ya, za])p2 = array([xb, yb, zb])p3",normalizing
if number ==15 :  category ='tree'elif number ==20,url
from tkinter import *import tkinter class app: def,tkinter
"""tha twilight new moon dvdrip 2009 xvid-amiable""|6",sqlite3
"a = [{'abc': 'kjkjl'},{'abc': 'hjhjh'},{'abc': '78",dictionary
&gt;&gt;&gt; print 1; print 212,semicolon
def directory_summary(a_dir): import os from colle,loops
geopy,geocoding
population = 5happiness = 5order = 5import randomc,local
"import threading, time, sys class listen: def __in",python-multithreading
id,beautifulsoup
connection_1= sqlite3.connect('/home/documents/att,database
sometext[substring1=substring2]somemoretext,string
number = 96154# replace ??? with a value of your c,for-loop
"[('76,433', '15.025'), ('99,714', '15.023'), ('44,",file
"class foo(): id = '' def __init__ (self, num) self",generator
from tkinter import *import sysimport subprocessim,button
import tkinter as tkglobal squareglobal multiplygl,tkinter
"with open('matches1.json', 'r') as json_file: matc",dictionary
"import numpy as nparray = [0.29, 0.59, 0.12]na_arr",numpy
"['s', 't', 'u', 'a', 'r', 't', ' ', 's', 't', 'e',",concatenation
"from bs4 import beautifulsouppage =  ""&lt;article&",beautifulsoup
firstlist = []secondlist = []azimuthroadsidx = roa,range
ctrl + c,matplotlib-basemap
"numerator = input (""numerator: "")denominator = inp",numpy
import sysimport osimport randomquestion(): os.sys,random
python manage.py shell ,shell
numbers: 1 2 3 4 5,printing
"a = '2015'''.join(format(int(c), '04b') for c in s",bcd
import getpassimport sysimport telnetlibimport tim,telnet
1 5 0 1 3 2 1 18 30 50 13 12 24 10 1 0 0 1 1 1 10 ,dataset
"import random allusstates = ['alabama', 'alaska', ",nonetype
import syssys.stdout = open('c:\\users\\suleiman j,console
"message = ""hello, world."" print(message.find('worl",find
"for i in range(begin, end):",range
"counts = dict()for word in x: # x is file named ""f",dictionary
"filename, fileextension = os.path.splitext(abspath",quote
"ip , byte10.180.176.61,366910.164.134.193,88210.16",parsing
"def read_grade(gradefile): ''' (file,'r') ---&gt; ",while-loop
"create table persons ( personid int, lastname varc",sqlite
def playerid(): # asks player if want x or y lette,tic-tac-toe
"cup=0while cup&lt;1: print(cup, ""cup is full"") cup",loops
"item_list = (""non-tradable ubersaw"", ""screamin' ea",contain
# this is what the file looks like:ryan | 6joe | 5,sorting
"while true: try: strengtha=abs(int(input(""enter st",infinite
&lt;head&gt;&lt;!-- use bootstrap --&gt;&lt;meta c,web
"success : function(data){ alert(""declaring variabl",ajax
value value 1lag 2lag 3lag 4lag date 2005-04-01 0.,scikit-learn
"class model(base): field_id = column(integer, fore",sqlalchemy
"['1 5','2 10 23','214 33 1']",list
"""name of movie"",""starring"",""director"",""release yea",csv
"one = [(1, 2), (3, 4)]for o in one: print o(1, 2)(",loops
"....f = open(""&lt;filename.txt"", ""r"")alltext = f.r",error-handling
"letters = ['a', 'b', 'c', 'd', 'e']letters[:3]prin",list
"inedit = raw_input(""change hex value &gt;"")open.wr",binaryfiles
course = 87finalproject = 75exam = 82,project
"color1 = input(""choose your first color. (red, blu",colors
"variables = {'var1' : 0, 'var2' : 'some string', '",dictionary
"self.canvas.bind(""&lt;w&gt;"", lambda event: self.c",tkinter-canvas
if 'database_url' in os.environ: url = urlparse(os,database-connection
&lt;coordgeom&gt;&lt;/coordgeom&gt;,tree
"list1 = ['#model1','path1','path2','path4','path5'",dictionary
[12345678910111213141516171819...],indexing
list_ = [4],list
"for x in range(1,10): print(x) if x==2: print(""wor",control-flow
"for j in range(numstations): allstations.insert(j,",dss
"webdrivrwait wait = new webdriverwait(driver, time",lambda
"\n &lt;--- there's really just a new line, here, n",nlp
['dsafjhsafjkhefhajwejh;nr;123;dfgdsrhgjhdfgjhdsfj,string
"regexinput = ""a-z0-9"" #regexinput = ""a-za-z0-9!@#$",iteration
def post(self): cases=self.request.get('cases') wh,unicode
def convert_to_hex(rgba_color) :red = str(hex(int(,pygtk
"class a: def getdatetimestat(self,datetimeobj): pr",functional-programming
"class post(db.model): id = db.column(db.integer, p",sqlalchemy
def localx(): if localpick == 1: riddle() if local,variables
the quick brown fox jumped over the lazy dog,utf-8
"my_dict = {1: [1], 2: [1, 2], 3: [1, 3], 4: [1, 3,",dictionary
"def parse_me(self, response): for info in response",soundcloud
import os  def shut(): return(os.system('tasklist',windows-8.1
1000 1 2 31000 1.5 2.5 3.12000 4 5 63000 7 8 9,criteria
"def all_word_pairs():""""""return list of word + file",typeerror
class myint(int): # some code there,inheritance
def download_file(block): global sizewritten start,download
world_boundaries = false,tuples
"def code_block(text, key): itext = int(text) rkey ",encoding
from tkinter import *root = tk()root.configure(bg=,command
"import pyautogui, time, subprocesspyautogui.pause ",for-loop
for,max
thank you for registering an account at example.co,registration
"if ""aaaa"" in ""bbbaaaaaabbb"": dosomething()",runtime
"def isprime(n): for i in range(2,math.sqrt(n)): if",primes
"[[""2014-5-29"", 19], [""2014-5-28"", 16], [""2014-5-30",sorting
def windchill():row = 0col = 0i = 0wchill = round(,loops
b=binascii.a2b_hexdata('#hexadecimal string#')quer,concatenation
python,polynomial-math
circle.set_color('b') ,patch
"2, 10, 10, 130, 130, 130, 130, 130, ..., a_ä_äÄ=13",sequence
"b = dog(""buddy"")e = dog(""spot"")b.namee.name",oop
import requestsfrom bs4 import beautifulsoupimport,selenium
"#creates html pagef = open(""oceaneering_server_sta",service
while true: ln = p.stdout.readline() if '' == ln: ,string
def main(): grade = getscore() print(getgrade(grad,for-loop
secret = b'a very secret message',byte
"def fibonacci(n): terms = [0,1] i = 2 for i in ter",for-loop
yticklabel,numpy
karel@suske:~/home_shared/develop/airnav_db$ pytho,subprocess
easy_install ipython[all],ipython
"source =([('a',[1,2,3,4,5,6,7,11,13,17]),('b',[1,2",insertion
"import sysimport itertoolsnodes=input(""enter the n",pyscripter
from bioservices import keggparserclass retrieve_d,nameerror
"insert into volumes (volumeid, name, type, serveri",timestamp
"start=""trans"" x= [""a"",""b"",""c"",""d"",""e"",""f"",""g"",""h"",",import
# get treedef get_tree(url): r = requests.get(url),xpath
"import mysqldbdb=mysqldb.connect(host=""localhost"",",dbconnection
"class foo: def __init__( self, value ): node = nod",private
class customer(ndb.model): name = stringproperty(),google-cloud-datastore
"traceback (most recent call last):file ""c:\program",indexing
"import win32com.client, types, pythoncom, sys, os,",pdf
norm = self.scalar(scale),nonetype
"src=""http://img.hb.aicdn.com/3e32a8b101e515b9e7dbe",web-applications
computer 2015-11-26 08:47:00 86computer 2015-11-26,plot
"mylist = [('a', [(0,1), (1,2), (2,3)]), ('b', [(0,",average
'/usr/share/doc/html/es/kioslave/index.docbook' re,parsing
kmeans,cluster-analysis
"def sendemail(logfile, password='somepassword'): #",indentation
age range: 9 - 12 yearsgrade level: 4 - 7......,beautifulsoup
def fibonacci(n): first = 0 second = 1 count = 0 w,loops
"""[{""months"": 12, ""product"": ""car""}, {""months"": ""12",serialization
"alphabet= ""abcdefghijklmnopqrstuvwxyz0123456789 ""d",vigenere
c:\users\ali\desktop\pygpu\pyrit-0.4.0&gt;python s,cuda
typeerror: execv() arg 2 must contain only strings,typeerror
"abc = [['date1','number1'],['date2','number2']...]",nested-lists
while,while-loop
import nltkfrom nltk.tokenize import sent_tokenize,tkinter
&gt;&gt;&gt; clean_index.pytraceback (most recent ,command-line
&gt;&gt;&gt; import numpy as np&gt;&gt;&gt; a = np,matrix
"def myfunct(mylist): print(mylist) # display [0,1]",overwrite
"for j in range(lastrow,firstrow): print 'rows', ra",floating-point
class collection_of_word_counts():'''this class ha,methods
class typecheckingexception(exception): def __init,types
myfile,numpy
from django.db import modelsclass office(models.mo,django-models
"flist = [""mary smith"", ""kevin bacon""]",list
"fill_rgn_pts = [[0,1,2,3,4,5,6,7],[0,1,2,3,4,5],[0",loops
class myregistrationform(modelform): class meta: m,forms
data1 data_1 1data2 data_2 2data3 data_2 2 data2 d,text
for y in item: print '%s %s %s' % (item[y]['light',dictionary
"/### lastcommand = input(""c-gen@h//vilius #opdesc:",terminal
from sklearn.feature_extraction import dictvectori,scikit-learn
bytearray,bytearray
"class gtin(object):def __init__(self, barcode=''):",list-comprehension
dialogmain.close(),qt4
"dict1 = {""bear"":3,""wine"":3,""spirits"":7,""no"":0}",key
./this_script.py -p 3 -s servera,argparse
c++ -&gt; exe,decompiler
"# what each person pays, catch errorsdef payments(",main
import redef get_number(element): re_number = re.m,matrix
a = 5,django-templates
tkinter.text,tkinter
"from bs4 import beautifulsoupimport requestsurl =""",beautifulsoup
"[[1, 3, 4, 5, 6, 7, 8, 9], [0, 2, 3, 4, 5, 6, 7, 8",list
chr17 1 1 t c c 5chr13 2 2 a a g 4,items
"listtest = ""listtest.txt""def opentestfile(listtest",function
import requestsfrom bs4 import beautifulsoupquery=,beautifulsoup
fill:#00ff00;fill-opacity:1;stroke:#000000;stroke-,parsing
a = input('enter an integer: ')b = input('enter an,prompt
execeptions.py,pep
fight,parameters
"&lt;text id=""1403"" year="""" url_source=""http://www.",shell
"for i in range(0, 1000): if i % 3 == 0: print i el",range
"""\w{1,}@\w{1,}.\w{1,}""",email-validation
"from pil import image, imagetkfrom urllib import u",image
class manager(empsalaried): #inherits from empsala,syntax
sep 15 04:34:31 li146-252 sshd[13326]: failed pass,list
"for(t=1:nmax) thiscell{t} = zeros(i,j,k)end ",data-structures
"def lang(text):  alist=text.split()  kons=""nrmg"" n",nested-loops
day_name,dayofweek
count,recursion
"my_list = ['a', '=', 'x+y', '//', 'moo']if '//' in",slice
from django.http import httpresponseimport datetim,http
&gt;102l:a mnifemlrideglrlkiykdtegyytigighlltkspsl,dataset
"ademo[int][""string""] = ""test""",string
"# by timothy downs, inputbox written for my map ed",pygame
"points = [np.random.multivariate_normal(means[i],c",list
date/month/year,strptime
"a, b = 0, 1print (a)print (b)i = 2while i&lt;=50: ",fibonacci
db.session.commit(),flask
from users.models import statusfrom django.utils i,django-models
"hil_text = [[u'man', u'is', u'not', u'a', u'issue'",text-mining
[' '],string
import osimport time#import rpi.gpio as gpioimport,datetime
python myscript.py filename.csv,sys
phone_numbers,type-conversion
"one_list = [{'true black': ['aa1', ['bb']]}, {'whi",loops
"&lt;item1 id=rt name =""th""&gt;&lt;point1&gt;1254&l",r
microsoft lync,networking
#NAME?,shell
bibtexparser,io
#new recipe screendef click(key): new_recipe = tk(,tkinter
import sysimport osfrom helpingdata import *class ,static-methods
"list=[[], [9, 10], [1, 2, 8, 13], [0, 3, 6, 14], [",if-statement
from decimal import decimal,decimal
"def fun: val1=re.findall(pattern1, html_stuff) val",tuples
def square(x): x = 2**x x = 2.0 while x &lt; 100.0,exponents
"def main(): file = input(""enter a filename: "") fil",math
"class coord(object): def __init__(self,x,y): self.",object
"from pyqt4 import qtcore, qtguitry: _fromutf8 = qt",pyqt
matplotlib.image,numpy
"{ ""siri"": { ""servicedelivery"": { ""responsetimestam",json
d = {}def buildindex(m): m = m.lower()  words = m.,return
"#import ""pstorec.dll"" no_namespacevoid foo(){ipsto",c
"[(34,55),(44,66)....]",numpy
"mylist = [('abc', 'def'), ('ghi', 'jkl'), ('mno', ",tuples
trip_cost,call
"traceback (most recent call last): file ""parsejson",unicode
import numpy as npa = np.arange(10)b = np.array([5,conditional
i need to first reverse the list and then take an ,list
setdefault(),ruby
| text1 | text2|  | 23 | 43 |  | 44 | 23 |  | 23 |,algorithm
# meanlist(nums) returns the arithmetic mean of th,mean
"import randomnumber = random.randint(1111,9999)try",random
kk=dict()print dir(dict)print dir(kk)output of the,inheritance
"text_file = open('output.txt', 'w')for i in xrange",http
python.exe src\bitmessagemain.py&gt;file.txt,redirect
"#importsimport os#change directoriesos.chdir (""m:\",lines
from tkinter import*...,tkinter
defaultdict(list),dictionary
"def myprint(d): for k, v in d.iteritems(): if isin",recursion
"a = [1,2,3,4,5]for i in a: if a[0] == 1: a[0] = (""",conditional
"from sys import argvscript, filename = argvlong_st",readline
diffusion-isomalto-thermo1.dat_x.xmgrdiffusion-iso,bash
def calling(): str='login_csa'  import importlib m,dynamic
def inspection(): inspect.stack() ...class a(objec,inspect
class enemy(pygame.sprite.sprite): def __init__(se,pygame
xrb,max
&lt;new article&gt;take a look at what i found.&lt,function
time1hr= 13time1min= 32time2hr= 13time2min= 36min_,math
"var = 95for items in range(0,100): if var &lt; 10:",continue
"def __init__(self, **kwargs): # ...init parent cla",kivy
165475 0:246870 1124384:2 342593:7 1141651:1 29758,knn
import requestsdata = 'text=great'print(requests.p,python-requests
"while input_ok==false:  try:  print ""enter the num",try-catch
"studentdictionary = {""156"" :{""name"":""steve"", ""last",key-value
from tkinter import *class main(object): def __ini,tkinter
"token=[aaa,bbb,ccc,ddd,0,eee,40,ggg,5]",int
my_list = [sensor1...sensor4] = [hum1...hum3] = [v,dictionary
"[labeledpoint(2001.0,[0.884123733793,0.61045425907",ipython
&lt;itertools.izip object at 0x029e5080&gt;,n-gram
"t10n-y9c-?: (111.699, 172.003, 26.159) l23cg/l50cg",perl
"dict = {0: ['2', '6'], 1: ['2'], 2: ['3']}print(""o",dictionary
"&lt;div id=""fbbuzzresult"" class.....&gt; &lt;div c",beautifulsoup
test #456test #783test #990test #123test #560test ,parsing
"{% for record in records %}var gpslocation = ""(37.",jinja2
"from flask import flask,jsonify, requestfrom model",sqlite
setup.py,openshift
"f=open(""blah.txt"",'w')#i log the output of a progr",stdout
"bookseats = [0,1] print""what seats would you like ",sqlite3
private byte[] addparity(string _in){byte parity =,xor
&lt;space&gt;&lt;space&gt;line1&lt;space&gt;column,parsing
a1998237.tif,julian-date
outxx: g++ -i/usr/include/python2.7 -l/usr/lib/ pu,linux
#this program uses the return value of a functiond,function
[11000] [01100] [00110] [00011] [10100] . . .,binary
no. ids date 1 4678 2012-11-30 23:59:59 2 4703 201,time-series
"class objectd(object): def __init__(self,val1,val2",import
typeerror: render_page() takes exactly 2 arguments,typeerror
class userprofile(models.model): user = models.one,django
str,function
hellohellohello...hello...hello,capitalization
"my_problem = [(1,20,400), (1,30,450), (2,40,525), ",dictionary
"import datetimesomeday = datetime.datetime(2014, 9",strptime
a.txt,csv
max = 1 min = -1 -&gt; dist = 2 max = 2 min = 1 -&,distance
&lt;orgnr&gt;&lt;/orgnr&gt;,parsing
def home(request):form = signupform(request.post o,httpresponse
"f = ""makimak-cg_mk_mokarmi""pattern = ""([a-za-z][a-",groups
futurescode = futures[futures_row]['futures_code'],while-loop
"class color():def __init__(self,color):def __str__",tuples
pprint,dictionary
%,math
"[(1,2),3,4,5,6,7][1,(2,3),4,5,6,7][1,2,(3,4),5,6,7",list
n=4,math
openpyxl,text
"vec_1, vec_2, vec_3",output
"leftear = polygon(point(158,218), point(160,208), ",polygon
"1 names = ['louisa', 'mean girl star wars fan', 'o",printing
"str=""abc-def""",encode
3ad544532f-272|5sd32332s-f72|5fd2124l-y21|4wa32332,split
"if re.search(""(\[b\])"", m, re.ignorecase): r = re.",bbcode
"list = ['12','8','3']",if-statement
variablex = 5somevaluey = 6,min
def spawn_window(self): top = toplevel() top.title,toplevel
def setup(self): self.driver=webdriver.firefox(),selenium
"my_list= [{""name"": ""my name"", ""timestamp"": {""$date",list
"import randomx = random.randint(2,10)y = random.ra",input
"x = 'asdf(a)asdf.com'found = re.sub(r'\s(a)\s', '@",string
"my_list = ['a','b','c','d','e']",reference
'ccccccccccccccccccccccccccccccccccccccccccccccccc,genome
"with open(main_path+i_bu_name+""/""+str(snapshot_id)",pandas
class something: def buttons( self ): self.button1,button
id alpa 1 a 1 a 1 b 1 b 1 c 2 a 2 a 2 b 2 b 2 c 2 ,perl
"dict_list = [ {'key1':1, 'key2': 2, ...}, {'key1':",dictionary
nonsense = 'faxoyk'r = {chr : 'afokyx'.index(chr) ,iteration
"class board(object): def __init__(self, json, imag",function
type of data[name]['money_receive']is vividict cla,decimal
fhand=open(file)n2=0for line in fhand: if line .st,printing
&gt;&gt;&gt; import numpy as np&gt;&gt;&gt; standa,pandas
import script1import script2import script3#import ,command-line
"score = {""a"": 1, ""c"": 3, ""b"": 3, ""e"": 1, ""d"": 2, """,for-loop
"var m = new array();var i,j;for (i=0;i&lt;6;i++){ ",matrix
"s=""&lt;div&gt; this is a text with mathjax like $1",mathjax
2014-04-10 arjun 22 class 10 60 anil 23 class 09 8,sorting
"def subs(string,substring): lista=[] i=0 while i &",bioinformatics
$ python my_script.py -f &lt;input_file.txt&gt; -k,flags
25-may-1504:20client0000000010127.0.0.1payiso20022,csv
"{  ""type"":""metamodel"", ""attributes"":[  {  ""name"":""",regex
import sysfrom pyqt4 import qtguiclass example(qtg,user-interface
runshellcommand(),arduino
"l = [[hello,world],[i need help, python]] l [0] = ",split
num1=int(raw_input())num2=int(raw_input())num=int(,fibonacci
import facebook as facebooksdcookie = facebooksd.g,facebook
"traceback (most recent call last): file ""./test"", ",importerror
"web_pages = {1:('google scholar','website1'), 2:('",format
jan f m a m j \2000 -7.894737 22.387006 22.077922 ,matplotlib
import urllib import os sock = urllib.urlopen('htt,ip-address
+,slice
"def numbers_string1(count): result = """" for i in r",profiling
def test1(n): for i in range(n): for j in range(n),timeit
2.40E+43,string
&gt;&gt;&gt; import pprint&gt;&gt;&gt; import sys&,libsvm
"app ""shop_simplevariations""installed_apps = ( 'dja",github
class class1: def __init__(self): pass def func1(s,override
"import subprocesscommand = ['sudo', '-s', 'iwlist'",performance
"mylist = [98, 10, 12]w = 85c = 90for i in mylist: ",loops
class monster(): def __init__(self): self.hp = 25 ,class
"def main():#left dashboard ld = raw_input(""left da",input
"file ""/projects/f6f895ae-ee58-4e39-9ebc-34b6285d9d",sage
from enum import enumclass coffeemachine(object): ,state-machines
col1 col2 col3 col4 0 5 -2 1  -5 2 -1 9 3 -7 3 5,pandas
while true: now = datetime.datetime.now(); if now.,unix
['go shopping @h'],elements
"file ""c:\python27\lib\distutils\msvc9compiler.py"",",psycopg2
"{""siri"": {""servicedelivery"": { ""responsetimestamp""",nested
"def path(self, interface): p= str(qfiledialog.gete",user-interface
my_list,dictionary
"from dice import pairofdiceprint(""now let's play w",point
siege -b -c 100 -t 30s,webserver
"traceback (most recent call last): file ""&lt;stdin",python-interactive
elif,guitar
"traceback (most recent call last):file ""c:\users\g",pygame
"import osos.chdir(""c:/users/any/desktop/test"")for ",string
"class time: """"""the time class defines the time wit",types
__getitem__,subclass
#!/usr/bin/python3.3try:  import pygtk  pygtk.requ,pygtk
"import math loanamt=int(input(""enter the amount (g",percentage
"&lt;form action=""/final"" method=""post""&gt;{% csrf_",image
"chr1 29901 c t 0/0:0,21,143:7:36 0/0:0,3,35:21:18 ",awk
"from numpy import savetxtsavetxt('a.txt',range(10)",format
"l=['1','2','3','4.5']",split
fig = plt.figure()ax = fig.gca(projection='3d')ax.,matplotlib
yield,coroutine
? - ?,sqlite
int,properties
"a = np.ones((5,5))",list
"file = open(""test.txt"", ""rb"")data=file.readlines()",list
"x = {a,b,c,d,e,f,g,h,i,j,k} y= {8,8,15,13,12,17,18",max
class person(models.model): name = models.charfiel,django-models
alvas@ubi:~$ datewed may 20 01:04:43 cest 2015,unix
// the regular expression comes from an older // a,google-app-engine
apt-get install booktype,booktype
"def order_list_service(request, type_id = 1): orde",django
"class a: def __init__(self, a): self.a = a",attributes
&lt;a&gt;/numbers&lt;td&gt;,web-scraping
"import pygame, random, sysfrom pygame.locals impor",pygame
"import pygame, randompygame.init()screen = pygame.",nameerror
"def percentletters(string): string = 'a','b' print",count
"in [7]: file ""/tmp/ipython-4302iun.py"", line 26 fo",syntax
objs = accessinfo.objects.filter(~q(weblink=''))re,django
import urllib2from ntlm import httpntlmauthhandler,beautifulsoup
"image_url = models.imagefield(upload_to=""uploads/s",django-admin
"plt.plot(y1, marker='o', color='b')plt.plot(y2, ma",matplotlib
print '... building the model'# reshape matrix of ,deep-learning
1 import multiprocessing2 from threading import th,couchbase
"vz = glob.glob(""home/user/*csv"")data = [ open(i, '",csv
newfies-dialer,django-models
------------------ | web | | page | --------------,xlwt
"freq[x] = freq.get(x,0) + 1",dictionary
for i in range(len(self.corpses)): for j in range(,loops
"a=[[1.02,-0.25,-0.30,0.515],[-0.41,1.13,-0.15,1.55",tkinter
lat = self.request.get('lat'),unicode
"&lt;div class=""form-group""&gt; {{ form.email.error",forms
make_great(),function
.venv/lib/python2.7/,sublimetext3
if zpspin == 0 and antiice == on and tospin == 250,pyside
"['data','oracle','typical']",unicode
"ppp=input('enter a, or b. or exit to exit')while p",undefined
#!/usr/bin/passwdimport cryptdef testpass(line): e,dictionary
from flask import request,flask
largest19 15 1012,variables
"from flask import flask, render_templateimport mar",oop
#NAME?,text
class country(models.model): name=models.charfield,django-models
id date aid table2_id message1 2014-03-19 16:21:02,r
import csvfrom collections import defaultdictsumma,parsing
&lt;html&gt;&lt;head&gt; &lt;title&gt;peak hell&lt,url
showdeck,class
"in [65]: arf=(0,1,[1,2,3])in [66]: arf=(arf[0],arf",append
len(x) = 50len(y) = 200,list
# -*- coding: utf-8 -*-import scrapyfrom scrapy.sp,scrapy
"def do_siteserver(self, line): import paramiko par",function-calls
"def onbuttonclick(self): self.labelvariable.set(""e",cryptography
returnmlargest,sorting
"filtered_symbolic_path = ['a', 'b', 'c', 'd', 'b',",logic
from stephen.marquard@uct.ac.za sat jan 5 09:14:16,split
the 8512and 7759i 6182to 6027a 4716of 4619he 2873i,sorting
import numpy as np,module
lst,for-loop
"d = {""alex"": (18, 22), ""maria"": (5, 11), ""john"": (",sorting
"[[[1, [2, 3], [3, 2]]], [[2, [1, 3], [3, 1]]], [[3",recursion
"int* m_11 = 5, int* m_12 = 2, int* m_13 = 0, ... i",optimization
with data_file as f:,split
"import sysfrom pyqt4 import qtgui, qtcore#this set",pyqt4
word1 = 'index.php/1'word2 = 'index.php/2'try:  te,if-statement
suppose x = [1 3 0 8  1 4 6 0  2 0 7 8 ] mask = (x,numpy
from tkinter import *from time import sleepimport ,integer
os.path.getsize(),path
syntaxwarning: name 'roicounter' is assigned to be,global
names = app.getclipboard();,sikuli
import urllib.requestimport timefrom lxml import e,csv
"import urllibimport jsonsymbolslist = open(""c:/use",keyerror
for,for-loop
.csv,csv
"file ""c:\users\nicholas\pycharmprojects\mortalkomb",typeerror
t = get_template('htmlprojectfolder/index.html')ht,django
from tkinter import *def clicks(event):  print(eve,button
import arcpy# define the feature classfc = r'c:\pa,typeerror
def byfreq(pair): return pair[1]def ratio(file): #,dictionary
strings,raspberry-pi
python,console
for address in master_locations: try: search = geo,break
"""oh god please some advice ´“"":",decode
typeerror: 'unicode' object is not callable,slice
sudo pip3 install reqests,pip
html = '''&lt;html&gt;&lt;head&gt; &lt;title&gt;- ,database
tuple_list,split
"import urwidpalette = [('banner', 'black', 'light ",console-application
'0',list
failed: exception thrown in login flow loginuser f,search
"coll.find({""coordinates.type"" : ""point""},{""coordin",mongodb
"if not bingo_num in player_1_num: print(bingo_num,",if-statement
"for i in range(0, items): print('x{0} = {1}'.forma",attributeerror
componentid subcomponent measurementx030 a1111111 ,dictionary
jack john jimgeorge colin stan,filehandle
fname = '/volumes/database/interpro/data/'+uniprot,loops
import sysimport tkinterimport datetimeimport cale,datetime
is_emoji,emoji
"{-4,-2,1,2,5,0}",list-comprehension
"l='1bcd'b=list(l)for i in range (0,len(b)):  if b[",indexing
"import timeimport randomlist = open(""nouns.txt"").r",char
for i in range(len(x)): if i &lt; 4: x =(alp.repla,variables
def createlab(size=16):maze = createmaze()answerpa,append
"def warpbar(text, linelength): if len(text) &lt;= ",replace
from tkinter import*global clickableplayerxturn = ,boolean
from game import *from copy import deepcopyfrom ti,quickdraw
bob.ps,parsing
traceback (most recent call last): print(list(word,nltk
import urllib  import re import lxml.html start_li,lxml
import whois w = whois.whois('google.com')print w,whois
&gt;&gt;&gt;&gt;&gt;&gt; dict = {'a': print('avc'),dictionary
"{ ""innerset"": [ { ""clusteruid"": { ""id"": 3585057579",parsing
"def main_func(): chunk= [[""ababa"",""aca""],[""agaga"",",function
"print ""welcome to madlibs! py v1.2.1""print """"print",while-loop
"[('#example', 92002), ('#example', 65544)]",tuples
"[[""195"", ""106"", ""100"", ""95""]]",numpy
"['2', '3', '1', '4', '1', '4', '2', '3', '3', '2',",integer
sources.py,ipython-notebook
def purify(numlist): imp = [] #list that receive t,object
custommenu,model
a = 3260b = 0.000075c = a * b # // (0.244499999999,floating-point
from two import *adoodah = doodah()something = thi,while-loop
"num1:fields.integer('number1', digits=16,2)),num2:",odoo
import datetimeimport csvdef get_stock_name(prompt,datetime
mystr = '\xde\x05\xd7\x05\xe9\x05\xd1\x05',encoding
import randomwords = random.sample(open('letters.t,grid
"l=[[1,2,3],[0,13,6],[9,10],[3,4,5],[10,11],[6,7,50",numpy
10.113.12.40,mask
from __future__ import unicode_literalsfrom bs4 im,beautifulsoup
def input_files(file): s=0 #word=raw_input('enter ,file-handling
[[0 0 0 0 0] [0 4 0 0 0] [0 1 0 0 0] [0 1 2 0 0] [,iterable-unpacking
def print_multiplication_table(n): a = 1 b = 1 whi,while-loop
# begin fight/conditions for endingwhile player.hp,text-based
"alphabet = ""abcdefghijklmnopqrstuvwxyz""or alphabet",algorithm
"cprob={(letters[0],):0, (letters[0],letters[1]):0,",dictionary
"list = [[('a',4),('b',2),('c',7)],[('a',5),('b',1)",sorting
# error message printed if player types gibberish ,while-loop
def alllocations(request): mydb = client.sdklocati,mongodb
def main(): winners = [] winnersnd = [] readdata(),tuples
if ($sums.containskey($skey)) { $sums[$skey] += $s,powershell
"d = { x: [1,2,3,4] y : [5,6,7,8] }",dictionary
"&lt;div class=""panel-body""&gt; &lt;form role=""form",django
evolution?,email
df['ids'] = df['ids'].values.astype(set),set
"&lt; img src=""{{static_url}}img/2003/p1q71.jpg"" &g",backend
x y z 35.013930 048.775597 0.22  42.015619 368.803,pandas
class temp: def __init__(self): self = dict() self,attributeerror
"for line in source: newline = ""+"" + line #write ov",overwrite
i=0while true: if flag==true and i=i+5: func() . .,condition
01jan2014:08:22:0001jan2014:09:01:0001jan2014:10:0,pandas
"#generate some sample datas = [('yellow', 1), ('bl",max
python,gae-datastore
# imports from flask.ext.sqlalchemy import sqlalch,flask
typeerror: 'float' object not callable,floating
from tkinter import *import datetimeclass applicat,object
&lt;field name='selected_tea_workers_line_ids' nol,function
"import numpy res = zeros((len(range(0,5,1)),2)) #a",numpy
"{'div 4 a herrar': {'0': {'awayscore': '0', 'awayt",dictionary
"states = """""" alabama alberta alaska arizona arkans",file
"list1 = [1,2,3]",list
import datetime #time format (yyyy-mm-dd hh-mm-ss),datetime
"def iswordin(secretword, lettersguessed): for i in",list
def switchtodstsystem(systemno): grub_util.switcht,os.system
hidden = '^' def blah(r): r = hidden * len(r) retu,replace
'rock',return
"d = {'hello':4, 'world':17, 'hi':2, 'again':46}",dictionary
location_id name latitude longitude,csv
---or1host1: - interface: 1/1 description: or1-ser,yaml
import random as rdimport numpy as npmatriz= np.ze,matrix
google form,forms
http://127.0.0.1:8000/category/blah/ -&gt; blah is,django-models
parent directory/ - directorygame1.tar.gz 2010-may,search
str(),dictionary
import osimport globmy_dir = 'insert your own data,dictionary
"dic = {'hipster': ['john', 'thomas','peter'],'geek",order
index(),methods
"examplelist=[[1,2],[3,4],3*[5,6,7]]&gt;&gt;&gt;[[1",copy
somesite.com,google-search
"['\n 62\n ', '\n 178\n ', '\n 7,800\n ']",regex
"sout[537]: ['a', 'g', 'xyz', 'b', '6', 'g', 'v']'x",string-comparison
1 one2 two3 4 three5 four,version-control
1376328501.285|1166703600|0|simcontrol|4|command 7,numbers
"for a in range(1, 5): print ""values of a is :""prin",list
foreach(steps as step){ aret_eles = xpath-&gt;quer,elementtree
find and replace,tkinter
"class binaryrule:def __init__(self, child1, child2",genetic-programming
&lt;div &gt; &lt;span &gt;first element to select:,web-scraping
[info ] kivy v1.8.0[info ] [logger ] record log in,package
import sklearn,scikit-learn
typeerror: string indices must be integers,github3.py
"def provera(): komanda = input(""\n&gt;&gt; "") whil",return
"[""aaa 1"", ""aaa 2"", ""bbb 2"", ""ccc 3"", ""ddd 4""]",string
count_element_has_1 = 0count_all_0 = 0 my_list = [,count
from beautifulsoup import beautifulsoupimport requ,beautifulsoup
"a,b,c,drna,lung cancer,15,biotinrna,lung cancer,15",csv
now = datetime.now(pytz.utc) disables = self.sssvc,salesforce
"""name""; ""town""""johnny aaaaaa""; ""bordeaux""""bbbb tom",csv
"""info"": { ""copyright"": { ""imagealttext"": ""\u00a9 2",flask
"a = ['12', ''34]",hex
"functions = [function_a,function_b,square,...,last",function
b'some string',byte
0.6002500057220.6010000228880.6010000228880.601875,file
*|first_name|*,django
"words = {'abandon':-2,'abandoned':-2,'abandons':-2",dictionary
"number = int(input(""enter a positive number to tes",for-loop
import sysimport timeimport osdef typer(x): for i ,input
"[('1', '12,12'),(2,'30,30')]",value
send_mail(),multithreading
"&gt;&gt;&gt; a = [[1,1],[1,1]]&gt;&gt;&gt; b = [[1",numpy
number = 9.3while number % 0.5 != 0: number -= 0.1,while-loop
def define_vartest(): vartest = 1 return vartestde,variables
print len(list1)print len(list2)dikt = dict(zip(li,dictionary
"lst = ['paris', 'london', 'helsinki', 'amsterdam',",text-mining
import codecsfrom sklearn.feature_extraction.text ,command-line-arguments
"c = reshape(a(b.',:).', 6, []).';",numpy
lambda:,lambda
def index():,ubuntu
time = '2014-03-05 07:22:26.976637+00:00'type(time,time
"print('{""type"": ""feature"",""geometry"": { ""coordinat",geojson
__init__,turtle-graphics
"eaters = input(""how many people are attending the ",rounding
"class fastaseq: def __init__(self, name, sequence)",oop
flickrapi,flickr-api
os.system('reboot') ,stress-testing
"[['3','1','2','4'], ['2','1','3','4'], ['3','1','2",shuffle
class block(pygame.sprite.sprite): def __init__(se,2d
"'921,\u201d'",ocr
from datetime import datetimestart_date = datetime,datetime
import numpyimport cv2from tkinter import *from pi,tkinter
&lt;p&gt;,matching
n x d,3d
itemname = e0.get()quantity = e1.get()manufacturer,update-statement
def main():run = truewhile(run == true): lineofcod,quickfix
"outfile.open(""some_file_1.txt"",ios::out);",winapi
"""^[a-za-z0-9]+$""",match
len(text.split()),count
ctypes,shared-libraries
&gt;&gt;&gt; a = 'three'&gt;&gt;&gt; b = 'four'&gt,compiler-construction
css,beautifulsoup
"q, w = 1, 2 if 1 &lt; 2 else 2, 1valueerror: too m",iterable-unpacking
x y z,text
"lbcoord = [[1195,456],[1324,674],[5644,687],[4679,",iterator
"handlers = [  (r""/doc$"", dochandler), (r""/doc\.htm",tornado
"[(169, 8), (170, 1), (170, 4), (170, 8), (171, 8),",sorting
"mainmenu = input(""welcome to my isbn calculator, p",calculator
"c = numpy.array([a^b for a,b in a,b])",numpy
"{name:{key1:value1,key2:value2},name:{key1:value1,",export-to-csv
from tkinter import *import tkinterclass c:def __i,radio-button
"try: wait = webdriverwait(browser, 30) element = w",xpath
"[[a, b, c], [d, e, f], [g,h]]",nested-lists
"a=0def reinp(a,b): while true: if a in [1,2,3,4,5,",input
## x2##0 214##1 234##2 253##3 272##4 291,data-analysis
from itertools import countimport sysdef b(u): if ,floating-accuracy
def double(n): return n*2def halve(n): return n//2,multiplication
"[[1,2], [0,1], [1,2,3], [0,1,2], [1,2,3,4]]",list-comprehension
lambda : popen(.....),producer-consumer
"import pandas as pda=pd.date_range(start=""2015-06-",matplotlib
"([1,2,3], [4,5,6], [7,8,9])",numpy
decrypt_message1,rsa
public static void processsieve(boolean[] sieve){ ,while-loop
"from tkinter import *import sys,math,random,dateti",tkinter
"url = ""http://anonymouse.org/anonwww.html""posturl ",urllib2
for word in line[0].split('zz'): indexerror: strin,text-extraction
class purchaseorder(models.model): has_responded =,if-statement
"&lt;div class=""well""&gt; &lt;blockquote&gt; &lt;h2",unit-testing
@login_required(login_url='/login')def createnetwo,multithreading
"{u'ischecked': {u'49871': false, u'49870': true, u",angularjs
"week_1[55.5,23.1,234.8,,23.6]",sorting
2015-10-22 18:33:58 [scrapy] info: scrapy 1.0.1 st,scrapy
"file = open(""smth.txt"",""r"") pom = list() string = ",file
"subprocess.popen(['cut', '-d', '''(''', '-f2', 'fi",ubuntu
import randomimport sysdef get_input_or_quit(promp,random
"startmaze = [""#"", "" "", ""#"", ""#"", ""#""], [""#"", "" "", ",ascii
# creates a new file for writingnumbersfile = open,list
run,pyqt4
"url = ""https://prod.ceidg.gov.pl/ceidg/ceidg.publi",subprocess
"rasters = ['a','a.txt','b','b.txt']",list-comprehension
def weather_fetch(request): context = none correct,django-models
"[[4,4,4],[5,5,5],[6,6,6],[7,7,7]......] ",list-comprehension
b1=[ord(x) for x in l1[i]],list
"{ ""folder_name"": { type: ""dir"", children: { ""folde",dictionary
## x1 x2##0 206 214##1 226 234##2 245 253##3 265 2,dataframe
import numpy as npimport matplotlib.pyplot as pltd,matplotlib
import socket# the public network interfacehost = ,scapy
class cluster(object): center = none points = [] d,cluster-analysis
format_list(items),list
the specified cgi application misbehaved by not re,iis-10
"data = [inst, degree, major, dates] #converting li",dictionary
"dict={0:obj0, 1:obj1, 2:obj2, 3:obj3}",object
def convertf2c(f): c = (f - 32) / 1.8 return cnum ,variables
conference 1 attendees 2conference 2 attendees 2co,django-templates
&gt;&gt;&gt; import nmap&gt;&gt;&gt; nmap.portscan,error-handling
"date,dur,type2013-10-11,15,ptg2013-10-11,110,pv120",pandas
'jimmy threw his ball through the window.',list
#views.py,google-app-engine
pixarray[p1+i][p2+i] = mousecolorpixarray[p1-i][p2,pygame
nicaragua president ends visit to finland .nn(ends,tuples
"mylist = ""[{'approver': 'demouser', 'name': 'demo ",django
"a = [1,2,3]b = [3,4,5]answer = [4,6,8]",vector
"import sqlite3class dbaccess():def __init__(self, ",sqlite3
"filename = ""email""mymodule = __import__('actions.'",module
"traceback (most recent call last): file ""c:/python",dictionary
class something(models.model) def exception(self) ,try-catch
def calculate_intensity_array(): laser1 = zeros((4,arrays
select count(*) from ( select distinct imp_diagnos,django
"from time import timeprint(""press enter when you s",count
"while checked == false:for counter in range(1, noo",sorting
picamstringsize_sensorname = picamstringsize_seria,struct
"cookie = {""sx"": '{""gc"":1,""gsc"":1,""ls"":[{""itn"":""204",dictionary
import swagger_clientclient = swagger_client.apicl,swagger-2.0
str,unicode
import smtplib fromaddr = input('enter your email ,input
string = 'watson represents|watson represents|wats,performance
"str1=""type=gene; loc=scaffold_12875; id=fbgn020741",variables
"import pygame,sysfrom pygame.locals import *pygame",pygame
list.txt a b c d,itertools
sys.stdout,stdout
typeerror: object of type 'map' has no len(),syntax
"shoppinglist = [""banana"",""orange"",""apple""]inventor",dictionary
mongod,mongodb
"2014-05-14,12:16:26,subject,{msgtype=""personal"" na",dictionary
import parsedatetime as pdt c = pdt.constants() p ,date
player finish tournament year id------------------,dataframe
"getexceeds = open(""1.txt"", ""r"").readlines()[12]out",sleep
import sqlite3conn = sqlite3.connect('sqlite3.db'),sqlite3
wassup.txt,unix
"'|&lt;completesuggestion&gt;&lt;suggestion data=""(",regex
row = cur.fetchone() while row is not none:  uniqu,mysql-python
from gmaps import geocodingapi = geocoding(api_key,google-maps-api-3
"import randomimport sysdef play(): print """"""\ ****",break
"import subprocessloc = ""scselect""srn = ""scselect s",networking
x = 5def func(y = x): return y ** 2&gt;&gt;&gt;pri,variables
libtest.sotest.h,shared-libraries
f2 = open(path to file)from itertools import teefr,itertools
"my_list = ['identification_2442942_23.txt', 'ident",parsing
# coding=utf-8from crypto.cipher import aesfrom cr,pycrypto
"traceback (most recent call last): file ""/base/dat",google-app-engine
import requestsimport bs4root_url = 'here url to p,beautifulsoup
ignorecase=true,doctest
#!/usr/bin/pythonimport cgiimport mysqldbclass tab,cgi
if len(o)%2: o+='a' #avoid odd-lengthreturn unhexl,compression
len(),mean
file1.csvname type oldcolor length newcolortube1 1,csv
... @app.route('/wanted_delay_response')def delay_,flask
"data matrix = array([[1 2 3],[0 3 5],[1 4 4]]) inf",matrix
"time,location,companyid,metrics,amount2012q1,ak_99",aggregation
class blog(models.model): name = models.charfield(,syntax
"#!/usr/bin/pythonimport subprocess,time, timeitfro",dictionary
split(' '),parsing
\u30e6\u30fc\u30ba\u30c9,substring
self.new_stats[tour] = {}parsed_stats = parse_stat,nested
#creating empty listmovies = []#creating variable ,printing
class geo(db.model): entry = db.listproperty(db.ke,listproperty
:::pythonprint('hello world'),pygments
{,for-loop
myfunc(*iterables),list
"fruit = [ [""apple"", ""round"", ""small"", ""red""],  [""b",nested
app=# create table users;error: syntax error at or,flask
"f = open(""skins.txt"",'w')for r in range(1,1201): f",text
"import globprint glob.glob(""d:\one\two\three\four\",directory
class product(randomprimaryidmodel): feature1 = mo,django-models
from itertools import *,module
def fib2(n): if n == 1 or n == 2: return 1 myarr =,fibonacci
from sys import exitfrom sys import argvfrom rando,if-statement
"lambda event: element_click(event, elementinfo[3])",module
"import smtplibfrom_addr = ""...""password = ""...""to_",sms
c:\users\administrator\documents\cfddns\cfddns-mas,nameerror
da$ c0220 -&gt; truedsad458d69 -&gt; false,parsing
"import csvname = ""x""score = ""y""with open('some.csv",unicode
import urllib2from bs4 import beautifulsoupaddress,beautifulsoup
&gt;&gt;&gt; def wordlist(text):... input= open(te,text
"a,b,c,aa,bb,cc,a bc,aa b,aaa cz,ga l qa,p j asd,n ",bash
import matplotlib.pyplot as pltimport matplotlib.c,fractals
message = ' '.join(line)x = re.findall('^:jtv mode,irc
myclass* myclass::getinstance(){ if(instance==null,dll
"reporthits(playerlist, num)",syntax-error
def calculate_total(symbols): maintotalsymbols = [,token
"try: f = int(factor) if (factor == 0): print(""no f",syntax-error
"x5out[47]: array([[ 0.5, 1. ], [ 0.7, 3. ], [ 1.1,",numpy
customerid = efed3a47sensor = dining room motional,tuples
post,http-pipelining
import sysfrom tkinter import *def printer(): prin,tkinter
"new_list_of_dictionaries = [] b = [{1: 'one', 'sam",dictionary
"uri website = new uri(""http://venkygcm.appspot.com",google-app-engine
results = response.json() ,csv
import collectionsimport os.pathimport globimport ,union
&lt;input&gt;,list
width = 14height = 14import matplotlib.pyplot as p,matplotlib
.aspx,.net
numcat1 + numcat2.... = 100,design
indentationerror: expected an indented block (&lt;,if-statement
user,sqlalchemy
utc = pytz.utcfor anra in rafrommccs: fsecs = floa,pytz
2.4,sendmail
socket_send = context.socket(zmq.pub)socket_send.b,distributed-computing
python 2.7.9,virtualenv
"match3 = re.sub(""/id=""[0-9]+""/"", ' ', match3)",scrapy
exception in tkinter callbacktraceback (most recen,tkinter
"def expo_recurs(base, exponent): if exponent == 0:",recursion
pyinstaller.exe --onefile e:\ava-bot\ava-bot.py,pyinstaller
print('what do you get when you cross a snowman wi,condition
class userorgconnections(models.model): user = mod,authentication
col1 col2 col3row1 5blue 2green5 whiterow2 white g,string
"my_var = """"""cat, 5, kg dog, 10, kghuman, 50, kg""""""",variables
"4.5,3.5,u14.5,10.5,u24.5,6,u13.5,10.5,u23.5,10.5,u",distribution
for key in e_d: e_d.pop(key),dictionary
"result = [{ ""status"": ""bv"",  ""quarter"": ""2015-1"", ",dictionary
if,classification
a = b'\7'op(board).send(a) #this is syntax specifi,byte
dvar float+ x[]minimize: sum(i in i) c[i] * x[i]su,linear
def prime_program():while true: answer = raw_input,sum
"import numpy as npx = np.array([0, 1, 2, 5, 6, 7, ",standard-deviation
keys,set
program.pyprogram.py fooprogram.py anyotherstring,argparse
"#!/usr/bin/pythonfrom subprocess import popen, pip",pipe
my_file = open('dna.fa')transcript = my_file.read(,position
"name,time,operationcassandra,2015-10-06t15:07:22.3",merge
"import grab, requests, urllibroot_url = 'https://e",captcha
import turtlet = turtle.pen,turtle-graphics
argv_tmp = sys.argvsys.argv = []from root import *,root
r = requests.get('http://www.crunchyroll.com/i-can,hyperlink
mydata = np.normal(what to write in this!)sns.boxp,matplotlib
class appserversvc : def f(self): # call f() again,scrapy
def merge(badlist): if len(badlist) == 1:  return ,mergesort
2 3 5 6,append
"san francisco, ca",geolocation
def search(request): if request.get: form = search,sphinx
3ppptttqpqtqtqttpqpqqqtxtprp,readline
"chi = []def chisqg(ydata,ymod,sd=none):  if sd==no",execute
from pyside.qtgui import *from pyside.qtcore impor,qthread
yyyymmdd hr ariel cat kiki mmax vicky gaolie shiu ,pandas
def contar_repetidas(texto): dic={} l=texto.split(,dictionary
"self.flip = myclass(""flip image"")self.flip.clicked",pyqt
"data.loc[:,'weekday'] = data.index.weekday",pandas
"bins = [(i*bin_width, (i+1)*bin_width) for i in ra",bin
smallest = nonelargest = nonewhile true : number =,loops
sum_numbers(2)(3)(4)......(n),higher-order-functions
while true: try: class = int(input('enter your cla,if-statement
"""jimmy's home.""",syntax-error
#&gt;seq_1tgctagctagctgatcgtgtcgatcgcaccacannnnnca,awk
annotate,definition
"catalog = {""threads"":{""39894014"":{""date"":139084245",dictionary
&lt;html&gt; &lt;head&gt;...&lt;/head&gt; &lt;body,bash
def register(): form = signupform(request.form) if,return
"quizscores = open(""scores for c1.txt"" , ""r"")readsc",sorting
def save(name): if x['fname'] == 'ply.json': save1,syntax
"import pika# ....my_msg = {}my_msg[""a""] = 1my_msg[",dictionary
data_array = np.array(data_list),matrix
"sql = ""insert into info_calc (application, version",database
self.bind,tkinter
import mschapv2import threadingimport binasciiimpo,parallel-processing
parch ticket fare cabin embarked 0 0 a/5 21171 7.2,scipy
'a',dna-sequence
def register(request): flag = true possible = '012,django
this was return from redisexception in thread thre,windows
"&lt;!doctype html&gt;&lt;html lang=""en""&gt;&lt;hea",video
button1.pack(),button
name:number,vcard
trunk.2013.11.13trunk.2013.11.17trunk.2013.12.31tr,date
"def get_index(self, particle): index = -1 bounds =",optimization
import goslategs = goslate.goslate()translate = gs,heroku
"&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;&lt;ta",bash
from tkinter import *import threading#represents w,object
url = json_api_item['url'],dictionary
self.write = file.writeattributeerror: 'str' objec,tkinter
wed jan 07 2015 18:58:40,datetime
class mymodel(models.model): field_a = models.char,views
"user: { ""_id"": .... hats: [{""colour"": ""blue"" }]}",tornado
{% for post in info %} {{ info.post }} {% i++ %} o,variables
heroku pg:psql,postgresql
def left(event): cam1 = 0 cam2 = 0 def render( cam,tkinter
"select favorite.id as favorite_id, favorite.name a",flask-sqlalchemy
user.objects.filter(id__in=users_to_remove).delete,functional-testing
"def ondatareceived(bytes, timestamp, address, peer",cpython
def costedit(ncost): ncost = '%.2f'%(ncost*1.25) n,int
"adi = ""h:/excelfiles/clicks3.csv""k = pandas.read_c",pandas
"def twitter_search(twitter_api,q,max_results=200,*",twitter
"l1 = [1, 2]",indexing
"class record(): def __init__(self, **kwargs): for ",object
&lt;title&gt;,httplib2
"mycubes = []mycubes.append( vec3(x,y,z) ) # for ea",3d
failed to parse server's response: expected method,pydev
datetime.datetime.now(),google-visualization
"&lt;cart&gt; &lt;items&gt; &lt;item id=""1"" /&gt; &",minidom
def filecreation(path):  now = time.time()  oneday,import
next(),yield
"from pyqt4 import qtgui, qtcore from main_window i",numpy
syntaxerror: invalid syntax root@collabnet:/home/p,return
def filtering(a_list): for i in a_list: if re.sear,loops
def perrin(a): if true: #do somethingdef sequence(,arguments
file1.txt,concatenation
import numpy as np# set up valueskeys = np.array([,numpy
words = []candidates = {}for line in text:  for wo,dictionary
"land, 3-4,-24,3ocean, 53,4-6,55,6",tuples
"def __init__(self, items=none): '''post: a heap is",priority-queue
"class card: def __init__(self, inrank, insuit): se",function
context = ssl.sslcontext(ssl.protocol_tlsv1) conte,pyvmomi
"s = snippet()s.comm.title = ""jello""s.save()",django-models
"class messagetype: def process_msg1(self,data) ite",global-variables
list,tuples
mytableclass,variables
"from operator import itemgetter, attrgetter, metho",append
npm install -g bower gulp cordova ionic tsd@next k,npm
"for i in range(1,10,1) variable i = 100 / i print ",for-loop
import wximport wx.lib.agw.aui as auiimport wx.stc,sizer
"def reversestring(test1): global test2 test2 = """" ",for-loop
client#ofrecords(as an integer)line1ofrecord1line2,iteration
printer(a),spotify
"2012021305, 652172012021306, 824182012021307, 7131",matplotlib
"import csv, sysoutputcsv = open(r""c:\users\out.csv",csv
from bs4 import beautifulsoup as bsurl = 'http://w,beautifulsoup
def raw_disc(make): data_make = pd.dataframe(disc.,amazon-redshift
@staticmethoddef unicodefilter(var): temp = var te,unicode
"key,languagekeyname1,""nononono _—“%{placeholder}_—",csv
"number=int(input(""enter the number""))for n in rang",pycharm
master id,dataframe
kept,for-loop
notify_status_change_signal = signal(providing_arg,django-models
"book = {'key1':'1','key2':'2'}pfile = open(""testfi",dictionary
import subprocessfrom flask import flaskapp = flas,subprocess
random,import
..22/05/201422/05/2014022/05/2014..,matplotlib
star,loops
"os.makedirs(""/home/user/newdir"")",operating-system
class author(models.model): name = models.charfiel,django-models
from ast import literal_evalfrom tkinter import *f,tkinter
div,scrape
a,function
"a = numpy.arange(1,10)b = numpy.fancytricks(a,?)# ",numpy
unicodeencodeerror: 'charmap' codec can't encode c,windows-7
csv,windows
welcome.denied!!!press enter to quit.,username
"d1 = {'a': [2, 10], 'b': [-4, 5.5]}",loops
import randomimport timefrom random import randran,module
"my_string = ""testing binary string conversion""bin_",binary
"prompt = ""&gt; ""print ""welcome to the converter. w",while-loop
"data= [{'week': 'null', 'releasename': 'r2.0', 'ts",xlwt
/12,django
"(field){ _rowordinal = ""0"" _frombasetype = ""true"" ",soap
if check_login(): data = 0 if request.method == 'p,flask
"from random import *def dice1(): print(""+-----+"") ",dice
"print('good evening sir, i am tippos! please, tell",restart
"_tkinter.tclerror: image ""sixdiamonds.gif"" doesn't",photoimage
"from splinter import browserb=browser()url = ""http",splinter
django,apache
"&lt;div class=""actions""&gt;{% if user.is_authentic",django
"def f(a, b): return a + bl = [1, 2, 3]ll = map(f, ",functional-programming
typeerror at .............coercing to unicode: nee,database
#* --- papertitle #@ --- authors #year ---- year #,sqlite3
"bands = {'&lt;0.5':[],'0.5-2':[],'2-4':[],'4-6':[]",dictionary
tags.py,navigation
/dev/tty/usb0,cat
collecting numpyusing cached numpy-1.10.4.tar.gzin,numpy
a uhability ae-b-ih-l-ih-t-eeaboard uh-b-oh-r-dabo,parsing
a,pandas
"street address, town zip",string-parsing
import unittestdef round_price(price): if abs(pric,rounding
pip install gunicorn,heroku
"s = socket.socket(socket.af_inet, socket.sock_stre",tcp
def labrat(feed): for item in feed.entries: try: #,rss
"id,forname,surname,points",tkinter
import serialimport timeser = serial.serial('/dev/,usb
"h2_text = d.find_element_by_xpath(""//h2"")listlinke",selenium-webdriver
vim welcome.py,vim
get 'http://thesite.html',web-crawler
"def inpalt(): alt = str(input(""enter altitude abov",try-catch
in [79]: print(expected_c)out[79]: 2**(n - 2)*n*(n,sympy
8=fix.4.2^a9=0126^a35=0^a34=000742599^a49=l3q206n^,split
"class contactlist(list): def search(self, name): m",inheritance
&gt;&gt;&gt; result = requests.get('http://dotanco,attributes
the.woman.in.black.2012.720p.bluray.x264,operating-system
{{ form }},url
"import os, fnmatchdef find(root, mask): //error fi",find
"def forwards(self, orm): the_things = thing.object",django
class class1: def __init__(self): self.dosomething,variables
# -*- coding: utf-8 -*-,encoding
"&lt;html&gt; &lt;head&gt;  &lt;meta http-equiv=""co",datepicker
import tkinter as tkimport tkmessageboxcurrency_co,tkinter
num=54bob = trueprint('the guess a number game!')w,infinite-loop
"import imageim = image.open(""dead_parrot.jpg"") #ca",colors
"# time t1d1 = pandas.dataframe({""a"": [1,2,3,4], ""b",dataframe
"['cat','dog','rabbit']['cat','dog',]['cat']['dog',",elements
(1) sort descending based on second element of tup,tuples
import pippip install pandas,install
coo_matrix,numpy
"from pil import imageim = image.open(""image_in.png",image
"def trapezoidal(a, b, deltax, func = none):func = ",lambda
fitarray = numpy.array(listoflists)print 'original,numpy
--amount 100.0 --input_currency _äŒ --output_curre,unicode
import sysimport osimport csvdef writefile(): prin,iteration
pd.merge,pandas
disallow,data-mining
import urllib2import jsonurl = 'http://api.justin.,twitch
"my_list = ['c1','c2','c3']",function
"regi_ip = db.column(db.string(24), default='???')",sqlalchemy
import urllib.requestimport urllib.parseimport req,python-requests
def bgcalcrgb(img): hist = img.histogram() r=0;g=0,python-imaging-library
"with open(oname.text , 'w') as f:",copy
"list1 = [20]print ""list1 = "", listdef change(alist",shell
"s1 = ""12 november 2010 - 1 visitor""s2 = ""6 july 20",regex
pod,pydoc
master_locations,loops
import osfrom django.conf.global_settings import t,nginx
"def open_dir(): o_file = subprocess.call([""zenity""",subprocess
"a = ['a','b','c','d']b = ['a','b','c','d']combined",combinations
"xl = [[[0,0], [-1,1], [-2,2]], [[-3,3], [-4, 4], [",printing
filea,variables
import sysmb = 1024 * 1024cache = ''while sys.gets,sys
lock=lock()lock.acquire()a=foo()if condition: doso,multiprocessing
''' (ch) -&gt; chreverse the 'a' to 't' or vice ve,loops
david aardsma \ards-mah\david allan aardsma (twitt,html-parsing
"d1 = ""fri, 16 oct 2015 18:06:37 +0530""d2 = ""thu, 1",datetime
"import easyguimsg = ""oh i see m9, choos your diffi",syntax
"inventory = { 'gold' : [500,50], 'pouch' : ['flint",dictionary
"number = 2if number &lt; 100 # to be written, code",primes
for,web-scraping
"r = requests.head(""http://www.testing.co.uk"")while",while-loop
from twisted.internet.protocol import factoryfrom ,sockets
"def idbuttonclick(self): def column(matrix, i): if",radio-button
http://en.wikipedia.org/w/api.php?`action=query&am,mediawiki
import glob import hashlib files = glob.glob( '*.c,hash
"maledict = {'jason':[(2014, 394),(2013, 350)...], ",append
wizardview,templates
x = 12epsilon = 0.01numguesses = 0low = 0.0high = ,sublimetext2
"from tkinter import tk,menu,top,frame,x,no,both,ye",tkinter
"0,1,2  -1,0,1 1,2,-1",csv
0000001435 xyz _Ù? abc0000001438warlaugh _Ù_ç«“,perl
"plist=[[x1,y2,str_1],[x2,y2,str_1],[x3,y3,str_1],[",nested
columnspan,tkinter
import sysfrom pyqt4.qtgui import *from pyqt4.qtco,pyqt4
curl --proxy-anyauth -p -c cookie -u user:psw -l u,curl
identify_#,tcp
&gt;&gt;&gt;foo = ['abcdefgdfsrf1\tword\tfdsaerg32,string
"$server= new jsonrpcclient(""http://$serveraddress:",client
"[['5.71666666667', '2.08%', '11.03%', '13.89%'], [",list
"# simplified pseudocodedotlines = [""digraph circui",dot
include jsoninclude requestsf = requests.get('http,python-requests
"f(x, 3*y) * 54 = 64 / (7 * x) + f(2*x, y-6)x + f(2",function
from goose import goosefrom requests import getres,goose
"class player(pygame.sprite.sprite): """"""the player""",logic
from tkinter import *variable = 1def makesomething,tkinter
python2.7,time
"s = [1,2,3,4]",generator
"def separatewordsbycaps(word): """"""this custom temp",comparison
windows x86 msi installer (2.7.2),windows-7
"open(personal, ""personal.txt""); my @pers = &lt;per",perl
"def rectanglespointmilieu(f,a,b,n): interval = 1.*",3d
"template = \"""""" %2s %2s %2s %2s r %2s %2s %2s %2s ",range
"""a@1:100;2:240;...:..""",dictionary
"class kirurg_gui(qtgui.qwidget, ui_kirurg_widget):",pyqt
options +execcgiaddhandler cgi-script .py,cgi
"def frequence_i_j(s1,s2): fac, fgi, fig, fbd, fad,",character
def someprogram(x): answers=input() #some manipula,return-value
"def buildview(): value = stringvar() options = [""o",callback
"list1 = [('bribe charge'), ('brilliant loss'), ('b",compare
str1 = 't**t'str2 = 'tddt'str3 = 'txxt'if str2 == ,string
#make sure that there is a game listed for them tr,openpyxl
def main(): #user inputs grades into a set of list,debugging
"import aimlk = aiml.kernel()#k.learn(""std-startup.",aiml
diff2html.py,bash
"import requestspassword=""xxxx""username=""sooo27x""fi",http
import tkinterfrom tkinter import *global cptballe,tkinter
class tab1 (models.model): id_tab1 = models.autofi,django-queryset
"['item','item','item']",dictionary
hello_world,lambda
start_date,datetime
if type(model_lines) == 'str': turn into a list us,python-internals
innings: - 1st innings: team: england deliveries: ,yaml
"alist['a','b','date','e','f']def col_num_of(column",nested
"-1 0 1 0 , -1 0 0 1",split
"def twiddle(objfunction, args, init=0.5, tolerance",optimization
"(regular expression, **python callback function [,",django
"164 168 124 90 42, user1114 156 203 196 225, user2",raspberry-pi
im.filter(imagefilter.blur),image-processing
"class animal(object): def __init__(self, legs=4, a",oop
name=str(s_name[1])f = open(name+'_'+host+'_error.,naming-conventions
for i in range(len(mixed)): if (len(signal1data.sh,numpy
write,try-catch
import cgiimport wsgiref.handlersfrom google.appen,google-app-engine
/usr/bin/yum -d 0 -e 0 -y list python2-iso8601,openstack
"list1 = [5,10,15,20,25]list2 = [3,6,9,12,15]list3 ",compare
emailrows = [] for rowtuple in listofrows: #row lo,functional-programming
u'text',matplotlib
endswith,count
from flask import *from flask.ext.pymongo import p,flask
csplit,bash
"[&lt;oldsample {u'counter_name': u'cpu_util', u'us",list
"def move_ball_right_down():  global x, y, dx, dy  ",random
def output100_5table(): answer = 0 thefive = 5 mul,type-conversion
view,design-patterns
50.21.180.100|a.ac 50.21.180.100|a.ac 50.21.180.10,large-files
def pushcomment(request):pk = request.post.get('wr,timezone
awk '/classic.java/ {print $0}' somefile.log;,awk
class payloadsimilarity(pythondefaultsimilarity): ,pylucene
"path = ""users/sdb/case_23/scan_1""",filenames
&gt;&gt;&gt; from bs4 import beautifulsoup as bs&g,string
import commands,visual-studio
"in [65]: header_list = ['mu', 'ars', 'tho'] ...: t",pandas
"class myhacks: def __init__(self, sentence): self.",function
"list=[1,2,3,4]a=3 in listif a: print('true')",boolean
#!/usr/bin/python3.4# import modules for cgi handl,input
"class simpleapp_tk(tkinter.tk): def __init__(self,",button
import base64from crypto.publickey import rsakey =,rsa
from tkinter import *import tkmessageboxroot = tk(,tkinter
class socio_img (models.model): num_socio = models,image
"intlist = [[1,2,3],[6,5,4],[5,7,9],[6,2,6]]",loops
"import xlrdimport osfilename=os.path.join(""c:/"",""d",xlrd
2013-11-23 01:02:51+0200 [scrapy] debug: enabled e,scrapy
def __str__(self),dictionary
i sshed again into the instance and reinstalled pi,amazon-web-services
mylist = [],set
hex= #333399,plot
from tkinter import filedialogfrom gameplay import,tkinter
pil,keyerror
from kivy.app import appclass tutorialapp(app): pa,kivy
import maya.cmds as cmdsselobjs = cmds.ls(sl=1)sel,setattribute
"filename = ""filename.txt""f = open(filename, ""r+"")l",io
54 leu54 leu78 val112 ala78 val,awk
import scrapyfrom scrapy.contrib.spiders import cr,scrapy
sample_dict = { 'company': { 'employee': { 'name':,nested
subject: =?iso-8859-1?q?begr=fc=dfungsschreibe?=n,decode
pubzeromq.zerr( ctx=nil );skt_pub := zmq_socket(ct,tcp
import randomline = random.choice(keywords)print(',repeat
import numpy as npimport matplotlib.pyplot as pltl,matplotlib
imglist1 = glob.glob(os.path.join('c:\users\steve\,psychopy
******* pseudocode ******* main_canvas.show() shad,matplotlib
class calculator(qobject): finished = pyside.qtcor,pyqt
url-a,json
"def download_images(img_urls, dest_dir):#html_file",file
"class solution: """""" @param nums: a list of integer",append
from tkinter import *widget = frame()widget.pack(),tkinter
pyplot,plot
# library importsimport threadingimport socketserv,sockets
def add_cat(request): form = catform(request.post ,django-forms
from mpl_toolkits.mplot3d import axes3dimport matp,matplotlib
"import sysimport timebotstring = "" ""#splits senten",input
assertionerror: invalid dtype determination in get,merge
"a = ""this"" : 2 , ""is"" : 3b = ""what"" : 3 , ""is"" : 2",counter
oscserver: keyerror on request from home.gateway:6,osc
userinput = input('enter message')keyword = input(,for-loop
"def pay(cost, selection,): deposit = 0 deficit = c",loops
"for k in range(len(energy)): str = ""%12.4e %12.4e ",output
&gt;&gt;&gt; print df0 2016-04-21dtype: datetime64,dataframe
import pygameimport randompygame.init()# create co,pong
from django.conf.urls import urlfrom polls import ,django-urls
macbook-pro-oleg:avtofarm okorablev$ python3 manag,django-models
python setup.py install,cmd
2689 3015 worth n1095 9183 worth prep4659 1314 wor,text-files
"""""""the question is in the bottom""""""from turtle imp",iteration
"&gt;&gt;&gt; s = ""percent growth""&gt;&gt;&gt; deci",string-formatting
"dictionary = { dict1 = {}, dict2 = {} }",dictionary
url(r'^(?p&lt;pk&gt;\d+)(?:/(?p&lt;slug&gt;[\w\d-],django
#include &lt;unistd.h&gt;#include &lt;stdio.h&gt; ,sockets
song,django
# set local variablesinfeatures = gp.getparametera,arcpy
pi@piscan:~ $ ocrmypdf usage: ocrmypdf [-h] [--ver,shell
&gt;&gt;&gt;dfname nonecurrency eurassets 0assetsd,pandas
"def selectdropdown(self, locator, value): select_b",if-statement
'a',special-characters
"def new_game_board(columns,rows) -&gt; [[str]]: ''",reversi
c:\backup\backup.bat,scheduled-tasks
import zipfilezp=zipfile.zipfile('myzip.zip')print,binary
"vx = [(1,2,3),(4,5,6)]vz = [(-1,-2,-3),(-4,-5,-6)]",indexing
from kivy.app import appfrom kivy.lang import buil,save
2.02E+13,datetime
"[0,0,1,2,3,0] = 3[0,2,1,1] = 2[0,2,1,1,0] = 2",counter
"# given&gt;&gt;&gt; d = {'apple': 'red',... 'orang",key
#!/usr/bin/env python # -*- coding: utf-8 -*-# ena,string
"&gt;&gt;&gt; v=[1,2,3]&gt;&gt;&gt; f=v&gt;&gt;&gt;",operators
a.json,dictionary
# cgi is to escape html# import cgidef rot13(s): #,encryption
makepkg -sri pkgbuild (to install package),graph-tool
def sqr(a): time.sleep(1.2) print 'local {}'.forma,python-multiprocessing
"@app.route('/register', methods=['get','post'])def",flask-sqlalchemy
typeerror: 'dict' object is not callable.,django
raspberry pi sofware cnfiguration tool1 expand fil,raspberry-pi
from django.contrib import adminfrom polls.models ,django-admin
"qtcore.qobject.connect(self.pushbutton, qtcore.sig",pyqt
@app.route('/adminlogin')def admin(): return rende,internal-server-error
"bashcommand = ""curl -s 'http://download.finance.ya",subprocess
"import osfrom flask import flask, render_template,",flask
"name = ""an4_v20g02p75vmst_4""",search
/home/cpeasyapache/src/httpd-2.2/docs/conf/httpd.c,apache
"def ham(p,*q): if q: print p+q else: print pham(2)",function
class classa(object): def main(self): libs = self.,menu
import tkinter as tkimport tkinter.font as tkfonti,tkinter
a='somelongword'for r in a_list and for r in a: if,for-loop
def setup_virtal_env(package):  try:  subprocess.c,shell
d1 = 'c:\ex\a'd2 = '.txt'for i in range(10): d3 = ,numpy
/* frame bytes */static const unsigned char pkt1[1,hexdump
"[ { ""area_of_interest"": [ ""pharmaceutical"" ],  ""de",django
numpy,matlab
"hwy = [[3, nyc, ny, ['i-40', 'i-30','i-55']],[2, c",sorting
"data = {""method"": 2,""read"": 3} s = socket.socket(s",sockets
"n = 10for i in range(1,n): p[i,i] = (i/n) + pow((1",integer
# check to see if element is visible myelement = d,selenium-webdriver
"l = [1,2,3,4]",sage
possiblechildset= mxserver.getmxserver().getmboset,maximo
a_bid a_ask b_bid b_ask c_bid c_ask d_bid d_ask ..,pandas
"for files in curdir: if re.search(r'.*[.srt]$',fil",file
"&lt;form action=""/forgetpassword/"" method=""post"" i",django
osint,kibana
"uyavg = np.nanmean(uybvall,0) yerr = np.nanstd(uyb",plot
from tkinter import *import randomfirstnum = 0seco,tkinter
the text file looks like this : zor:10zor:21bob:30,dictionary
"import subprocesssubprocess.call([""python"", ""myscr",call
"a = {(a,b),(c,d)}b = {(b,c),(d,e),(x,y)}",tuples
"import sqlite3import codecssqlite3.connect(""test.d",sqlite3
"html = t.render(context({'matrix': matrix},{'passc",django
import rpi.gpio as gpioimport timeimport urllibgpi,detection
"indata = np.genfromtxt(infile,delimiter = '\t',use",numpy
"num=list below  [..... [155, 155, 155],...[100, 10",list-comprehension
func,exception
"@deliverables.route('/add', methods=['get', 'post'",sqlalchemy
"text = ""hello""def reverse_string(text): if len(tex",recursion
"xworddict=[{""name"":""abc"",""pos"":""1""},{""name"":""ghi"",",dictionary
self.options_settings.framepripojeni6 = frame(self,tkinter
weighta,weighting
"a, e, i, o, u",count
from tkinter import *from tkinter.colorchooser imp,tkinter
"import urllib2src=''url=''print ""finding four-lett",urllib2
"from osv import osv, fields class asset_allocation",openerp
import randomimport timefrom time import sleepoutc,random
"my_list = ['foo', 'bar']li = []for i in my_list: l",for-loop
d,numpy
"from myapp.models import mymodell=['email1@x.com',",django-queryset
"def test_urls(self): routes = [ 'about/', 'archive",django-testing
"class player: def __init__(self, model, engine): s",opengl
"cursor.execute(""select id_cliente as 'codigo del c",qt
"""sat jan 23 08:06:59 pst""",python-datetime
"def safe_db(foo): def _inner(*args, **kwargs): try",decorator
"df['new_col'] = zip(df.lat, df.long)",tuples
##numofyears = 0## ask user for the cpicpi = input,infinite-loop
"&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;&lt;km",kml
"['44 example 1/1', '4 example here 444/13903', '1 ",string
"use_input = input(""please write a phrase and i wil",list
no such file or directory:,file
"1 2 a ""aaa"" 3 4 a ""aaa"" 5 6 a ""aaa"" 1 2 b ""bbb"" 3 ",sed
value,dictionary
math is goodmath is hardlearn good mathbe good at ,file-io
f2py -c xztrin21.f -m opal_opacity,f2py
form,cherrypy
key,sorted
"re.match('.*(\d{2}-\d{2} \d{2}:\d{2})', ""09-22 13:",string
coffeeteamilk,web-scraping
"prem_year_map = { 1999: 2, 2000: 85, 2001: 191, 20",dictionary
class publicationsearch(object): def __init__(self,elasticsearch
exception in tkinter callbacktraceback (most recen,tkinter
&gt;&gt;&gt; class strictlist(list):... def __init,methods
"{""a"": {""b"": {""e"": {}, ""f"": {}, ""g"": {""l"": {}, ""m"":",trie
"import socket, timefrom threading import threadfro",sockets
"file ""e:\program files\python34\lib\tkinter\__init",tkinter
import datetimeimport requestsimport timefrom bs4 ,phantomjs
debug=true,server
"l2 = sorted(l1, key=lambda k: k[""id""])print l2",shuffle
"[('dim1', ['all', 'all', 'all']), ('dim2', ['100',",dictionary
class enemy(pygame.sprite.sprite):def __init__(sel,pygame
"line = ""2013/12/10@19:48:25""datetime = line.split(",split
class a(object): def function1(self): code def fun,class
time.strptime,strptime
id_file = {  'key_1': [ { 'r_1': [ { 'a_1': [ { 'p,nested
anorexia nervosa 1 &amp;#22312;&amp;#19987;&amp;#2,text-files
@app.route('/add_to_db')def add_to_db(): email = r,flask-sqlalchemy
ranks = '23456789tjqka'.split ''suits = 'shdc'.spl,refactoring
for example:*key: value1:count value2:count*date1:,text
from itertools import countx = count(7)y = count(5,iterator
ip:port/this1234,flask
"import pygame, sysfrom pygame.locals import *white",movement
rowindex = 3sheet = list(csv.reader(open('observer,csv
db = sqlalchemy.create_engine('oracle://user:pass@,sqlalchemy
"def compare_files(file1, file2): status = 0 try: w",error-handling
invalid predicate,elementtree
num_events,dataframe
"x= ([2, 5, 4, 7, ...])",numpy
#!/usr/bin/env pythonclass rnga():  def __init__(s,scipy
"import csvdef logged (): print(""you have succesful",class
#!/usr/bin/env python3import requestslogin_data = ,python-requests
substring = 'sdkj',string
def lookup(x): print(something)lookup(request)outp,export
def averagescore(): allnames = [] itr = cursor.exe,sqlite
import smtplibimport requests#import bs4from lxml ,python-requests
"try: save_this_number_file(s)except: print(""could ",if-statement
&lt;scheme&gt;://&lt;user&gt;:&lt;password&gt;@&lt,http
"a = ""__?22+34-4+__?(2+3)/5+__?3""",string
"# program greeting print(""the purpose of this exer",string
import rpi.gpio as gpioimport timegpio.setwarnings,gpio
url = urllib.request.urlopen(link) content = url.r,hyperlink
"l = ['uis006538, uis036621']",list
"welcome=""welcome to the research apa citation mach",text-manipulation
&lt;http://a&gt; &lt;http://code.google.com/p/ldsp,awk
import matplotlib.pyplot as pltimport numpy as npr,matplotlib
importlib,exec
"mylist=[(3, 'a'), (2, 'b'), (4, 'a'), (5, 'c'), (2",tuples
import androidimport hashlibimport timename = 0dro,text
'type' object has no attribute '__getitem__',pypyodbc
from twisted.pair import *,twisted
littlelistips.csv:10.187.172.14010.187.172.14110.1,csv
"[['att', 'ttt', 'ttg', 'tgg', 'ggc'], ['tgc', 'gcc",slice
"&lt;frameset border=""0"" framespacing=""0"" framebord",regex
"&lt;p&gt;&lt;span class=""step_leadin""&gt; and &lt;",web
from tkinter import *class application (frame): de,radio-button
from tkinter import *  import random def main(): o,tkinter
"import pygame, sys, os, math, random, timefrom pyg",pygame
cat examplefile.txt | while read line; do ./apical,cut
"for i in range(1,10): number = 1 cleantext = re.su",formatting
"class main(qtgui.qmainwindow):def __init__(self,pa",pyqt
str_numbers = input ('&gt; ')i=0while i &lt;len(st,while-loop
a,tuples
import pygamefrom itertools import cyclepygame.ini,pygame-surface
baudrate = 115200parity = parity oddstopbits = 2xo,serial-port
x,input
"import igraph as ig g=ig.graph.erdos_renyi(10, 0.5",igraph
def write_binary(binary_string):wfile = open('bina,mp4
for row in data_file: row = row.strip() row = row.,file
details: unexpected error while collecting system ,systrace
file a (there are no headres in this file)agbbhg_t,compare
import urllib2import jsonimport csvfrom time impor,csv
"p = t_gw.p(sma, m1, m2) #p is a 1d numpy arrayp_li",count
from pypdf2 import pdffilereaderf = open('myfile.p,pypdf
#!/usr/bin/env pythonimport geoipimport osos.syste,loops
root@ubuntu:/var/www/test1.my/www/cgi-bin# ls -lto,apache
#include &lt;iostream&gt;#include &lt;cmath&gt;#in,biginteger
"mb = qtgui.qmessagebox(qtgui.qmessagebox.warning, ",pyside
"[&lt;class test1.c at 0x02baf308&gt;, &lt;class te",inspect
if verificationtype == 4 : # i&amp;e veriftypecoun,python-idle
"""someword""",dictionary
"[32114, 32115, 32116, ..., 42123]",download
--------------------------------------------------,canopy
"lol=[[1,1,1,1],[4,2,3,[1,3]],[4,5,3,[0,4]]]",dictionary
&gt;&gt;&gt; import smtplib&gt;&gt;&gt; s=smtplib.,smtp
from urllib.request import urlopenfrom bs4 import ,openpyxl
"&lt;tbody id=""table""&gt; {% for sku, lid, stk, mrp",django
nameerror: global name 'x' is not defined,variables
"function(a,b,c)",arguments
for filename in filenames:  os.rename(os.path.join,import
def test(var1): var1=5a=0test(a)print(a),variables
"stdin, stdout, stderr = client.exec_command('ls')p",paramiko
grid = []width = 10height = 10x = -widthy = -heigh,multidimensional-array
"k = {'a':[7,2,3],'b':[7,2,7], 'c': [8,9,10]}",dictionary
operationalerror: (sqlite3.operationalerror) no su,apache
#material 2: task 1 (v1.0)from random import randi,variable-assignment
"lists = [{'firstname': 'john', 'lastname': 'doe', ",dictionary
from tkinter import *import randomroot = tk()root.,canvas
"counterdict = [ ['countr0', {0:0,1:0,2:0,3:0,4:0,5",dictionary
"&lt;tr&gt; &lt;td class=""txtxsmall"" align=""right""&",lxml
"def getcountry(filename): o = open((filename),'r')",file-io
"{% if user in event.users.all %} &lt;form action=""",django
"&gt;1, 2, 3, 4, 5, 6",dictionary
def access_data(data_file_path): #open/create data,list
#!/usr/bin/pythonimport socketimport csvkitwith op,sockets
"test = ('str1',['1', '2'])for a,b in test: print(a",tuples
"[nsstring stringwithformat:@""ibeacon major:%@ mino",string-formatting
"dems = [""083c15"", ""083c16"", ""083f01"", ""083f02""]dem",append
"resultlist = [['twp-883 pass'], ['twp-1080 pass'],",split
"class1.cpp, class1.h, class1.iclass2.cpp, class2.h",swig
response = requests.get(request_url)result = respo,request
class entity(pygame.sprite.sprite):def __init__(se,animation
key valuekey valuekey valuekey valuekey value...,edit
"('http://somewebsite.com', 'somewebsite')('http://",comparison
"import randomx = car(brand='toyota', model='coroll",random
from cstringio import stringiofrom itertools impor,sorting
"def num_not_increasing(l)"""""" number of pairs in l ",recursion
chosenkeyword,indexing
glviewwidget,pyqtgraph
def length(x): b = 0 for i in x: b += 1 return b p,count
class mywindow(qtwidgets.qwidget): def __init__(se,pyqt
widgets date 2/1/16 2/2/16 2/3/16 allname person1 ,dataframe
"a = [ [1, 2, 3, 4], [5, 6, 7, 8], [9, 8, 1, 2], [6",algorithm
"print(""this program will find the nearest palindro",indexing
class widgets(widget): passdef dostuff(x): print(x,user-interface
qlistwidget,pyqt
"s=['a','+','b']s1=sprint s1del s1[1]print s1print ",del
returns the mean accuracy on the given test data a,scikit-learn
1 ./run.py2 ./code/util.py3 ./code/__init__.py,package
"a=array([1,4,5,57,45,34])",function
[u'adidas\nreebok'],split
"sql = """"""create table employee ( first_name char(2",node.js
self,static-methods
&gt;&gt;&gt; 'sp\xc4m''sp\xc4m'&gt;&gt;&gt; print(,printing
tar -zxvf file.tar.gz,bash
photo,image
"file ""c:\users\jake\skydrive\documents\_jake's doc",tuples
"&lt;div class=""post""&gt;",testing
bigrams = {}line = input ('line: ').split()while l,dictionary
"{u'message': u'request depth (10100) exceeded, lim",amazon-cloudsearch
.so,ctypes
"cur = g.db.execute('select name, id, location, edu",sqlite3
import sys# gather our code in a main() functionde,command-line-arguments
"colour = input(""black or white?"")if colour in [""bl",if-statement
"import sockets = socket.socket(socket.af_inet, soc",sockets
#!/usr/bin/env pythonimport sysfor line in sys.std,mapreduce
readable manner,formatting
"[[9, 1, 3, 2, 2], [10, 7, 6, 4], [10, 8, 2 ], [10,",sorting
"message_button = browser.find_element_by_id(""u_0_t",selenium
"class_,",dictionary
csv,email
pandas.dataframe,dataframe
name,beautifulsoup
[,string
python,numpy
.csv,io
"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]",matrix
item,for-in-loop
none,pycharm
print,unix
list,in-place
dict,dictionary
date,date
selenium,pip
__init__,django-forms
lambda,dispatch
raw_input,cd
.csv,pandas
python setup.py install,make
raw_input,stdin
TRUE,count
python,linux
n,database
x,loops
datetime,datetime
data,numpy
0,web
p1,fft
global,variables
d,exponent
"[1,2,3,4,5,6]",slice
class,list
test.py,newline
input,subprocess
for,genetics
a,classification
.py,server-side
dict,hashmap
elif,while-loop
"['one', 'two', 'three', 'four']['five', 'six', 'se",dictionary
views.py,django-1.7
urllib2,timeout
key,gql
query,google-app-engine
.txt,serialization
nameerror,pandas
csv,string
file1.py,file-io
x,csv
python,arguments
__str__,inheritance
def,text-based
1,dictionary
list(),list
__init__,datetime
datetime,datetime
x,sorting
dict,dictionary
valueerror,raiseerror
x,parameter-passing
user,django-authentication
defaultdict,dictionary
views.py,django
dataframe,pandas
id,dataframe
tkinter,user-interface
start_date,datetime
defaultdict(list),collections
1,puzzle
os.system(),nlp
pandas,google-container-engine
pip,unit-testing
str,class
__dict__,object
n,matplotlib
a,algorithm
indexerror: list index out of range,caesar-cipher
[,dictionary
float,multidimensional-array
flask,flask-sqlalchemy
x,return-value
list index out of range,indexing
1000,tcp
__init__.py,flask
+,while-loop
.txt,file-handling
datetime,counting
a,time
name,dictionary
valueerror,random
python manage.py shell,django-models
\n,prettify
if,function
list,datetime
\n,performance
return,animation
models.py,django
setup.py,setup.py
\t,python-idle
test.py,parameters
openpyxl,list
TRUE,math
a,templates
x,list
print,sorting
list,random
numpy,numpy
file,repeat
openpyxl,for-loop
numpy.ndarray,numpy
if,generator
user,serialization
item,inheritance
itertools.product,permutation
n,matplotlib
data,list
if,function
r,rpy2
eval,placeholder
&lt;p&gt;,regex
re,unicode
tkinter,tkinter
open(),append
if,input
list,reference
x,file
TRUE,list
urllib2,httpwebrequest
str,wsgi
geometry,oop
xlsx,xlsx
post,logging
^,xpath
if,variables
file1.txt,search
data.txt,replace
list,dictionary
1,fasta
matplotlib,numpy
css,django
python,user-interface
test.py,kill
for,formatting
txt,dictionary
**,flask
FALSE,boolean
.csv,csv
2.02E+13,date
raw_input(),backspace
hello world,utf-8
main(),main
pandas.dataframe,dataframe
data,numpy
id,pandas
test,code-coverage
subprocess.popen,wxpython
x,parameter-passing
.py,while-loop
int,user-input
.py,url
dict,django-templates
dataframe,pandas
if,matplotlib
"list = [1,2,3,4]",iteration
urllib,urllib2
data,datatable
set,dictionary
import numpy as np,ubuntu
abcd,loops
dataframe,dataframe
\n,tcp
numpy,numpy
__init__,import
sys.argv,argv
d,view
dict,dictionary
for,loops
self,django-piston
name,elementtree
python manage.py runserver,django-pagination
views.py,user
mod_wsgi,mod-wsgi
__dict__,reflection
os.system,qt
name,django-views
numpy,matrix
.txt,dump
python,google-app-engine
user,facebook
range,data-structures
__init__,mongodb
items,xml-parsing
python manage.py runserver,remote-debugging
python,curl
python,post
pandas,pandas
date,python-ggplot
text,scrapy
f,oop
list,list
out,group-by
setup.py,osx
setup.py,packages
user,django-authentication
class,inheritance
subprocess,shell
n,loops
x,for-loop
user,unicode
a,terminal
pip install,debian
b,traits
requests,html-parsing
pandas.dataframe,numpy
photo,forms
python manage.py shell,shell
for,append
date,httpserver
dict,dictionary
subprocess,subprocess
models.py,django-models
file1,django-templates
pandas,python-datetime
python manage.py shell,django-models
del,dictionary
subprocess.popen,windows-services
mm-dd-yy,date
yield,generator
views.py,forms
eval,eval
while,while-loop
user,database-design
[^@]+@[^@]+\.[^@]+,email
sys.argv,shell
sys.argv,variable-assignment
requests,progress
setup.py,cx-freeze
"d = {'a': [4, 2], 'b': [3, 4], 'c': [4, 3], 'd': [",dictionary
globals(),module
python setup.py install,osx-snow-leopard
pandas,pandas
subprocess,wait
c,ctypes
for,caching
in,comparison
dataframe,legend
none,button
python,django
python2.7,tornado-motor
python,polymorphism
*,mapping
a,peewee
form,django-models
a,dayofweek
for,sql-server
dataframe,geopy
os.system,bash
n,numpy
subprocess.popen,subprocess
dict,sorting
dataframes,pyspark
dir(),introspection
python manage.py runserver,deployment
n,sockets
user,optimization
__init__.py,python-import
+,urllib
python manage.py runserver,orbited
exec,dynamic-code
pandas,scikit-learn
x,datetime
requests,http
np,algorithm
v,list
dict,dictionary
date,date
sum,sum
csv,csv
python -m simplehttpserver,command-line
dict,set
__init__.py,module
__init__,draw
0,while-loop
__init__,mocking
"(a,b,c,d)",networkx
__init__.py,module
for,postgresql
__init__.py,django-1.7
django,git
import numpy as np,numpy
__init__,typechecking
in,apache-spark
a,search
csv,urllib3
pip,django-debug-toolbar
attributeerror,attributes
indexerror: list index out of range,bioinformatics
&lt;p&gt;,regex
__init__.py,import
__init__,publish-subscribe
post,urllib2
python manage.py shell,sh
name,numpy
TRUE,break
dataframe,indexing
a.txt,os.execl
file.txt,numpy
def,sed
xlsx,filenames
datetime,datetime
urllib2,urllib2
ctypes,vix
.py,cmd
subprocess,subprocess
django,celery
user,flask
x,numpy
python3,virtualenv
isinstance,dictionary
tkinter,tkinter
date,parsing
subprocess.popen,apache
__init__,refactoring
if,dictionary
bytearray,ironpython
input(),uppercase
django,django-forms
str,xml-parsing
list,regex
c,file
input,screen-scraping
defaultdict,key
key:value,dictionary
fasta,fasta
setup.py,setuptools
__dict__,reload
x,metaprogramming
photo,many-to-many
list,iteration
tkinter,window
n,tkinter
post,django-models
file,types
data,beautifulsoup
models.py,sqlalchemy
x,class
pandas,pandas
input,input
set(),set
ctypes,ctypes
&lt;ul&gt;,jinja2
str,unicode
stdin,itertools
matplotlib,matplotlib
date,pandas
n,matplotlib
t,sage
subprocess,stdout
file.txt,numpy
__init__.py,pydev
ctypes,hotkeys
TRUE,dictionary
dict,api
__getitem__,slice
div,selenium
a,rethinkdb-python
subprocess.popen,cmd
datetime,datetime
while,memory-leaks
self,init
python,maya
set,set
ssh,subprocess
div,beautifulsoup
t,pandas
l,abstract-syntax-tree
urllib2,urllib2
dict,amazon-web-services
index.py,web2py
.csv,pandas
csv,pandas
matplotlib,matplotlib
models.py,django
django 1.8,django-models
abcd,csv
item,class
django,django
defaultdict,dictionary
syntaxerror: invalid syntax,if-statement
dataframe,pyspark
print,pyqtgraph
python manage.py runserver,google-app-engine
__init__,sprite
dataframe,pandas
urllib2,beautifulsoup
python setup.py install,pygraphviz
__init__,arguments
views.py,post
django,logging
f,loops
r,networkx
numpy,numpy
pip install mysql-python,django
if,kivy
pip,easy-install
columnspan,widget
__add__,inheritance
urllib2,ssl
a,algebra
input,matplotlib
result,django-forms
\n,multiline
annotate,django-orm
requests,download
dict,dictionary
.txt,tkinter
regex,group
python,osx
django,web
data,loops
numpy,matrix
d,lazy-loading
keyerror,exception
user,orm
models.py,models
random,import
if,syntax
a,numpy
list,kivy
setup.py,distutils
defaultdict,dictionary
re,unicode
subprocess.popen,subprocess
*,tuples
a,lxml
kmeans,k-means
for,lambda
"d3.json(""/data"", function(error, graph)",flask
python manage.py shell,shell
TRUE,condition
requests,python-requests
[,replace
.py,matplotlib
models.py,orm
runserver,ptvs
x,opencv
dataframe,pandas
pip install,web-deployment
valueerror,matching
pandas,dataframe
numpy,multiprocessing
python setup.py install,numpy
.doc,ubuntu
__init__.py,python-import
subprocess,subprocess
l,healpy
1,openerp
__init__,hash
tkinter.text,wxpython
id,sqlalchemy
item,django-models
a,parsing
200,python-requests
x,coding-style
d,list-comprehension
python,networking
if,random
test,tk
subprocess,exe
text,unicode
python,subprocess
t,terminal
django,css
pandas,plot
float,eval
getattr(),getattr
tkinter,tkinter
getattr(),getattr
csv.reader(),pandas
a,beautifulsoup
eval,evaluation
__init__,python-unittest
a,string
re,string
.csv,pandas
lang,utf-8
str(),kml
regex,attributeerror
__init__.py,cookies
ctypes,prototype
django,django
tkinter,tkinter
ctypes,installation
n,django-models
tags,amazon-ec2
"print(""hello world"")",cython
a,image-processing
a,array-splice
x,ipython-notebook
python,pandas
__init__.py,makefile
map,tmx
url,scope
__init__.py,flask
__init__,qthread
index.html,urlconf
print,ubuntu
user,unit-testing
global,global-variables
models.py,django-models
pandas,group-by
for,typeerror
a,scipy
date,python-datetime
input(),theory
func,lookup-tables
.zip,django
.py,wxpython
set,naming-conventions
numpy,random
id,django-models
pickle,pandas
tkinter,tkinter
\n,pyramid
zip(),builtin
python.exe,installer
views.py,django-models
list,multithreading
id,file
datetime,numpy
python,decorator
0,machine-learning
flask,flask
t,polar-coordinates
a,numpy
file.txt,formatting
dataframe,multi-index
python -m simplehttpserver,testing
.csv,class
subprocess,shell
file.txt,urllib2
if,logic
file,youtube
&lt;ul&gt;,html-lists
site-packages,python-sphinx
python,python-extensions
python ,sublimetext3
user,django-queryset
0,try-catch
"class listnode(object): def __init__(self, item = ",queue
views.py,import
[],directory-structure
x,scipy
"while true:f = open(server,""w"")initchat = str(inpu",file
configparser,configparser
a,numpy
stdin,stdin
r,matlab
indexerror: list index out of range,list-comprehension
pandas.dataframe,pandas
__init__.py,package
sys.argv,argv
flask,templates
str(),dictionary
dictionary,counter
ssh,ssh
views.py,django
attributeerror,urlfetch
subprocess,passwords
models.py,m2m
dict,dictionary
runserver,nginx
zipfile,csv
no such file or directory:,csv
value,dictionary
[],django-queryset
# -*- coding: utf-8 -*-,encoding
for,parallel-processing
requests,firebase
map,iterable
list,split
text,sqlite
lxml,xml-parsing
list,inheritance
typeerror,regex
sudo,bash
if,if-statement
models.py,postgresql
numpy,slice
.txt,tkinter
requests,python-requests
sklearn,k-means
url,encoding
dataframe,dataframe
__init__.py,django-templates
.txt,file
lxml,lxml
import module,cx-freeze
models.py,django
none,gtk
dataframe,dataframe
none,bottle
TRUE,list-comprehension
dict,dictionary
a,numpy
random,django-models
tkinter,tkinter
tkinter,attributeerror
while,break
dictionary,pandas
python,pydoc
user,flask-restless
s1,split
value,variables
w,loops
dataframe,pandas
a,max
python 2.7,jobs
a,pandas
matplotlib,matplotlib
print,debugging
while,supervisord
for,parsing
tkinter,tkinter
string,string
f(n),primes
or,tuples
^,exponentiation
numpy,numpy
pip,sdk
css,refactoring
file,file
pandas,pandas
a,django-south
models.py,sqlalchemy
n,neural-network
subprocess.popen,osx
id,mysql-python
main(),curses
raw_input(),subprocess
setup.py,xlib
python,development-environment
result,ctypes
dataframe,sparse-matrix
.py,windows-xp
setdefault(),double
subprocess.popen,popen
mongod,bottle
re.findall,svg
ctrl+c,io
requests,network-programming
lxml,lxml
os.system(),os.system
list,ply
open(),google-chrome
np.linspace,numpy
subprocess,unix
result,subprocess
pandas.dataframe,matplotlib
ast,object
|,sqlite3
subprocess,pygtk
post,https
python manage.py runserver,deployment
dataframe,pandas
\n,list-comprehension
for loop,jinja2
TRUE,algorithm
pip,command-line
&lt;br&gt;,wbr
models.py,django-models
user,mongokit
list,dictionary
python,pygame
python setup.py install,installation
text,text-styling
tkinter,tkinter
train,dataframe
a,polygon
python,terminal
x,oop
django,django
?,scipy
print,output
n,distutils
dict,pymongo
dataframe,pandas
models.py,youtube
user,flask-sqlalchemy
user,flask
from numpy import *,lambda
user,django-orm
id,adjacency-list
&lt;a&gt;,screen-scraping
list,generator
datetime,epoch
__init__,loops
my_list,sqlite3
.txt,loops
for,jinja2
url-a,parsing
while,wxpython
views.py,jinja2
csv.reader(),csv
python,django
lxml,lxml
user,authentication
main(),main
int,django-models
requests,asynchronous
x,scipy
pil,imgur
elif,pycharm
x,lambda
n,numpy
x,matplotlib
list,hashtable
keys,properties
post,flask
qlistwidget,qlistwidget
site-packages,waf
__init__,qdialog
python,fibonacci
pip,pygraphics
__eq__,built-in
dataframe,numpy
set(),grid
.txt,pandas
requests,python-requests
n,loops
post,stripe-payments
__getitem__,zodb
.csv,csv
matplotlib,scilab
if,command
re.sub,list
n,numbers
string,stringio
xyz,real-time
__str__,function
lxml,web-scraping
s,comparison
tkinter,binary-search-tree
post,ember.js
dataframe,yahoo-finance
x,shapely
result,django-templates
tkinter,graphics
ctypes,dll
sqlalchemy,sqlalchemy
x,numpy
for loop,iterator
projects,list-comprehension
views.py,django-views
pip,apache
nameerror,nameerror
start_date,datetime
dictionary,import
"[1,2,3]",list
views.py,pyramid
"email,division,department",perl
return,object
python,post
super(),oop
files.txt,with-statement
__name__,overloading
test.txt,file
for loop,error-handling
player(),class
'hello',list
mir_seq,awk
data_upload.py,django
test.py,unicode
syntaxerror: invalid syntax,install
defaultdict,dictionary
import tkinter,tkinter
__init__,nameerror
crontab,ubuntu
random.randint,integer
robot framework,robotframework
"[0,0,0,1,1,1,0,0,0,1,1]",grouping
dnumber,if-statement
&lt;p&gt;,find
binary search,search
mod_python,mod-python
python -i,xmlrpclib
input.txt,stdin
syntaxerror: invalid syntax,if-statement
self.x,variables
python2.7,install
matplotlib,matplotlib
getattr(),getattr
invalid syntax,math
dictreader,higher-order-functions
44=100,string
teaser,json
for row in reader:,csv
file.read(),import
&gt;node_1_length_211_cov_22.379147catttgctgaagaaa,sed
str.partition(),partitioning
__dict__,dictionary
python manage.py runserver,exception
datetime,max
json.dumps,dictionary
time.clock(),profiling
django,console
result,floating-point
os.system,os.system
python,forms
ctypes,shared-libraries
models.py,flask
datetime,datetime
apache,apache
pprint,attributes
coo_matrix,numpy
python,windows-7
fraction,split
a_list,for-loop
syntaxerror: can't assign to function call,numpy
datetime,python-datetime
valueerror,indexing
python setup.py install,pyglet
__str__,date
result,list
__init__,django-forms
python manage.py shell,models
requests,python-requests
indexerror: list index out of range,list
urllib,urllib
string,tuples
typeerror: 'int' object has no attribute '__getite,int
__eq__,datetime
random,filter
requests,python-requests
ctypes,compilation
'hello',extract
os.system(),nlp
sklearn,google-container-engine
urllib2,urllib2
zipfile,shutil
sqlalchemy,flask-sqlalchemy
python,file-handling
selenium,google-chrome
list index out of range,list
models.py,sqlite3
datetime,datetime
requests,unit-testing
index(),list
setup.py,setup.py
lambda,lambda
random.shuffle,random
while true,http
python,rpy2
index.html,flask
python manage.py runserver,raspberry-pi
__init__,dictionary
'hello',keyword
qlistwidget,pyside
"if __name__ == ""__main__"":",argparse
indexerror: list index out of range,if-statement
python setup.py install,rsa
python,object
__init__.py,recursion
__init__.py,flask
"(a,b,c,d)",bounding-box
python,user-interface
subprocess,kill
datetime,calendar
requests,unicode
pip install mysql-python,virtualenv
products,django
urllib2,urllib2
key:value,django-templates
__init__,tkinter
string,simplejson
subprocess.popen,qt
python,command-line
python manage.py runserver,remote-debugging
models.py,django-queryset
test.py,raspberry-pi
python manage.py shell,django-models
pandas,graph-theory
sklearn,scikit-learn
test.txt,awk
datetime,python-dateutil
__init__.py,versioning
locals(),namespaces
isinstance,oop
django,django-admin
subprocess,subprocess
python,amazon-s3
globals(),global-variables
datetime,python-datetime
setup.py,module
__init__,gtk3
matplotlib,unicode
setup.py,setuptools
function,database-design
python,pysftp
globals(),module
os.system,wait
numpy.ndarray,opencv
django,django
ctrl + c,stream
# -*- coding: utf-8 -*-,unicode
subprocess,bash
urllib2,urllib2
subprocess,bash
models.py,django
projects,virtualenv
&lt;p&gt;,xpath
&lt;new article&gt;take a look at what i found.&lt,function
subprocess,communication
defaultdict(list),sum
main(),iterator
subprocess,pandoc
django,django-1.7
requests,post
&lt;title&gt;,elementtree
tkinter,tk
random.choice,pyscripter
requests,urllib2
json.dumps,pandas
django,celery
ctypes,header
subprocess.popen,popen
for loop,iteration
__init__,callable
python2.7,unit-testing
setup.py,setuptools
__init__,metaprogramming
mod_wsgi,deployment
python,iteration
pd.merge,pandas
py2exe,importerror
__init__.py,import
pandas,pandas
__init__,oop
result,sqlalchemy
__init__.py,mocking
valueerror: too many values to unpack (expected 2),pickle
request.post,django-views
"[1, 2, 3, 4]",iteration
subprocess.popen,operating-system
indexerror: list index out of range,if-statement
__init__,init
python setup.py install,face-recognition
python,header-files
mod_wsgi,mod-wsgi
django,django-models
valueerror,try-catch
indexerror: list index out of range,initialization
dataframe,pandas
numpy.ndarray,numpy
request.post,form-data
typeerror,flask-restful
raw_input,function
sorted(),numpy
dataframe,pyspark
import mysqldb,tomcat6
setup.py,pygraphviz
pandas,pandas
tkinter,dictionary
__init__.py,name-collision
import numpy as np,pyinstaller
urllib,selenium-webdriver
__init__.py,authentication
subprocess.popen,ipython-parallel
import random,import
urllib2,beautifulsoup
datetime,for-loop
python,jpype
file1.py,matplotlib
nameerror,dialog
datetime,timezone
sys.stdout,sys
requests,python-requests
isinstance,overwrite
views.py,flask
django,css
__getitem__,pyspark
fraction,eval
python,py2exe
main(),config
datetime,tex
pandas,pandas
__init__,python-unittest
"if __name__ == ""__main__"":",multiprocessing
python3,py2app
template,flask
columnspan,tkinter
python,server
test.py,service
python,if-statement
string,list-comprehension
xml.dom.minidom,lxml
python setup.py install,install
python,image-processing
datetime,python-datetime
tkinter,tkinter
list(),scope
subprocess.popen,out-of-memory
__init__,class
pickle,pickle
__init__.py,module
sklearn,machine-learning
views.py,import
lambda,lambda
"['a','b','c']",tuples
configparser,configparser
urllib2,web-crawler
lambda,tkinter
pip install,compiler-errors
sqlalchemy,templates
runserver,nginx
global,global-variables
"[1, 2, 3]",encryption
typeerror: 'unicode' object is not callable,python-requests
__init__.py,nonetype
python setup.py install,scikit-learn
datetime,numpy
python 2.7,posix
&lt;ul&gt;,django
__getitem__,slice
abcdef,concatenation
dataframe,dataframe
apache,flask
for loop,list-comprehension
pandas.dataframe,scikit-learn
django,apache
urllib,tar
annotate,model
position,http
'hello',filter
os.system(),process
main(),initialization
views.py,sqlalchemy
function,self
ifconfig,udp
sklearn,scikit-learn
dictionary,dictionary
python setup.py install,64bit
keyerror,download
"[1,2,3]",typeerror
requests,network-programming
subprocess.popen,subprocess
&lt;a&gt;,parsing
conf.py,python-sphinx
python,path
subprocess,pygtk
py2exe,py2exe
option,django-models
models.py,attributes
python setup.py install,anaconda
&lt;p&gt;,css
dictionary,dictionary
{{ form }},forms
setup.py,distutils
__init__,flask-sqlalchemy
__init__.py,aapt
main(),scope
lambda,sorting
py2exe,py2exe
__init__.py,pycharm
return,return
django,django
employee,django-models
models.py,authentication
django,django-models
python,microsoft-cognitive
python,bash
__init__.py,import
__gt__,built-in
stopiteration,file-handling
subprocess.popen,scilab
nameerror,error-handling
string,stringio
python setup.py install,pysdl2
subprocess.call,dictionary
0 1 23 4 56 7 8,command-line-arguments
python,ipython
ctypes,dll
views.py,django-views
&lt;br&gt;,scrapy
yield,generator
"if __name__ == ""__main__"":",namespaces
super(),super
*,parameter-passing
self,self
[],list
python setup.py install,pypi
a,integer
'a',count
a,rename
self,methods
map(),list-comprehension
date,date
str,dictionary
__init__,class-design
urllib,urllib
*,argument-passing
sys.stdout,buffered
dictionary,max
random.shuffle,random
super(),super
list,types
setup.py,setup.py
time.sleep(),time
==,equivalence
u,rawstring
models.py,model-view-controller
TRUE,matlab
ctypes,ctypes
time.strptime,iso8601
__init__,methods
[],literals
json.dump,load
pip,github
l,list-comprehension
yield,generator
string.find(),string
os.system(),operating-system
models.py,django-forms
requests,python-requests
del,del
datetime,weekday
list,comparison
pip install numpy,scipy
TRUE,inline
requests,python-requests
pandas,join
@,operators
flask,static-files
temp,temporary-directory
pip,ipython
__getitem__,dictionary
hello world,replace
collections.defaultdict,setdefault
pickle,settings
*,splat
import numpy as np,matplotlib
map,pandas
.py,abstract-syntax-tree
x,object
none,performance
len(),collections
popen(),popen
collections.defaultdict,nested
pip,setuptools
super(),super
x,microbenchmark
for,variable-assignment
print,logging
for,numpy
a,dictionary
sys.stdout,terminal
__init__.py,package
numpy,performance
models.py,django-models
python setup.py install,pip
n,numpy
lxml,easy-install
numpy,scikits
# -*- coding: utf-8 -*-,utf-8
list,python-internals
zip(),zip
subprocess.check_output(),subprocess
__init__.py,initialization
os.system(),subprocess
3,date
sorted(),lambda
pip install,pip
if,dictionary
set,conventions
os.system,pdfminer
# -*- coding: utf-8 -*-,text
+,anti-patterns
a,python-import
s1,series
import numpy as np,ipython
set,set
len,memory-footprint
numpy,magic-methods
dict,dictionary
none,python-datamodel
dict,yaml
"[1,2,3]",numpy
FALSE,methods
math,standard-library
TRUE,numpy
str,performance
if,if-statement
value,list
pip install,pip
subprocess.popen,logging
data,dataframe
python manage.py shell,interpreter
.txt,nltk
yield,streaming
len(),time-complexity
if,performance
numpy,matrix
func,multiprocessing
requests,python-requests
%,operators
python setup.py install,pip
__init__.py,module
a,twisted
xml.dom.minidom,json
name,forms
range,range
pip,cygwin
sum,types
del,mutable
python,ssh
print,syntax
__init__,inheritance
matplotlib,plot
print,formatting
__str__,serialization
none,if-statement
lxml,pip
lxml,pip
hh:mm:ss,tkinter
dataframe,indexing
a,django-queryset
in,dataframe
post,amazon-web-services
def,lambda
__init__,init
=,pep8
0,code-golf
valueerror,numpy
d,instantiation
any(),callback
subprocess.popen,process
configparser,ini
n,slice
for,loops
print,compatibility
&lt;a&gt;,beautifulsoup
multiprocessing.pool,multiprocessing
__str__,object
__init__,constructor
dict,dictionary
a,database-design
set,sortedmap
flask,sqlalchemy
map,pydev
exec,exec
__init__,constructor
subprocess,interpreter
x,algorithm
__init__.py,module
for,contains
t,attributes
dict,subclass
dataframe,pandas
python setup.py install,pycrypto
s,list
__init__,attributes
models.py,django-models
global,compiler-construction
sqlalchemy,sqlalchemy
0,parsing
setup.py,setup.py
set(),set
x,random
pandas,pip
random.shuffle,shuffle
apt-get install,numpy
numpy,ctypes
for,nested-loops
datetime,time
urllib2,urllib2
py2exe,linux
python,validation
__init__,unit-testing
input(),sublimetext2
next(),iterator
sqlalchemy,timeout
+,polymorphism
l,arrays
datetime,datetime
pandas.dataframe,row
numpy,scipy
int,subclass
matplotlib,plot
ctrl+c,ipython-notebook
super(),superclass
r,r
subprocess,subprocess
pip,proxy
numpy,scipy
__init__,methods
|,bitwise-operators
__init__.py,namespaces
python,markup
a,inheritance
numpy,numpy
in,operator-precedence
if,if-statement
setup.py,cython
setup.py,setup.py
raw_input,input
dataframe,pandas
python manage.py runserver,gunicorn
subprocess,subprocess
matplotlib,matplotlib
next(),generator-expression
csv,csv
pip,pip
numpy,blas
zipfile,zip
for,parsing
datetime,string-formatting
r,escaping
__init__,docstring
a,multidimensional-array
pip,setuptools
r,scipy
__init__.py,coverage.py
__init__.py,import
open(),io
## x1 x2##0 206 214##1 226 234##2 245 253##3 265 2,dataframe
pandas.dataframe,pandas
id,cpython
post,django-models
views.py,loops
dir(),interactive
int,int
os.system(),posix
x,random
setup.py,pygame
iter,iteration
dict,associative-array
if,exception-handling
setup.py,distutils
lxml,ubuntu
sum,sum
webbrowser,google-analytics
string,algorithm
datetime,timezone
open(),truncate
runserver,static-files
1,lambda
ctypes,octave
for,translate
yield,recursion
list.sort(),list
datetime.datetime.now(),locale
eval,eval
lambda,list-comprehension
models.py,unit-testing
random.shuffle,random
key,sorting
numpy,installation
django,migration
\n,newline
id,model
d,defaultdict
setup.py,make
c,linker
sqlalchemy,django
k,optimization
xml.dom.minidom,security
pip,pip
datetime,timezone
"[1, 2, 3]",formatting
int,defaultdict
pip,pip
matplotlib,plot
setup.py,ssl
id,primary-key
or,lisp
__init__,initialization
url,malformedurlexception
python,integration
r,pandas
c,python-import
global,side-effects
ctypes,ctypes
none,mutable
sum,numpy
range,number-sequence
import module,ipython
subprocess,subprocess
runserver,virtualenv
numpy,numpy
setup.py,setuptools
a,string-concatenation
.py,runtime
file1.py,variable-variables
"[1, 2, 3]",numpy
list,subclass
open(),filenames
raw_input(),language-features
text,tkinter
urllib2,urllib2
csv,stream
pip,beautifulsoup
u,unicode
typeerror: cannot concatenate 'str' and 'nonetype',optparse
py2exe,executable
python manage.py runserver,django
none,zip
raise,exception-handling
.py,debugging
pip,pip
0,boolean
raw_input(),command-prompt
float,language-history
r,statistics
numpy,numpy
ssh,matplotlib
django-admin,django-admin
a,jinja2
f,algorithm
n,scipy
setup.py,pypi
requests,python-requests
x,pyspark
super,multiple-inheritance
sys.argv,argv
@property,monkeypatching
d1,recursion
ctypes,ctypes
id,na
matplotlib,plot
lxml,html-parsing
__mul__,built-in
__init__,inheritance
pip install mysql-python,virtualenv
__init__,inheritance
l,slice
%,string-formatting
id,dynamic
list,frequency
__init__.py,package
data.txt,numpy
file.write(),file-io
pickle,serialization
c++,node.js
importlib,python-module
numpy,numpy
dataframe,dataframe
list.sort(),sorting
__eq__,code-review
urllib2,urllib2
dict,set
string,python-datetime
matplotlib,latex
numpy,numpy
ctrl+c,pycharm
# -*- coding: utf-8 -*-,encoding
raw_input(),input
a,struct
__init__,super
float,decimal
a,syntax
models.py,django-apps
subprocess.popen,flask
pip,pip
python setup.py install,setuptools
__init__,instance-variables
dict,dictionary
dataframe,numpy
pip,pip
python manage.py shell,shell
python,multiprocessing
pip,pip
raise,nested
matplotlib,matplotlib
re,types
flask,global
matplotlib,data-visualization
.py,python-import
dataframe,dataframe
print,self-reference
zipfile,zip
write,file
url,django-urls
w,winapi
none,pandas
__init__,constructor
tags,django-taggit
list,list
pickle,pickle
pip,anaconda
ctypes,gtk
dataframe,pandas
python setup.py install,ubuntu-12.04
__getitem__,optparse
python setup.py install,packages
qs,indexing
np,scipy
print,ipython-notebook
employee,django-admin
map,list
dataframe,pandas
setup.py,packages
list,iterator
a,string
x,numpy
list,list
pandas,numpy
stopiteration,with-statement
raw_input(),math
dict,import
dataframe,dataframe
x,object
file,subclass
selenium,selenium-webdriver
mod_wsgi,mod-wsgi
index.html,templates
none,templates
print,command-line
dict,subclass
a,syntactic-sugar
print,osx
matplotlib,subplot
models.py,api
set,set
print,printing
subprocess.check_output(),subprocess
n,random
x,scipy
view,pandas
pickle,numpy
a,string
class,composition
urllib,http
none,character-encoding
ctypes,ctypes
a,numpy
list,itertools
random,seed
name,forms
pandas.dataframe,pandas
set(),generator
dataframe,pandas
set,thread-safety
datetime,timestamp
foo(),decorator
pip,packaging
d1,dictionary
range,running-total
setup.py,easy-install
int,numpy
set,set
if,recipe
field,methods
matplotlib,matplotlib
raise,cython
len,ansi-colors
.txt,syntax-highlighting
a,topological-sort
__init__.py,python-sphinx
datetime,iso8601
pandas,pandas
sqlalchemy,module
setup.py,distutils
python,http-headers
global,scope
tkinter.text,tkinter
python,cjk
file.read(),process
list,variable-assignment
lambda,types
collections.defaultdict,lambda
setup.py,distutils
a,search
b,inheritance
setup.py,distutils
0,big-o
datetime,pyqt
dict,sql
abs,numpy
1,max
map,pool
__init__,pyyaml
multiprocessing.pool,gevent
dict,dictionary
httplib.httpconnection,web-crawler
subprocess,logging
==,python-internals
__init__,call
count,numpy
none,django
syntaxerror: invalid syntax,syntax-error
int(),int
list(),list
in,containers
stdin,pyunit
a,string
list,subclass
foo(),alias
numpy,dot-product
super,self
list,list
if,list-comprehension
list,functional-programming
python setup.py install,installation
open(),temporary-files
subprocess.popen,subprocess
python,msysgit
\n,file-io
python,pandas
python manage.py runserver,eclipse
a,numpy
itertools.product,itertools
matplotlib,networkx
super(),super
pip,easy-install
isinstance,duck-typing
runserver,django-1.9
__init__.py,package
python,virtualenv
post,http
m,hierarchical-clustering
x,scikit-learn
for,label
mysqldb,mysql-python
set(),set
multiprocessing.pool,multiprocessing
str,instance
str,string
__init__.py,package
subprocess.popen,debugging
pandas.dataframe,dataframe
mod_wsgi,apache
ctypes,ctypes
x,descriptor
f,16-bit
urllib2,urllib
yield,yield
yield,yield
layout.html,django-templates
dataframe,pandas
==,hash-collision
pickle,shelve
python -m simplehttpserver,terminal
open(),file
pip,setuptools
import mysqldb,osx
w,numpy
os.system(),unit-testing
input,django-testing
user,django-models
datetime.datetime.now(),xsd
r,statistics
python,osx
__init__,handler
__init__.py,pycharm
1,lambda
b,class
hello world,stored-procedures
__init__,arguments
m,numpy
a,linear-algebra
__init__,django-models
lxml,base64
s,numpy
numpy,numpy
x,class
models.py,orm
multiprocessing.pool,multiprocessing
csv,csv
.py,python.net
defaultdict,large-data
raw_input(),curses
==,equality
f,dictionary
ast,literals
name,qtablewidget
sys.argv,gunicorn
setup.py,distutils
import mysqldb,mysql
a,override
numpy,numpy
0,generator
for,sage
TRUE,app-engine-ndb
sudo,fabric
__mul__,operator-overloading
setup.py,distutils
python,linux
a,random
__init__,interactive
ctypes,memory-leaks
int,memory-management
&lt;br&gt;,lxml.html
dict,universal-hashing
pandas,pandas
requests,import
if,rgb
int,ctypes
__str__,conventions
random,cpython
subprocess,subprocess
u,numpy
line1line2line3,byte
n,numpy-broadcasting
numpy,memory-management
"(r'^login/?$','django.contrib.auth.views.login',{'",oop
a,architecture
pip,pip
pil,opencv
a,numpy
limit,rate-limiting
collections.defaultdict,arguments
m,override
matplotlib,plot
.py,unicode
python setup.py install,mongodb
pip,pip
n,multiprocess
test,py.test
x,class-design
a,matrix
matplotlib,matplotlib
decimal,rounding-error
result,image-processing
del,del
webbrowser,browser
1,set
random,benfords-law
matplotlib,ipython
none,string
datetime,datetime
pandas,d3.js
x,filter
a,rotation
limit,django
site-packages,distribute
sudo,root
create,django-rest-framework
models.py,version-compatibility
numpy,class
__init__.py,flask
pandas.dataframe,python-multiprocessing
subprocess,subprocess
python manage.py runserver,django-1.5
set(),hash
subprocess,subprocess
f,partial
1,dictionary
tkinter,osx-lion
__init__,gtk
subprocess,subprocess
n,polynomial-math
subprocess,subprocess
configparser,configuration-files
urllib2,bandwidth-throttling
test.py,shell
print,logging
int,string-formatting
python,bash
df1,pandas
numpy,initialization
a,ieee-754
matplotlib,matplotlib
list,list-comprehension
test.py,windows-store-apps
ctypes,imagemagick
sudo,libusb
qlistwidget,pyqt
__init__,iterable-unpacking
test.py,nlp
yield,return
float,floating-point
dataframe,dataframe
self,keyword
setup.py,fortran
list(),constructor
collections.defaultdict,subclassing
python,time
re,unicode
matplotlib,matplotlib
d,scientific-notation
__init__.py,module
in,algorithm
pandas,scipy
.py,file-extension
dict,flask
abcdef,string
setup.py,python-import
float,floating-point
dict,key
lambda,lambda
__init__.py,module
0,sentinel
id,enumerable
python2.7,packaging
n,numpy
__add__,numpy
zip(),dictionary
__init__.py,shadowing
# -*- coding: utf-8 -*-,comments
pandas,pandas
configparser,configparser
open(),linux
subprocess,subprocess
a,pandas
len(),iterator
s,set
numpy,numpy
__init__.py,flask
x,types
post,app-engine-ndb
matplotlib,matplotlib
ctrl+c,keyboardinterrupt
len,unicode
return,readline
keyerror,format
csv,csv
data,numpy
item,membership
keys,pandas
python,npm
datetime,timestamp
string,python-sphinx
__getitem__,getattr
a,numpy
map,zip
test,join
list,containment
python,bash
a,string-formatting
m,floating-point
flask,flask-sqlalchemy
pprint,pprint
python,numpy
django-admin,shell
__getitem__,slice
__getitem__,benchmarking
test.txt,count
data,django-admin
float,unicode
python,mongodb
python manage.py runserver,django
globals(),dictionary
subprocess.call,virtualenv
setup.py,dependencies
yield,generator
in,string
__str__,class
text,text
board,sum
.so,cython
n,rsa
configparser,configparser
.txt,string
x,scope
os.system(),command-line
a,printing
__init__.py,pyramid
pip,osx
pip,pip
&lt;title&gt;,utf-8
kwargs,immutability
.py,pyc
+,concatenation
dict,properties
__init__.py,numpy
view,haml
numpy,numpy
sqlalchemy,sqlalchemy
df1,rows
print,sqlalchemy
subprocess,subprocess
map,sum
list,set
m,collections
urllib2,keep-alive
setup.py,fortran
*,parameter-passing
subprocess.popen,stdout
{},movement
urllib2,http
input,ipython
python manage.py shell,ipython
f,lisp
numpy,numpy
matplotlib,matplotlib
user,sqlalchemy
for,file-io
t,numpy
exec,exec
list,list
x,vectorization
len(),optimization
text,html-generation
index,lookup
pil,png
none,singleton
models.py,django-models
hello world,io-redirection
+,class
n,scipy
pandas.dataframe,rounding
python setup.py install,anaconda
l,filter
date,group-by
a,metaclass
v,numpy
__str__,dynamic
dfs,scipy
__init__.py,naming-conventions
py2exe,compiler-construction
data,pandas
FALSE,django-templates
3,unix
setup.py,pypi
import random,import
syntaxerror,traceback
user,google-app-engine
numpy,numpy
isinstance,pygame
yield,benchmarking
re,unicode
datetime,sorting
x,floating-point
dataframe,missing-data
selenium,pandas
numpy,numpy
print,printing
numpy,numpy
matplotlib,matplotlib
[,string
.py,persistence
dataframe,pandas
data,unicode
pandas.dataframe,pandas
TRUE,numpy
pip,sdist
prime,indexing
sync,asynchronous
flask,flask
print,ipython
a,numpy
n,performance
s,sequence
set(),floating-point
list,callback
re,caching
__init__,decorator
numpy,greatest-common-divisor
int,sorting
site-packages,nomenclature
python,build
pip,selenium-webdriver
__add__,operators
__init__.py,pyramid
__init__.py,exception-handling
error: python.h: no such file or directory,centos
python,development-environment
pickle,namespaces
os.path.getsize(),file-io
setup.py,command-line
dict,decorator
numpy,numpy
c,hdf5
numpy,numpy
raw_input(),linux
kwargs,django-signals
models.py,serialization
subprocess.call,shell
range,range
map(),mapreduce
selenium,selenium
dataframe,pandas
python manage.py shell,shell
m,numpy
print,redirect
pandas.dataframe,hdf5
none,numpy
sys.argv,sys
ubuntu,file-io
f,bit-manipulation
lambda,language-lawyer
ctypes,com
__dict__,dictionary
c,wxpython
view,pandas
s,bytestring
setup.py,freeze
subprocess,apache
str(),unicode
pip,virtualenv
a,indexing
collections.defaultdict,containers
x,operating-system
os.system(),exit-code
raw_input,limit
key,sorting
len,optimization
post,twitter
mod_python,mod-python
matplotlib,confidence-interval
re,web-scraping
keyerror,keyerror
numpy,random
mysqldb,real-time
requests,web
class,unit-testing
b,numpy-broadcasting
super(),inheritance
template,numpy
l,iteration
x,synchronize
python,python-idle
nameerror,exec
numpy,portability
+,parameters
datetime,datetime-format
m,coding-style
f,introspection
views.py,google-app-engine
datetime.datetime.now(),datetime
a,reference
pandas,dataframe
dataframe,filtering
a,filtering
none,python-internals
my_list,grouping
subprocess.popen,environment-variables
request.post,forms
c,multiple-inheritance
test.py,module
python 2.7,atomicity
pip install numpy,visual-c++
text,text-widget
list.sort(),sorting
print,file
string,nonetype
urllib2,character-encoding
item,sqlalchemy
.py,pyc
exec,exec
pandas.dataframe,dataframe
view,copy
subprocess.popen,subprocess
n,numpy
open(),file-io
for,dictionary
typeerror,complex-numbers
in,google-app-engine
list,inheritance
__eq__,heisenbug
requests,httprequest
view,jinja2
db.session.commit(),flask
1,base64
re,string
pandas.dataframe,pandas
a,matrix
django,pip
requests,networking
exec,py2to3
n x d,matrix
subprocess.popen,subprocess
subprocess,subprocess
set(),csv
random,computation
0,code-review
py2exe,eoferror
a,plot
models.py,code-formatting
k,combinations
subprocess,subprocess
in,list-comprehension
numpy,numpy
x,null
"lloyd = { ""name"": ""lloyd"", ""homework"": [90.0, 97.0",dictionary
pixbuf,gtk3
numpy,packages
dictionary,dictionary
a,permutation
csv,mapreduce
pandas.dataframe,memory-leaks
a,indexing
__mul__,operator-keyword
int,decimal
numpy,memory-management
&lt;input&gt;,beautifulsoup
numpy.ndarray,algorithm
global,global-variables
__init__,django-models
numpy,numpy
__eq__,collections
x,nose
setup.py,cx-freeze
query,memory-leaks
list,idioms
strings,data-structures
multiprocessing.pool,threadpool
requests,install
map,iteration
string,unicode
.py,python-import
requests,ssl
1000,max
django,amazon-s3
python,uml
subprocess,subprocess
+,programming-languages
input,python-mock
pandas,pandas
dataframe,pandas
s,set
debug=true,unix
pandas,timedelta
sqlalchemy,module
id,selenium
k,combinations
pickle,shelve
subprocess,subprocess
id,properties
x,math
pandas.dataframe,pandas
test,windows
numpy,numpy
b,escaping
re,replace
or,boolean-expression
dict,idioms
time.sleep(),selenium-webdriver
setup.py,packaging
a,django-models
os.system,domainkeys
django,settings
date,dataframe
+,operators
sqlalchemy,pandas
datetime.datetime.now(),py.test
re,string
py2exe,py2exe
defaultdict(list),serialization
datetime.datetime.now(),import
user,django-models
numpy,numpy
indentationerror,copy-paste
list,file
dataframe,binning
python -m simplehttpserver,streaming
&lt;br&gt;,whitespace
mod_wsgi,flask
__dict__,attributes
result,memcached
str,inheritance
main(),google-app-engine
d,django
numpy,numpy
==,identity
n,linear-algebra
requests,youtube-api
pip,cairo
a,numpy
datetime,time
matplotlib,size
decimal,decimal
python2.7,character-encoding
matplotlib,upgrade
__init__,scope
c,class
django,pycharm
a,variables
float,int
a,scipy
os.system,command-line
python,plot
decimal,string-formatting
os.system(),working-directory
for,nested-loops
re.findall,findall
views.py,csrf
c,input
syntaxerror,nose
pprint,pprint
pandas,numpy
a,data-structures
text,tkinter
python manage.py shell,shell
user,sqlalchemy
subprocess,subprocess
x,interpolation
setup.py,setup.py
input(),testing
py2exe,py2exe
int,list
x,numpy
__init__.py,embed
a,django-admin
python,elasticsearch
\b,character
ctrl+c,subprocess
subprocess,popen
__init__,iterator
dict,pandas
python,anaconda
re,search
python,registry
lxml,search
user,django-models
include(),security
subprocess.popen,subprocess
del,garbage-collection
setup.py,dependencies
sales,pandas
matplotlib,matplotlib
pandas.dataframe,numpy
input,distutils
x,optimization
input,selenium-webdriver
if,if-statement
t,operators
while,pandas
datetime,subclass
none,reverse
u,matplotlib
x,scipy
id,dereference
user,flask-sqlalchemy
re,regex-greedy
n,loops
ctypes,performance
collection,pyramid
set,set
zip(),tuples
while,linux
random,random
dict,dictionary
r,perl
numpy,numpy
python setup.py install,egg
match,optimization
json.dump,utf-8
random.shuffle,optional-parameters
pandas.dataframe,pandas
python,htop
ast,abstract-syntax-tree
a,numpy
pandas,datetime
pip,package-managers
raw_input,user-input
runserver,postgresql
python manage.py runserver,manage.py
os.system,subprocess
r,numpy
__init__,decorator
keyerror,keyerror
fraction,fractions
dataframe,plot
urllib2,httpwebrequest
float,numerical-methods
numpy,pandas
d,pandas
models.py,merge
django,django-models
requests,base64
next(),tree
none,cpython
site-packages,virtualenv
if,django-templates
r,multidimensional-array
data,merge
data,numpy
"[1, 2, 3, 4]",list
hello,while-loop
l,split
__init__,parameters
isinstance,decorator
numpy,performance
url,url-parameters
subprocess.popen,stdout
abcdef,algorithm
apt-get install,subprocess
datetime,epoch
float,operator-overloading
while,while-loop
n,random
mysqldb,mysql-python
x,slots
text,tkinter
multiprocessing.pool,contextmanager
pip,pip
input(),atom-editor
re.sub,backreference
k,itertools
self,self
numpy,numpy
importlib,dependency-management
pandas.dataframe,pandas
f,pickle
sys.stdout,stdout
a,lexical-scope
sqlalchemy,sqlalchemy
pandas,latex
r,numpy
&lt;p&gt;,restructuredtext
out,algorithm
TRUE,recursion
csv,csv
time.sleep(),delay
a,pandas
m,matrix
python setup.py install,beautifulsoup
subprocess,subprocess
__init__.py,boost-python
a,slice
none,nonetype
keyerror,keyerror
numpy.ndarray,scipy
view,path
__init__,descriptor
print,multithreading
dict,dictionary
pickle,large-files
__init__.py,dreamhost
setup.py,egg
in,mysql
string,dictionary
pip,ply
python,cluster-computing
data,statistics
yield,yield
&lt;a&gt;,parsing
file,file
a,random
a,numpy
setup.py,setuptools
python,shell
datetime,date
sys.argv,glob
defaultdict,memory-leaks
n,sorting
numpy,fortran
s,string
pyplot,numpy
s,immutability
__str__,gtktreeview
python,freebsd
int,numpy
python,decorator
numpy,numpy
python,.bash-profile
python,google-chrome
subprocess,popen
&lt;p&gt;,web-scraping
\n,http-streaming
pandas,pandas
n,optimization
n,scipy
pandas,pandas
requests,http
__init__.py,ubuntu-12.04
a-za-z0-9,alphanumeric
a,pycharm
hello world,web-frameworks
l,ipython
1,celery-task
int,postgresql
k,recursion
python manage.py runserver,django
__init__,constructor
numpy,scipy
numpy,numpy
a,performance
pandas,pandas
x,parallel-processing
urllib,urllib
__init__,pylint
numpy,matrix
ctrl+c,interrupt
a,constructor
n,list
str(),csv
__init__.py,chameleon
requests,python-requests
__dict__,django-models
defaultdict,defaultdict
n,finance
or,swift
TRUE,turtle-graphics
lxml,svg
git push heroku master,heroku
none,nonetype
x,equality
a,while-loop
test.txt,file-io
mod_wsgi,mod-wsgi
base64,base64
requests,python-requests
none,openerp-7
a=1,numpy
dataframe,datetime
dataframe,pandas
pandas,pandas
yield,enumerate
pandas.dataframe,dataframe
file1,unicode
n,binary
numpy,sorting
0,generator
for,map
dict,data-structures
mysqldb,django
readlines(),list
raw_input(),eof
pip,pip
datetime,datetime
set,set
c++,regex
list(),pandas
urllib,urllib2
x,vector
lxml,parsing
subprocess.call,multiprocessing
setup.py,distutils
in,peewee
\n,indexing
python,lambda
x,plot
numpy,matrix
[],generator-expression
a,numpy
*,path
text,tkinter
x,derivative
numpy,numpy
python,zeromq
int,bit-manipulation
python,pyelasticsearch
numpy,numpy
matplotlib,plot
print,stderr
__init__,optional-parameters
if,performance
int,fractions
re.findall(),multiple-matches
__init__.py,canonical-name
setup.py,setuptools
0,numpy
a,indexing
__init__.py,namespace-package
__init__.py,mod-wsgi
n,recursion
foo(),introspection
pd.dataframe,dataframe
if,if-statement
"if __name__ == ""__main__"":",executable
set,set
x,del
json.loads,django
a,object
n,performance
raw_input,carriage-return
py2exe,win32com
import numpy as np,numpy
super(),superclass
pandas,pandas
typeerror,subclass
setup.py,setuptools
[],twitter
lambda,lambda
.txt,text
xml.dom.minidom,file-io
python,tkinter
0,csv
text,fonts
__str__,metaprogramming
__init__,code-organization
__str__,methods
a,web-scraping
numpy,machine-learning
post,forms
python setup.py install,install
subprocess,stdout
__init__,object
*,numpy
list(),list
__init__,methods
print,keyword
pip install,scrapy
.txt,file-io
s1,set
name,pyramid
r,pandas
mm/dd/yyyy,date
pandas,pandas
none,nonetype
debug=true,postgresql
setup.py,nose
.py,buildout
# -*- coding: utf-8 -*-,unicode
collection,pymongo
t,numpy
numpy,scipy
list,int
__getitem__,default
s,slice
python,linux
open(),file-io
sqlalchemy,django
__init__.py,organization
a,optimization
django,heroku
id,django-models
int,integer-overflow
main(),twisted.web
dict,urlencode
items,models
tkinter,events
__init__.py,filter
__name__,module
__init__,self
pip,pypi
class,class
from numpy import *,floating-point
function,operator-overloading
__init__.py,flask
[::-1],data-structures
l,pretty-print
if,comments
x,ipython-notebook
__init__.py,flask-sqlalchemy
**,matrix
__init__,initialization
x,numpy
numpy,multiprocessing
a,matrix
tkinter,ttk
index,order
numpy,numpy
configparser,configuration
__init__,coroutine
pandas,nan
pandas.dataframe,numpy
f(x),scipy
map,iterator
name,django-models
eval,closures
runserver,git
multiprocessing.pool,pool
c,declaration
pandas,database-normalization
dict,primary-key
c++,serialization
len(),widget
decimal,decimal
decimal,decimal
TRUE,list-comprehension
__gt__,dictionary
matplotlib,matplotlib
temp.py,doxygen
setup.py,cython
test,console
conf.py,python-sphinx
#NAME?,pip
"&lt;meta http-equiv=""content-type"" content=""text/h",unicode
curses,pipe
k,while-loop
range,range
pip install numpy,numpy
in,set
in,rdflib
map,pycharm
matplotlib,legend
datetime.datetime.now(),pyyaml
a,refactoring
n,permutation
# -*- coding: utf-8 -*-,utf-8
df1,dataframe
pip install,command-line
views.py,heroku
index,replace
list,time-complexity
test.txt,combinations
dataframe,merge
stdin,input
crontab,git
subprocess,exception
n,dictionary
python manage.py runserver,foreman
print,admin
a,numpy
post,python-requests
__str__,coercion
x,random
python manage.py runserver,amazon-web-services
views.py,django
id,class-method
random,precision
numpy,numpy
break,exception
id,sqlite3
user,data-structures
for,linear-algebra
subprocess,shell
__init__,metaprogramming
dict,dictionary
n,matlab
__getitem__,setattr
"l = [1,2,3,4]",combinations
self,self
c,stderr
a,pandas
for,web-crawler
__dict__,metaprogramming
defaultdict,python-collections
c,scipy
random,random
setup.py,py.test
shutil.copytree,file
python setup.py install,setuptools
sklearn,regression
requests,django
python,matrix
set,set
requests,http
dict,dictionary
__init__,multiple-inheritance
id,built-in
raw_input(),variables
pip,virtualenv
user,django-admin
dataframe,numpy
__init__.py,sudo
set,set
correct,global-variables
x,signal-processing
csv,csv
views.py,model-view-controller
multiprocessing.pool,tarfile
string,keyword-argument
views.py,django-views
subprocess.popen,ipython
b,scipy
nameerror,raise
len,multibyte
re.findall,stream
subprocess.popen,pipe
map(),map
pip,pip
yield,yield
python,inline
python,qt-designer
a,readability
dict,dictionary
__eq__,count
exec,exec
f,naming-conventions
n,numpy
text,polymorphism
a,sorting
dataframe,pandas
x,conditional
numpy,performance
numpy,numpy
main(),flask
in,size
x,properties
n,math
t,daemon
__init__.py,fabric
map,lambda
shutil.copytree,shutil
datetime,python-import
test.txt,list
numpy,py2exe
set,subclassing
user,null
self,decorator
setup.py,pypi
dataframe,pyspark
syntaxerror: invalid syntax,with-statement
none,class-instance-variables
pandas,pandas
*,org-mode
python,mpi
matplotlib,pandas
django,django
n,regex-lookarounds
numpy,plot
x,list
attributeerror,duck-typing
int(),pydev
list,mean
os.system,subprocess
tkinter,fullscreen
__mul__,types
def,django-views
python,distributed
none,nonetype
numpy.fromfile,structured-array
data,openpyxl
x,indexing
locals(),debugging
numpy.ndarray,numpy
.py,command-line
while,t
subprocess,subprocess
result,mocking
dataframe,dataframe
pip,whois
dataframes,pandas
0,encryption
numpy,derivative
data,numpy
__init__,init
__init__.py,import
a,pandas
datetime,timezone
numpy,pandas
models.py,django-models
re,string
python,lambda
x,statistics
python,pylint
r,mpi
query,flask-sqlalchemy
len,packet
function,multiprocessing
pandas,pandas
include(),cron
dataframe,pandas
a,setuptools
&lt;br&gt;,chameleon
selenium,selenium-webdriver
setup.py,buildout
user,url-routing
12,netmask
a,numpy
round,numpy
float,floating-point
string,code-generation
for,numpy
dataframe,pandas
exec,python-exec
.zip,zipfile
__init__,typeerror
x,algebra
numpy,numpy
debug=true,memory-leaks
__init__,decorator
for,django
name,pandas
tkinter,tkinter
tkinter,glib
subprocess,pylons
"import numpy as npa = np.array([0, 10, 20])b = np.",for-loop
python.exe,execution
b,aggregate
sys.argv,character-encoding
python,wsgi
isinstance,list
getattr(),locals
collections.defaultdict,defaultdict
dict,wrapper
matplotlib,matplotlib
a,functional-programming
m,elements
c,nested
@property,setter
v,numpy
n,sorting
subprocess.popen,pipe
dir(),properties
py2exe,windows-installer
matplotlib,gtk
user,concurrency
value,pyqt
pil,opencv
a,scipy
tkinter,tkinter
pickle,pickle
re,sublimetext3
if..elif,dictionary
id,xml
ssh,ssh
a,pymc
webbrowser,python-webbrowser
matplotlib,x11
numpy,numpy
css,scrapy
tkinter,dialog
python,timeout
user,django-models
for,lambda
a,numpy
pandas,installation
d,probability
python 2.7,compilation
r,scatter-plot
attributeerror,distribution
a,oop
list,sorting
def,wtforms
map,dictionary
subprocess.popen,unix
%d,argparse
a,numpy
function,testing
python,32bit-64bit
pip,pip
xml.dom.minidom,ironpython
numpy,numpy
dataframe,pandas
python,machine-learning
python -m simplehttpserver,apache
a,merge
a,linear-algebra
x,scipy
dict,hash
re,lookbehind
"from sys import argvscript, first, second, third =",iterable-unpacking
pip install mysql-python,mysql-python
x,substring
math,import
test.py,code-analysis
@,decorator
itertools.product,arrays
a,vector
none,nonetype
# -*- coding: utf-8 -*-,suds
python2.7,mongodb
f,function
int,subclass
locals(),pyqt
eval,numpy
csv,reader
main(),import
datetime,pytz
d,numpy
defaultdict,dictionary
a,matrix-multiplication
subprocess,firefox
for,django-templates
__init__.py,initialization
a,bit-manipulation
setup.py,pip
matplotlib,latex
django,html5
r,ggplot2
pandas,dataframe
sys.stdout,posix
pip,setuptools
datetime,deserialization
id,matplotlib
os.system,process
x,pandas
in,string-search
for,iterable
x,for-loop
datetime,datetime
__dict__,subclass
k,numpy
x,pandas
for,matplotlib
matplotlib,plot
t,numpy
x,ctypes
matplotlib,heatmap
list(),list
__init__.py,namespaces
datetime,date
urllib2,urllib
ctypes,ctypes
__init__.py,folders
start_date,iteration
isinstance,typechecking
setup.py,package
dataframe,pandas
lambda,lazy-evaluation
__init__,immutability
datetime.datetime.now(),datetime
pip install,scipy
setup.py,dependencies
defaultdict,nested
__init__,superclass
__init__.py,python-import
__init__,python-c-api
django,virtualenvwrapper
getattr(),instantiation
datetime,timedelta
function,inheritance
__init__.py,package
models.py,django-models
pip install,osx-lion
__eq__,serialization
setup.py,cython
__init__.py,initialization
python.exe,easy-install
open(),py2to3
nameerror: global name 'x' is not defined,scope
file_1.txt,file
matplotlib,biopython
"(key, value)",configuration-files
sklearn,pandas
__init__,logging
pip install,anaconda
return,performance
json.dumps,parsing
python,centos
pip install,distribute
pandas,plot
python,easy-install
__init__,init
for loop,dictionary
__str__,object
python setup.py install,distutils
main(),sorting
requests,http-request
os.system,stdout
__name__,testing
matplotlib,scipy
python,pip
ctypes,ctypes
urllib2,urllib2
random,random
lambda,generator
pyplot,plot
python,virtualenv
__init__.py,code-coverage
popen(),subprocess
typeerror,namedtuple
typeerror,raise
pip install gunicorn,gunicorn
__init__,dictionary
stopiteration,generator-expression
python manage.py runserver,virtualenv
__init__,inheritance
__eq__,user-defined
__init__.py,module
__init__.py,import
locals(),local-variables
ctypes,benchmarking
"(key, value)",associative-array
datetime,datetime
open(),truncate
python,linker
django,django
subprocess,multiprocessing
nameerror: name 'c' is not defined,oop
matplotlib,tex
python setup.py install,ssl
python 2.7,list
python 2.7,if-statement
__init__,initialization
__init__.py,runtime
attributeerror,exception-handling
datetime.datetime.now(),unit-testing
sorted(),sorting
nameerror,nameerror
dataframe,slice
result,elementtree
__init__,automated-tests
requests,python-requests
multiprocessing.pool,data-structures
string,escaping
a_list,arguments
python setup.py install,virtualenv
__init__,inheritance
python,node.js
syntaxerror: invalid syntax,operators
dataframe,dataframe
python setup.py install,install
__add__,sum
subprocess.call,coverage.py
@property,decorator
&lt;a&gt;,lxml
subprocess.popen,ffmpeg
__init__,super
dataframes,pandas
decimal,decimal
__init__,init
setup.py,setuptools
__init__,instance-variables
lambda,numpy
dataframe,tsv
views.py,django-templates
python manage.py shell,pycharm
models.py,django-rest-framework
re.sub,stop-words
isinstance,types
matplotlib,data-visualization
python,download
multiprocessing.pool,sha256
__init__,constructor
os.system,csh
"[1,2,3,4,5,6,7,8]",grouping
sys.argv,command-line-arguments
import mysqldb,easy-install
__init__.py,python-import
setup.py,packages
main(),argument-passing
dataframe,pytables
python,virtualenv
pandas,numpy
ctypes,ipython
sys.argv,command-line
sys.stdout,osx
nameerror,model
pickle,pickle
os.system(),printing
"[1,2,3]",tuples
keyerror,wrapper
nameerror: name 'c' is not defined,profiler
subprocess,subprocess
"[1,2,3]",raw-input
python,seed
return,return
python,osx-snow-leopard
requests,urllib2
__init__.py,python-sphinx
dataframe,pandas
bytearray,floating-point
file.write(),process
global,decorator
lambda,lambda
pandas,conda
__init__.py,module
datetime,django-forms
multiprocessing.pool,pool
request.post,python-requests
tkinter,tkinter
stopiteration,generator
return,stopiteration
127.0.0.1,urllib2
list(),built-in
strings,functional-programming
python,msysgit
test.py,discover
itertools.product,itertools
urllib2,urllib2
'hello',popen
wizardview,django-models
python,virtualenv
__add__,int
setup.py,python-imaging-library
pprint,sympy
conf.py,documentation
python,invalidoperationexception
bytearray,byte
setup.py,setuptools
ctypes,ctypes
subprocess.popen,popen
__init__,immutability
127.0.0.1,webfaction
pickle,ram
time.sleep(),python-multithreading
__str__,magic-methods
open(),file
ctrl+c,bash
getattr(),getattr
setup.py,py.test
"[1,2,3]",integer
ctrl+c,signals
ctypes,x11
__add__,methods
views.py,validation
raw_input(),timeout
raw_input(),curses
subprocess.popen,ffmpeg
file.read(),binary
python,constructor
ctypes,qt4
FALSE,new-style-class
__mul__,operator-overloading
pickle,numpy
__init__,scrapy
attributeerror,python-module
__init__.py,package
python,ctypes
__str__,metaclass
import numpy as np,numpy
# -*- coding: utf-8 -*-,unicode
os.system,console
raw_input,tkinter
.vimrc,vim
python,queue
ctypes,linux
python manage.py runserver,osx
__getitem__,enums
__init__.py,web.py
pandas,pandas
syntaxerror,random
round(),decimal
qlistwidget,pyqt
decimal,floating-point
python setup.py install,distutils
re.unicode,unicode
"[1, 2, 3]",scipy
sys.argv,command-line-arguments
pandas,scipy
__init__.py,python-import
__init__,django-forms
__init__,immutability
__init__.py,python-import
matplotlib,plot
__mul__,numpy
random.choice,condition
setup.py,gtk
stopiteration,iterator
global,decorator
python3,bash
numpy.ndarray,numpy
subprocess,encoding
time.sleep(),reddit
__getitem__,slice
python setup.py install,egg
pandas.dataframe,multi-index
python manage.py runserver,settings
# -*- coding: utf-8 -*-,utf-8
setup.py,cx-freeze
attributeerror,inspection
typeerror,decorator
__init__.py,pyramid
&lt;p&gt;,utf-8
.vimrc,pylint
sqlalchemy,sqlalchemy
indexerror: list index out of range,exception
subprocess,subprocess
__getitem__,operator-keyword
python setup.py install,pycurl
pprint,parameter-passing
re.findall(),match
"typeerror: list indices must be integers, not str",for-loop
numpy.ndarray,ipython
result,mongodb
time.sleep(),multithreading
views.py,permissions
__init__,metaclass
decimal,decimal
django,scikit-learn
subprocess,subprocess
__init__.py,django-signals
__str__,dynamic
products,django
pandas.dataframe,pandas
typeerror,traceback
weight,dataframe
setup.py,packaging
test.py,decorator
datetime,timezone
dataframe,missing-data
ctrl+c,multiprocessing
abcdef,split
command,treeview
__eq__,comparison-operators
__init__.py,pydev
subprocess,openoffice.org
python,process
a_list,thread-safety
python,module
subprocess.popen,shell
[0-9]+,pandas
__add__,subclass
127.0.0.1,ip-address
matplotlib,matplotlib
syntaxerror,ipython-magic
lambda,language-lawyer
isinstance,dynamic
setup.py,freeze
subprocess.popen,apache
pandas,pandas
correct,anonymous-function
raw_input,interrupt
urllib,web-scraping
python setup.py install,setuptools
python setup.py install,importerror
typeerror,inheritance
python2.7,google-app-engine
python3,python-idle
sklearn,scikit-learn
__eq__,namedtuple
main(),make
dataframes,dataframe
__init__,init
open(),subprocess
__init__.py,python-import
__init__,super
urllib2,parsing
defaultdict,dictionary
sys.stdout,file
urllib,facebook-graph-api
tkinter,tkinter
urllib2,curl
mylist,subclassing
typeerror,int
db.session.commit(),flask
models.py,webapp2
__init__.py,packages
__init__.py,unicode
typeerror,private
python,jython
raw_input(),eoferror
dataframe,memory-leaks
while true,twisted
python,arguments
conf.py,python-sphinx
__init__,django-models
python,libraries
__eq__,collections
request.post,forms
dataframe,pandas
dataframe,pandas
re.findall,case-sensitive
python setup.py install,raspberry-pi
dataframe,timedelta
typeerror,immutability
itertools.product,combinations
stopiteration,yield
questions,django-admin
__dict__,attributes
dataframe,pandas
py2exe,exe
shutil.copytree,shutil
"[1, 2, 3, 4]",set
setup.py,setuptools
&lt;br&gt;,whitespace
git push heroku master,heroku
tkinter,methods
pandas,numpy
base64,email
raw_input,user-input
python setup.py install,installation
datetime,amazon-web-services
python3,docker
rand(),random
__init__,init
urllib,urllib
matplotlib,plot
subprocess,subprocess
pickle,pickle
subprocess,subprocess
python setup.py install,setup.py
"[1, 2, 3, 4]",list
"if __name__ == ""__main__"":",setuptools
__init__.py,optional
subprocess,subprocess
python,popen
views.py,methods
__init__.py,osx-lion
__init__,metaclass
locals(),debugging
__init__.py,prefix
datetime,subclass
__init__.py,module
dictreader,csv
pickle,msgpack
random.shuffle,optional-parameters
python,xlrd
__init__,repr
"if __name__ == ""__main__"":",package
__init__.py,import
datetime,datetime
subprocess.call,subprocess
__init__,decorator
pandas,pandas
127.0.0.1,namespaces
index.py,mod-wsgi
json.dumps,list
data[i],merge
products,permutation
subprocess,subprocess
__init__,restructuredtext
__init__,pyopencl
matplotlib,axes
itertools.product,list-comprehension
importlib,dependency-management
apache,mercurial
sys.stdout,stdout
dictreader,csv
command,tkinter
__init__.py,dreamhost
__init__,default-constructor
python,boto
super(),super
result,beautifulsoup
python,heroku
matplotlib,numpy
python,.bash-profile
webbrowser,google-chrome
__getitem__,generator
numpy.ndarray,units-of-measurement
combinations,itertools
random.choice,python-internals
typeerror: 'unicode' object is not callable,jinja2
python setup.py install,pip
my_list,match
super(),multiple-inheritance
nameerror,import
open(),webkit
base64,python-requests
zipfile,zip
ctypes,cython
tkinter,tkinter
dataframe,indexing
tuple_list,dictionary
stopiteration,range
ctypes,pandas
global,factory-boy
indexerror: list index out of range,iteration
pip install,pip
views.py,django
raw_input(),eof
urllib2,urllib2
setup.py,setuptools
list(),django-models
urllib2,cookielib
debug=true,apache
list(),generator-expression
python,numpy
python 2.7,stderr
setup.py,distutils
models.py,forms
__init__.py,namespace-package
mylist,memcached
pickle,set
__init__,object
__str__,repr
super(),superclass
typeerror,subclass
__str__,instance
__str__,methods
pickle,pickle
popen(),popen
python,lambda
tkinter,tkinter
__eq__,metaprogramming
test.py,stderr
__init__.py,module
employee,oop
general,package
ctypes,linux
mylist = [],instantiation
python,pandas
matplotlib,matplotlib
&lt;h3&gt;,beautifulsoup
models.py,flask-sqlalchemy
python,file-io
django,heroku
__init__,self
models.py,django-models
python2.7,visa
position,pycharm
__init__,operator-overloading
__init__.py,flask-sqlalchemy
dataframe,database-normalization
python,serialization
result,celery-task
__init__,dictionary
lambda,pyqt
python,midi
__init__,inner-classes
t = test(),methods
dataframe,import
itertools.product,permutation
lambda,filter
urllib2,urllib2
__init__,mocking
python,password-protection
views.py,flask
list index out of range,reportlab
syntaxerror: invalid syntax,lambda
global,tkinter
python,regression
input.txt,matrix
urllib2,http
setup.py,pip
dataframe,numpy
__init__.py,python-import
index(),model-view-controller
while true,while-loop
rand(),cython
isinstance,exec
subprocess.popen,hard-drive
__dict__,subclass
sklearn,xgboost
apt-get install,virtualenv
histogram,range
lambda,lambda
datetime,python-import
models.py,django
urllib,json
__init__,decorator
setup.py,pypi
sklearn,graph
strings,mpi
setup.py,setup.py
list(),pydev
subprocess.call,subprocess
file.txt,stdin
__init__,regex
# -*- coding: utf-8 -*-,utf-8
openpyxl,excel-2010
locals(),debugging
__getitem__,exception-handling
pandas,statsmodels
subprocess,subprocess
matplotlib,plot
django,sqlite3
models.py,django-models
random,numpy
pandas,pandas
dataframe,pandas
import random,urllib2
__init__.py,xampp
s[::-1],slice
__init__.py,flask
__init__,decorator
globals(),list-comprehension
ids.txt,apache-spark
matplotlib,matplotlib
httplib.httpconnection,http
globals(),locals
requests,request
raw_input(),raw-input
python,meteor
__init__,method-resolution-order
result,selenium-webdriver
runserver,docker
python setup.py install,pypi
function,dask
datetime,timezone
open(),with-statement
__init__.py,nosetests
__eq__,operators
position,zoom
models.py,django
dataframe,pandas
setup.py,pywin32
list(),tuples
setup.py,setup.py
open(),decorator
"(key, value)",dictionary
defaultdict,dictionary
pip install,easy-install
matplotlib,matplotlib
pandas,interpolation
subprocess.call,process
subprocess.call,apt
matplotlib,pie-chart
datetime,datetime
python,stackexchange-api
yield,generator
"if __name__ == ""__main__"":",namespaces
"@makebold@makeitalicdef say(): return ""hello""",python-decorators
update(),mapping
"filename = ""/my/directory/filename.txt""dir = os.pa",directory
@staticmethod,static-methods
def foo(a=[]): a.append(5) return a,least-astonishment
append(),append
class passbyreference: def __init__(self): self.va,pass-by-reference
"ints = [8, 23, 45, 12, 78]",list
string.contains,substring
super(),super
try: # do something that may failexcept: # do this,exception-handling
"""545.2222""",parsing
"l = range(1, 1000)print chunks(l, 10) -&gt; [ [ 1.",split
"my_list = [""hello"", ""world""]print my_list.join(""-""",list
#include &lt;iostream&gt;#include &lt;time.h&gt;us,readline
def is_number(s): try: float(s) return true except,floating-point
new_list = my_list,copy
str.format(),logging
"[{'name':'homer', 'age':39}, {'name':'bart', 'age'",sorting
"foo = ['a', 'b', 'c', 'd', 'e']",random
*,parameter-passing
jun 1 2005 1:33pmaug 28 1999 12:00am,datetime
*args,kwargs
except,exception-handling
"mydict = {(k,v) for (k,v) in blah blah blah} # doe",language-features
@classmethod,static-methods
__main__,profiling
__class__,instanceof
"import sys print &gt;&gt; sys.stderr, 'spam' sys.s",stderr
def main(): for i in xrange(10**8): passmain(),profiling
easy_install,setuptools
""" hello "" --&gt; ""hello"""" hello"" --&gt; ""hello""""he",trim
type(),inheritance
dirfoo,python-import
self,self
'public',comparison
e = 'a' + 'b' + 'c' + 'd',line-breaks
class myclass(object): ... def get_my_attr(self): ,getter-setter
lorenzo@enzo:~/erlang$ gcc -lm -o euler12.bin eule,performance
2to3,setuptools
[],list
.pyc,interpreted
python setup.py install,pypi
(mysite)zjm1126@zjm1126-g41mt-s2:~/zjm_test/mysite,mysql-python
"{ ""maps"": [ { ""id"": ""blabla"", ""iscategorical"": ""0""",parsing
"x = "" \{ hello \} {0} ""print x.format(42)",format
"def file_len(fname): with open(fname) as f: for i,",line-count
pip install mysql_python==1.2.2,pip
a,integer
unicodeencodeerror,beautifulsoup
0xffff,hex
'a',count
#NAME?,increment
def uniq(input): output = [] for x in input: if x ,unique
__all__,namespaces
try: myvarexcept nameerror: # do something.,variables
if foo.py has changed: unimport foo &lt;-- how do ,reload
hdfstore,pandas
a,rename
"os.getenv(""home"")",home-directory
self,methods
try : shutil.rmtree ( path )except : pass,exception-handling
map(),list-comprehension
"for i in range(0, 20):for i in xrange(0, 20):",range
os.getuid,username
"l = [ 1, 2, 3 ]i = l.__iter__()s = nonewhile true ",do-while
virtualenv,psycopg2
__myprivatemethod(),encapsulation
"[ '0045662100456621004566210045662100456621', # '0",pattern-matching
$ easy_install lxml,lxml
.readline,subprocess
"models.charfield(max_length=100, null=true, blank=",django-models
if not x is none,boolean-expression
date,date
"{2:3, 1:89, 4:5, 3:0}",dictionary
__gt,django-models
"""hey, you - what are you doing here!?""",split
object,object
"&gt;&gt;&gt; d = {'a': 1, 'b': {'c': 2}, 'd': [""hi",dictionary
"def remove_duplicates(): t = ['a', 'b', 'c', 'd'] ",duplicates
str,dictionary
def run_command(cmd): # ??????print run_command('m,subprocess
__init__,class-design
urllib,urllib
app/ __init__.py sub1/ __init__.py mod1.py sub2/ _,python-module
while '' in str_list: str_list.remove(''),list
*,argument-passing
def expires(): '''return a unix style timestamp re,unix-timestamp
"glob(os.path.join('src','*.c'))",glob
while line is not '',comparison
property,decorator
datetime.datetime,date
"// c# examplestring thisismyvariable = ""a""public v",function
my_list = [x for x in my_list if x.attribute == va,functional-programming
"class fileitem: def __init__(self, fname): self.fn",serialization
simplejson,simplejson
assert,raise
"""mydir/myfile.txt""",relative-path
cron,web-applications
sys.stdout,buffered
def my_function(): passprint get_function_name_as_,function
dictionary,max
del df['column_name'],dataframe
"&gt;&gt;&gt; ut[&lt;tag: 128&gt;, &lt;tag: 2008&gt",count
list.extend,sequence
import datetimetoday = datetime.date.today()print ,date
$sig{'int'} = 'exit_gracefully';sub exit_gracefull,signals
string.ascii_uppercase,uppercase
def singleton(class_): instances = {} def getinsta,decorator
psycopg2,pip
os.path.basename,path
n = 5# test one.if n == 5: print 'yay!'# test two.,semantics
for (int i = 0; i &lt; str.length(); ++i) std::cou,iteration
&gt;&gt;&gt; import timeit&gt;&gt;&gt; timeit.time,floating-point
random.shuffle,random
"for i in range(0, 1, 0.1): print i",range
def my_handle(self): sentence = ' hello apple ' se,removing-whitespace
permutations([])[]permutations([1])[1]permutations,permutation
"class simple: def __init__(self1, str): print(""ins",private
gcc -wall utilsmodule.c -o utilc,python-c-api
super(),super
"def get_primes(n): numbers = set(range(n, 1, -1)) ",optimization
script_1.py,file
"package foo;sub frotz { return ""bamf"";}package bar",class
&gt;&gt;&gt; 0x12af 4783 &gt;&gt;&gt; 0x100 256,binary
&gt;&gt;&gt; a = 256&gt;&gt;&gt; b = 256&gt;&gt;&g,comparison
"map = { 'a': 1, 'b':2 }",mapping
"foo = (1,2,3)bar = (4,5,6)for (f,b) in some_iterat",parallel-processing
if (cond1 == 'val1' and cond2 == 'val2' and cond3 ,if-statement
list,types
setup.py,setup.py
"l = [[[1, 2, 3], [4, 5]], 6]",optimization
#,block-comments
s = 'the brown fox',capitalize
assert,assertions
"b1 = [1,2,3,4,5,9,11,15]b2 = [4,5,6,7,8]b3 = [val ",intersection
"traceback (most recent call last): file ""/var/www/",virtualenv
if count == n: count = 0else: count = n + 1,if-statement
"contents = url.get(""http://example.com/foo/bar"")",networking
"original = [('a', 1), ('b', 2), ('c', 3), ('d', 4)",matrix
time.sleep(),time
/* receive value */$validatevalue=$_post['validate,json
"for i in xrange(0, len(ints), 4): # dummy op for e",loops
"data = [[1,2,3], [4,5,6], [7,8,9]]data = [(1,2,3),",sorting
script,read-eval-print-loop
import osprint os.getcwd(),django-views
unittest,nose
"temp1 = ['one', 'two', 'three', 'four']temp2 = ['o",set
"# -*- coding: utf-8 -*-print u""†Ç†?†_""",terminal
foobar,printing
letter_recog.py,numpy
eval(),eval
"traceback (most recent call last):file ""manage.py""",django
list.append(),prepend
with,with-statement
import matplotlibimport numpy as npimport matplotl,ipython
"def import_to_orm(name, save=false, recurse=false)",arguments
_,naming-conventions
class foo(models.model): name = models.charfield(),django-models
code1class foo: code2 def spam..... code3 for code,dynamic-languages
"minitwit|-- minitwit.py|-- static |-- css, js, ima",angularjs
"class a(object): def __init__(self): print ""constr",inheritance
mylist = [[1] * 4] * 3,nested-lists
==,equivalence
"import matplotlib.pyplot as pltx = [1, 2, 3, 4, 5]",figure
u,rawstring
in file included from src/lxml/lxml.etree.c:314:/p,osx
"""hello %s you are %s years old"" % x",types
except: pass,exception-handling
"""""""hello, i am a  multiline comment""""""",multiline
writelines(),list
class someclass(object): def not_often_called(self,coding-style
"for char in line: if char in "" ?.!/;:"": line.repla",immutability
stdout,timeout
models.py,model-view-controller
win32file.findnextchangenotification,pywin32
class child(somebaseclass): def __init__(self): su,super
"plaintext = input(""please enter the text you want ",gzip
time.time(),timezone
"t1 = (('13', '17', '18', '21', '32'), ('07', '11',",integer
"l = [4,5,6]tuple(l)",tuples
TRUE,matlab
def split_line(text): # split the text words = tex,split
"results = ['1', '2', '3']",int
# generator expression(x*2 for x in range(256))# l,generator
"string.replace(',', '').replace(""!"", '').replace(""",list
defined(),defined
"text_file = open(""output.txt"", ""w"")text_file.write",text
ctypes,ctypes
ptdraft/ nib.py simulations/ life/ life.py,folders
import,ipython
try: method_that_can_raise_an_exception(params)exc,stack-trace
getopt,optparse
time.strptime,iso8601
datetime.time,time
__init__,methods
"&gt;&gt;&gt; print ""'%06d'""%4'000004'",string-formatting
"default_data = { 'item1': 1, 'item2': 2,}",append
"python 2.6.1 (r261:67515, jun 24 2010, 21:47:49) [",timezone
"# the string, which has an a-acute in it.ss = u'ca",utf-8
"l = list(1,2,3)l.index(2)&gt;&gt;&gt; 1",numpy
[e for number in xrange(n)],list-comprehension
[],literals
search(),search
"a = [4,2,3,1,5,6]if a.count(7) == 1: b=a.index(7) ",list
json.dump,load
"""b-staged divinylsiloxane-bis-benzocyclobutene [12",split
import subprocessfrom cstringio import stringiosub,stdin
def long_running_func(p): c_func_no_gil(p)p = mult,missing-features
"1 + ""1""traceback (most recent call last):file """", ",weakly-typed
"def __init__(self, x, y, z): ... self.x = x self.y",namedtuple
my_string = b'the string',unicode
class volume(models.model): id = models.autofield(,django-models
print 'h',formatting
"for i in range(10): print(i) if i == 9: print(""too",for-loop
__class__,operator-overloading
tester.py,subdirectory
pip,github
"traceback (most recent call last): file ""mountain.",python-import
# foo.pyclass foo: pass# test.pyimport inspectimpo,inspect
scipy,file-io
pythonpath,pythonpath
day_count = (end_date - start_date).days + 1for si,iteration
&gt;&gt;&gt; class foo:... bar = 'hello'... baz = ,attributes
put,put
json,serialization
l,list-comprehension
scipy,scipy
from selenium import webdriverwd = webdriver.firef,selenium-webdriver
for tz in pytz.all_timezones: print tzafrica/abidj,pytz
yield,generator
"""_-.() """,slug
d = dict(param='test')def f(param): print paramf(d,dictionary
traceback,introspection
hashlib.md5(),hashlib
sys.stdout.write(),stdout
string.find(),string
"def my_fun(x, y): return x + y",editor
sys.path.append,save
os.system(),operating-system
x = 0y = 1z = 3mylist = []if x or y or z == 0 : my,comparison
class gameclaim(models.model): target = models.for,django-models
"for i in range [1,10]: string=""string""+i",integer
"round(2.3) = 2.0 and not 3, what i would like",integer
"import matplotlib matplotlib.rc('xtick', labelsize",font-size
"if [[ ""$string"" =~ ^hello ]]; then do something he",string-comparison
"""databaseerror: current transaction is aborted, co",postgresql
"#note: python 2.7 users should use `raw_input`, th",loops
read -s,prompt
models.py,django-forms
requests,python-requests
"string str = ""many fancy word \nhello \thi"";string",string
if type(x) == type(str()): do_something_with_a_str,typechecking
del,del
pip --version,virtualenv
datetime,weekday
ascii,char
"&gt;&gt;&gt; 1 in [1,0] # this is expectedtrue&gt;",operator-precedence
"url = ""http://example.com?p="" + urllib.quote(query",encoding
39708.58472,utc
exit(number),traceback
"l = [15, 18, 2, 36, 12, 78, 5, 6, 9]print reduce(l",lambda
expand(),argument-passing
nested functions,nested-function
"data = {'sender': 'alice', 'receiver': 'bob', 'mes",python-requests
"{'new jersey': {'mercer county': {'plumbers': 3, '",dictionary
"content = open('path/to/file', 'r').read()",filehandle
any,search
__str__(),unicode
"b = bytes(mystring, 'utf-8')b = mystring.encode('u",character-encoding
javadoc,javadoc
javadoc,javadoc
list,comparison
class foo(models.model): name = models.charfield(),model
"class person: def __init__(self, name, age): self.",code-completion
settings.debug,error-logging
c:\my_projects,environment-variables
"l = []for n in range(1, 11): l.append(n)",list-comprehension
try: try_this(whatever)except someexception as exc,exception-handling
"os.popen(""ps"")",cpu
project.app,namespaces
`python version 2.7 required which was not found i,easy-install
x = 1.23456print '%.3f' % x,pretty-print
&lt;insert your favorite wsgi toolkit here&gt;,dependency-injection
#!/usr/bin/env pythonimport networkx as nximport m,matplotlib
## image generation code runs.... /upload generate,django-models
"p = subprocess.popen(cmd, stdout=subprocess.pipe, ",subprocess
sudo pip install pil,python-imaging-library
pip install numpy,scipy
"import numpy as na = n.array([[1,2],[1,2]])",numpy
&gt;&gt;&gt; from timeit import timeit&gt;&gt;&gt;,cpython
.htaccess,cgi
iteritems(),dictionary
"(xa, ya, za)(xb, yb, zb)",euclidean-distance
"adders= [0,1,2,3]for i in [0,1,2,3]: adders[i]=lam",closures
"bob = 1bob = ""bob""",weak-typing
TRUE,inline
"obj = someobjectobj.a = object()setattr(obj.a, 'so",object
class tankjournal(models.model): user = models.for,forms
class personadmin(admin.modeladmin): list_display ,django-admin
from .mymodule import myfunction,import
virtualenv venv --distribute,virtualenv-commands
"test = numpy.array([[1, 2], [3, 4], [5, 6]])",numpy
verts = list (1000),list
"&gt;&gt;&gt; string = ""blah, lots , of , spaces, h",strip
httpresponse,django
"a, b, c = (1, 2, 3)print(a, b, c)def test(): print",scope
easy_install django,virtualenv
~true,tilde
&gt;&gt;&gt; df stk_id eps cashstk_id rpt_date 601,dataframe
(pelicanenv)59-127-113-90:myblog richo$ pelican-qu,pelican
pip install git+git://github.com/django/django.git,github
"name = ""spongebob squarepants""puts ""who lives in a",language-comparisons
"def amethod(arg1, arg2): pass",introspection
bisect_left,bisection
my_program --my_boolean_flag false,argparse
requests,python-requests
isdigit(),string
&gt;&gt;&gt; 6/32&gt;&gt;&gt; 6//32,syntax
&gt;&gt;&gt; (0-6) is -6false,integer
"plot.figure()plot.scatter(k,sum_cf, color = 'black",matplotlib
make altinstall,centos
"try: # coode in hereexcept exception, e: logging.e",logging
false == 0,equality
"class myexception(exception): def __init__(self, m",deprecated
eventlet,eventlet
requirements.txt,setuptools
"print ""100"" &lt; ""2"" # trueprint ""5"" &gt; ""9"" # fa",comparison
&gt;&gt;&gt; my_dataframe y gdp cap0 1 2 51 2 3 92,dataframe
import matplotlib.pyplot as pltimport randomprefix,plot
"np.find_nearest( array, value )",numpy
class user(models.model): created = models.datetim,datetime
"foos = [1.0,2.0,3.0,4.0,5.0]bars = [1,2,3]def mapt",functional-programming
if not x == 'val':,equality
def git_pull(): sudo('su deploy') # here i need to,fabric
import fooprint foo.version,package
pandas,join
settings,pydev
python manage.py collectstatictraceback (most rece,python-import
._”“_”—_”— bin_”ä____ _””_”—_”— /the usual stuff/_,python-module
&gt;&gt;&gt; from beautifulsoup import beautifulso,html-entities
strftime,strftime
@,operators
"urlpatterns = patterns('', url(r'^$', listing, nam",pep8
"x = ""there are %d types of people."" % 10...print """,string-formatting
multiprocessing,multiprocessing
'3',integer
sudo pip install python-ldap,ldap
&gt;&gt;&gt; human_readable(2048)'2 kilobytes'&gt;,filesize
import multiprocessingdef f(x): return x*xdef go(),multiprocessing
flask,static-files
"&gt;&gt;&gt; numpy.arange(10000)array([ 0, 1, 2, .",numpy
str().decode(),unicode
select * from user where income &gt;= 5000 or inco,django
temp,temporary-directory
class sampleclass(forms.form): name = forms.charfi,forms
if request.method == 'post': form = authorform(req,forms
"mylist = [12, 5, 13, 8, 9, 65]def bubble(badlist):",sorting
"[('abc', 121),('abc', 231),('abc', 148), ('abc',22",tuples
request.user.is_authenticated,authentication
tail(),file-io
"import subprocess, osmy_env = os.environmy_env[""pa",popen
import requestsdef downloadfile(url) local_filenam,python-requests
for i in range(some_number): #do something,for-loop
({'type':'event'}),kwargs
http://localhost:5000,flask
"[{'points': 50, 'time': '5:00', 'year': 2010}, {'p",pandas
pip install git+ssh://git@github.com/blahco/search,pip
java -jar hudson.war,continuous-integration
0 3 * * * source /home/user/project/env/bin/activa,cron
datetime.timedelta,datetime
re.compile,case-sensitive
time,date
&gt;&gt;&gt; import sys&gt;&gt;&gt; print sys.getd,encoding
construct,construct
"traceback (most recent call last): file ""emailsend",smtp
import datetimea = datetime.datetime.today()numday,date
class client(model): name = charfield(max_length=1,django-templates
logging,error-logging
&gt; c:\python26\programas\cython&gt;python setup.,distutils
flist = []for i in xrange(3): def func(x): return ,lazy-evaluation
floor,integer
ord(),unicode
class searchform(form): q = forms.charfield(label=,django-forms
var,variable-declaration
total_rows = df.countprint total_rows +1,dataframe
array.array,performance
import subprocesstext = 'hello world.'print textsu,subprocess
re.search(),search
pool.apply,concurrency
"traceback (most recent call last): file ""c:/tmp.py",exception-handling
class serviceform(forms.form): option = forms.mode,forms
"class a: def __init__(self): print ""world""class b(",inheritance
codecs.open function,byte-order-mark
print_timer.py,printing
&gt;&gt;&gt; def foo(x):... pass... &gt;&gt;&gt; f,attributes
"import pandas as pdinp = [{'c1':10, 'c2':100}, {'c",rows
ls 145592*.jpg,wildcard
&gt;&gt;&gt; import time&gt;&gt;&gt; time.strptime,time
pip,ipython
min(),minimum
datetime.today(),date
"left, right = right, left",conventions
select * from table where colume_name = some_value,dataframe
e.printstacktrace(),stack-trace
__getitem__,dictionary
class content(models.model): name = models.charfie,django-models
django.contrib.search,search
def hello(): return 'hi :)',command-line
hello world,replace
l = []while foo: #baz l.append(bar) #qux,dictionary
the fox jumped over the log.,string
"a = ['a', 'b', 'c']str = ""a123""if a in str: print ",string
"date,open,high,low,close,volume,adj close2011-10-1",for-loop
from urllib import request,import
number_of_records = models.painting.objects.count(,django-models
"x = tuple(set([1, ""a"", ""b"", ""c"", ""z"", ""f""]))y = tu",set
collections.defaultdict,setdefault
"def my_func1(): print ""hello world"" return nonedef",return
$_post,get
"user = user.object.create_user(username, email, pa",django
"class customdatafield(models.model): """""" abstract ",dynamic
"import unittestl = [[""foo"", ""a"", ""a"",], [""bar"", ""a",parameterized-unit-test
"def foo(a: 'x', b: 5 + 6, c: list) -&gt; max(2, 9)",annotations
class testdec: @property def x(self):  print 'call,new-style-class
x = a**d % n,pypy
"traceback (most recent call last): file ""&lt;stdin",subprocess
name=value,keyword
"orig = { 'a': 1, 'b': 2, 'c': 3,}extra = { 'd': 4,",map
"from matplotlib.pyplot import *plot([1,2,3])show()",plot
getcookie('csrftoken'),django
class sample(models.model): date = fields.datefiel,django-models
[api_sig],flickr-api
http://somedomain/foo/,http-headers
pickle,settings
pip install -u,packages
"class node(object): def __init__(self, val, left=n",namedtuple
"[] = """" ",list
% formatter something like '{:06}'numbers = [23.23,numbers
*,splat
related_name,many-to-many
import pydot # import pydot or you're not going to,graphviz
"def func(): return 1, 2",tuples
./manage.py shell &lt;&lt; my_script.py,django-shell
twinx(),axis
__setattr__,immutability
import numpy as np,matplotlib
df.to_csv('out.csv'),pandas
&gt;&gt;&gt; print(my_var.__name__)'my_var',variables
"alpha = ['a', 'b', 'c', 'd'.........'z']",list
"html = urllib.urlopen(link).read()html.encode(""utf",utf-8
"&gt;&gt;&gt; for i in xrange(20):... print 'a',...",printing
try: something hereexcept: print 'the whatever err,exception-handling
"list_a = [1, 2, 3, 4]list_b = [5, 6, 7, 8]#need to",tuples
numpy.linalg.eigh,scipy
map,pandas
module.version,version
.py,abstract-syntax-tree
"&lt;form action="""" method=""post""&gt;{{ form_newsle",django-forms
"""user-agent""",python-requests
"&gt;&gt;&gt; a=set('abcde')&gt;&gt;&gt; aset(['a',",set
"int(str,base). ",radix
flask.jsonify,flask
if __name__ == '__main__': x = 1print x,if-statement
x,object
none,performance
max,max
cntlm.exe -c cntlm.ini -i -m http://google.com,pip
&amp;lt;img class=&amp;quot;size-medium wp-image-1,html-encode
timestamptz,datetime
"s = ""hello, %s. where is %s?"" % (""john"",""mary"")",string-formatting
__dbname__,singleton
"setlist = [s1,s2,s3...]",set-intersection
len(),collections
40850.46319,datetime-format
popen(),popen
"d = {'1': 'one', '3': 'three', '2': 'two', '5': 'f",find
"from numpy import *x = range(16)x = reshape(x,(4,4",slice
section = 'c_type',concatenation
#a.py__num=1,module
from multiprocessing import poolp = pool(5)def f(x,pickle
dict.items(),dictionary
pip install --upgrade 'package',anaconda
....,exception-handling
from django.db import modelsclass person(models.mo,django-models
@app.route('/')@app.route('/data')def data(): quer,query-string
*.txt,osx
python 2.6,performance
split('\n'),split
data = pandas.read_csv('d:\myfile.csv')for colname,flask
pip install yaml,yaml
&gt;&gt;&gt; import hashlib&gt;&gt;&gt; h = hashli,md5sum
import globimport unittesttestsuite = unittest.tes,testing
"string.replace(""condition1"", """")",replace
request.is_ajax(),json
for(int i = 0; i &lt; list.length(); i+=2){ // do ,for-loop
(5 11) (7 13) (11 17) (13 19) (17 23) (23 29) (31 ,scala
soup = beautifulsoup(sdata)mydivs = soup.findall(',beautifulsoup
queryset,django-admin
mat = nonefor col in columns: if mat is none: mat ,numpy
str.join(),list
datetime.utcfromtimestamp(timestamp),utc
-=,numpy
numpy.datetime64,numpy
"some_list1 = []some_list1.append(""something"")",concatenation
class myclass(object): ...m = myclass()if 54 in m:,operator-overloading
__init__(),subclass
pip install git+git://github.com/mozilla/elasticut,pip
&gt;&gt;&gt; import django.template&gt;&gt;&gt; fr,templates
__call__,call
import matplotlibimport matplotlib.pyplot as pltim,plot
object,global-variables
"lambda: print ""x""",lambda
class photo(db.model): filename = db.stringpropert,google-app-engine
x[x&lt;2]=0,numpy
def remove_non_ascii_1(text): return ''.join(i for,encoding
sock.shutdown(socket.shut_rdwr)sock.close(),asynchronous
thefile=open('test.csv'),repository
apt-get install scipy,scipy
class rider(models.model): user = models.foreignke,django-forms
manifest.in,dependencies
"a = array([[1,2,3],[4,5,6],[0,0,1]])",numpy
newdict = olddict.copy(),dictionary
sum(),pep
"&gt;&gt;&gt; a = [2,3,4,5,6,7,8,9,0]... xyz = [0,1",if-statement
&gt;&gt;&gt; s = u'\u2265'&gt;&gt;&gt; print s&gt;,string
mylist.append(munfunc()) ,list
package-1,package
&gt;&gt;&gt; dummy.ab100,runtime
"thearray = [['a','b','c'],['d','e','f'],['g','h','",multidimensional-array
"[i for i in [1, 2, 3, 4]]",list-comprehension
python manage.py syncdb,django-models
"import numpya = numpy.array([1, 2, 3])b = numpy.ar",numpy
collections.defaultdict,nested
get_or_create,sqlalchemy
domain = 'http://stackoverflow.com'questions = '/q,string-concatenation
nonlocal,global
"&gt;&gt;&gt; r'\' file ""&lt;stdin&gt;"", line 1 r'\",literals
"print '&lt;a href=""%s""&gt;%s&lt;/a&gt;' % (my_url)",syntax
$ mkdir myproject$ cd myproject$ virtualenv env,virtualenv
"strid = repr(595)print array.array('c', random.sam",string
pip,setuptools
dot,benchmarking
package/ __init__.py subpackage1/ __init__.py modu,relative
python myprog.py ,argparse
mmddyy,date
__debug__,global
l = [] ,coding-style
#NAME?,command-line-arguments
{{ myvar }},google-app-engine
logging.basicconfig(level=logging.debug),unit-testing
&gt;&gt;&gt; from timeit import timer as t&gt;&gt;,performance
super(),super
"class fileinfo(userdict): ""store file metadata"" de",superclass
b: blueg: greenr: redc: cyanm: magentay: yellowk: ,colors
hello world !!,hex
"list1=[1, 2, 3]list2=[4, 5, 6]",elementwise-operations
from time import time as tdef count(): st = t() [x,pep
"mylist = ['123','123456','1234']for each in mylist",list-comprehension
object.__repr__(),tostring
[ -3.37260500e+05 +0.00000000e+00j 7.11787022e+05 ,signal-processing
&gt;&gt;&gt; import numpy&gt;&gt;&gt; def gimme():,generator
"import syssys.path.append(""~/desktop/python_tutori",python-import
x,microbenchmark
1|_—“@chrisgilmer: apple targets big business with,machine-learning
pdb,emacs
__new__,python-c-api
/library/python/2.7/site-packages/django/conf/urls,graphite
"timestamp = [ ""2010-04-20 10:07:30"", ""2010-04-20 1",reverse
"x = [1,2,3]y = [4,5,6]",list
"import hmac, base64, struct, hashlib, timedef get_",authentication
_imagingft.c:73:10: fatal error: 'freetype/fterror,pip
&gt;&gt;&gt; select(p for p in person if p.name.st,metaprogramming
std::vector,swig
"def trisum(n, csum): if n == 0: return csum else: ",stack
"from xml.dom.minidom import parsedom = parse(""c:\\",minidom
pip install matplotlib,pip
"import sysreload(sys)sys.setdefaultencoding(""utf-8",utf-8
create database mydb;,migration
"cursor.execute(""insert into mytable(height) values",database
try{ processfile(filepath);}catch (exception ex){ ,error-handling
'%s in %s',syntax
done = trueif done: # quit/stop/exitelse: # do oth,scripting
num_list[0:9],slice
collections.namedtuple,dictionary
"class mywidget(wx.window): buttons = [(""ok"", onok)",methods
doors,virtualenvwrapper
"def first(the_iterable, condition = lambda x: true",iterator
/admin/appname/modelname/add/,django-admin
65,hex
./__init__.py./foo.py./tests ./__init__.py ./test_,python-import
p = re.compile('^(([^:/?#]+):)?(//([^/?#]*))?([^?#,google-app-engine
$ sudo apt-get install python-setuptools$ sudo eas,setuptools
pip install package&gt;=0.2,multiple-versions
obj = 'str'type ( obj ) == string,compare
for,variable-assignment
"integer gridsize,unit,j real mini,maxi double prec",performance
"class obj(object): def __init__(self, i): self.i =",dictionary
"s = ""this is my really, really, really, really, re",pep8
attributeerror: 'nonetype' object has no attribute,attributeerror
print,logging
"id int autoincrement primary key,username varchar(",sqlite3
"text = ""hey look words!""def anti_vowel(text): text",list
x.push(),sorting
__getattr__,encapsulation
def trianglenums(): '''generate series of triangle,iteration
"my_list = ['red', 'blue', 'orange']function_that_n",argument-passing
def my_function():,pep8
var top5 = array.take(5);,generator
#hardcoded path,file-io
"def getpermutations(string, storage, prefix=""""): i",generator
import matplotlib.pyplot as pltimport numpy as npx,legend
import numpycolumn_labels = list('abcd')row_labels,data-visualization
class.forname().newinstance(),instantiation
for,numpy
plt.gca().set_xticks([])plt.xticks([])ax.set_xtick,plot
pipe(),queue
timedelta,timedelta
continue,continue
import pymongofrom pymongo import connectionconnec,pymongo
"teams_list = [""man utd"", ""man city"", ""t hotspur""]d",printing
def a(): ...def b(): ...if __name__ == '__main__':,main
a + list,variables
"mydict = { ""key1"": 1, ""key2"": 2, ""key3"": 3, }",code-formatting
def select_choice(): loop = 1 row = 0 while loop =,function
_”“_”—_”— simulate.py_”“_”—_”— src_”ä____ _”“_”—_”,pycharm
"{ k1: v1, k2: v2 ... }",map
"{ ""glossary"": { ""title"": ""example glossary"", ""glos",string
class myclass: def __init__(self): self.title = 't,dictionary
java -jar &lt;jar file&gt;,egg
"def testme(filepath): with open(filepath, 'r') as ",with-statement
"""%b %b"" % (true, false)",string-formatting
threading,pyqt
from multiprocessing import poolfrom time import s,pool
for each document in update: existing_document = c,bulkinsert
hash('http://stackoverflow.com') result: 193471190,hash
logging,exception-handling
subprocess.popen(),popen
"""&lt;space&gt;&lt;space&gt;&lt;space&gt;""",newline
"with open(path, mode) as f: return [line for line ",with-statement
len(x),iterable
elementtree,xml-parsing
"d = {'key1':1,'key2':14,'key3':47}",hash
iterator,list-comprehension
"['title', 'email', 'password2', 'password1', 'firs",order
logging,syslog
*.pyc*.pyo,git
a,dictionary
#include &lt;iostream&gt;class animal {public: vir,inheritance
ftplib,stdout
sys.stdout,terminal
model.filefield,osx
my_package.my_module.myclass,python-import
logging.conf,logging
"i = [1, 2, 3, 5, 8, 13]j = []k = 0for l in i: j[k]",exception
'y\xcc\xa6\xbb',bytearray
mydictionary={'keyname':'somevalue'}for current in,key
email_backend = 'django.core.mail.backends.smtp.em,email
"import osdef getfile(filename,results): f = open(f",readline
__hash__(),hashcode
company1.name = 'banana' company1.value = 40,save
bool,inheritance
# virtualenv --no-site-packages test_pil# test_pil,easy-install
"import sysimport ldapserver = ""ldap://my-ldap-serv",active-directory
"traceback (most recent call last): file ""./obp_pb_",google-chrome
__new__(),inheritance
import sysprint sys.argv[1],scripting
"@app.route('/sitemap.xml', methods=['get'])def sit",mod-wsgi
"a = [1,1,1,1,2,2,2,2,3,3,4,5,5]",frequency
&lt;script&gt;,beautifulsoup
"def leave_room(self, uid): u = self.user_by_id(uid",list-comprehension
"class myclass: __element1 = 123 __element2 = ""this",attributes
brew install python3,virtualenv
class dailytask(models.model): time = models.timef,timezone
*args,python-internals
logging,logging
connectiondetails,coding-style
"import csvoutfile = file('test.csv', 'w')writer = ",newline
"python 2.6.2 (r262:71605, apr 14 2009, 22:40:02) [",visual-studio
class contactform(forms.form): subject = forms.cha,class
colorbar(),subplot
s='arbit'string='%s hello world %s hello world %s',format
"file ""setup_posix.py"", line 24, in mysql_config ra",virtualenv
"&gt;&gt;&gt; def f(*args):&gt;&gt;&gt; print ""succ",syntax
pip freeze --local &gt; requirements.txt,virtualenv
"logger.info(""skipping {0} because its thumbnail wa",code-formatting
 #!/usr/bin/python import logging logger = logging,console
#NAME?,virtualenv
numpy.array,numpy
ipython,ipython
fabric,fabric
this is a paragraph with&lt;[1&gt; in between&lt;/,string
flush,output-buffering
&gt;&gt;&gt; x = 42; y = 54,language-lawyer
@csrf_exemptdef mobileregister(request): if reques,unit-testing
__init__.py,package
secret_key,security
numpy,performance
import loggingimport logging.handlerslogger = logg,logging
models.py,django-models
"image = image.open(file).convert(""l"")",grayscale
os.path,python-import
my_var == none,nonetype
i = 0test = any([i == 2 for i in xrange(10)])print,generator
from crypto import randomfrom crypto.cipher import,padding
class sample(models.model): users = models.manytom,django-models
"def generator(x, y): for i in xrange(x): for j in ",generator
"foldl (+) 0 [1,2,3,4,5]--&gt; 15",functional-programming
"o = ""a test of \xe9 char"" #i want this to remain a",decode
resample,pandas
"comb = calculate_combinations(n, r)",combinations
virtualenv,virtualenv
task.delay(),unit-testing
"def sh_escape(s): return s.replace(""("",""\\("").repl",escaping
class meta,metaclass
def transmit(func): obj = pickle.dumps(func) [send,pickle
"if curr_x -1 &gt; 0 and (curr_x-1 , curr_y) not in",conditional-statements
gevent,osx-lion
"['q1.3','q6.1','q1.2','q1.1',......]",order
class newsitem(models.model): headline = models.ch,django-admin
response = request.postuser = fbapiuser(user_id = ,django
"import urllib2url = ""http://google.com""data = urll",http-error
__hash__,serialization
#!/usr/bin/env pythonfrom __future__ import print_,split
$ easy_install-2.6 -d /home/user/lib/python2.6 mys,easy-install
mydic = {}mydic['key_name'] = 'value_name',key
from functools import partialclass cage(object): d,nested-function
is_private = request.post['is_private'],exception
"""this should be connected"" becomes ""this_should_be",django
pypi.install('requests'),python-module
$ pip,pip
gmtime(),time
"['one', 'two', 'one']",duplicates
import urllib2u = urllib2.urlopen('http://server.c,download
manager.py syncdb,django-models
"#my dictionarydict = {}dict['capital']=""london""dic",dictionary
#!/usr/bin/env python# -*- coding: utf-8 -*-# basi,multiprocessing
import logging# create loggerlogger = logging.getl,logging
"startnumber = int(raw_input(""enter the start numbe",sequences
python manage.py migrate,django-1.7
"def example(): age = ... name = ... print ""hello %",design-patterns
itemindex = numpy.where(array==item)[0][0]nonzero(,find
python setup.py install,pip
"l= [0, 23, 234, 89, none, 0, 35, 9]",filter
from sets import set[...]myhash = set(mylist),sorting
foo,inheritance
error: setup script exited with error: command 'x8,odoo
url '^/accounts/password/reset/$',passwords
'ascii' codec can't encode character u'\u2019' in ,ascii
string.encode('utf-8'),utf-8
est,timezone
running installrunning buildrunning build_pyrunnin,windows-7-x64
n,numpy
y = functionwithyield()for x in y: print(x)#here m,yield
"class hi: def __init__(self): self.ii = ""foo"" self",instance-variables
/foldera/folderb/folderc/folderd/,path-manipulation
lxml,easy-install
admin.site.register(menuentry),django-admin
"[(1,""juca""),(22,""james""),(53,""xuxa""),(44,""delicia""",list
"x = """"for key, val in {'a':'a', 'b':'b'}.items(): ",url-parameters
numpy,scikits
"r""^(?p&lt;eggname&gt;\w+)-(?p&lt;eggversion&gt;[\d",string-comparison
# -*- coding: utf-8 -*-,utf-8
"def divide(x, y): quotient = x/y remainder = x % y",return-value
fixture/initial_data.json,django
with lock: with db_con: with socket: #do stuff,contextmanager
list,python-internals
"py -3 -m timeit ""tuple(range(2000)) == tuple(range",cpython
"t = ((1, 'a'),(2, 'b'))",tuples
"deprecationwarning: integer argument expected, got",deprecated
pdb,debugging
"a = [32, 37, 28, 30, 37, 25, 27, 24, 35, 55, 23, 3",max
return jsonify(json_list = qryresult),flask
"&gt;&gt;&gt; x, y = {'a': 2, 'b': 5}&gt;&gt;&gt; x",dictionary
/tmp/webdriver-py-profilecopy,selenium
"from numpy import *def comb(a,b): c = [] for i in ",multidimensional-array
"pic = image.open(""foo.jpg"")pix = numpy.array(pic.g",numpy
"l = [[1,2,3],[4,5,6],[7,8,9]]",transpose
zip(),zip
"&gt;&gt;&gt; lst = iter([1,2,3])&gt;&gt;&gt; next(",iterator
jsonpickle.encode,sqlalchemy
'mr john smith ',algorithm
"l = [['40', '20', '10', '30'], ['20', '20', '20', ",list-comprehension
nan,nan
import unittestclass basetest(unittest.testcase): ,testing
"def my_func(param1, param2): # stuff",parameters
from foo import barimport foo,python-import
"foo = """"""this is a multi-line string.""""""",iterator
"user = ""alex""number = 38746print(""%s asked %d ques",format
"class thing(models.model): priorities = ( (0, 'low",django-models
disttopoint,function
python manage.py runserver myip:port,django
"echo ""$string"" | sed -e ""s|.*aaa\(.*\)zzz.*|\1|""",substring
for(var propertyname in objectname) var currentpro,properties
"from file.py import function(a,b)",function
if something == 'this': dothis()elif something == ,if-statement
.c,cython
"httpresponse.__init__(content='', mimetype=none, s",content-type
array(),numpy
def foo():,indentation
subprocess.check_output(),subprocess
pandas.read_csv(),sas
data = pandas.read_csv('mydata.csv'),pandas
requests.get,http
python manage.py test appname,django
&lt;html&gt;&lt;head&gt;heading&lt;/head&gt;&lt;bo,html-parsing
"class test(object): def _decorator(self, foo): foo",decorator
"import urlsdef show_urls(urllist, depth=0): for en",url
&gt;&gt;&gt; import _imaging&gt;&gt;&gt; _imaging.,python-imaging-library
"@propertydef name(self): if not hasattr(self, '_na",decorator
"&gt;&gt;&gt; points={'a':(3,4), 'b':(1,2), 'c':(5,",filter
import datetime as dtimport pandas as pdimport sci,pandas
"data = c(rep(1.5, 7), rep(2.5, 2), rep(3.5, 8), re",numpy
can't decode...,python-unicode
__init__.py,initialization
"class mycontroller(controller): path = ""something/",variables
"mylist = [""a"",""b"",""c"",""d""]",iteration
threading.thread,thread-local
"{""text"":""lalala""}",post
"for i in range(len(latitudes): lat,long=(latitudes",iteration
npm install jquery,node.js
os.system(),subprocess
3,date
sorted(),lambda
"for i, data in enumerate(data_list): code_that_is_",fencepost
"import numpy as npa = np.array([1,2,3,4,5,6,7,8,9]",numpy
"m = matrix([[1], [2], [3], [4]])",matrix
"i'm ""stuck"" :\",escaping
import settings,settings
"bins, n=hist()",matplotlib
"a = raw_input(""enter a: "")b = raw_input(""enter b: ",printing
import a_ridiculously_long_module_name,alias
a\ __init__.py b\ __init__.py c\ __init__.py c_fil,circular-dependency
"open(""image.jpg"")",rgb
"import smtplib#server = ""localhost""from = 'monty@p",function
(?p&lt;group_name&gt;_—?),group
middleware_classes = ( 'django.middleware.common.c,django-debug-toolbar
"import csvclass csv: def __init__(self, file=none)",csv
mysql-5.5.8-osx10.6-x86_64.dmg,osx
"&gt;&gt;&gt; x = ""google""&gt;&gt;&gt; x is ""google",equality
u',type-conversion
ax.xaxis.set_major_locator,pandas
"def divisorgenerator(n): for i in xrange(1,n/2+1):",math
pip install,pip
"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",performance
&amp;#x01ce;,entities
"class myclass(): def __init__(self, name, friends)",django-models
"filter(lambda x: x == 1, [1, 1, 2])",pylint
class classroom(models.model): room_number = [....,django-rest-framework
if,dictionary
strip my spaces,spaces
logging.formatter('%(asctime)s'),time
"d_args = {'kw1': 'value1', 'kw2': 'value2'}example",introspection
str.decode('source_encoding').encode('desired_enco,unicode
class suit: ...class heart(suit): ...class spade(s,assert
trim_api_url = 'http://api.tr.im/api' auth_handler,authentication
"import xlwtx=1y=2z=3list1=[2.34,4.346,4.234]book =",csv
if condition: var = somethingelse: var = something,language-features
"(4,5) &lt; (3,5) # equals false",tuples
virtualenv,setuptools
"x = ['a', 'b', 'c', 'd'] print ''.join(x)",list
from myproject.myapp.models import foodef foos(req,django-templates
connection = db.session.connection()connection.exe,sqlalchemy
&gt;&gt;&gt; import mock&gt;&gt;&gt; @mock.patch(',datetime
%path%,easy-install
"str =""&lt;?xml version=""1.0"" ?&gt;&lt;person&gt;&l",json
"f1 = open (file1, ""r"")text = f1.read()",encoding
$ cd /tmp/$ wget http://pypi.python.org/packages/s,deployment
"import sysprint ""args: %r"" % sys.argv[1:]",registry
db = sqlite3.connect('mydata.sqlitedb')cur = db.cu,sqlalchemy
mkdir 1cd 1for i in {1..50000}; do dd if=/dev/zero,perl
"file ""/usr/lib/python2.7/random.py"", line 47, in &",random
.. automodule:: mymodule :members:,autodoc
"extensions = ['.mp3','.avi']file_name = 'test.mp3'",list
(x instanceof number).,numbers
'/segment/segment/'.split('/'),split
class categorymodel(models.model): parentid = mode,django-orm
$ ./manage.py test animals.animaltestcase,unit-testing
pyplot.text(),matplotlib
"if hasattr(obj, 'attribute'): # do somthing",exception-handling
is,numbers
"function #12, total time: 2.0s",line-by-line
from django import templateregister = template.lib,django-templates
"exception keyerror: keyerror(4427427920,) in &lt;m",py.test
&gt;&gt;&gt; bin(6) '0b110',integer
manage.py syncdb,postgresql
root.mainloop(),tkinter
"a=array([5,4])print aprint a.t",transpose
__all__,package
__repr__(),ascii
regexfield,django
set,conventions
import requestsimport osimport shutilglobal dumpde,download
ipython,bpython
exception in thread thread-3:traceback (most recen,pickle
project  -- pkg01 -- test01.py -- pkg02 -- test02.,config
.tables.dump,sqlite
os.system,pdfminer
from django.tests import testcaseclass mytests(tes,django-testing
"&lt;option value=""""&gt;---------&lt;/option&gt;",django-models
&gt;&gt;&gt; a = lambda x : 1 + x&gt;&gt;&gt; a(5),function
custnum customername itemqty item seatblocks iteme,dataframe
from datetime import datetimetstart = datetime.now,time
np.nan,nan
modelform,django-forms
$s =~ s/[^[:print:]]//g;,non-printable
package_data,distribute
def insert(array): connection=sqlite3.connect('ima,sqlite3
"nl_east = {'phillies': [645, 469], 'braves': [599,",function
"n,bins,patchs = ax.hist(mydata1,100)n,bins,patchs ",plot
# -*- coding: utf-8 -*-,text
+,anti-patterns
gridspec,matplotlib
a,python-import
import matplotlib.pyplot as pltcdict = { 'red' : (,matplotlib
pip install &lt;package name&gt;,virtualenv
"with open(fname, ""rt"", encoding=""utf-8"") as f:",py2to3
class dictmodel(models.model): key = models.charfi,django-models
#NAME?,distutils
first(iterable),generator
"&gt;&gt;&gt; mylist = [4,1,88,44,3]&gt;&gt;&gt; my",sorting
(ve)[kakarukeys@localhost ve]$ pythonpython 2.6.6 ,virtualenv
"&gt;&gt;&gt; l = [(1,2), (3,4), (8,9)]&gt;&gt;&gt;",tuples
s1,series
for repo in g.get_user().get_repos(): print repo.n,github
"try: with open(""file"", ""r"") as f: line = f.readlin",with-statement
"class base(object): @classmethod def do(cls, a): p",overriding
dtype=np.double,performance
.asm,directory
import cv2,dll
t = e['updated_parsed']dt = datetime.datetime(t[0],string-formatting
"[u'value 1', u'value 2', ...]",xlrd
96.02166667,distance
"class foo(object): def __init__(self): print ""you ",default-parameters
"&gt;&gt;&gt;datetime.datetime(2012,04,01,0,0).strf",utc
regedit4[hkey_local_machine\software\python][hkey_,64bit
site = urllib2.urlopen('http://google.com'),urllib2
x = 1 # 0001x &lt;&lt; 2 # shift left 2 bits: 0100,operators
"data_dict = { 'title' : 'awesome title', 'body' : ",django-models
in [85]: round(2.5)out[85]: 3.0in [86]: round(3.5),rounding
class edit_form(forms.form): summary = forms.charf,django-forms
class somemodel(models.model): id = models.autofie,django-models
&gt;&gt;&gt; import sys &gt;&gt;&gt; from pprint i,sys
"('boston', 'ma')",coding-style
nbins,variables
def is_english_word(word): pass # how to i impleme,wordnet
myapp/foo.py,introspection
"try: r = requests.get(url, params={'s': thing})exc",python-requests
"#!/bin/bashwork_dir=""/var/lib/foo""daemon=""/usr/bin",service
import numpy as np,ipython
"instr = ""'%s', '%s', '%d', '%s', '%s', '%s', '%s'""",format
flask.request.data,wsgi
"a = [{'name':'john','age':45}, {'name':'andi','age",sorting
~&gt;ab -n 10 -c 1 http://localhost:8090/this is a,eventlet
set,set
len,memory-footprint
class foo: x = 5 y = [x for i in range(1)],scope
"{% for p in posts %} &lt;div class=""post width1 he",templates
data=urllib2.urlopen(url).read(),urllib2
def myfunct(): ... yield result,generator
for(i=n; i&gt;=1; --i) { //do something with i},range
v[4],python-datamodel
"import collectionsdata = [ {'firstname': 'john', '",loops
for element in some_list: foo(element)def foo(elem,return
databases = { 'default': { 'engine': 'django.db.ba,settings
"['file1.txt', 'file2.txt', ...]",concatenation
user_list = user.objects.filter(userprofile__level,django-queryset
&gt;&gt;&gt; from random import randint&gt;&gt;&gt,birthday-paradox
"typeerror: float argument required, not numpy.ndar",numpy
"headers=['id', 'year', 'activity', 'lineitem', 'da",dictionary
import timeitdef foo(): # ... contains code i want,timeit
[something_that_is_pretty_long for something_that_,list-comprehension
"&gt;&gt;&gt; x = dict(a=1, b=2)&gt;&gt;&gt; y = di",comparison
"a = [[1.2,'abc',3],[1.2,'werew',4],........,[1.4,'",csv
re.sub('([\u064b-\u0652\u06d4\u0670\u0674\u06d5-\u,character-properties
"d = {1:-0.3246, 2:-0.9185, 3:-3985, ...}",extract
instance.field = file(file('/folder/file.txt'))ins,file
./site.py./apps/members/__init__.py./apps/members/,flask-sqlalchemy
"repmat([1; 1], [1 1 1])",numpy
"['aden', 'abel']",list
numpy,magic-methods
do_something_that_fails || true,fabric
string.split(),generator
from datetime import datetimedate_string = '2009-1,strptime
new_self = self.__class__.objects.get(pk=self.pk)f,django-models
"{% extends ""base1.html"" %}{% include ""commondata.h",django-templates
import randomimport timeit# random lists from [0-9,random
downloading/unpacking pytz could not find a versio,pytz
"""""decoder jpeg not available""""",python-imaging-library
site1,apache2
prod(),product
[...],ellipsis
"go = content.objects.get(name=""baby"")# go should b",database
$pip install selenium$sudo apt-get install firefox,user-interface
svg,rendering
in [7]:pledge.amount.plot()out[7]:&lt;matplotlib.a,pandas
"mystring.find(""substring"", 2nd)",substring
"award_dict = { ""url"" : ""http://facebook.com"", ""ima",language-design
parser = argparse.argumentparser()parser.add_argum,optparse
"""name1=value1;name2=value2;name3=value3""",dictionary
dict,dictionary
none,python-datamodel
if element.isdigit(): newelement=int(element),type-conversion
from sklearn import datasetsiris = datasets.load_i,scikit-learn
this inspection detects shadowing names defined in,pycharm
self.response.out.write('ok'),google-app-engine
len(glob.glob('*')),glob
import logginglogging.basicconfig(level=logging.de,ipython-notebook
babel==0.9.5 # translationcherrypy==3.2.0 # web se,pip
import urllib2import sysusername = sys.argv[1]pass,urllib2
re.compile(),syntax
import matplotlib.pyplot as pltfig=plt.subplot(131,plot
itertools,iterator
class page(models.model): title = models.charfield,django-models
__len__,coding-style
unittest,junit
sha1(repr(sorted(my_dict.items()))),dictionary
alert(),tkinter
"fig = figure()ax = fig.add_subplot(111)ax.plot(t, ",title
"file1 = open('file1', 'r')file2 = open('file2', 'r",iteration
/project /bin /src /pkgname  __init__.py module1.p,setuptools
zip,itertools
import matplotlib.pyplot as plttraceback (most rec,python-dateutil
"traceback (most recent call last): file ""python_md",syntax
"x = [1,2,3,4]y1 = [4,8,12,16]y2 = [1,4,9,16]",scatter-plot
#include&lt;regex&gt;#include&lt;vector&gt;#includ,performance
multiprocessing,multiprocessing
list = map.values();,dictionary
"with open('file.txt', 'r') as f: # do stuff with f",io
"[0] (0.01, 0.01, 0.02, 0.04, 0.03)[1] (0.00, 0.02,",statistics
import ftplibimport urllib2import osimport logging,logging
&gt;&gt;&gt; import json&gt;&gt;&gt; json.dumps([2,formatting
dict,yaml
project/ __init__.py /code __init__.py sut.py /tes,nose
2.7.0_bf4fda703454,parsing
logger = logging.getlogger(__name__),celery
eval(),abstract-syntax-tree
from distutils.core import setupimport py2exesetup,py2exe
class movie(models.model): title = models.charfiel,django-models
"3 -&gt; ""3""3. -&gt; ""3""3.0 -&gt; ""3""3.1 -&gt; ""3.1",floating-point
class foo(object): def _get_age(self): return 11 a,properties
numpy.histogram(),histogram
queryset = modelclass.objects.filter(somekey=foo),django-templates
import stringdef translate_non_alphanumerics(to_tr,string
driver.get_element_by_id('foo').clear_field(),selenium-webdriver
"def digits(x:'nonnegative number') -&gt; ""yields n",static-typing
class circuitform(modelform): class meta: model = ,forms
"x = ['a', 'b']y = ['b', 'a']",equality
import timeimport strftime from timeprint strftime,strftime
pip freeze,virtualenv
mock.assert_called_with,mocking
"a = array([[0, 1, 2], [0, 2, 0]])",numpy
genomediagram,biopython
python -m pdb /path/to/my/nosetests testfile.py,nosetests
docutils.parsers.rst,python-sphinx
from scipy import *from numpy import *def get_bin_,scipy
"[1,2,3]",numpy
"client = paramiko.sshclient()stdin, stdout, stderr",paramiko
in_file = open(from_file)indata = in_file.read()ou,file
os.getpid(),pid
# myapp/views.pyfrom django.views.generic import *,django-views
"&gt;&gt;&gt; mydict = {'one': 1, 'two': 2, 'three'",dictionary
django.contrib.auth.views.login,login
-1,types
is,builtins
&gt;&gt;&gt; 'add \x93monitoring\x93 to list '.enc,ascii
cmd.exe,windows-vista
"import cvcv.namedwindow(""w1"", cv.cv_window_autosiz",webcam
FALSE,methods
{% csrf token %},angularjs
"def unicode_csv_reader(unicode_csv_data, dialect=c",csv
math,standard-library
#NAME?,project-organization
import globimport pandas as pd# get data file name,pandas
class xmldocs(db.expando):  id = db.integerpropert,xml-parsing
stored_blocks = {}def replace_blocks(m): block = m,scope
"result = unicode(google.searchgoogle(param), ""utf-",utf-8
"def search(values): ""using depth-first search and ",naming-conventions
def review(models.model) ...fields... overall_scor,django-models
__getattribute__,class
startswith,cpython
"#!/usr/bin/pythonprint ""hello world""",virtualenv
TRUE,numpy
[extensions]hgext.bookmarks =hggit =,mercurial
timeit,timeit
"strcpy(argv[0],""othername"");",arguments
str,performance
"bin(n).count(""1"")",counting
"a = [-2,1,5,3,8,5,6]b = [1,2,5]c = [ a[i] for i in",indexing
nosectionerror,configuration-files
foo.hs,haskell
empty_strings_allowed,django-models
"element = driver.find_element_by_id(""myid"")driver.",selenium-webdriver
2010 2 2009 4 1989 8 2009 7 ,key-value
counter,list
"in_file = open(""tmob_notcleaned.csv"", ""rb"")reader ",csv
apple = 1pears = 2oranges = 3,machine-learning
[u'string'],ascii
python-social-auth,oauth-2.0
variable,variables
class a(): def method_a(self): pass @decorator1 de,methods
"traceback (most recent call last): file ""/usr/loca",ipython
if,if-statement
rand = np.random.randomstate(1)df = pd.dataframe({,dataframe
"&gt;&gt;&gt; x = []&gt;&gt;&gt; x += ""ha""&gt;&gt;&",operators
value,list
for name in names: if name[-5:] == 'smith': names.,set
try: do_something()except: # how can i log my exce,logging
&gt;&gt;&gt; string.whitespace'\t\n\x0b\x0c\r ',whitespace
pip install,pip
stable = stable + '\n' + getrow(),string
a1b2b10l1c1n200j1,string-matching
subprocess.popen,logging
data,dataframe
from pyvirtualdisplay import displayfrom selenium ,selenium
python manage.py shell,interpreter
proxy = { ip: port},python-requests
"[none, none, 1, 2, 3, none, none]",null
"{ ('banana', 'blue' ): 24, ('apple', 'green'): 12,",dictionary
"a = [0,1,2,3,4,5]",split
dict.keys,language-design
australia/sydney,datetime
rows = data.indexrow_count = len(rows)random.shuff,pandas
&gt;&gt;&gt; from pylab import plot;&gt;&gt;&gt; p,matplotlib
"in [1]: world = ""earth""# method 1ain [2]: ""hello, ",deprecated
threading,parallel-processing
import osimport statdef explore(p): s = '' list = ,iterator
"foobar = __import__(""foo-bar"")",module
"randomdate(""1/1/2008 1:30 pm"", ""1/1/2009 4:50 am"",",random
def foo(models.model): size = models.integerfield(,django-models
from django.core import managementmanagement.call_,django-middleware
modelform,django-forms
web.py,virtualenv
{% load current_tags %},portability
yum search python3,rhel
"- footer=models.textfield(null=true, blank=true)+ ",postgresql
matplotlib-1.2.1,matplotlib
"for item in items: entry = entry(a1=item.a1, a2=it",django
int i = 0while i &lt; 100000000: i += 1,benchmarking
.txt,nltk
locale,internationalization
pass,language-comparisons
"r=np.random.randint(3, size=(100,2000))-1",numpy
#!/usr/bin/env python,shebang
runtimeerror: broken toolchain: cannot link a simp,virtualenv
import main,python-import
"graph[i][j][""property""]=""value""",performance
print 'y x1 x2 x3 x4 x5 x6 x7'for t in texts: prin,statistics
parser = argparse.argumentparser()parser.add_argum,argparse
&gt;&gt;&gt; python.library.getcomputername()'dark,networking
scipy.pi,scipy
plots(),tkinter
"my_list = [[""a"", ""b"", 0], [""c"", ""d"", 0], [""e"", ""f""",for-loop
range(),fractions
"[x for x in range(1, 10) if x % 2]",ternary-operator
plot,ubuntu-12.04
&gt;&gt;&gt; import matplotlib.pyplot as plttraceb,matplotlib
scatter(),circle
"bar = ['a','b','c','x','y','z']",slice
import numpy as npimport matplotlib.pyplot as plti,numpy
yield,streaming
def measuretime(a): start = time.clock()  a() elap,callback
log= logging.getlogger( __name__ ),logging
#!/usr/bin/env python# why is sqlalchemy with sqli,orm
len(),time-complexity
pip install -iv tome==1.2.1.0-r4,setuptools
"im = image.open(""foo2.png"");",image-processing
class foo(object): def __init__(self): self.bar = ,boolean
conda install...,anaconda
"traceback (most recent call last): file ""manage.py",database
bin(1) -&gt; 0b1# what i would like:bin(1) -&gt; 0,formatting
@login_required,authentication
"os.chmod(""/tmp/test_file"", 664)",permissions
import urllibimport urllib2from beautifulsoup impo,beautifulsoup
from lxml import etreefrom lxml import objectifyco,xml-parsing
__repr__,dataframe
import jsonjson_data = open('file')data = json.loa,jsonlines
ps -a | grep ichat ,kill
class pokercard: faces = '23456789tjqka' suits = ',largenumber
/cygdrive/c/python26/python.exe myfile.py,cygwin
serial.py,raspberry-pi
def func( files ): for f in files: dosomethingwith,duck-typing
sys.path.append(),pythonpath
person: name: xyz,yaml
time.sleep(0.5),time
[j][i],numpy
"popen('/usr/bin/sendmail', 'w')",sendmail
&gt;&gt;&gt; 8^311&gt;&gt;&gt; 8^412&gt;&gt;&gt; 8,caret
author.objects.order_by('-score')[:30],django-models
"{'juanjo': 2, 'pedro':99, 'other': 333}",pickle
bz2.pydmicrosoft.vc90.crt.manifest msvcp90.dllmsvc,sublimetext
"sun, 06 nov 1994 08:49:37 gmt",datetime
if,performance
"s = ""string""i = 0print s+i",string-concatenation
"listtimestamps=[1,2,3,5,6,7]",list
numpy,matrix
"urllib2.urlopen('http://www.example.org', timeout=",urllib2
from matplotlib import pyplotimport numpya = numpy,plot
"fig=plt.figure()plt.axis([0,1000,0,1])i=0x=list()y",while-loop
from django.conf import settings(r'^public/(?p&lt;,django-admin
c:\python34&gt;python get-pip.pyrequirement alread,pip
"jsonstr = '{""one"" : ""1"", ""two"" : ""2"", ""three"" : ""3",parsing
mystring,escaping
func,multiprocessing
"a = ('foo',)",tuples
requests,python-requests
python script.py --example# args.example would equ,argparse
cdbs,packaging
"g++ -shared -wl,-soname,mylib -o3 -o mylib.so -fpi",shared-libraries
pyplot.xscale(),scale
inf = float('inf'),portability
import numpy as npimport matplotlib.pyplot as pltf,nan
/usr/local/lib/python2.5/site-packages/quodlibet//,egg
max,lambda
"from_addr = 'my@email.com'try: data = open(file, '",upload
"response = self.client.post('/do-something/', foll",unit-testing
"f = open(filename, 'r+')text = f.read()text = re.s",overwrite
"a = [1, 2, 3, 1, 2, 3]b = [3, 2, 1, 3, 2, 1]",list
&gt;&gt;&gt; import base64&gt;&gt;&gt; encoded = b,base64
import randomdef primesbelow(n): # http://stackove,prime-factoring
"a= [(1,2),(1,4),(3,5),(5,7)]",search
%,operators
import urllib2response = urllib2.urlopen('https://,urllib2
&lt;timeseriesresponse&gt; &lt;queryinfo&gt; &lt;l,elementtree
"&gt;&gt; ""string"" is ""string""&gt;&gt; true",internals
"&gt;&gt;&gt; class node:... def __init__(self, wor",default-value
o = object()o.attr = 'hello',language-design
c:\program files\microsoft visual studio 10.0\vc,easy-install
class foo(object): @property def bar(self): return,properties
python setup.py install,pip
http://someurl/path/to/json,httprequest
__init__.py,module
"df = dataframe ({'a' : np.random.randn(6), 'b' : [",pandas
manage.py runserver,apache
import someconverter.someconverter,module
./my_script.py my-func --arga blah --argb 1 2 3 4.,argparse
a,twisted
"nums = [1, 2, 0] nums[nums[0]], nums[0] = nums[0],",indexing
"def time_it(f, *args): start = time.clock() f(*arg",time
...if profile: import cprofile profilefilename = ',kcachegrind
import multiprocessingimport timeimport signalimpo,signals
__bases__,dynamic
&gt;&gt;&gt; import numpy as np&gt;&gt;&gt; import,sys
xml.dom.minidom,json
./tests.py --offline,pyunit
service_instance = connect.smartconnect(host=args.,suppress-warnings
"opt, args = parser.parse_args()",optparse
"$pythonpython 2.6.6 (r266:84292, jul 10 2013, 22:4",centos
my_example_task.state() == running,celery
"def mymethod(firt, second, third='something'): pas",inspect
append(),append
imapsync,bash
import hashlibimport base64import uuidpassword = ',hash
shortname.objects.distinct().filter( product__phot,coding-style
"traceback (most recent call last): file ""c:\progra",range
argparse.argumentparser(),duck-typing
"&gt;&gt;&gt; timeit(""z = a.c"", ""from __main__ impo",data-structures
&gt;&gt;&gt; class a(object): pass... &gt;&gt;&gt;,metaprogramming
import osbind = '127.0.0.1:8002'workers = 3backlog,gunicorn
pop = population[:],syntax
media_root = 'd:/dev tools/django_projects/dso/med,django
class place(models.model): name = models.charfield,django-inheritance
version: app-staging,deployment
sudo blah,fabric
$ ./configure --help | grep -i ucs --enable-unicod,ucs2
"data = { 'ids': [12, 3, 4, 5, 6 , ...] } urllib2.u",http
name,forms
subkeyword = session.query( subkeyword.subkeyword_,pep8
button,button
migrate,django-south
class person(models.model): name = models.charfiel,django-models
python setup.py sdist register upload,setuptools
foreman start,heroku
from celery.decorators import taskfrom django.core,celery
unix,calendar
#,comments
from test.team import teamfrom test.user import us,dependencies
a = []for i in range(5): a.append(i),numpy
"import sqlite3with sqlite3.connect("":memory:"") as ",sqlite3
from collections import ordereddictod = ordereddic,ordereddictionary
string1 = 'hello' 'world' #1 works finestring2 = ',optimization
exception runtimeerror: 'maximum recursion depth e,max
&gt;&gt;&gt; import numpy&gt;&gt;&gt; array = nump,list
range,range
"words = ""apple banana apple strawberry banana lemo",frequency
urls.py,django-urls
urllib.urlretrieve,urllib
def test_one (self): mock = mock() mock.method.ret,mocking
pip,cygwin
pathfile=os.path.dirname(templatefile)roottree.wri,windows
"def optionstoargs(options, separator='='): kvs = [",lambda
"super(superclass, instance).method(args)",super
sum,types
\p{ll},unicode
foo = foomodel(),database
del,mutable
render_template,jinja2
"fp = open(file, 'wb')req = urllib2.urlopen(url)for",streaming
"image = image.open(data)image.thumbnail((36,36), i",thumbnails
dir_name='/home/me/dev/my_reports'base_filename='d,filenames
"[ product_type_1, [ product_1, product_2 ], produc",templates
135.1234568,floating-point
manage.py reset todo; manage.py syncdb,django
cygwinccompiler.py,numpy
"[1, 1, 2]",language-design
rm *.pyc,pyc
error: option --single-version-externally-managed ,distribute
main.py,globals
"fig = pylab.figure() ax = fig.add_subplot(1,1,1)ax",grid
os.walk,os.walk
"[true, true, false, false, false, true]",boolean
gzip.gzipfile,gzip
class productform(modelform): long_desc = forms.ch,django
try,message
#!/usr/bin/pythonimport systry: in_file = open(sys,file-io
"dt = datetime(2013,9,1,11)",timestamp
&gt;&gt; s = 'abacaba'&gt;&gt; s.count('aba')&gt;&,count
staticmethod,static-methods
"os.path.join('c:', 'sourcedir')",path-manipulation
"def chunks(l, n): """""" yield successive n-sized chu",chunks
class contactform(forms.form): reason = forms.choi,choicefield
"import zmq, json, timedef main(): context = zmq.co",zeromq
class pizza(models.model): name = models.charfield,django-forms
settings,unit-testing
"\b[\w\.-]+@[\w\.-]+\.\w{2,4}\b",django
"yearmonth, clientcode, size, .... etc etc",count
render_template,flask
"#!/usr/bin/pythondef fibonacci(mag): a, b = 0, 1 w",iterator
staticmethod,static-methods
info main digestemails - process inboxinfo main di,jython
"a=['help', 'copyright', 'credits', 'license']b=ab.",reference
w+,io
src\ setup.py janitor.py readme.txt chnagelog.txt ,cx-freeze
"[(min([row[i] for row in rows]),max([row[i] for ro",list-comprehension
http://www.python.org/ftp/python/2.7.3/python-2.7.,virtualenvwrapper
"list = (('1','a'),('2','b'),('3','c'),('4','d'))",tuples
"[(1, u'abc'), (2, u'def')]",list
sudo pip3.4 install psycopg2,osx
"fin = open(""hi.bmp"", ""rb"")firm = fin.read(2) file_",binary
for thing in session.query(things): analyze(thing),sqlalchemy
"parmap(function,[data])",smp
pip install zipline,pip
...error: command '/usr/bin/gcc' failed with exit ,python-imaging-library
&gt;&gt;&gt; o = object()&gt;&gt;&gt; o.test = 1tr,instances
some varying text\n\ndsjfkdafjkdafjdsakfjadsflkdla,multiline
"mylist = ['foo', 'bar', 'baz', 'quux']",select
"def complex(real=0.0, imag=0.0): """"""form a complex",documentation-generation
products.views.filter_by_led,django-templates
"[interspecies, interstelar, interstate]",haskell
np.tensordot,numpy
series,boolean-logic
import urllib2req = urllib2.urlopen('http://lenta.,urllib2
gunzip mysql-python-1.2.3c1.tar.gztar xvf mysql-py,installation
python,ssh
"class swallow(object): def airspeed(self): """"""retu",inheritance
a_values,multidimensional-array
"import numpy as npdata = np.zeros( (512,512,3), dt",arrays
kill -hup,reload
"db = sqlite.connect(""test.sqlite"")res = db.execute",sqlite
"print ""this should be""; print ""on the same line""",newline
polyfit,matplotlib
"&gt;&gt;&gt; resolvepath(""http://www.asite.com/fol",path
"def logger(myfunc): def new(*args, **keyargs): pri",metaprogramming
"a, b = true, false",declaration
import numpy as npimport matplotlib as pltx = aran,plot
from django.db import modelsclass othermodel(model,dictionary
response['content-disposition'] = 'attachment; fil,http
&gt;&gt;&gt; import urllib2&gt;&gt;&gt; import sim,urllib2
class foo: x = 4 @property @classmethod def number,properties
"cursor.execute(""select id, name from `table`"")for ",python-db-api
class playerstat(models.model): player = models.fo,django-models
iterable,reduce
&lt;html&gt;&lt;head&gt;&lt;/head&gt; &lt;body&gt;,templates
bar,copytree
"&gt;&gt;&gt; result = add.apply_async(args=[2, 2],",celery
i,slice
unicode,types
fruits,list
print,syntax
"def check_mobile(request, template_name): if reque",django-templates
__init__,inheritance
"&gt;&gt;&gt; x = tuple(set([1, ""a"", ""b"", ""c"", ""z"",",comparison
__slots__,subclass
quicksort :: ord a =&gt; [a] -&gt; [a]quicksort [],quicksort
sscanf(),split
import matplotlib.pyplot as pltimport matplotlib.c,matplotlib
counter = 0def increment(): counter += 1increment(,scope
shutil.rmtree,file-permissions
class foo: num = 1,oop
matplotlib,plot
typos,fuzzy-search
"fruits = ""['apple', 'orange', 'banana']""",list
pip install -r freeze_output.txt,git
cgi.parse_qs(),urllib
psyco,psyco
def pair_sequence(): for i in range(2**32): for j ,yield
"user = models.user.query.filter_by(username=""ganye",flask-sqlalchemy
print,formatting
_mysql.c(34) : fatal error c1083: cannot open incl,virtualenv
db,flask
fig=figure(i)ax=gca()ax.set_color_cycle([colormap(,colors
class book(models.model): title = models.charfield,django
from sklearn.feature_extraction.text import countv,nltk
foo_model_instance = models.get_or_create_foo_from,unit-testing
mkvirtualenv,virtualenv
async.map(rs),python-requests
bytes.hex,hex
np.any,performance
"a = numpy.arange(0,27,3).reshape(3,3)# array([[ 0,",syntax
new_list = list(reversed(old_list)),html-lists
sort(),sorting
while 1: # doing amazing pythonic embedded stuff #,keyboard
cgi,osx-mountain-lion
import numpy as npdef test_my_mult(n): a = np.rand,numpy
__str__,serialization
import csvimport scipy.statsimport numpyimport mat,matplotlib
bsddb,store
none,if-statement
#thething = a particular entity we pull from the d,gae-datastore
import pdb; pdb.set_trace(),nosetests
shape = arr.shaperesult = np.zeros(shape)for x in ,numpy
"starttime = time.time()somesqlorsomething()print """,benchmarking
1. importerror: no module named _sysconfigdata_nde,google-app-engine
no connection adapters were found for '192.168.1.6,python-requests
from collections import namedtuplepoint = namedtup,namedtuple
-1 % 10,math
from django.db import modelsclass member(models.mo,django-rest-framework
unittest,nose
pythong,pipe
"class user(base): ... birthday = column(date, inde",database
"raw = win32com.client.dispatch(""mylib.myclass"")",pywin32
set([]),comparison
lxml,pip
"import zipfilefh = open('test.zip', 'rb')z = zipfi",compression
os.system('uname -o'),system
"int main() { qapplication app(argc, argv); // init",event-loop
return render_to_response('sample/sample.html....),django
row | name | year | priority----------------------,data-structures
sudo uwsgi -b 25000 --chdir=/www/python/apps/pyapp,uwsgi
lxml,pip
{{ data[0] }},django-templates
"range((3,2)) # [(0,0),(0,1),(1,0),(1,1),(2,0),(2,1",iteration
urlopen,urllib2
"&lt;envelope xmlns=""http://www.xxx.com/zzz/yyy""&gt",xml-parsing
image.open(object.logo.path).save('/tmp/output.jpg,jpeg
flask-login,flask-login
"text = ""a,b,c""",string
hh:mm:ss,tkinter
"str = ""the &amp;yquick &amp;cbrown &amp;bfox &amp;",string
"return redirect('some-view-name', backend, form.cl",redirect
(),sorting
warnings.warn,ipython
"bin(reduce(lambda x, y: 256*x+y, (ord(c) for c in ",ascii
project setup.py package __init__.py lib.py script,sys.path
pylab.savefig,figure
easy_install pil,easy-install
import requestsrequests.post(url='https://foo.com',python-requests
"im = image.open(""image.gif"")pix = im.load()print(p",python-imaging-library
dt,pytz
d2 = df[(df['l_ext']==l_ext) &amp; (df['item']==it,dataframe
ec2:~$ sudo aptitude install build-essential pytho,matplotlib
"members = {'starspy' : 'shsn4n', 'test' : 'test1'}",save
dataframe,indexing
"&gt;&gt; head, tail = **some_magic applied to** [1",tail
uploadedfile,python-imaging-library
importerror: pycurl: libcurl link-time ssl backend,virtualenv
sys.path.append(mod_directory),pythonpath
class my_python_obj(object): attr1='a' attr2='b' a,attributes
&gt;&gt;&gt; import tempfile&gt;&gt;&gt; tup = tem,mkstemp
"class pokercard: ""a card for playing poker, immuta",cross-language
a,django-queryset
class c(object): def __hash__(self): return 42,dictionary
"data = {}data ['key1'] = ""keyinfo""data ['key2'] = ",dictionary
dicked = {}dicked[none] = 'foo' # none okdicked[(1,dictionary
"traceback (most recent call last): file ""&lt;conso",subprocess
copying pil/tiffimageplugin.py -&gt; build/lib.lin,pillow
- main window |- toolbar with some buttons (add/ed,user-interface
from xml.parsers import expatclass element(object),performance
&gt;&gt;&gt; from pytesser import *&gt;&gt;&gt; im,tesseract
=======================| column 1 | column 2 |====,ascii
"string[] words = { ""hello"", ""wonderful"", ""linq"", """,list-comprehension
if(getdata()){ $data = getdata(); echo $data;},dictionary
1 a 2 b 3 c,dictionary
"""tableapplechairtablecupboard...""",text
sviewlog = logging.getlogger('myapp.views.scans')v,logging
/dev/sda2,filesystems
"d = {'a':1, 'en': 'hello'}",urlencode
def primes_sieve(limit): limitn = limit+1 primes =,primes
time.time(),duration
(nlmanagement)psychok7@ultrabook:~/code/work/nlman,ubuntu
"self.assertequal (tuple (self.numpy_data), tuple (",assert
"def myquery(): sql = ""select field1, field2, field",string-formatting
import urllib2myurl = 'http://bit.ly/dofet'page = ,forwarding
"datadict = { ""a"":{ ""r"": 1, ""s"": 2, ""t"": 3 }, ""b"":{",dictionary
numpy.random,random-seed
&gt;&gt;&gt; def f(x): return x % 2 != 0 and x % 3,filter
if __name__=='__main__': from timeit import timer ,benchmarking
==&gt; sqlite_memory_vs_disk_benchmark.py &lt;==#!,sqlite
class book(models.model): num_pages = ... author =,django
"s=""word to split""",split
python -m simplehttpserver 127.0.0.1:8000 # doesn',shell
in,dataframe
while not eof do begin readline(a); do_something;e,iteration
"def sendinitialrequest(xmlmessage, redirecturl): u",httprequest
"from tkinter import tk, frame, button, entry, canv",pep8
11,graph
"import urllib2,cookielibsite= ""http://www.nseindia",urllib
np.ndarray,memory-management
namedtuple._replace,namedtuple
class event(models.model): event_id = models.autof,django-forms
"&gt;&gt; a = [1,2,3,1,2,3,1,2,3];&gt;&gt; find(a &",find
post,amazon-web-services
"ax.tick_params(axis='x', pad=30)",graphing
def,lambda
article.objects.filter(q(pk=1) | q(pk=2) | q(pk=3),django-q
- url: (.*)/ static_files: static\1/index.html upl,http-status-code-404
__init__,init
%userprofile%\application data\appname\,application-settings
=,pep8
0,code-golf
pylint,static-analysis
environmenterror: [errno 12] cannot allocate memor,memory
# module writer.pyimport sysdef write(): sys.stdou,sys
import matplotlib.pyplot as pltfig = plt.figure()a,colorbar
class kitten(models.model): claw_size = ... licens,django-models
dic0 = {'dic0': 0}dic1 = {'dic1': 1}ndic = dic0 + ,append
&gt;&gt;&gt;,python-interactive
import matplotlib.pyplot as pltimport numpy as npc,plot
del lst[:]lst[:] = [],clear
cython/includes/numpy/__init__.pxd,numpy
&gt;&gt;&gt; for i in range(10):... print i... try,continue
and,design
# normalize audio channels to between -1.0 and +1.,numpy
exception in thread thread-3:traceback (most recen,ssl-certificate
"void myfunction (int first, string second){//some ",arguments
"countries = ( ('fr', _('france')), ('de', _('germa",internationalization
pip install scrapy,visual-studio
def quiz_form_factory(question): properties = { 'q,unit-testing
try: #something1 #something2except something1: #re,exception-handling
x = 'y' 'z',concatenation
"l = [""a"", ""b"", ""c"", ""d"", ""e""]",dictionary
class subject(models.model): name = models.charfie,django-models
"cars = {'a':{'speed':70, 'color':2}, 'b':{'speed':",dictionary
"myfunc([2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 20])",range
simplehttpserver.simplehttprequesthandler,user-interface
# file: ftplib-example-1.pyimport ftplibftp = ftpl,portability
$ python setup.py bdist_wheelusage: setup.py [glob,setuptools
and,title-case
from app.models import *,ipython
"strs = strs.replace('&amp;', '\&amp;')strs = strs.",replace
#if debug&lt; do some code &gt;#else&lt; do some o,equivalent
class stopadmin(admin.modeladmin): formfield_overr,django-forms
"def callback_create_profile(sender, **kwargs): # c",signals
#!/usr/bin/env perluse strict;use warnings;,warnings
$ pip install lxmlrequirement already satisfied (u,virtualenvwrapper
"import pandas as pddf = pd.dataframe({'l':['a','b'",pandas
pip install matplotlib,matplotlib
"void calculate_daily ( char *db_name, int grid_id,",cython
"def safe_divide_1(x, y): if y == 0: print ""divide-",idioms
&gt;&gt;&gt; 1if true else 01,conditional-expressions
valueerror,numpy
from math import *try: import matplotlib as mpl im,centroid
import collectionsd = collections.ordereddict()d[',dictionary
create_index,pymongo
__path__,module
"f = urllib.urlopen(""http://en.wikipedia.org/w/inde",user-agent
@is_premium_userdef sample_view: ....... ......,permissions
import sysdef func1(): func2()def func2(): raise e,exception-handling
my_prefix_what_evermy_prefix_what_so_evermy_prefix,prefix
# a card is represented by an integer. the low 2 b,permutation
polyfit(),scipy
"a=['123','2',4]b=a[4] or 'sss'print b",default-value
"from numpy import matrixa = matrix([[1,2],[3,4]])",numpy
class employee: pass,empty-class
sqlalchemy.schema.index,orm
in[1]: name = 'long_name_to_type_every_now_and_the,ipython-magic
"&lt;div class=""class1""&gt;",beautifulsoup
"traceback (most recent call last): file ""parser5_n",multiprocessing
{% if landing_dict.ingredients %} &lt;hr&gt; {% fo,dictionary
from mpl_toolkits.mplot3d import axes3dfrom matplo,plot
time,shell
/usr/bin/python,pycharm
&lt;workspace&gt; src mypackage __init__.py subpac,documentation-generation
"class sequence(): def __init__(self, max): self.ma",iterator
"first = [1,2,3,4,5]second = [6,7,8,9,10]",sum
vector(),exception-handling
from datetime import datetimeimport numpy as npsta,numpy
fooerror,polymorphism
"list_of_urls = ['http://www.google.fr/', 'http://w",list
import matplotlibmatplotlib.use('agg')import matpl,visualization
"price_ranges = { 64:(25, 0.35), 32:(13, 0.40), 16:",scope
"&gt;&gt;&gt; import yaml, cjson; d={'foo': {'bar':",serialization
np.nan,pandas
d,instantiation
"(""person 1"",10)(""person 2"",8)(""person 3"",12)(""pers",tuples
"{% macro example_1(one, two, **kwargs) %} do macro",jinja2
"class building: def __init__(self, x, y): self.x =",sqlalchemy
&gt;&gt;&gt; '12345'.count('')6,count
"params = ['a',3.4,none]",function-parameter
"[0,1,2,3,3,4] # this is a monotonically increasing",performance
numpy.nan != numpy.nan,arithmetic-expressions
fcntl,linux
"import numpy# polynomial regressiondef polyfit(x, ",statistics
"my_series = pandas.series([1,2,2,3,3,3])pandas.mag",pandas
#include &lt;iostream&gt;#include &lt;vector&gt;#i,performance
"import urllib2try: urllib2.urlopen(""some url"")exce",urllib2
multiprocessing,python-multiprocessing
&amp;,bit-manipulation
from django import formsfrom django.forms import c,django-forms
import threadingimport sysclass failingthread(thre,stack-trace
exception type: templatedoesnotexistexception valu,django-rest-framework
import os,audio
$ file /usr/bin/python,32bit-64bit
any(),callback
# djangoimport mymodelmymodel.objects.a[tab] # wil,osx-lion
numpy.average(),weighted
a = [],memory-management
"tocsv = [{'name':'bob','age':25,'weight':200},{'na",dictionary
"cursor.execute("""""" insert into tree (id,parent_id,",mysql-python
"list = [(1,5), (1,7), (2,3)]",tuples
&gt;&gt;&gt; x = 3&gt;&gt;&gt; class myclass(objec,scope
me@something:~/$ gitsloc --branch master1048153450,git
"improperlyconfigured(""error loading mysqldb module",django
"for encoding1, encoding2 in itertools.permutation(",encoding
"def iszero( i): if i != 0: print ""ok"" else: print ",error-handling
"xs = ['dddd','a','bb','ccc']print xsxs.sort(lambda",sorting
static_url,apache
"import simplejson, jsondata = [['apple', 'cat'], [",encoding
{% for movie in movie_list | sort(movie.rating) %},jinja2
"try: comsocket = socket.socket(socket.af_inet, soc",tcp
from flask import abortabort(404),httpresponse
dserror,coding-style
subprocess.popen,process
"dubliners/book/ [includes models.py, views.py, etc",django-templates
12:15:25 ~/sandbox/ec$ nosetests --pluginsplugin x,coverage.py
"x = [1400, 1500, 1600, nan, nan, nan ,1700] #not i",nan
#!/usr/bin/env pythonfrom distutils.core import se,install
configparser,ini
$ python create_graphs.py --name=name,subprocess
"p.hist(d,bins=50,log=true,alpha=0.5,color='b',hist",matplotlib
dyld: library not loaded: @executable_path/../.pyt,terminal
"def shuffle_in_unison(a, b): assert len(a) == len(",numpy
bash$ time python fittosize.py .... real 0m1.482s ,performance
hook_loader.py hook_loader.pyc project.py project.,virtualenv
a = somematrixarrayfrom numpy.linalg import eig as,numpy
n,slice
"mstr = 'a,b,c,d,e' ",list
def stuff(): try: ..... return useful except excep,exception-handling
jar xf /home/foo/bar/portal.ear binaries.war,unix
"try { ...catch (exception e) {  log(""error at x"", ",logging
"[(a, 1), (b, 2), (c, 3)]",dictionary
downloading pymssql-2.0.0b1-dev-20130403.tar.gz (2,ubuntu-12.04
request_token_url = 'https://www.google.com/accoun,oauth
if key &lt; 1 or key &gt; 34:,logic
"a = 7def printa(): print ""value of a is %d"" % (a)d",scope
from crypto.cipher import aes,pip
"import pandas as pdvalues = [[1,2], [2,5]]df2 = pd",pandas
error while executing python code.!stack 0java.lan,eclipse-cdt
namedtuple,namedtuple
"{u'2012-06-08': 388, u'2012-06-09': 388, u'2012-06",dataframe
print 'hello world',skeleton-code
"ruby -e ""$(curl -fssl https://raw.github.com/homeb",virtualenv
valuetrial measurement 1 0 13 1 3 2 4 2 0 nan 1 12,dataframe
"def render_to_response(self, context, **response_k",json
import subprocessdef my_function(x): return x + 10,subprocess
scikits.timeseries.lib.reportlib.report.__init__(*,arguments
current level: 13.4 db.,floating-point
"daterange = [datetime.strptime(dateranges[0], ""%y-",monthcalendar
"max(float('nan'), 1)",comparison
for,loops
df,pandas
import xml.etree.elementtree as etroot = et.elemen,xhtml
python someprojectfile.py,import
"traceback (most recent call last): file ""tford.py""",static-methods
"self.word_counts[source].update({'date':posttime},",pymongo
product,django-admin
git commit,fabric
"&gt;&gt;&gt; df = pd.dataframe([[1, 1, 1, 1], [2, ",pandas
string.startswith(),cocoa
"class process: def __init__(self, pid, ppid, cmd, ",initialization-list
class author(models.model): first_name = models.ch,django-models
pandas.parser.cparsererror: error tokenizing data.,pandas
"a = [5, 7, 11, 4, 5]for v, w in a: print [v, w]",loops
from multiprocessing import pool def go(): print(1,multiprocessing
print,compatibility
"a = [51,27,13,56] #given listd = one-line-statemen",dictionary
request.post['xzy'],django-models
@propertydef total(self): return self.field_1 + se,properties
shutil.copytree(),filesystems
application: demas1252cversion: 1runtime: pythonap,google-app-engine
"class particle:  def __init__(self,domain,id): sel",methods
"&lt;img src=""../path/image.png""&gt;&lt;/img&gt;",mime
&lt;a&gt;,beautifulsoup
/(?&lt;!foo.*)bar/,perl
mode.use_inf_as_null,scipy
class basecontroller(qobject): def setupevents(sel,qt4
from django.db import modelsmodel = models.get_mod,introspection
httperror_seek_wrapper: http error 403: request di,beautifulsoup
"for n in range(6,0): print n",for-loop
"&gt;&gt; set([1,2,3]) | set([2,3,4])set([1, 2, 3, ",union
"dict_test = {'key2': {'key_in3': 'value', 'key_in4",dictionary
downloading/unpacking matplotlib from https://pypi,pip
numpy.rank,numpy
bgservice.py,cron
"&lt;form id=""login-form"" action=""auth/login"" metho",httpclient
from abc import abcmetaclass uobj: __metaclass__ =,mapping
class trackinfohandler(object): def __init__(self),fsm
.clf(),numpy
"{""id"":""123456789"",""name"":""john doe"",""first_name"":""",json
multiprocessing.pool,multiprocessing
&gt;&gt;&gt; 1 in ()false,membership
&lt;module&gt;from apiclient.discovery import buil,google-api-python-client
__str__,object
def foo(): return 'foo'def bar(): yield 'bar',generator
str( time.strftime('%y') ) + str( int(time.strftim,time
"class foo(tuple): def __init__(self, b): super(foo",subclass
def(myview) do some stuff if user-is-on-a-mobile-d,mobile
"@app.route(""/canonical/path/"")@app.route(""/alterna",flask
"traceback (most recent call last): file""c:/users/f",networkx
"d1 = {'a':'2', 'b':'3'}",filter
from facebook import facebookapi_key = '123456789_,api
__init__,constructor
assertionerror,assert
unique=true,bigtable
dict,dictionary
iconv -t utf-8 $file &gt; converted/$file # this i,file
mkvirtualenv,virtualenv
(x for x in range(10) if x%2==0) # generates all e,scope
from flask import g #among other things,jinja2
"import threading, timeclass reqthread ( threading.",events
if ($var =~ /foo(.+)/) { # do something with $1} e,perl
#!/usr/bin/pythonimport numpy as np;import time; f,pickle
"# instead of regular split&gt;&gt; s = ""a,b,c,d""&g",list
"class orderbook: orders = {'restaurant1': none, 'r",dictionary
"import osfrom os.path import join, getsize, isfile",folders
a,database-design
def normalize(v): norm=np.linalg.norm(v) if norm==,scikit-learn
(venv)avlahop@apostolos-laptop:~/development/djang,heroku
class videofile(models.model): show = models.forei,migration
"class dummy(object): def some_function(self,*args,",class-method
asyncio,python-requests
from scipy.stats import cumfreqa = array([...]) # ,statistics
"split(""\t"")",newline
brew doctor,homebrew
"class a: dict1={} def add_stuff_to_1(self, k, v): ",initialization
from datetime import datetimedatetime_list = [ dat,compare
user_dict = { 'queryset': user.objects.filter(perm,dictionary
app.config.from_envvar(&lt;file_name&gt;),jinja2
"&gt;&gt;&gt; some_list = [""apple"", ""pear"", ""banana",tuples
helloworld(),built-in-types
re.compile('(\. |^|!|\?)([a-z][^;_æ•\.&lt;&gt;@\^&,split
set,sortedmap
http://10.1.1.1:5000/login?username=alex&amp;passw,flask
celery_task_serializer,celery
'thelongandwindingroad',string
"elements = [(1,1,1),(2,3,7),(3,5,10)]",tuples
"traceback (most recent call last): file ""/usr/bin/",pandas
under_test,unit-testing
import matplotlibimport numpy as npfrom matplotlib,scipy
somelist[:],slice
"application = endpoints.api_server([testendpoint],",unit-testing
show_most_informative_features(),classification
unittest,git
#!/usr/bin/env pythonimport timefrom itertools imp,timeit
object,deprecated
./_pylibmcmodule.h:42:10: fatal error: 'libmemcach,osx-lion
from celery.decorators import task@task()def add(x,django-celery
def getvisiblepackages(self): visiblepackages = {},django-models
assert,assert
1 128 1298039123388 0 2,alignment
&gt;&gt;&gt; from __future__ import bracessyntaxer,python-internals
"&gt;&gt;&gt; ['a','b',]['a', 'b']",syntax
#coding: utf-8whatever = '?©?“?«?',unicode
entry,textbox
"(u'2',)",tuples
"om_points = os.popen(command, ""w"").....",popen
default=null,django-models
"12:18pm est on oct 18, 2010",time
"if not has_imported(""sys""): import sys",module
arrayobject.h,distutils
__eq__(),operators
def maker(n): def action(x): return x ** n return ,nested
import jsonimport csvf=open('issues.json')data = j,github
except:,skip
__main__.fooclass,python-datamodel
"image = image.new(""rgba"", (288,432), (255,255,255)",imaging
xmlhttprequest,xmlhttprequest
"def f(): global x x = 1def g(): print(globals()[""x",global
"color = (randint(100, 200), randint(120, 255), ran",random
"subprocess.call([""/home/myuser/run.sh"", ""/tmp/ad_x",shell
http://example.com/site1/http://example.com/site2/,apache2
"&gt;&gt;&gt; list(itertools.permutations([1, 1, 1]",itertools
"datetime(2008, 1, 1, 0, 0, 0, 0)",timestamp
"ftp.retrbinary(""retr "" + file_name, process)",progress-bar
virtualenvwrapper,centos
class reversesinglerelatedobjectdescriptor(six.wit,exception
&gt;&gt;&gt; import matplotlib.pyplot as plt&gt;&g,matplotlib
100.95,sqlite
import matplotlib.pyplot as pltimport numpy as npt,matplotlib
flask,sqlalchemy
x==y,operator-overloading
&gt;&gt;&gt; assert 1==2traceback (most recent cal,parentheses
mockobj = mock(spec=mydependencyclass)mockobj.meth,mocking
"x=[false,true,true,false,true,false,true,false,fal",indexing
"def coroutine(): with open(path, 'r') as fh: for l",coroutine
for element in json[referenceelement].keys():,hash
"super([[derived class]], self).[[base class method",super
valueerror: jpeg is required unless explicitly dis,pillow
#!/usr/bin/python# -*- coding: utf-8 -*-,eof
len(str(float(x)/3)),floating-point
bash -x script.sh,perl
[f(x) for x in l if f(x)],code-readability
how much for the maple syrup? $20.99? that's ricid,string
south,django-1.7
test_suite = 'nose.collector',nose
foo.py,overloading
while not hardware_is_ready(): passprocess_data_fr,yield
def _attempt(actor): if actor.__class__ != user: r,django-users
2.14 parallelism,r
#NAME?,assert
newlist = oldlist[:],shallow-copy
&lt;content&gt;,lxml
something1something12something17something2somethin,sorting
source ~/envs/someenv/bin/activate,shell
map,pydev
foo,idioms
com.company.actualpackage,namespaces
from flask import flaskimport accountapiapp = flas,file-organization
warning: method could be a function,pylint
treeroot: branch1: branch1 text branch2: branch2 t,yaml
def onlyascii(char): if ord(char) &lt; 48 or ord(c,unicode
exec,exec
result_data = zlib.decompress( base64_decoded_comp,zlib
sudo pip install pycurl,pycurl
"def approx_equal(a, b, tol): return abs(a - b) &lt",floating-point
"d = { 'a': [1, 3, 2], 'b': [6], 'c': [0, 0]}",dictionary
# opens each file to read/modifyinfile=open('11033,typeerror
numpy.digitize,copy
"x = [(0.1, 1.), (0.1, 2.), (0.1, 3.), (0.1, 4.), (",numpy
"[(1,4),(2,4),(3,4),(4,15),(5,15),(6,23),(7,23),(8,",dictionary
def forgotpassword(request): if request.post: emai,django-models
@classmethod,class-method
pip install -e git://github.com/hiidef/oauth2app.g,pip
32 seconds17 minutes22.3 hours1.25 days3.5 weeks2 ,formatting
600,permissions
__init__,constructor
ipython notebook --pylab inline,ipython
def json(self): return json.dumps( { 'items': self,json
exception: (&lt;type 'exceptions.attributeerror'&g,urllib2
&lt;h2&gt; this is cool #12345678901 &lt;/h2&gt;,beautifulsoup
fileinput,mp3
"from datetime import datetime, timedeltanow = date",time
manage.py runserver,in-memory-database
"mydict = {key1: value_a, key2: value_b, key3: valu",dictionary
@taskdef compute(users=none): if users is none: us,task
import numpy as pdef firstfunction(): unfiltereddu,numpy
"[1,5,6,10,11]",pandas
&lt;&gt;,operators
subprocess,interpreter
import datetimeimport pytzfmt = '%y-%m-%d %h:%m:%s,python-datetime
fun (head : rest) = ...,pattern-matching
"&gt;&gt;&gt; os.path.join(""c:/"",""home"",""foo"",""bar""",os.path
settings.debug,wsgi
/main,directory
pd.isnan,nan
nan,nan
mainpack/ __main__.py __init__.py  - helpers/ __in,runpy
request.meta,http-headers
{{ form.first_name }},forms
project.app1.modelsproject.app1.viewsproject.app2.,python-import
import socketfrom datetime import timedeltafrom ce,celery
\u2026,unicode
"def decorator(func): def _decorator(*args, **kwarg",scope
python -m pdb app.pyw&gt; break app.pyw:55 # this ,pyqt4
x,algorithm
col1 col2a 1 b 2c 3,dataframe
"def try_parse_int(s, base=10, val=none): try: retu",integer
params.csv,pandas
def decorator(f): def _decorator(): print 'decorat,docstring
"class baseclass(object): def __init__(self, classt",inheritance
"&lt;select multiple=""multiple"" name=""services"" id=",http
def utf_8_encoder(unicode_csv_data): for line in u,csv
"subprocess.popen(""/the/script.py"")",subprocess
(venv)jabuntu14@ubuntu:~/desktop/helloflask$ pip i,gunicorn
"l = range(100) for i in l:  print i,  print l.pop(",iterator
"values = {'profile' : 'testprofile',  'format': 'r",sorting
ser = serial.serial()ser.baudrate = 9600#for windo,serial-port
"import threadingimport timedef f(): print(""hello w",asynchronous
simplehttpserver,simplehttpserver
__init__.py,module
for,contains
py.test,py.test
truncate table `books`,django
async,asynchronous
t,attributes
"r = xrange(1, 10)print sum(1 for v in r if v % 2 =",xrange
"sql_string = ""insert into hundred (name,name_slug,",psycopg2
"t = scipy.linspace(0,120,4000)acc = lambda t: 10*s",scipy
"class request(object): def __init__(self, environ)",class
struct,raw-sockets
"test = [ ""item1"" ""item2""]",list
from models import counterfrom django.db import tr,transactions
modelserializer,api
dict,subclass
from functools import wrapsdef foo_register(method,decorator
dict_x,dictionary
"import ""&lt;full path&gt;/foo/util.py""",external
"[(1,2),(2,3),(4,5),(3,4),(6,7),(6,7),(3,8)]",tuples
"&lt;input type=""submit""&gt;",flask
"listofnum = ['000231512-n','1209123100000-n00000',",trailing
while 1: line = data.readline() if not line: break,variable-assignment
foo.so,shared-libraries
from django import formsfrom registration.forms im,django-forms
traceback.format_tb(sys.exc_info()[2]),stack-trace
"lang=de_de.utf-8language=lc_ctype=""de_de.utf-8""lc_",encoding
"d = {'a': [1], 'b': [1, 2], 'c': [], 'd':[]}",dictionary
dataframe,pandas
#!/usr/bin/env python# -*- coding: utf-8 -*-from s,distutils
"[1,2,3,4]",dictionary
"def kerma(): return ""energy / mass"" print kerma()",formatting
"mylist = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 ,9 , 10 ]",random
repo/repo/app.pyrepo/settings.pyrepo/models.pyrepo,py.test
json.jsonencoder,serialization
hash(),hash
"[1234567891,2345678912,3456789123,4567891234,56789",overlapping
"try {module=import(""mymodule""); //this line will t",boost-python
finduniquewords,sorting
dev_appserver.py,google-app-engine
import osdef populate():python_cat = add_cat('pyth,django-1.8
help_text,django-models
imshow(),matplotlib
in [1]: class c(object): # a class ...: def f1(sel,function
np.append,numpy
"&gt;&gt;&gt; encode('john doe', password = 'mypass",passwords
#!/usr/bin/python# test.pyxdef test(value): for i ,cython
urllib.quote,urllib
&gt;&gt;&gt; import yaml&gt;&gt;&gt; yaml.dump(u'a,pyyaml
"post:&lt;querydict: {u'section': [u'39'], u'mains'",django-models
"fixed_points = [-pi, -pi/2, pi/2] v v v |---------",geometry
"def get_content(): return ""stuff""",mocking
python: 106 secondsruby: 5 secondsvbscript: 124 se,vbscript
"def addfoldertozip(myzipfile,folder): folder = fol",zip
import matplotlibmatplotlib.use('gtkagg')import ma,pygtk
python setup.py install,pycrypto
204 no content,http
noweb,literate-programming
&gt;&gt;&gt; asyncresult('...').status'pending',status
"import urllibfile = urllib.urlopen(""http://www.pyt",urllib
classifier = nltk.naivebayesclassifier.train(train,classification
$ python version 2.7.5$ python3.3 version 3.3,install
s,list
"partition([1,2,3,4,5],5)-&gt;[[1],[2],[3],[4],[5]]",slice
__init__,attributes
first = truefor member in something.get(): if firs,iteration
"&gt;&gt;&gt; a = array([[1,2,3],[4,3,1]])&gt;&gt;&",max
"object result: items = [item1,item2] users = [{nam",google-app-engine
class tag(models.model): name = models.charfield(m,django-models
*** glibc detected *** python: double free or corr,numpy
&gt;&gt;&gt; from itertools import chain&gt;&gt;&g,list-comprehension
&gt;&gt;&gt; s = '23.45678'&gt;&gt;&gt; i = int(s),integer
collections,cpython
from sqlalchemy import create_enginefrom sqlalchem,sqlalchemy
"f1 = open('a.txt', 'r')print(f1.readlines())f2 = o",sigpipe
models.py,django-models
"sorted(profile.objects.all(), key=lambda p: p.repu",list
"requests.get('https://mysite.com', verify=true)",ssl-certificate
automobile.py,package
"x=np.array([range(100,1,-1)])#generate a mask to f",numpy
dumrat@dumrat:~/programming/python$ time python ca,optimization
"when /i sign in/ do within(""#session"") do fill_in ",acceptance-testing
n x 3,algorithm
!$omp,openmp
from pil import imageim = image.open(image_filenam,image-processing
{% if profile.user.first_name is null %} &lt;p&gt;,django-forms
"filename = ""example_file_(extra_descriptor).ext""",perl
day p1s1 p1s2 p1s3 p2s1 p2s2 p2s31 1 2 2 3 1 22 2 ,pandas
class test(object): passa = test()test.value = 5a.,class
"import lxml.etree as etxml=""""""&lt;groceries&gt; &l",lxml
&lt;item&gt; &lt;title&gt;item 1&lt;/title&gt; &lt,lxml
client,wsdl
export pythonpath=/path/to/library/app,pythonpath
"existing_text = ""the old river""",grammar
| my_project/| setup.py| my_project/ | __init__.py,configparser
.append(x),memory-leaks
label instances 5 1190 4 838 3 239 1 204 2 127,nlp
**kwargs,python-sphinx
"&gt;&gt;&gt; d = {}&gt;&gt;&gt; d[0,] = 'potato'&g",tuples
"&gt;&gt;&gt; filter(lambda x: x &gt; 10, [1,4,12,7",data-partitioning
tool -d character -f integer [filename],command-line
enwiki_session=17ab96bd8ffbe8ca58a78657a918558e; p,http-request
"x=pandas.dataframe(...)s = x.take([0], axis=1)",pandas
"string = ""&lt;p&gt;hello world&lt;/p&gt;&lt;a href",url
success !,sqlalchemy
"import math, operatorfrom pil import imagedef comp",image
"listofitems= ['1','2','3','4','5']",jinja2
"&lt;link rel=""stylesheet"" href=""example.css?{% mer",mercurial
journal #1 admin page[name][publisher][url].....li,django-admin
"def splitter(str): for i in range(1, len(str)): st",format
"import multiprocessing, timedef task(args): count ",multiprocessing
"class solution: """""" @param a: the first integer @p",algorithm
os.path.exists(filename),time
global,compiler-construction
def add(req): if req.method == 'post': form = arti,forms
"def foo(): """"""this function does nothing."""""" pass",python-module
'jpg',design-patterns
&gt;&gt;&gt; from collections import namedtuple&gt,namedtuple
"filename = 'file1'f = open(filename, 'r')content =",pipe
"if os.geteuid() != 0: exit(""you need to have root ",privileges
a b1 101 202 302 403 10,pandas
from pybrain.datasets import superviseddatasetfrom,pybrain
"import subprocesssubprocess.popen('explorer ""c:\pa",explorer
default,pip
xxxx,math
import wavew = wave.open('/usr/share/sounds/ekiga/,wav
class modeltests(testcase): fixtures = ['initial_d,unit-testing
sqlalchemy,sqlalchemy
if sys.platform == 'win32': ...,64bit
class groupe(models.model): nom = models.charfield,django-models
import osconfig_name = 'myapp.cfg'config_path = os,relative-path
real 0m18.823suser 0m2.735ssys 0m6.042s,zeromq
import numpy as npimport cv2import matplotlib.pypl,image-processing
import cv2import numpy as npdef gettranslationmatr,opencv
class person(models.model): name = models.charfiel,django-templates
0,parsing
os.path.abspath('d:/projects/suishoubei/www/ssb/st,filesystems
"import numpy as npn = 2000output = np.zeros([n,n])",parallel-processing
requests.get,python-requests
"def escape(string): """""" returns the given string w",replace
"in [16]: c.execute(""update movies set rating = '8.",sqlite3
"&gt;&gt;&gt; def f(a,b,c):... print a, b, c... &gt",iterable-unpacking
"h = heapq.heapify([...], key=my_lt_pred)h = heapq.",sorting
.keys(),dictionary
"[25.75443, 26.7803, 25.79099, 24.17642, 24.3526, 2",search
__new__,language-design
downloading/unpacking bcrypt==1.0.2 (from -r requi,pip
"&gt;&gt;&gt; path = r""c:\scr.txt""&gt;&gt;&gt; file",locking
import matplotlib.pyplot as pltdef main(): test1(),language-agnostic
setup.py,setup.py
15 ncesreader = csv.reader(open('geocoded_output.c,utf-8
"def f(): return 1,2a, b = f()",iterable-unpacking
[~/wepapps/python/python-2.6.1]# make install/usr/,sudo
"a = [1,2,3,4]b = [2,3,4,5]a.*b = [2,6,12,20]",multiplying
stdout,stdout
"unicode(somestring, 'utf8')",utf-8
nosetests,nose
def verybighello(): i = 0 while i &lt; 10000000: i,generator
setup.py install,uninstall
"a = [0,1,2,3,4,5,6,7,8,9]",list
gi.repository,pygtk
_ã  /usr/local/bin/emacs -qdescribe function: pyth,emacs24
c:\documents and settings\administrator\desktop\lx,lxml
"glbl_array = # a 3 gb arraydef my_func( args, def_",multiprocessing
"def main(): passif __name__ == ""__main__"": main()",testing
import pandas,workflow
mylist[0][1:],list
%matplotlib inline,ipython-notebook
set(),set
import matplotlibmatplotlib.use('agg')import matpl,graphics
"users = [ {""id"": 0, ""name"": ""ashley""}, {""id"": 1, """,dataset
mar 28 20:11:59 telemachos root: error 'exception',syslog
from pil import imageimport numpy as npi = image.o,python-imaging-library
&gt;&gt;&gt; import os&gt;&gt;&gt; os.mkdir('foo'),cross-platform
x = none,global-variables
myapp/__init__.pymyapp/myapp/myapp.pymyapp/myapp/s,module
def traverseinorder(node): lifo = lifo() lifo.push,tree
"parser.add_argument('-i', '--input-file', type=arg",argparse
w = 7195h = 3841fig = plt.figure(frameon=false)fig,scipy
doesnotexist at /admin/ site matching query does n,django-admin
"str = ""please answer my question""",string-length
&gt;&gt;&gt; 4 / 1000,syntax
def post(request): # todo: handle vehicle formset ,django-forms
"l = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']idx = ",indexing
"{keyword:(functionname, amountofarguments)}",function
i_love tab 10love_you tab 12,dictionary
x,random
serial number,hard-drive
"table = cell(""a1"").table",datanitro
"array = [4,2,7,1]ranks = [2,1,3,0]",numpy
optionparser,anonymous-class
[errno 111] connection refused,smtp
sha1sum /folder/of/stuff &gt; singlehashvalue,bash
&gt;&gt;&gt; import numpy as np&gt;&gt;&gt; import,scipy
pandas,pip
/users/current,api
"pylab.rc('font', family='serif', size=40)",label
&gt;&gt;unicodeencodeerror: 'latin-1' codec can't ,unicode
class photo(models.model): tags = models.manytoman,filter
hashlib.sha1(s).hexdigest()unicodeencodeerror: 'as,utf-8
dir({}),sorting
lat2 = asin(sin(lat1)*cos(d/r) + cos(lat1)*sin(d/r,distance
"point = (1, 2)size = (2, 3)color = 'red'class rect",variableargumentlists
a = '123'print a,python-idle
chainmap,dictionary
random.shuffle,shuffle
"url(r'^api/v1/', include('rest_framework.urls', na",rest
apt-get install,numpy
processdirector = processdirector()id12345 = id123,reflection
numpy,ctypes
"#--------------------------------------0 [0,1,3]1 ",tree
for,nested-loops
cookiejar,http-request
permission denied,pip
numpy.abs(),numpy
"import pandas as pddate_stngs = ('2008-12-20','200",pandas
__main__.py,init
slugify,unicode
@patch,python-unittest
for key in d: if filter_string in key: # do someth,dictionary
"&gt;&gt;&gt; escaped_str = '""hello,\\nworld!""'&gt;",escaping
response_dict = {} # contains info to response und,exception-handling
#NAME?,rsa
fri sep 25 18:09:49 -0500 20092008-06-29t00:42:18.,format
datetime,time
class person(models.model): identifier = models.ch,django-models
"list = [""gathi-109"",""itcg-0932"",""mx1-35316""]set_1 ",set
"s = ""foo""last_bit = fileobj.readlines()[-10:]for l",search
/usr/bin/python: no module named virtualenvwrapper,virtualenvwrapper
"a = [ {'main_color': 'red', 'second_color':'blue'}",dictionary
_”“_”—_”— license.md_”“_”—_”— readme.md_”“_”—_”— a,python-import
"[(1,2),(3,4),(5,6),]",tuples
timeit,indexing
resource valueuser cpu time 3760.000 msecsystem cp,django-debug-toolbar
"@cache_page( 60 * 15, ""blog"" );def blog( request )",caching
&gt;&gt;&gt; import matplotlib&gt;&gt;&gt; print m,matplotlib
"traceback (most recent call last): file ""my_file.p",memory
"np.log(np.dot(np.exp(a), np.exp(b)))",matrix
from scipy.stats import kstestimport numpy as npx ,statistics
"#!/usr/bin/env python import datetime print ""cron ",docker
try: # something that throws exceptioncatch: pass,exception-handling
"[2,2,2] - [1,1,1] = [1,1,1]",tuples
"extracteddata = data[[:,1],[:,9]]. ",numpy
&gt;&gt;&gt; a = [0]&gt;&gt;&gt; a[0] = a&gt;&gt;&,infinite
"for counter in range(10,0): print counter,",decrement
package_fiddler,setuptools
"from subprocess import popen, pipep1 = popen([""gre",pipe
{ something_if_true if condition else something_if,dictionary-comprehension
xrange,xrange
import numpy as npimport matplotlibmatplotlib.use(,antialiasing
pip install --upgrade pip,distribute
"[('a', 1),('a', 2),('a', 3),('b', 1),('b', 2),('c'",iteration
~$ pip install pyqtdownloading/unpacking pyqt down,pip
pip install pyodbc,pyodbc
"&lt;select id=""fruits01"" class=""select"" name=""frui",selenium-webdriver
django.contrib.auth.models.user,inheritance
"def my_print(begin, text, end): """"""print 'text' in",assert
urllib2,urllib2
"open(file, 'w').write(text)",atomic
"class c(str): def __init__(self, a, b): str.__init",inheritance
select sum(isnull(table.name)) from table,django-queryset
0,setup.py
oauth,python-requests
def class myform(forms.form): check = forms.boolea,checkbox
&gt;&gt;&gt; import csv&gt;&gt;&gt; spamwriter = c,csv
py2exe,linux
"from threading import timer, lockfrom time import ",testing
importerror: dynamic module does not define init f,python-extensions
python,validation
print(),pandas
class review(models.model): venue = models.foreign,django-models
"&gt;&gt;&gt; a = """"&gt;&gt;&gt; a.foo = 2traceback",attributes
# a.pyimport bdef f(): return b.yx = 42,cyclic
"$xmlfilename = dirname(__file__).""example.fb2"";$xm",xslt
from pydev import pydevdpydevd.settrace('not.local,remote-debugging
in [31]: rand = np.random.randomstate(1) df = pd.d,group-by
class news(models.model): title = models.charfield,unit-testing
class deletemixin(models.model): deleted = models.,django-models
"x = my_series.apply(my_function, more_arguments_1)",apply
with,monads
"import syssys.path.append(""/home/me/mydir"")",add
import pandasdf = pandas.dataframe({'group1': ['a',pandas
"a, b = foo(c) # a and b are regular variables.mytu",language-agnostic
in this setup file i see # andrew kuchling's zlib ,zlib
python -m simplehttpserver 8888 &amp;,simplehttpserver
"class b: def __getitem__(self, k): return kcb = b(",overloading
"def f(): return somethingf._x = ""foo""f() # -&gt; """,scope
if __name__ == '__main__': # this file is being ex,executable
admin.autodiscover(),django-admin
cbar.solids.set_rasterized(true)cbar.solids.set_ed,matplotlib-basemap
python3.2 setup.py install,matplotlib
"def foo(a,b): return a + bd = {'a':1, 'b':2, 'c':3",named-parameters
"def astar(self, graph, current, end): openlist = [",performance
"isinstance(re.compile(''), ???)",types
"def bad_append(new_item, a_list=[]): a_list.append",names
# myapp/views.pyfrom django.contrib.auth.models im,django
signal,qt5
__init__,unit-testing
input(),sublimetext2
goto,bytecode
rt,file-io
downloading/unpacking django==1.4.5 (from -r requi,pip
serializers.writablefield,django-models
importerror: /home/.../_entropysplit.so: undefined,openmp
def whizbang():  for i in range(10):  x = yield i,yield
&gt;&gt;&gt; import mysqldb /library/python/2.6/si,install
from django.db import modelsclass model_one(models,model
"di = {1: ""a"", 2: ""b""}",pandas
next(),iterator
"l=[ [1, 'a'], [1, 'b'], [2, 'c'] ]",dictionary
"e = ('ham', 5, 1, 'bird')logfile.write(','.join(e)",tuples
get /myprofile/data/some_id/ http/1.1 302 0get /ac,django-testing
from django.contrib.auth.models import user...clas,authentication
"for k, v in os.environ.items(): print ""%s=%s"" % (k",foreach
session.query(self.col1),flask-sqlalchemy
if __name__ == '__main__': app.run(debug=true),flask
"""a"",""b"",""c"",""d"",""e"",""f"",""timestamp""611.88243,9089.",csv
%~dp0env\scripts\activate.batpython %~dp0work\scri,scripting
import pickleimport gzipimport numpywith gzip.open,pickle
df = pd.read_csv('somefile.csv'),numpy
class parent(models.model): name = models.charfiel,django-models
"import jsondef create_simple_meeting(subject, star",dictionary
openssl aes-256-cbc -salt -in filename -out filena,openssl
"def __init__(self): self.data = []def update(self,",numpy
simplify,psycopg2
models.manytomanyfield,entity-relationship
"translation.activate(""ru"")print datetime.now().str",localization
"data[:,:,:,0] , data[:,:,:,1]",numpy
from ctypes import *class example(structure): _fie,ctypes
"def filterpick(lines,regex): result = [] for l in ",list-comprehension
categories = category.objects.all()t = loader.get_,django-models
class myclass: foo = 1 bar = 2,getattr
gettickcount(),linux
def f(): print a,mysql-python
datetime.timedelta,timedelta
easy_install,python-imaging-library
'.'.join(urlparse.urlparse(url).netloc.split('.')[,parsing
&gt;&gt;&gt; import cpickle as pickle&gt;&gt;&gt; ,md5
"def function(string, str_to_search_for): count = 0",search
csv.dictreader,dictionary
$ pypy ./manage.py syncdb/usr/lib64/pypy-2.4.0/sit,django-1.8
import com.work.project.component.client.interface,jython
celeryd_prefetch_multiplier,celeryd
dendrogram,matplotlib
y = 5.plus 6,object
$ virtualenv -q --no-site-packages venv$ pip insta,openssl
class mymodel(models.model): creation_date = model,sql-order-by
import nltk.datatokenizer = nltk.data.load('nltk:t,nltk
"x = numpy.array([1,2,3])y = numpy.array([4,5])",cartesian-product
enum,enums
"std([1,3,4,6])ans = 2.0817",numpy
"""google.com""",url
sqlalchemy,timeout
"subprocess.popen(cmd, shell=true)",subprocess
"(start-time, end-time)",merge
1 0.12 0.053 0.054 0.25 0.46 0.2,random
celeryd,celery
from sys import stdinfrom multiprocessing import p,shared-memory
from sqlalchemy import create_engineengine2 = crea,data-structures
class purchaseorder(models.model): product = model,django-admin
"import nltkfrom nltk import bigramsstring = ""i rea",nltk
os.walk(),os.walk
"l = [1, 2, 3, 4, 5, 6, 7]",slice
x = defaultdict(...stuff...)x[0][1][0]{},defaultdict
"import osfiles = os.listdir(""."")for f in files: os",popen
"example = ""example""if ""exam"" in example: print ""ye",if-statement
os.walk(),os.walk
"import zipfiledef main(archive_list=[],zfilename='",zipfile
"def foo(self, my_param): #do something here, assig",mocking
+,polymorphism
def ilen(it): return sum(itertools.imap(lambda _: ,generator
ls,command
l,arrays
blah blahfoo1 bar1foo1 bar2foo1 bar3foo2 bar4foo2 ,insert
datetime,datetime
is,operators
inspect.stack,introspection
"if (opt[""log""] == ""debug""): logging.basicconfig(le",decorator
"sum = 0sign = -1.0for i in range(1,infinity,2): si",programming-languages
cj = cookielib.cookiejar()opener = urllib2.build_o,header
"# load the imagesimg =cv2.imread(media_root + ""/up",computer-vision
polls_subset.tail(20)out[185]:  favorable unfavora,time-series
imdat,numpy
pip install --upgrade pip,virtualenv
result = numpy.sqrt(numpy.sum(numpy.pow(some_vecto,exponentiation
"from sqlalchemy import create_engine, foreignkey, ",key
pandas.dataframe,row
__main__,parallel-coordinates
"0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, ",language-agnostic
df.num_columns,dataframe
http://_?ç.ws/_ÈÇ,unicode
savefig,numpy
#! /usr/bin/env pythonimport zlibchunksize=1000d =,zlib
"import numpy as numnames = num.array(['name_1', 'n",numpy
"import os path = ""/tmp/foo"" for root, dirs, files ",chown
math.floor(),ide
s3.py,amazon-s3
bar,module
class hitadmin(admin.modeladmin): list_display = (,django-admin
namedtuple,tuples
for attr in foo:,attributes
"a ={1,2}b =[1,2]",square-bracket
"a = np.recarray(3, dtype=[('a', np.float32), ('b',",numpy
"&lt;root&gt; &lt;articles&gt; &lt;article type=""ne",find
"br.select_form(name = """")",forms
"title = re.search('&lt;title&gt;.*&lt;/title&gt;',",regex
_,ipython
"traceback (most recent call last): file ""xxxxxx.py",flask
extract(),zipfile
socket.recv(),nonblocking
"eggs = (1,3,0,3,2)[1/egg for egg in eggs]",list-comprehension
from django.contrib import adminfrom glasses.playe,django-admin
"import sysimport ostry: os.kill(int(sys.argv[1]), ",process
"[1,2,3,4]",angle
"foo in iter_attr(array of python objects, attribut",iteration
"class node(object): def __init__(self, children = ",language-design
"matrix = [[-2, 5, 3, 2], [ 9, -6, 5, 1], [ 3, 2, 7",diagonal
/usr/lib/pymodules/python2.7/matplotlib/legend.py:,matplotlib
threadsafe:yes,google-app-engine
class test: def __bool__(self): return falsemyinst,boolean
key = bucket.new_key(filename) key.set_contents_fr,boto
confusion = {}confusion[1] = 1confusion['1'] = 2co,floating-point
console.log,logging
numpy,scipy
class tagstatus(models.model): user = models.forei,django-models
"random.randint(numlow, numhigh)",unique
obj= model.objects.filter(testfield=12).latest(),django-models
%s,mysql
2012-12-05 21:03:04+0800 [pd_spider] info: dumping,report
curl -xget 'http://es_search_demo.com/document/rec,rest
platform.platform,platform-detection
af_inet,unix
"fifo = 'pipe'os.mkfifo(fifo)op = popen('cat ', fif",subprocess
"{a:a, b:{c:c, d:d, e:e}} ",pyyaml
import unittestclass tests(unittest.testcase): def,pdb
&lt;class 'numpy.matrixlib.defmatrix.matrix'&gt;,matrix
import tensorflow as tfsaver = tf.train.saver()wit,machine-learning
"import timedef a(): print ""a()"" return bdef b(): p",language-agnostic
ipdb,generator
class productlist(apiview): authentication_classes,angularjs
"""if a&gt;0.4 then if b&lt;0.2 then if c&gt;0.8 the",scikit-learn
'aa',escaping
int,subclass
"# setup.pyimport os,globfrom setuptools import set",setuptools
"import urllibf = urllib.urlopen(""http://58.68.130.",attributes
virtualenv,pip
from numpy import * def data(): return genfromtxt(,csv
"import sysif sys.platform == ""win32"": import os, m",stdout
"&gt;&gt;&gt; x={'a':1, 'b':2, none:3}&gt;&gt;&gt; ",key
typeerror: objectid('51948e86c25f4b1d1c0d303c') is,json
"deferred.defer(spam.cookeggs,  egg_keys,  _queue=""",queue
def transpose(m): height = len(m) width = len(m[0],for-loop
"import threadingimport random, timefrom gi.reposit",gtk
"re.search(""(\w)*"", ""abcdefg"").groups",lexer
"from basehttpserver import httpserver, basehttpreq",basehttpserver
matplotlib,plot
(?p&lt;category_slug&gt;,django
python myprogram refprogram.exe refinput.txt,command-line-arguments
{% block %},pycharm
"class layerv(__cell): def __init__(self,somatic_de",neuroscience
#NAME?,ipython
from pyquery import pyqueryimport requestsurl = 'h,pyquery
"def sort(array=[12,4,5,6,7,3,1,15]): less = [] equ",sorting
&amp;nbsp;,dom
c:\ stuff \ directory_i_need \ subdir \ file,filepath
mydirectory_”“_”—_”— __init__.py_”“_”—_”— file1.py,import
"ab = ""ab""print id( ab ), id( ""a""+""b"" )",memory-management
&gt;&gt;&gt; a = -5&gt;&gt;&gt; a % 43,negative-number
ctrl+c,ipython-notebook
var = {}print ??? # would like to see 'var'somethi,variables
"except urlerror, e: logger.warning( 'it seems like",urllib2
group1 group2 a b c a b c1 1 0 3 2 5 72 5 6 9 1 0 ,pandas
time.tzname,pytz
"plt.hist(myarray, normed=true)",numpy
try,exception-handling
"['this\n', 'is\n', 'a\n', 'list\n', 'of\n', 'words",strip
"(x, y) = (y, x)",atomic
"def add(x,y): return x+y",celerybeat
scipy.spatial.voronoi,visualization
depth = 0def f(): global depth depth += 1 f()try: ,cpython
fig = pylab.figure()mesfig = fig.gca(projection='3,aspect-ratio
insert_one,pymongo
super(),superclass
{% for item in my_func(10) %} ,function
prime = 2**74207281 - 1,primes
"&gt;&gt;&gt; im = image.open(""test.jpg"")&gt;&gt;&g",image
&gt;&gt;&gt; 1000 is 10**3false,semantics
os.popen('swfdump /tmp/filename.swf/ -d'),popen
"import datetimefrom sqlalchemy import column, inte",sqlalchemy
def big_function(): def little_function(): .......,closures
"cases = scatter(x[:4], y[:4], s=10, c='b', marker=",matplotlib
r,r
"file ""c:\importer\src\dfman\importer.py"", line 26,",pandas
$ python3.3 -m venv env$ source env/bin/activate,virtualenv
"f = frame(root, width=1000, bg=""blue"")f.pack(fill=",tkinter
sidwyn$ sudo easy_install psycopg2searching for ps,psycopg2
nosource: no source for code: '/home/matthew/.huds,code-coverage
y = a**t * q * a,numpy
subprocess,subprocess
1.0/0=&gt; infinity,language-agnostic
@attribute,metaprogramming
"from pylab import *def plot_density(filename,i,t,p",matplotlib
import bottleapp = bottleclass app(): def __init__,class
mysql,sqlalchemy
class standalonespider(spider): #a regular spiders,scrapy
"[ { ""title"": ""baby (feat. ludacris) - justin biebe",loops
pip,proxy
&gt;&gt;&gt; n = 5&gt;&gt;&gt; a = [1]&gt;&gt;&gt;,list-manipulation
"competition_type_choices = ( (1, 'olympic games'),",django-forms
"@app.route('/app/business', methods=['get', 'post'",post
"&lt;?xml version=""1.0""?&gt;&lt;itemsearchresponse ",xpath
"@app.route('/getpersonbyid', methods = ['post']) d",flask
su -m nobody -c &lt;program to execute as a child&,subprocess
"context = context() context['my_dict'] = {'a': 4, ",django-templates
"def logical_xor(a, b): # for example, -1 and 1 pri",return
&gt;&gt;&gt; import pandas as pd&gt;&gt;&gt; from ,dataframe
from django.db import modelsfrom django.contrib.au,celery
"class apibaseclassone(object): def __init__(self, ",multiple-inheritance
do_something(my_object),capture
login_url,url
numpy,scipy
qcoreapplication.processevents().,pyqt
$('#clickme').click( function() { var data = save_,flask
abcdefgh,reverse
&lt;select&gt;,forms
"def butter_highpass(interval, sampling_rate, cutof",signal-processing
"import httplibconn = httplib.httpconnection(""www.p",https
def sub3(n): return n - 3def square(n): return n *,monkeypatching
$_get['key1']['key2'],flask
readcsv(),pandas
__init__,methods
class timelineserializer(serializers.serializer): ,django-models
post = { some dictionary }mongo_id = mycollection.,pymongo
@login_required,decorator
pthreads (kernel threads),pthreads
3-millerc-~:ipythonpython 2.7.3 |anaconda 1.4.0 (x,locale
"class test: def method_one(self): print ""called me",override
python-daemon,python-daemon
pycairo,install
"def f(x,y,z): return [x,y,z]a=[1,2]f(3,*a)",arguments
.pyc,compiled
{% for photos in gallery.photo_set %} {% if forloo,for-loop
qplaintextedit,embed
getfilenames.py c:\pathtofolder\*getfilenames.py c,wildcard
from pil import imageimport numpy as npim = image.,artificial-intelligence
with timer() as t: store = pd.hdfstore('test_store,pandas
"traceback (most recent call last): file ""openerp-c",importerror
sys.stdin,stdout
is,operators
class mytestcase(unittest.testcase): def testfirst,contextmanager
"package main import ( ""fmt"" ) func main() { for i ",go
|,bitwise-operators
__init__.py,namespaces
python,markup
"#defines filenamefilename = ""file.exe""#gets md5 fr",md5
"return render_to_response('results.html', {'data':",django-templates
new_string = string1 + ' ' + string2 + ' ' + strin,join
a,inheritance
class foo: self._attr = 0 @property def attr(self),properties
"codecs.streamrecoder(stream, encode, decode, reade",utf-16
"class somemetaclass(type): def __new__(cls, name, ",new-operator
dict1 = defaultdict(lambda: defaultdict(int)),defaultdict
"y_train = ('new york','london')train_set = (""new y",scikit-learn
class contest: title = models.charfield( max_lengt,django
if os.name == 'nt': startupinfo = subprocess.start,linux
"int*4 n_particles, n_groupsreal*4 group_id(n_parti",fortran
linking /usr/local/cellar/python/2.7.3... warning:,osx-snow-leopard
"cmd = [""which"",""abc""]p = subprocess.popen(cmd, std",which
"foo = ['red', 'white', 'blue', 1, 2, 3]",syntax
get_signature,tastypie
"def myfunc(arg): .../... if arg == 1: print ""this ",text-editor
for line in all_lines: s = line.split('&gt;'),delimiter
--------------------------------------------------,virtualenv
argv.py,command-line
pip install psycopg2,osx
"a = np.array([[ 5, 1 ,3], [ 1, 1 ,1], [ 1, 2 ,1]])",numpy
"[8, 8, 7, 96]",deep-learning
import numpy as np from pandas import *index= ['aa,heatmap
data = urllib.urlencode({'q': 'status'})u = urllib,urllib2
"class color: def __init__(self, color): self.color",interface
"""sin(x)*x^2""",equation
&gt;&gt;&gt; class foo(object):... def __bool__(se,overloading
some_var = 'changed!',closures
"import structlittle_endian = (struct.pack('@h', 1)",little-endian
numpy,numpy
&gt;&gt;&gt; d = {},methods
from module import *,ide
issubclass,types
"ssh -t first.com ""ssh second.com very_remote_comma",paramiko
the_job,multiprocessing
in,operator-precedence
"{""_cls"" : ""sensorreport"",""_id"" : objectid(""515a963",pandas
(?&gt;regexp),regex
pyplot.figure.figimage,matplotlib
mgrid,scipy
"traceback (most recent call last): file ""/users/..",feature-selection
"{'a': 'first', 'b': 'second'}",order
if,if-statement
i = 5j = ij = 3 print(i),pointers
distutils,distutils
class business(models.model): name = models.charfi,tastypie
setup.py,cython
def î£ (..): .. ..,identifier
&gt;&gt;&gt; class a(object):... x = 0... &gt;&gt;,class-variables
import csvfrom collections import namedtuplewith o,namedtuple
"peaks([x[0], y[0]]), peaks([x[1], y[1]])",list-comprehension
"trained_model.similarity('woman', 'man') 0.7372352",word2vec
setup.py,setup.py
shlex.split,split
&gt;&gt;&gt; iswindowsvista()true,windows-vista
"cursor.execute(""select count(*) from result where ",rows
#! /usr/bin/pythonimport sysfrom pyqt4.qtgui impor,pyqt
func1,arguments
"__ d = {'apple': 1, 'banana': 9, 'carrot': 6, 'bab",ironpython
"data=[]websites=['http://google.com', 'http://bbc.",python-requests
def celery_is_alive(): from celery.task.control im,celery
int a[x];,dynamic-arrays
class update(models.model): pub_date = models.date,django-models
os.environ['current_version_id']/,deployment
raw_input,input
import iso8601,datetime
"img = image.open('img.png')imga = img.convert(""rgb",python-imaging-library
myrange = range(10)print(next(myrange)),generator
dataframe,pandas
"for p in db.collection.find({""test_set"":""abc""}): p",django
numeric_limits::epsilon( ),floating-point
&gt;&gt;&gt; timeit.timeit('from win32com.client i,python-import
python setup.py sdist,distutils
"a = {'album': u'metamorphine', 'group': 'monoku', ",urlencode
cap = cv2.videocapture(0)print cap.grab(),opencv
json1_file = open('json1') json1_str = json1_file.,list
"""a b c"".split(maxsplit=1)typeerror: split() takes ",cpython
python client.py | tee logfile,tee
pip install matplotlib,pip
[ x*x for x in range(1000) ],list-comprehension
[x**2 for x in range(10)],list-comprehension
%w,week-number
"from win32com.shell import shell,shellconhome = sh",windows
class loginform(forms.form): nickname = forms.char,forms
"l = [10,10,20,15,10,20]",indexing
__del__,garbage-collection
if not a and not b: do_something,demorgans-law
test = 'abc'if true: raise test + 'def',raise
"words = ['hello', 'world', 'you', 'look', 'nice']",list
"@applydef foo(): """"""a foobar"""""" def fget(self): re",properties
/manage.py update_index,indexing
python manage.py runserver,gunicorn
bzr: warning: unknown locale: utf-8 could not dete,osx-snow-leopard
walk,clone
try,try-catch
"in [1]: x = [1]in [2]: x+""foo""--------------------",language-implementation
importerror: no module named cython.distutils,enthought
remotefile = urllib2.urlopen('http://example.com/s,urllib2
class ps(models.model): id_ps = models.integerfiel,django-admin
imagedraw,python-imaging-library
drawmatches,cmake
"class person(models.model, deepvalues): name = mod",django-models
a=true,group-by
__,constants
conn = sqlite3.connect(db_filename)with conn: cur ,database-connection
"c = circle(x=1., y=5., r=3.)",dictionary
a = u'\u0420\u0443\u0441\u0441\u043a\u0438\u0439 \,utf-8
"{ ""stefan"" : [""running"", ""engineering"", ""dancing""]",dictionary
@app.task for item in list_of_millions_of_ids: id ,multithreading
settings.py,conventions
http:://www.abc.com/p/xyz.html?id=1234&amp;refer=5,scrapy
"x = {1: false, 2: true} # no 3for v in [1,2,3]: tr",continue
:,io
"traceback (most recent call last): file ""&lt;strin",osx-lion
"traceback (most recent call last): file ""testclien",rest
myrandommethod(),extension-methods
word tag count0 a s 301 the s 202 a t 603 an t 54 ,pandas
oomsys@oomsysmob-6:~/demobrun$ bin/python bootstra,buildout
"file = input(""type filename: "")...try: filecontent",filenotfoundexception
setuptools&gt;=0.6c9pymongo==1.9simplejson==2.1.3,virtualenv
ndarray,numpy
"set expandtab "" tabs are converted to spacesset ta",vim
getwebservices.amazon.com/onca/xmlawsaccesskeyid=0,sha256
require(rjython) rjython &lt;- rjython() rjython$e,jython
django-celery,celery
"from unittest.mock import magicmockf = open(""data/",python-import
mercurial error *** failed to import extension hgg,mercurial
admin.py,login
"for i in range(key): filename = ""me"" + i + "".txt"" ",integer
&gt;&gt; ''&gt;0true,logic
multiprocessing,pickle
datetime.datetime,calendar
class newclsname: passoldclsname = newclsname,backwards-compatibility
src/ __init__.py main.py components/ __init__.py e,relative
import jsonclass countrylistview(listview): model ,json
"def getevents(eid, request): ......",django-testing
import multiprocessingimport cprofileimport timede,cprofile
"x = rand(500,500)x = (x+x.t)all(x==x.t)&gt; true",numpy
"#example:&gt;&gt;&gt;que = [2,3,10,5,8,9,7,3,5,2]&",dynamic-programming
python 2.7.10,scrapy
pip install pyodbc,pyodbc
aptitude install,pyqt
"&gt;&gt;&gt; some_list['1', 'b', '3', 'd', '5', 'f",slice
a**b % c,math
; cd /var/tmp/my_test_module; mkdir -p ook/test ; ,py.test
subprocess,subprocess
end_date = lastitem.pub_date,date
numpy.sin(),multiprocessing
virtualenv env,linux
import jsonimport requestsurl = 'http://developer.,string
"l1=[bitarray 1, bitarray 2, ... ,bitarray n]l2=[ar",shared-memory
"print '%.2f' % var1,'kg =','%.2f' % var2,'lb =','%",string-formatting
/usr/local/share/hadoop-2.6.1/share/hadoop/mapredu,hadoop
socket.error: [errno 98] address already in use,sockets
look,iterator
"def get_selected_index(self): (path, column) = sel",iterable-unpacking
matplotlib,matplotlib
sys.setrecursionlimit(),tree
class goal(models.model): goal_weight = models.dec,datetime
warning: invalid value encountered in double_scala,warnings
import psycopg2import psycopg2.extrasconn = psycop,dictionary
next(),generator-expression
network.http.*,firefox
"nd = normaldistribution(mu=100, std=12)p = nd.prob",scipy
{% from 'dates/format.py' import timesince %}{% ma,python-import
a[::-1],slice
import numpy as npimport cv2from operator import i,image-processing
os.urandom(n),cryptography
{% for i in p %}{{variable++}}{{variable}},jinja
"byte key[] = {0x13, 0x00, 0x00, 0x00, 0x08, 0x00};",gevent
"class imagedb(dict): def __init__(self, directory)",dictionary
$y_k=\frac{1}{2r}\sum_{m=-r}^r y_{k+m}$,sum
nosetests --with-coverage,code-coverage
"a = ""_?Œ_?è_?«_Ç_?ç_?Â _?Â_Çö_?ç_Ç  _?å_??_?Â _??_",indic
valueerror: attempted relative import in non-packa,packages
import timeimport numpydef find_index_of_nearest_x,numpy
o.id,set
&gt;&gt;&gt; import uuid&gt;&gt;&gt; uuid.uuid4()u,uuid
&gt;&gt;&gt; tz&lt;dsttzinfo 'africa/abidjan' lmt-,timezone
cron,encryption
(cb)clime@den /srv/www/cb $ ./manage.py runserveri,settings
importerror: no module named mysqldb,flask
"setup(.... entry_points=""""""[console_scripts]mycomm",packaging
cmd [global_options] {command [command_opts]} [{co,argparse
localhost:5000,flask
self.heartbeat.start(),pyqt4
if type(var) is type(1): ...,pep8
h5py.h,installation
&gt;&gt;&gt; def f():... return (2+3)*4... &gt;&gt,bytecode
import sysimport botoimport boto.s3# aws access de,amazon-s3
csv,csv
"int c_read_block(uint32 addr, uint32 *buf, uint32 ",pointers
"workon envpython 2.7.6 (default, nov 10 2013, 19:2",virtualenv
"f = open('test.txt', 'r')for line in f: print ""f.t",buffering
subprocess.popen.terminate,process
tempfile,cross-platform
this is a the first line in englishthis is a the 2,io
json,json
minn = 1maxn = 10n = something() #some return valu,min
auth_profile_module,deprecated
"for i in range(100,3000): if df.iloc[i]['boolcol']",pandas
"import numpy as npx = np.array([[1, 2, 3], [4, 5, ",numpy
matrix,methods
"# mymodule.pyclass myclass(object): """"""main logic ",clojure
"qtcore.qobject.connect(self.twit_in, qtcore.signal",pyqt4
import numpy as npimport mkln = 10000a = np.random,numpy
"(lat,lng) = transform(easting, northing, zone)",utm
{% for source in sources %} &lt;tr&gt; &lt;td&gt;{,post
&gt;&gt;&gt; import threading&gt;&gt;&gt; class th,inheritance
foo = [x for x in bar if x.occupants &gt; 1],for-in-loop
"*args, **kwargs",method-signature
"&gt;&gt;&gt; def fun1(a=""who is you"", b=""true"", x,",default
from django.db import modelsfrom django.contrib.au,django-models
bitcoin signed message:\n,bouncycastle
def mainloop(): while true: # 1. do # 2. some # 3.,sigterm
shutil.rmtree,delete-file
class artifact( models.model ): name = models.char,django-orm
s = len(text) p = 1.0/s freqs = {} for char in tex,probability
"# refer link1return super(mytype, cls).__new__(cls",metaclass
c:\opencv2.2\python2.7\lib\site-packages,importerror
unboundlocalerror,binding
__new__,inheritance
pip,pip
numpy,blas
warning: could not link python. unlinking...error:,homebrew
pickle.picklingerror: can't pickle &lt;class '__ma,pickle
"s = [1,30,20,30,2] # my listfor s,i in zip(s,range",loops
"l = [('a',1),('b',2)]h = {}[h.update({k:v}) for k,",hash
"# export my_data=""my_export""",export
make html,python-sphinx
zipfile,zip
from django.db import modelsclass post(models.mode,django-models
string::shellquote::shell_quote,quoting
manifest.in,python-wheel
heap,ironpython
"class a(object): def __eq__(self, other): print ""a",user-defined
@login_requireddef no_response(request): params = ,django
first run (so first example): 1 2 4 6 2 3 4 5 1 3 ,neural-network
class test: def method(self): passassert is_instan,instance
"import rematch = re.match(""(\d+)g"", ""123g"")if matc",idioms
importerror: /usr/lib/liblapack.so.3gf: undefined ,installation
"&gt;&gt;&gt; urllib2.urlopen(""http://www.google.co",proxy
def outerfunction(*args): def innerfunction(val): ,monkeypatching
dx,matplotlib
virtualenv -p /usr/local/bin/pypy pypy,pypy
class taskmanager(models.manager): def task_depend,exception
"[{'a': 123}, {'b': 123}, {'a': 123}]",dictionary
myqueryset = content.objects.filter(random 100),database
time1 = '2012-10-05 04:45:18'time2 = '2012-10-05 0,numpy
"img = image.open('foo.jpg')width,height = 800,600i",python-imaging-library
sqlite3,sqlite
shell=true,wait
newfile = pd.excelfile(path\filename.xlsx)parsedda,pandas
lookup_field,user
in [1]: from selenium import webdriverin [2]: br =,amazon-web-services
self.lt,hash
class foobar: ...,filenames
root|_ fruits|___ apple|______images|________ appl,node.js
for,parsing
"import cv, cv2fn = 'myfile.jpg'im_gray = cv2.imrea",opencv
a = 2b = 3,dataframe
datetime,string-formatting
sudo pip install git-review,ubuntu
time.time(),time
books,django-models
"urllib.quote(""sch†_nefeld"")",urllib2
verts.indexof(12.345)verts.lastindexof(12.345),search
from profiles.choices import sample_choicesclass p,select
df.apply(average) ,numpy
"&gt;&gt;&gt; match = re.findall(r'\w\w', 'hello')&",overlapping
[sun sep 12 20:47:59 2010] [error] [client] mod_ws,wsgi
&gt;&gt;&gt; set([ set() ])traceback (most recent ,set
r,escaping
drop_all,pylons
{...},override
"assert angle((1,0),(0,1)) == pi/2.assert angle((0,",trigonometry
"with socket(socket.af_inet, socket.sock_dgram) as ",contextmanager
__init__,docstring
pip install --upgrade google-api-python-client,google-analytics-api
a,multidimensional-array
join,multithreading
"import mysqldbconn=mysqldb.connect(host=""localhost",mysql-python
def time_consuming_function(): # lots_of_computing,hash
"r= {x for x in range(2, 101) if not any(x % y == 0",set-comprehension
pip,setuptools
class complex: a = 1,variables
r,scipy
python /path/script1.py...,command-line
.config(),fonts
"label = [{'date': datetime.datetime(2013, 6, 17, 8",dictionary
1: 2 - 102: 3 - 153: 4 - 94: 8 - 145: 7 - 136: 5 -,dynamic-programming
&lt;class 'pandas.core.frame.dataframe'&gt;int64in,pandas
4 &lt; '3',operators
"def some_function (self, a, b, c, d = none, e = no",arguments
content = content[position-1:position+249] # conte,concatenation
__init__.py,coverage.py
import tweepy,module
__init__.py,import
"in py3.0, the cmp parameter was removed entirely (",object
parse(),cookies
"for element in list: print element + "","",",printing
tee,stdout
# pythonimport mysqldb#===========================,mysql-python
testdataherethisis onegroup :)testdataherethisis a,list
"job = sshjobman(hostlist, cmd)job.start()while not",design-patterns
url_for('index'),url-for
import loggingdef logging_test(): handler = loggin,unicode
class class(models.model): name = models.charfield,django-models
easy_install --help,egg
author_id,sqlalchemy
import networkx as nximport numpy as npimport matp,plot
for  if line !contain # then ...process line else ,file-io
"li = [""a"", ""b"", ""a"", ""c"", ""x"", ""d"", ""a"", ""6""]",last-occurrence
request.websocket.send('we are the knights who say,sockets
"import subprocessprint ""start""subprocess.call(""sle",call
"def buildstring(user, name = 'john', age=22): user",local-variables
__del__,cpython
.,pydev
4 from matplotlib import pyplot 5 from pandas impo,pandas
tox,distutils
def fact1(n): if n &lt; 2: return 1 else: return n,recursion
optparse.optionparser,formatting
[w 1402720 14:44:35 web:1811] 403 get / (192.168.0,tornado
asyncio,python-internals
url_for,jinja2
sc=scorm.objects.filter(header__id=qp.id),django-views
class userprofile(models.model): _genderchoices = ,django-models
"string1 = gostring2 = nowstring3 = great""""""i'm wil",variables
1 102 53 20......,statistics
open(),io
# # ## ##### # # # # # ####  # # # # # # ## # # ##,text
"$ python2.7 -m timeit 'd={}'10000000 loops, best o",timing
 class mymodel(models.model):  foo = models.charfi,properties
"script # my startup script, plain old shell script",upstart
x = defaultdict(lambda: 0)y = defaultdict(lambda: ,defaultdict
"xy1=numpy.array([[ 243, 3173],[ 525, 2997]])xy2=nu",euclidean-distance
{% if listing.date &lt;= now %}  in the past {% el,django-templates
"""studentroster jan-1"":id name score isenrolled com",dataframe
#valid chars . a-z 0-9 def check(test_str): import,search
(pdb) objgraph.show_most_common_types(limit=20)dic,debugging
minidom,user-friendly
x=locals(),locals
import lxml.html as lhfrom lxml.html import builde,lxml
class superfoo(models.model): name = models.charfi,inheritance
django-rest-framwork,serialization
## x1 x2##0 206 214##1 226 234##2 245 253##3 265 2,dataframe
apt-get install python-psycopg2,ubuntu
from threading import threadfrom win32event import,mutex
"class testclass: value1 = ""a"" value2 = ""b""",serialization
x.real*x.real+x.imag*x.imag,inline-functions
from pil import image,python-imaging-library
"&lt;html&gt;... &lt;img src=""images/dynamic_chart.",django
import xml.dom.minidomdoc = xml.dom.minidom.docume,dom
p: 1 sl: 10 afy: 4q: 12 lg: 10 kla: 3r: 0 kl: 10 k,text
"data = [('a', 1), ('b', 1), ('b', 2)]d1 = {}d2 = {",get
username = raw_input('user name: ')password = getp,passwords
&gt;&gt;&gt; from datetime import datetime&gt;&gt;,timezone
./manage.py shell,django-models
class user(base): __tablename__ = 'user' id = colu,declarative
httpresponseredirect(request.path),http
"normalize(self, length = 1)",floating-point
"v = [3,5,0]axis = [4,4,1]theta = 1.2 #radian",rotation
pandas.dataframe,pandas
utf8,django
"""value.txt""",csv
"__init__(self, init_method, *args)",argparse
&gt;&gt;&gt; s = u'\u0421\u043e\u043e\u0431\u0449\,unicode
importerror: cannot import name celery,celery
voidc_function(void *ptr) { int i; for (i = 0; i &,ctypes
django.contrib.auth,forms
&gt; run my_script.py,breakpoints
"import sys,osroot = ""/home/patate/directory/""path ",path
"# 'value' is the data type stored in the map, whil",naming-conventions
id,cpython
"if __name__ == ""__main__"": if (len(sys.argv) != 4)",image-processing
"data = np.array([[1,1,1],[2,2,2],[3,3,3]])",numpy
"fp = open(""a.txt"")#do many things with fpc = fp.re",eof
post,django-models
&gt;&gt;&gt; def isodd(num): return num &amp; 1 an,bit-manipulation
views.py,loops
__getattribute__,override
# django settings for omnicloud project.debug = tr,django
dir(),interactive
def getuniqueattributevalues(xml_attribute_nodes):,list
"numpy.dot(a, b)",benchmarking
"print(re.match('e','test'))",pattern-matching
int,int
#NAME?,pandas
logging,logging
choice,variables
/*this*/,comments
id(),methods
os.*,webdav
class wine(models.model): color = models.charfield,serialization
&gt;&gt;&gt; class a(object):... x = 5&gt;&gt;&gt;,inheritance
curl 'http://domain.com/passkey=wedsmdjsjmdd',curl
"letters = [('a', 'a'), ('b', 'b')]i = 0for (lowerc",enumerate
requirements.txt,distribute
os.system(),posix
'prefix\xe3\xabsuffix',unicode
django / eclipse,homebrew
"import numpy as npn=10a=np.arange(1,100,1)np.argso",numpy
bk = conn.get_bucket('my_bucket_name')ky = boto.s3,boto
//,integer-division
memoryview,memoryview
favicon_path = '/path/to/favicon.ico'settings = {',tornado
x,random
"@app.route(""/images/&lt;int:pid&gt;.jpg"")def getim",flask
copy.deepcopy,deep-copy
"plt.bar([1, 2], [4, 5])plt.xlabel(""my x label"")plt",graphing
foo.py,module
"file('pinax/media/a.jpg', 'wb')",syntax
setup.py,pygame
request.args.get,flask
"input: [""abcd""]output: [""abcd""] [""abc"",""d""] [""ab"",",itertools
suzy &amp;amp; john,curl
"def foo(a, b, c): pass",arguments
iter,iteration
package/ __init__.py module_1.py module_2.py modul,integration-testing
class apperror(exception): passclass missinginpute,custom-exceptions
"from basehttpserver import basehttprequesthandler,",post
"[1,2,3,4,5]",list
dict,associative-array
if,exception-handling
00000000000000000good stuff,lines
sudo pip install -u nltk,nltk
manage.py test,unit-testing
*args,arguments
"list = ['something','another','thing','hello']stri",list
pyqt,pyqt
sudo easy_install pip,virtualenv
"import cookielib, urllib2cj = cookielib.cookiejar(",cookielib
import numpyimport error:no module named numpy,numpy
reindex(),pandas
"d = {1:'yes', 2:'yes', 3:'yes', 4:'no'}",dictionary
python -m cprofile -s calls myscript.py,cprofile
import numpy as npa = np.arange(10) - 5a[2] = 2pri,numpy
"&gt;&gt;&gt; p = [ [()]*3 ]*3&gt;&gt;&gt; p[[(), (",multiplication
url = 'http://myserver/post_service'data = urllib.,urllib
"import os,sysfrom os import *from sys import *vals",integer
from scipy.sparse import lil_matrixx = lil_matrix(,sparse-matrix
obj.__doc__,ruby
dynamic,linq
"import randomfrom osgeo import gdal, ogr rasterize",gdal
\a - bell\b - backspace\f - formfeed\n - linefeed\,ascii
from xml.etree import elementtree as etreeroot = e,svg
"import os, subprocessbitrate = '100'mencoder = 'c:",mencoder
pip --version,virtualenv
networkx/networkx/algorithms/centrality/eigenvecto,social-networking
[mkl]library_dirs = /opt/intel/composer_xe_2013.1.,pip
list += x,containers
close(),flush
viewsets,django-views
"definitions = {'a': 1, 'b': 2, 'c': 123.4}for defi",global-variables
scipy,amazon-ec2
"import numpy as npimport math as mdef cart2sph(x,y",coordinate
return none,return-value
"int main (void) { char buf[100] = ""\x01\x02\x03\x0",gdb
class myauthentication(basicauthentication): def _,tastypie
setup.py,distutils
hardware\\devicemap\\serialcomm,windows
{% url [viewname] [args] %},url
"def _berlekamp_massey(self, s, k=none, erasures_lo",error-correction
get_absolute_url,django-admin
time result1 09:00 +52a2 10:00 +62b3 11:00 +44a4 1,pandas
"""sat, 11/01/09 8:00pm est""",timezone
"data = [('r1', 'c1', avg11, stdev11),('r1', 'c2', ",pandas
scipy.misc.imresize,numpy
reporter.objects.delete(),model
keyboardinterrupt,exception-handling
"mysite/ manage.py mysite/ --&gt; (settings.py, etc",django-staticfiles
exec('/usr/bin/python2.7 /srv/http/assets/py/switc,exec
"n [397]: a = array([[ nan, 2., 3., nan], .....: [ ",scipy
"cursor.execute(""select rowid from components where",sqlite
# remove the bytecode file created by the first im,preprocessor
"def containsany(self, strings=[]): alphabet = 'abc",if-statement
import numpy as nimport matplotlib.pyplot as pangl,matplotlib
import osimport subprocessproc = subprocess.popen(,wildcard
abc12def3g56hij7,nested-loops
urllib.quote(),encoding
conda create -p ./test python=2.7 pip,anaconda
def group(): import numpy as np from itertools imp,numpy
import cv2#capture from camera at location 0cap = ,camera
"python 2.7.1 (r271:86832, jun 16 2011, 16:59:05) [",xml-serialization
import pylab as pimport graphics as gwindow = g.gr,spyder
numpy.linalg.inv,scipy
"class frameworkclass(): def __init__(self, ...): .",authentication
gid,google-docs-api
"fri, 15 may 2009 17:58:28 +0000",datetime
"from urllib2 import request, urlopenimport jsonpat",google-maps
p,nodes
"import pandas as pddata = pd.excelfile(""*file name",ipython
select * from table_name where string like pattern,django
easy_install,virtualenv
&gt;&gt;&gt; import pyaudio&gt;&gt;&gt; pa = pyaud,pyaudio
"&gt;&gt;&gt; print list[laks,444,m][kam,445,m][kam",list
lxml,ubuntu
for x in range(x_size): for y in range(y_size): fo,for-loop
&gt;&gt;&gt; from timeit import timer as t&gt;&gt;,class
[1 1 1 nan nan 2 2 nan 0],interpolation
mysql_port = 3306mysql_database = 'mydb'mysql_data,egg
"in [1]: a=[1,2,3,4,5,6]in [2]: b=[7,8,9,10,11,12]i",zip
"import sys, qrcoded = qrcode.decoder()if d.decode(",qr-code
"i for i in tuple(my_generator) + (my_value,)",generator
sum,sum
"class myclass: def set_date(self, d): # what do i ",timezone
{% for point in zone.points.all %} {% if forloop.l,templates
myset = set()myset.add('foo')'foo' in myset,set
searching for lxmlreading http://pypi.python.org/s,libxml2
this is some \u03c0 text that has to be cleaned\u2,python-unicode
unixodbc and unixodbc-dev: 2.2.11-16build3tdsodbc:,unicode
"+----+----+| 0,0| 0,1|+----+----+| 1,0| 1,1|+----+",axes
x = numpy.random.rand(1),random
ds = [{'hello': 'there'}]logging.debug( pprint.ppr,pprint
#NAME?,ipython-notebook
image = form.cleaned_data['image'] temp = os.path.,file-upload
webbrowser,google-analytics
"""$c/test/testing""",environment-variables
"letter_count = {'a': 0, 'b': 0, 'c': 0}",alphabet
final,final
1) set : (i) data = set(f.read().splitlines()) (ii,search
setup.py install,pydev
import botokey = boto.connect_s3().get_bucket('foo,boto
building matplotlib matplotlib: 0.98.5.2 python: 2,matplotlib
"answer = truemyvar = ""the answer is "" + answer",casting
next,built-in
minindex = mylist.index(min(mylist)),floating-point
i = -6884376,unsigned
obj.attr,object
"import numpy as npdf = pandas.dataframe({""a"": np.r",pandas
class something(models.model): name = models.charf,data-migration
import multiprocessing as mpimport timedef f(x): r,multiprocessing
"class test: """""" &gt;&gt;&gt; a=test(5) &gt;&gt;&gt",doctest
"class parentclass: def __init__(self, foo): self.f",simplejson
condition,concurrency
"class workattachment(models.model): """""" abstract c",django-signals
/library/frameworks/python.framework/versions/2.6/,easy-install
"[ [ a, b, c], [d], [e, f] ]",permutation
make -j4,pip
tue mar 29 08:11:25 +0000 2011,date
dbf.py,dbf
"def val(): var = float(raw_input(""age:"")) status =",boolean
can't get vagrant settings: [0;31mthe provider 'vi,vagrant
import syntaxprint syntax.keywords# prints ['print,syntax
"try: #something...except baseexception, excep: log",logging
class movie(models.model): id = models.autofield(p,django-orm
addtype text/html pyaddhandler cgi-script .py,cgi
string,algorithm
shutil.rmtree(test_objects_dir),attributes
timeit,if-statement
json,dictionary
from &lt;module&gt; import *,module
run(),automation
apple = 1pears = 2oranges = 3,machine-learning
reg = re.compile(r'\w+')reg.match(stringio.stringi,stream
&gt;&gt;&gt; class g:... def __init__(self):... se,object
"traceback (most recent call last): file ""image_ope",python-imaging-library
"@app.route('/my_endpoint', methods=['post'])def my",mongoengine
/mypath/cx_oracle-5.1.1/build/lib.linux-x86_64-2.7,build
a=109,iterator
&gt;&gt;&gt; f=plt.figure()&gt;&gt;&gt; ax=f.add_s,pandas
httpd-xampp.conf,networking
"import timedef dates_between(start, end): # muck a",epoch
from mypak import mymod,biopython
import unittestfrom foo import coreclass httpreque,http
"import matplotlib.pyplot as pyplotx = [0, 1, 2, 3,",legend
from flask import flaskfrom flaskext.sqlalchemy im,testing
byte strings,bytestring
stats.singleton.twitter_count += 1,properties
datetime,timezone
hasattr,introspection
if (collresv.repeatability is none or collresv.som,indentation
employees,django-models
"query.filter(""submitted &gt;="" thisweek).order(""ra",gae-datastore
ordereddict,ordereddictionary
class timesheet(models.model): check_in_time = mod,django-models
sudo python3.3 setup.py install,unix
"...""2011-12-17 16:00"": { ""local"": ""av. prot†çsio a",sqlite
class other(models.model): user = models.foreignke,orm
import osdef populate(): python_cat = add_cat('pyt,django-1.7
open(),truncate
&gt;&gt;&gt; data&lt;class 'pandas.core.frame.data,pandas
/flaskapp /application.py /templates /hello.html,jinja
testcase,testcase
numpymatplotlib,matplotlib
./manage.py test,debugging
windowserror: [error 5] access is denied: 'path',file-permissions
gethostbyname(gethostname()),ip-address
@route('/spam')def spam(): return {'status':'onlin,bottle
8/-7=-2,division
import timeitdef x(): s=[] for i in range(100): # ,performance
to_excel,openpyxl
import matplotlib.pyplot,matplotlib
device_name gdn device_type device_os,dictionary
class example(stat): numeric = models.integerfield,django-models
pika,amqp
"x = np.array([(1.0, 4.0,), (2.0, -1.0)], dtype=[('",recarray
# lst is some sequence# x is come classx = x()lst.,language-design
settings.py,twitter-bootstrap
"reader=csv.reader(f,delimiter=';')",csv
"&gt;&gt;&gt; a = [2, 3, 1]&gt;&gt;&gt; b = [4, 6, ",numpy
runserver,static-files
"shuffle(df, n, axis=0)",pandas
"mydict = { 'item1' : [ 7, 1, 9], 'item2' : [8, 2, ",sorting
1,lambda
"subprocess.call([""c:/program files/nuke6.3v5/nuke6",stdin
"def rsenc(msg_in, nsym, gen): '''reed-solomon enco",optimization
"def copy_file(source_file, target_dir): pass",pool
sqlite&gt; pragma foreign_keys = on;,foreign-keys
logging.debug(),google-app-engine
@asyncio.coroutinedef do_something_periodically():,python-asyncio
python manage.py syncdb --all,django-cms
.net,node.js
gc.collect,performance
import misc_urllib2.....opender = urllib2.build_op,head
cursor.execute,django
import osimport sysimport win32com.shell.shell as ,admin
"con = _mysql.connect('localhost', 'dell-pc', '', '",corpus
if x not in list,if-statement
class user(db.model): __tablename__ = 'users' user,subquery
"a = [1, 3, 5, 6, 8]",map-function
"0 385 days, 04:10:361 57 days, 22:54:002 642 days,",pandas
class report(models.model): name = models.charfiel,tastypie
pandas.read_table,numpy
"import subprocess, image, imagedrawfor i in range(",stream
def func(items=[]): print items,pylint
import webfrom myapp.model import session # scoped,session
"for a, b, c in mylist:",iterable-unpacking
"list_a = [1, 2, 4, 6]filter = [true, false, true, ",numpy
"in [1]: def get_list_of_tuples(): ...: return [(i,",timeit
ctypes,octave
import atexitimport os.pathtry: import readlineexc,configuration
foreignkey,foreign-keys
forms.modelchoicefield(queryset = user.objects.fil,django-forms
"params = (url, urlencode(data),) if data else (url",urllib2
"a = [6, 7, 8, 9, 10, 11, 12]subset_of_a = [6, 9, 1",filter
ordereddict,dictionary
import tempfiletemp_file_name = mktemp()os.mkfifo(,file
"pywintypes.com_error: (-2147352567, 'exception occ",excel
for,translate
pip -e git+https://github.com/lewisham/cvsanaly@de,pip
x='stack',permutation
import redisdef getvariable(variable_name): my_ser,redis
bla.py,module
textwidth,pep8
x = parser.parse(date).strftime('%y%m%d')),matplotlib
typedef void (*mycallback_t) (callbackinfo);class ,boost-python
db.model,app-engine-ndb
"matrice = [1, 2, none]",mean
"import time, sysfor i in range(200): sys.stdout.wr",subprocess
yield,recursion
&gt;&gt;&gt; a = 1&gt;&gt;&gt; b = 1&gt;&gt;&gt; a,code-analysis
"-o 1 --long ""some long string"" ",argv
&gt;&gt;&gt; r = range(10)&gt;&gt;&gt; print(r)ran,lazy-evaluation
"photos (photo_id, title, date_uploaded, filename)a",nosql
hg convert file://c:/svnrepository,svn
&gt;&gt;&gt; import difflib&gt;&gt;&gt; difflib.se,fuzzy-search
"s = """""" controller = require 'controller' class fo",indentation
+---------+--------------------+| dept_no | dept_n,sqlalchemy
try:  raise exception('x')except exception as e: p,unicode
"&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;&lt;!d",xhtml
os.system(cmd) #do somethingsubprocess.call('taskk,console
fig = plt.figure()ax1 = fig.add_subplot(111)imax1 ,matplotlib
"(swedish,sv)(english,en)",internationalization
set -o vi,vi
list.sort(),list
"from lxml import etreeroot = etree.element(""root"")",lxml
correlation p-value0 0.5 0.11 0.1 0.82 0.9 *0.01*,css
def foo():var_a = 2var_b = 3def _closure(x):return,closures
datetime.datetime.now(),locale
#!/usr/bin/python,shebang
"in [563]: grouped['d'].agg({'result1' : np.sum, ..",aggregate-functions
mod_wsgi 3.3,amazon-ec2
eval,eval
lambda,list-comprehension
curl,ssl
class logo(db.model): name = db.stringproperty() i,gae-datastore
"#include &lt;iostream&gt;extern ""c""{ __declspec(dl",stdout
models.py,unit-testing
"sound 17000, 100",mp3
"traceback (most recent call last): file ""c:\users\",nameerror
"&gt;&gt;&gt; ""{:20}"".format(b""hi"")traceback (most ",string-formatting
#NAME?,x509
"file ""manage.py"", line 10, in &lt;module&gt;execut",heroku
._”“_”—_”— __init__.py_”“_”—_”— manage.py_”“_”—_”—,django-unittest
random.shuffle,random
key,sorting
importerror at /no module named simplerequest meth,social-networking
running installrunning buildrunning build_pycreati,xlrd
"python 3.2 (r32:88445, mar 28 2011, 04:14:07) [gcc",tkinter
"s1 = ""this is a foo bar sentence .""s2 = ""this sent",nlp
numpy,installation
"$ python3python 3.2.3rc2 (default, mar 21 2012, 06",configparser
"try: foo(a, b)except exception, e: baz(e)try: bar(",readability
n = 0s = 0while (n &lt; 1001): x = n/3 if isinstan,modulus
urlparse.urlparse,url-parameters
import ldapclass mycustomexception(exception): pas,mocking
import tesseractapi = tesseract.tessbaseapi()api.i,tesseract
django,migration
min_soil_particle_dens,pylint
zip,generator
\n,newline
from django.db import modelsfrom effects.models im,django-models
prefix=/usr/localpyversion=2.6python=python${pyver,numpy
import numpy as npfrom rpy2.robjects import rdata ,rpy2
"self.cells = np.empty((r,c),dtype=np.object)",multidimensional-array
"a = array([1,3,5])b = array([2,4,6])",numpy
"for ind, obj in enumerate(list1): if 4&gt; ind &gt",indexing
"ec2 = boto.connect_ec2( access_key, secret_key, re",amazon-ec2
"from datetime import datetime,date,timedeltaa=[dat",date
id,model
virtualenv,plugins
"word = ""hello""reversed_word = word[::-1]",slice
.map(func),pandas
d,defaultdict
$ virtualenv project$ cd project$ . bin/activate$ ,install
setup.py,make
print '''dogcat''',heredoc
error: no module named staticfiles,deployment
"traceback (most recent call last): file ""&lt;stdin",object
"def foo(bar): """"""perform foo action :param bar: th",python-sphinx
deque,deque
--[no-]foo do (or do not) foo. default is do.,argparse
"debug = falselogging = { 'version': 1, 'disable_ex",logging
convert test.jpeg -fuzz 7% -trim test_trimmed.jpeg,python-imaging-library
"try: print ""about to look for element"" element = w",webdriver
var newobject = { 'propertyname' : 'propertyvalue',dynamic-languages
"__import__(name)file ""/users/armynante/desktop/ucl",homebrew
c,linker
"select sum(field1) as sumfld, avg(field2) as avgfl",flask
sqlalchemy,django
k,optimization
"string = 'this is a string, with words!'",list
cv2,opencv
data::dumper,object-dumper
fmincon,numpy
def foo(): x = 1 y = 2.... if true: bar(),idioms
httpserver,basehttpserver
manage.py test &lt;myapp&gt;,unit-testing
from operator import itemgetterfrom collections im,namedtuple
xml.dom.minidom,security
&gt;&gt;&gt; publisher.objects.filter(name__contai,django
idehelper.py,text-editor
rodolphe-mbp:python-levenshtein-0.11.2 rodolphe$ s,osx-mavericks
#!/usr/bin/python3import sysclass hello: def print,call
"for object in list: t = thread(target=process, arg",performance
"&gt;&gt;&gt; c = ""help, me""&gt;&gt;&gt; print c.sp",split
"&lt;div id=""a""&gt;this is some &lt;div id=""b""&gt;t",selenium-webdriver
pyodbc,odbc
pip,pip
e0,copy
&gt;&gt;&gt; st = '%2g%k%3p'&gt;&gt;&gt; l = filte,string
"remove = []for k, v in dict_.items(): if condition",dictionary
try... catch,programming-languages
intersect1d,numpy
python /path-to-django-site/manage.py runserver $c,devserver
decisiontreemodel.predict,apache-spark
"mylist = [person(""foo""), person(""bar"")]print(""\n"".",printing
errors.py,restructuredtext
pythreadstate_get(),stack
i=7j=8k=10def test(): i=1 j=2 k=3 return dict((nam,python-internals
date state city salestoday salesmtd salesytd201303,pivot-table
&lt;?xml version='1.0' encoding='utf-8' standalone,diff
urllib2.request,decorator
"d1 = {key1: x1, key2: y1) d2 = {key1: x2, key2: y2",merge
&gt;&gt;&gt; mylist = range(100)&gt;&gt;&gt;magics,list
&lt;title&gt;{% block title %}{% endblock %} - exa,templates
*otf,fonts
event,security
media_root = os.path.join(os.path.abspath(os.path.,django
"a = np.array([[0, 0 ], [1, 0 ], [0, 1 ], [1, 1 ], ",hierarchical-clustering
&lt;script&gt;,deployment
class photo(models.model): title = models.char() i,django-models
"import randomrandom.sample(myset, 1)",set
(r'^so/(?p&lt;required&gt;\d+)/?(?p&lt;optional&gt,django
unicodeencodeerror: 'ascii' codec can't encode cha,unicode
l = raw_input()l = l.split(' ')l.pop(0),sum
datetime,timezone
"add_2(var,var2)",web-scraping
multiprocessing,multiprocessing
class mymodel(models.model): name = models.charfie,django-models
python update_url.py,namespaces
def isqrt(n): i = int(math.sqrt(n) + 0.5) if i**2 ,integer
email_use_tls = trueemail_host = 'email-smtp.us-ea,smtp
"args = [3, 6]range(*args) # call with arguments un",iterable-unpacking
print type(path) # &lt;type 'unicode'&gt;path = pa,sqlite
scipy.ndimage.filters.convolve,filter
"[[1293606162197, 0, 0], [1293605477994, 63, 0], [1",datetime-format
"import matplotlib.pyplot as pltplt.plot([1,2,3,4])",matplotlib
&gt;&gt;&gt; [(yield i) for i in range(3)]&lt;gene,list-comprehension
"def read(stream, parsefunc): for record in parsefu",generator
urlopen,map
from django.http import httpresponsefrom django.co,django-models
recv,linux
databases = { 'default': { 'engine': 'django.db.ba,django-models
py_incref(py_false);return py_false;...py_incref(p,python-c-api
============ =====================event score vari,alignment
class a: def __init__(self): #do something here de,inheritance
"import requestsr = requests.get(""some-site.com"")pr",socks
scrapy crawl spider -o items.json -t json,django-models
tk(),tkinter
"&gt;&gt;&gt; df = pd.dataframe({'id':[1,1,1,2,2,2,",greatest-n-per-group
"s_sq = (func(popt, *args)**2).sum()/(len(ydata)-le",curve
"[1, 2, 3]",formatting
"ps -u publica -o rss,etime,pid,command",memory-leaks
csr_matrix,scipy
readme.valgrind,valgrind
"class field(object):  """"""base class for all field ",syntax
"window.set_pos([18,8])",readability
"traceback (most recent call last): file ""/users/al",circular-dependency
the man likes math. he really does.,nltk
thread,gevent
scipy.sparse,sparse-matrix
"{% if not ajax %} {% extends ""/base.html"" %}{% end",django-templates
from string import templatemessage = 'you replied ,substring
"[1,2,3] [0][4,5,6] * [1][7,8,9] [2]",numpy
&gt;&gt; count_vectorizer = countvectorizer(min_n=,machine-learning
class purchaselist(generics.listcreateapiview) mod,django-rest-framework
def specialtest(fn): def wraptest(self): #do some ,ignore
sudo make install,re2
modelform,django-models
class event(models.model): title = models.charfiel,django-forms
&gt;&gt;&gt; d = datetime.date.today()&gt;&gt;&gt;,iso
from math import factorialdef product(iterable): p,math
ax,idioms
class a(): passclass b(): c = c()class c(): pass,oop
#0.........1........2........3........4.........5.,readability
def do_get(self): parsed_path = urlparse.urlparse(,basehttpserver
"from ftplib import ftpftpserver = ""myserver""ftpuse",webserver
"[1, 2, 3, 4, 7, 8, 10, 11, 12, 13, 14]",list
"class foo: def __init__(self, frob, frotz): self.f",constructor
sscursor,optimization
select distinct `column` from `table`;,sqlalchemy
t:\data\dbdesign\dbdesign_93_v141b.mdb,path
result = set(a).intersection(b),set
you cannot install pil 1.1.6 on this volume. pil r,osx
class baseconnection(tornadio2.socketconnection): ,websocket
[acgt]tgcatgtcgcatgatgcatgagagct #acgt,algorithm
"$ dev_appserver.py ./info 2012-12-16 07:44:31,412 ",google-app-engine
argecho.py,pydev
.tex,tex
psycopg2.dataerror: invalid byte sequence for enco,django-models
yyyy-mm-ddthh:mm:ss.ssssss-zo:ne,datetime-format
for list_of_x_items in fatherlist: foo(list_of_x_i,iteration
'abc',list-comprehension
int,defaultdict
"d3 = dict(d1, **d2)",dictionary
importerror: no module named _elementpath,lxml
pip,pip
pk,django-models
"dict1 = [{'a':2, 'b':3},{'a':3, 'b':4}]",sum
matplotlib,plot
import grequestsdef print_res(res): from pprint im,gevent
data = [[none]*5]*5data[0][0] = 'cell a1'print dat,2d
- list item 1 :: code sample... code sample...- li,restructuredtext
getgeotransform(),geolocation
from selenium import webdriverdriver = webdriver.f,selenium
"from numpy import zeros, arrayfrom math import sin",logarithm
setup.py,ssl
class article(models.model): text = models.charfie,django-class-based-views
_mysql.c:35:23: fatal error: my_config.h: no such ,mysql
'ab',itertools
class testclass(): list = [] def __init__(self): s,variables
copy_from,bulkinsert
"list = [[""a"",0], [""b"",1], [""c"",0], [""d"",2], [""e"",2",grouping
c:\windows\system32&gt;scrapy version -v:0: userwa,scrapy
from django.db import modelsclass poll(models.mode,forms
"&gt;&gt;&gt; python -c ""import sys; print sys.vers",pip
"def generate_student_dict(first_name=none, last_na",argument-unpacking
class baseclass(object):#code and the init functio,inheritance
\n\tname: john smith\n\t home: anytown usa\n\t pho,split
@login_manager.user_loaderdef load_user(userid): r,login
@specialclassclass thing(object): @specialfunc def,f#
import osimport webapp2import jinja2from google.ap,unicode
a = {...} # a is an dict with arbitrary contentsb ,immutability
try: print blahexcept keyerror: traceback.print_ex,logging
"&gt;&gt;&gt; x = np.array([4, 3, 2, 1])&gt;&gt;&gt",boolean
"&gt;&gt;&gt; class bool(bool):... print ""why?""... ",restriction
elementtree.tostring(e),marshalling
# env = python virtual environmentenv_var=foo ./en,mod-wsgi
"[{'price': 99, 'barcode': '2342355'}, {'price': 88",dictionary
.destroy(),tkinter
timeit,profiler
pyranometervalues,django-admin
celery,rabbitmq
"import scipyxvals = scipy.arange(-100,100,0.1)f = ",sympy
class breakfast(m.model): # egg = m.onetoonefield(,django-models
mut,geometry
c:\users\%user%\miniconda\python.exe c:/users/%use,selenium
"data = {'name' : ['bill', 'joe', 'steve'], 'test1'",pandas
/home/martin/.config/libreoffice/4/user/scripts,macros
scipy.signal.correlate2d,numpy
manage.py,debugging
&gt;&gt;&gt; u'\u003cfoo/\u003e'.encode('ascii')'&,ascii
unittest,dynamic
settings.debug,python-import
...\begin{document}%% college logo\vspace{5cm}\beg,pdflatex
.idea/mydjangosite/.idea/,pycharm
import urllib2import astfrom boto.s3.connection im,amazon-web-services
"logging.basicconfig(level=logging.debug, filename=",logging
coordskeys = np.array(list(set([tuple(x) for x in ,scipy
integer,pass-by-reference
"my_kmv = my_kv.reduce(lambda a, b: a.append([b]))",apache-spark
id,primary-key
"---level_1: ""test""level_2: 'netapp, sofs, zfs crea",pyyaml
__init__.pyx,cython
1 99 22 14 53 12 74 43 1for column in array: some_,numpy
y,theano
/home/myuser/dir1/,distutils
"filehandle = open('filename', 'w')",virtual
import zmqc = zmq.context()s = c.socket(zmq.rep)s.,message-queue
for x in somelist: if x in somedict: return truere,list
"for i in range(density): if i &lt; 5: x, y = rnd(0",pydev
"{ 'planet' : { 'name' : 'earth', 'has' : { 'plants",formatting
"def setup(self): log.debug(""test %s started"" % (te",pyunit
app.run(debug=true),flask
# decoratordef logged_in(f): @wraps(f) def decorat,flask
send,sockets
"s = [50,62,15,76,57,97,82,99,45,23]",filter
"""hello there how are you""",split
1! + 2! + 3! +... n!,lazy-evaluation
"""""""testing python decorators against decorator pat",decorator
"import sys, subprocess, numpycmdstring = """"""import",subprocess
xlrd,floating-point
"; declare variablesglobal $ini, $statapath, $stata",vim
message = email.message_from_string(raw_message)if,mime
r = redis.redis()r.connect(),orm
pip install psycopg2,pip
"""abc"".find(""b"")[1,2,3].index(2)",indexing
class group(models.model): name = models.charfield,django-models
"variable_name = params[""formfieldvalue""]",request
if not,if-statement
"class town(collections.namedtuple('town', [ 'name'",tuples
or,lisp
debug = false,memory-leaks
&gt;&gt;&gt; from email.utils import formatdate&gt,rfc2822
@propertydefine x(self): return 0@x.setterdefine x,decorator
www.domain.com/?f=x**2,flask
"l = [1,2,3,4,5,6]m = [8,9,10]",performance
%(levelname)s %(asctime)s %(module)s %(funcname)s ,logging
&gt;&gt; m1 = imread('_1.jpg');&gt;&gt; m2 = imrea,numpy
mydatetime.strftime('%m/%d/%y %i:%m%p'),formatting
nohup,deployment
__init__,initialization
url,malformedurlexception
class a(object): def __cmp__(self): print '__cmp__,identity
import sysimport smtplibimport emailimport refrom ,utf-8
python,integration
"class user(db.model): id = db.column(db.integer, p",flask
selenium.minimizewindow(),selenium
queryset,django-models
class account(models.model): name = models.charfie,django-south
amixer,ubuntu
{{ expr }},flask
from dotdict import dotdictifylife = {'bigbang': {,dictionary
"create table votes ( bill text, senator_id text, v",sqlite
r,pandas
c,python-import
from pyqt4.qtcore import *from pyqt4.qtgui import ,pyqt4
/project1/ /app1/ /app2/ ... __init__.py manage.py,django-apps
from distutils.core import setupfrom distutils.com,setuptools
suite = unittest.testloader().loadtestsfromtestcas,verbosity
"a = [0, 1, 2, 3]for a[-1] in a: print(a[-1])",indexing
"def isprime(numberin): for n in range(2,numberin):",twisted
import timeimport randomimport sys#-----function d,performance
import numpy as npimport matplotlib.pyplot as plta,matplotlib
util,class
"0x0112: ('orientation', {1: 'horizontal (normal)',",python-imaging-library
global,side-effects
&gt;&gt;&gt;&gt;&gt;&gt; a = []&gt;&gt;&gt; b = {1,dictionary
ctypes,ctypes
"req.on('close', function(){ //some handler});",rest
"import jsonarray = '{""fruits"": [""apple"", ""banana"",",list
while calling send_response_to_paypal. traceback (,paypal
rest_framework = { 'default_authentication_classes,django-authentication
class p1(object): passclass p2(p1): pass,superclass
"class a(): def _func(self): return ""asdf"" # not su",metaprogramming
import smtplibfrom email.mime.multipart import mim,smtp
"subprocess.popen(args, shell=true)",subprocess
rank,sorting
in [261]: bdataout[261]:&lt;class 'pandas.core.fra,dataframe
r'\',syntax-error
class answer(models.model): ovramt = models.foreig,inheritance
none,mutable
#!/usr/bin/python # -*- coding: utf-8 -*- def crea,encoding
insert ... on duplicate key update,sqlalchemy
not a valid choice,wtforms
"""{\""description\"":\""fdsafsa\"",\""order\"":\""1\"",\""pl",json
"'''foo, bar, ""one, two"", three four'''",escaping
message = email.parser.parser().parse(file)date = ,timezone
def test1(): print 12 gr2.switch() print 34def tes,jython
list_sum = sum(my_list),multiprocessing
&lt;root&gt; &lt;conference name='1'&gt; &lt;autho,parsing
import os.pathimport tornado.httpserverimport torn,tornado
url_for,url-for
virtualenv,virtualenv
seglib.py,python-sphinx
sum,numpy
range,number-sequence
import module,ipython
python manage.py makemigrations,django
import cprofilefrom random import randintlength = ,list
numpy.save(),load
#NAME?,argparse
with' context manager doing work on the,contextmanager
>>> foo = '0123456'>>> foo[0:4]'0123'>>> foo[::-1],slice
[a-za-z0-9'\-],unicode
from twisted.protocols import basicclass mychat(ba,sockets
subprocess,subprocess
#client exampleimport socketclient_socket = socket,networking
def contact_create(request): if request.method == ,django-models
registry = {}def register( cls ): registry[cls.__n,design-patterns
s(y_i),machine-learning
list.index(x),function
"class myclass(): """"""  description for class """""" de",python-sphinx
"qtcore.qobject.connect(menuaction, 'triggered()', ",pyqt
"x = 1,2,3,4y = 0.002871972681775004, 0.00514787917",matplotlib
"import numpy as npa = np.array([[1,2,3],[4,5,6]])a",numpy
a = 1b = 2c = 3,pdb
"templist = ['25', '50', '100', '150', '200', '250'",sorting
download_folder_path,variables
"myset = set(['a', 'b', 'c', 'd'])mydict = {item: (",yield
&gt;&gt;&gt; from collections import counter&gt;&g,collections
#!/usr/bin/env python2# -*- coding: utf-8 -*-from ,http
"browser = webdriver.firefox()browser.get(""url"")bro",selenium
&gt;&gt;&gt; import math&gt;&gt;&gt; math.pi3.1415,module
runserver,virtualenv
class animal(models.model): type = models.charfiel,django-models
m\xc3\xbcller,utf-8
daysafter = datetime.date.today() + datetime.timed,date
#!/usr/bin/pythonimport wxclass myapp (wx.frame): ,wxpython
c:\program files\google\google_appengine,google-app-engine
exit = falsedef thread_func():  while not exit: ac,sleep
"in [1]: %timeit 10 / float(98765) 1000000 loops, b",python-internals
"def upgrade(): op.create_table('player', sa.column",alembic
typedef struct { pyobject_head // other stuff...} ,python-c-api
knn,jit
"self.dpi = 100self.fig = figure((6.0, 6.0), dpi=se",scipy
0 14-11-20031 15-03-199912 04-12-201233 09-05-2007,bar-chart
from copy import deepcopydef copyexample: self.myd,deep-copy
class solutionfile(models.model): ''' a file from ,unit-testing
"class workspace(qmainwindow, ui_mainwindow): """""" t",ipc
numpy,numpy
"""select * from a where a.key &gt; %d"" % maxvalueof",caching
my_driver = get_my_driver()my_driver.set_timeout(3,selenium
"import wx  file ""/var/tmp/wxwidgets/wxwidgets-13~2",wxpython
class foo(models.model): title = models.charfield(,slug
dict [name] = 0dict [name] += 1dict [name] += 1,interpreter
$pip freeze &gt; requirements.txt warning: cannot ,pip
stdout,subprocess
class ticket(models.model): title = models.charfie,django-models
from collections import defaultdictclass recursive,override
/,operating-system
dir,dir
invalidrequesterror: this session is in 'prepared',sqlalchemy
%load_ext julia.magic,julia-lang
"arr = [[0 1 1 1 1 1 1 1 0], [0 0 1 1 1 1 1 0 0], [",numpy
rlock,locking
exception,jython
var,closures
http://mysite/compare/id_1/id_2,django
"&gt;&gt;&gt; class bank(): # let's create a bank, ",class
"round(decimal.decimal('2.000000000000000000001'),5",rounding
location: 10-10-10-10 revision: 1district: tower d,alignment
"proc = subprocess.popen('sudo apach2ctl restart', ",sudo
setup.py,setuptools
assert,assert
/library/python/2.6/site-packages/virtualenvwrappe,virtualenv
nan,floating-point
"&gt;&gt;&gt; sample = ""hello'world""&gt;&gt;&gt; pr",escaping
"application = webapp.wsgiapplication( [('/', index",subdomain
"import stringdef main(): isbn = input(""enter you'r",numbers
import scipy.stats as simport numpy as npimport ma,scipy
"subprocess.popen(['nohup', 'my_command'], stdout=o",nohup
"a = ['a','b','c']b = [1, 2]",combinatorics
"import itertools as itweight = 40full = range(1,41",combinations
(?!regex_1)regex_2,perl
"&gt;&gt;&gt; lis=[['a','b','c'],['d','e','f']]&gt;",list-comprehension
import zlibdo = zlib.decompressobj(16+zlib.max_wbi,zlib
"def a(b,c): return b+ca(*[4,5])",syntax
"words = [ lol, lot, bot ]",graph-algorithm
# the following key opens a doorkey: value,pyyaml
a,string-concatenation
"args = [""some_exe.exe"", ""some_arg"", ""another_arg""]",popen
size(),matlab
.py,runtime
&gt;&gt;&gt; import platform&gt;&gt;&gt; platform.,dns
"packages=['hermes'],package_dir={'hermes': 'hermes",setuptools
"df = pandas.read_csv('test.dat', delimiter=r""\s+"",",types
a[(a['some_column']==some_number) &amp; (a['some_o,boolean-logic
import tkinter as tkimport tkfontroot = tk.tk()can,cross-platform
"plt.legend(loc=""upper left"")",matplotlib
import tracebackdef a(): b()def b(): try: c() exce,exception-handling
django 1.0,templates
class myclass: def myfunc(self): pass,methods
"in [63]: c = numpy.arange(24).reshape(2,3,4)in [64",loops
list = list.objects.all()[0],filter
pythoninterpreter,jython
import numpy as npfrom scipy.interpolate import in,scipy
from celery.decorators import task@task()def add(x,scheduled-tasks
"user_dict[12] = { ""category 1"": {""att_1"": 1,  ""att",pandas
"try: print(10 * (1/0))except zerodivisionerror, er",try-catch
'20_231_mystring_234',split
unicodeencodeerror: 'ascii' codec can't encode cha,cron
"survey.add('blue')# would give survey == ['blue', ",dictionary
"a=[1,2,3,4,5,6,7,8,9]",numpy
email_host = 'smtp.gmail.com'email_host_user = 'us,smtp
idx &lt;- which(names(my_data)==my_colum_name),pandas
"def assert_long_strings_equal(one, other): lines_o",assertions
button,tkinter
import numpy as npimport timerandvals = np.random.,numpy
profiles = session.query(profile.name).filter(and_,flask
file1.py,variable-variables
"import httplib, urllibparams = urllib.urlencode({ ",post
import pandas as pdimport numpy as npdef add_prop(,pandas
src,zipfile
python.exe /path/to/.py/file,py2exe
"np.log(np.array(['1'], dtype=object))",exception-handling
psutil,opencv
#!/usr/bin/env pythonimport osimport sysimport fee,httplib
msvcrt.getch(),key
$ virtualenv venv --distribute-bash: virtualenv: c,virtualenv
pylab.subplot(449);,matplotlib
"scan_process = subprocess.popen(command, stdout=su",subprocess
sheet_names(),xlrd
"array = [.06, .25, 0, .15, .5, 0, 0, 0.04, 0, 0]hi",floating-point
"{% webapp2.uri_for(""editgreeting"", greeting.key().",jinja2
543921.9354,jinja
collections.namedtuple,python-internals
nbconvert,ipython-notebook
itertools.permutations,permutation
{{ somedate.strftime('%y-%m-%d') }},jinja2
python 2.5.4pyqt4 4.4.3sqlalchemy 0.5.2py2exe 0.6.,sqlalchemy
"import wxclass myframe(wx.frame): """""" we simply de",wxpython
"gwfuncs = [reboot, flush_macs, flush_cache, new_gw",dictionary-comprehension
"&gt;&gt;&gt; def f(a, b=[]):... b.append(a)... ret",parameter-passing
from setuptools import setup...,setuptools
sum([1 for x in frequencies if x &gt; 0]),list-comprehension
"def iszero( i): if i != 0: print ""ok"" else: warnin",exception-handling
static void request(uri selecteduri) { httpwebrequ,streamreader
"plt.subplot(121)plt.imshow(datastack, cmap=mpl.cm.",matplotlib
type(),dynamic
from django.utils.xmlutils import simplerxmlgenera,datetime
"termcount(doc_num, term , count)",numpy
pip install pylibmc,memcached
"[1, 2, 3]",numpy
"foo = ['foo', 'bar'];moo = ['moo', 'loo'];for (a, ",django-templates
#!/usr/bin/pythonimport timefilebytepos = 0while t,fopen
def conditional_import_modules(test): if test == ',module
iterparse(),namespaces
__iter__,iteration
"print re.search(r'1', '1').groups() ",object
&gt;&gt;&gt; from django.db import connection&gt;&,django
/usr/share/dict/words,nsstring
"#note: this is example code for my idea, you do no",user-interface
import sysfrom clang.cindex import *def nodeinfo(n,c
list,subclass
cluster load_date budget actual fixed_pricea 1/1/2,pandas
myobject,default
# check if variable already created this sessionin,memory
"colors=['b', 'c', 'y', 'm', 'r']lo = plt.line2d(ra",legend
"testtext = ""test - __—_–_ê__“..ëçë_ëâëéë?ë?"" # thi",printing
"st = ""hello world""tobinary(st)",binary
"d1 = ordereddict([('a', '1'), ('b', '2')])",dictionary
"for x in (0,1,2,3): for y in (0,1,2,3): if x &lt; ",list-comprehension
"from time import localtime, strftimefiles = open(""",newline
python do_work.py foo bar,ruby
open(),filenames
&lt;query object&gt;,sqlalchemy
import datetimeimport pytzclass myclass: def get_n,unit-testing
enumerate(),tuples
m-/,tramp
simdata(),matplotlib
textarea,django
buf_size=1024*64 # this is an important size...wit,iterator
model.meta.managed = false,database
try: foo = barexcept exception as exception: name_,exception-handling
mystring,performance
"@app.route('/search', methods=['post'])# gets sear",tweepy
"import sysimport tweepyconsumer_key=""""consumer_sec",twitter
class todolist(models.model): title = models.charf,django
"import timeitdef test1(): a = [1,2,3] a.insert(0,1",optimization
import sublimeimport sublime_pluginimport seapi...,sublimetext2
"""""""foobarfoo2""""""",multiline
date1 = datetime.strptime(str('2011-08-15 12:00:00,datediff
c:\python26\lib\site-packages\pygraphviz-0.99.1&gt,windows
my_zip/file1.txtmy_zip/dir1/file2.txtmy_zip/dir1/d,unzip
in [102]: l = range(1000)in [103]: t = tuple(range,list
"parser.add_argument('-auto', action='store_true')",argparse
import config,configparser
def manage_list(request): user = user.objects.filt,date
import matplotlib.pyplot as pltfrom matplotlib imp,mplot3d
"def word_exists(wordlist, word_fragment):return an",performance
"&gt; import numpy as np&gt; a = np.array([1,2,3,4,",matrix
building 'psycopg2._psycopg' extensioncreating bui,xcode4
"foreground = (255, 255, 255)width = 375height = 50",text
"import csvimport jsoncsvfile = open('file.csv', 'r",csv
import matplotlibimport matplotlib.pyplot as pltcm,matplotlib
class mainhandler(tornado.web.requesthandler): @to,yield
vacuum,postgresql
/home/user/templates,validation
"# plot line width matplotlib.rc('lines', linewidth",matplotlib
raw_input(),language-features
bottle.run,bottle
"tup = ([1,2,3],[7,8,9])tup[0] += (4,5,6)",tuples
"""41973333"" -&gt; 1.88999996185302734375e1""41995c29",floating-point
text,tkinter
"class a: @memoized def fun(self, arg): return none",decorator
(df.t / df.t.sum()).t,normalization
self.assertfalse,unit-testing
org.apache.spark.sparkexception: job aborted due t,avro
user_agent = 'mozilla/20.0.1 (compatible; msie 5.5,urlopen
url: http://www.test.com/test1returns: test1url: h,url
"@app.route('/template', methods=['get', 'post'])de",post
"alist.sort(cmp_items)def cmp_items(a, b): if a.foo",sorting
urllib2,urllib2
"prefix = ""/abc/123""@app.route(prefix + ""/"")def ind",flask
"import timeits = """""" x=5 if x&lt;0: pass"""""" t = ti",testing
"""{ { a } { b } { { { c } } } }""",text-parsing
from xml.etree import elementtree as etet.register,elementtree
tempfile.namedtemporaryfile(),temporary-files
csv,stream
statsmodels,forecasting
tree(),recursion
"class foo(object): (nonexisting,vague,confirmed) =",visibility
drop table if exists mytable;create table mytable(,bar-chart
"l = [1,7,3,5]",iterator
return redirect(my_url),redirect
"def monkeypatch_class(name, bases, namespace): '''",openstack-swift
**a b c d e**a 0 10 15 5 20b 10 0 5 5 10c 15 5 0 1,numpy
"def foo(bar, baz) : def closure(waldo) : return ba",closures
def select_rows(to_select): # for a list for row i,table
database_engine = 'postgresql_psycopg2' # 'postgre,django-syncdb
"steps = {1:""value1"", 5:""value2"", 2:""value3""}",dictionary
import multiprocessingclass worker(multiprocessing,multiprocessing
bigintegerfield,orm
myapp/models.py,pyramid
illegal_xml_re = re.compile(u'[\x00-\x08\x0b-\x1f\,unicode
path.py,module
pip,beautifulsoup
"text.replace('\xc2\x99', ' ').replace('\xc2\x85, '",unicode
class book( db.model ): creationtime = db.datetime,datetime
{{cat}} chases {{mouse}},django-templates
python-pip,distribute
var_a: 'home'var_b: 'car'var_c: 15.5,variables
importerror: no module named datetime,ubuntu-14.04
nose,testing
py_ssize_t,indexing
multiprocessing.pool(),generator
import syslogger = logging.getlogger()logger.level,logging
openerdirector,urllib2
"[{'id': 1, 'name': 'paul'},{'id': 2, 'name': 'john",dictionary
"def compare(item1, item2): return (fitness(item1) ",sorting
"class foo(object): a = 3 def bar(self, x): return ",eval
pylint,naming-conventions
"list = ['word1','word2','word3']ob_list = data.obj",list
tagged_text = nltk.pos_tag(nltk.text(nltk.word_tok,nltk
"for i in range(1000): if i in [150, 300, 500, 750]",loops
"[(0, &lt;pyspark.resultiterable.resultiterable obj",pyspark
multiprocessing,multiprocessing
"### base.html&lt;!doctype html public ""-//w3c//dtd",django-templates
"def load_recursive(self, path): for subdir, dirs, ",traversal
sudo pip install --upgrade pip,ubuntu-12.10
"line_string2 = '-10 ' + u""\u00b0"" +""c""l, = ax1.plo",plot
apt-get install -y,command-prompt
class company(models.model): company_name = models,django-models
"ec2server.create_instance( ec2_conn, ami_name, sec",amazon-web-services
$ ls -l links.csv; file links.csv; tail links.csv ,sorting
"from django.db.models import get_app, get_modelsap",table
"setattr(obj.__class__, 'property_to_be_mocked', mo",mocking
# beforemy_var = somethinglikethis.where(we=do_thi,line-breaks
import timeitimport numpy as npmy_data = np.random,csv
"#!/bin/bashcd /home/username/tgecho ""msg user#****",shell
from stringio import stringiodef foo(f: stringio) ,static-typing
&gt;&gt;&gt; import sys&gt;&gt;&gt; print sys.path,virtualenv
argparse,command-line-interface
pip install evernote,bash
"list(set([a,b,c,a]))",list
"c = pycurl.curl()c.setopt(pycurl.useragent, 'mozil",pycurl
num_intervals = (cur_date - previous_date) / inter,datetime
u,unicode
.. autoclass:: bus :members:,python-sphinx
fetchurls(),urllib2
tree = lxml.html.parse(some_response)links = tree.,lxml
"[55.0, 55.0, 47.0, 47.0, 55.0, 55.0, 55.0, 63.0]",numpy
dir | +-- test.py | +-- package | +-- __init__.py ,module
"traceback (most recent call last):file ""&lt;stdin&",module
"#1st.pyprint ""something to print""while(true): r=ra",communicate
"&gt;&gt;&gt; stdin, stdout, stderr = myssh.exec_co",paramiko
class myclass(object): def __init__(self): pass de,nameerror
python my_script.py &gt; my_output.txt,ipython
"&gt;&gt;&gt; with open('temp/connection.pickle','w",slots
"package mainimport ""fmt""func fibonacci(c chan int)",generator
import,naming-conventions
def f(x): return x+3,self-reference
"import xlrd#open the .xls filexlsname=""test.xls""bo",formula
class example(object): def the_example(self): itsp,methods
@namespace('/connect')class connectnamespace(basen,websocket
actions action = new actions(driver);action.moveto,webdriver
"numpy.random.random((256, 256))",matplotlib
"for i in range(2): print ""hello""",range
def flip(p): '''this function return h with probab,coin-flipping
"{% for i,j in enumerate(a) %} {{i}} ,{{j}}{% endfo",templates
&gt;&gt;&gt; url = 'http://some.url.value'&gt;&gt;,httprequest
typeerror: cannot concatenate 'str' and 'nonetype',optparse
"z = repmat(0,500,1); z(1)=3;z(2)=1;za = (z-repmat(",statistics
nosetests | colorize_stack_trace.py,bash
from __future__ import absolute_import,python-import
py2exe,executable
from numpy import *import osimport matplotlib.pypl,matplotlib
&lt;!doctype html&gt;&lt;html&gt; &lt;body&gt; &lt,selenium
"[1, 4, none, 6, 9, none, 3, 9, 4 ]",nested-lists
from matplotlib import pyplot as pltimport randomf,histogram
people,django-models
from distutils.core import setupsetup(name='scrapp,distutils
"def padded_hex(i, l): given_int = i given_len = l ",built-in
import randomimport matplotlib.pyplot as pltx = ra,matplotlib
import logginglog = logging.getlogger('module')cla,logging
from matplotlib.backends.backend_pdf import pdfpag,pandas
as_p(),django-forms
shell = ipython.shell.ipshell(argv=[])attributeerr,osx-snow-leopard
python manage.py runserver,django
multiprocessing,asynchronous
class pairevaluator(handevaluator): def returnarbi,tuples
recv(),timeout
"liquid error: undefined method `join' for ""\n song",jekyll
connections,mysql-python
str.split,split
"{% if form.??? %} &lt;ul class=""errorlist""&gt; {% ",django-templates
class attribute(models.model): name = models.charf,psycopg2
[ 0 1 6 5 1 2 7 6 2 3 8 7 3 4 9 8 5 6 11 10 6 7 12,numpy
~,boolean
"io.sockets.on('connection', function (socket) { so",websocket
"def isgrafting(a): for i in xrange(1, int(ceil(log",floating-accuracy
except: # do stuff with sys.exc_info()[1]except ba,exception-handling
hdf = pandas.hdfstore('survey.h5'),slice
"x = array(x) for x in range(25, 100): print(x)",numpy
visit(),compiler-construction
import sysfrom pyqt4 import qtguidef main(): app =,pyqt
&gt;&gt;&gt; a = object()&gt;&gt;&gt; a.hhh = 1,object
final,final
dataframe.str.split(' '),pandas
foo = np.asanyarray(range(100))mask = (foo &lt; 40,boolean-operations
class stuff(models.model): things = models.manytom,django
import mathimport numpyimport scipyfrom scipy.stat,floating-point
bin,virtualenv
"try: raise [1, 2, 3, 4]except exception as ex: pri",tuples
if 'debug' in argv[1:]: print 'will be running in ,command-line-arguments
"#program to blend many images into oneimport os,im",python-imaging-library
import pickleclass x(object): some_attribute = non,pickle
"liste = 'asdfasfasd:asdfafaergasde' # example, how",count
import inspectdef deco(f): def g(*args): print ins,methods
"in [1]: serie = pd.series([0.0,950.0,-70.0,812.0,0",pandas
"class dynamicform(form):def __init__(self, *args, ",django-forms
class product(models.model): name = models.charfie,django-models
"d = {}d[(0,0)] = 0d[(1,2)] = 1d[(2,1)] = 2d[(2,3)]",tuples
"keys1 = ['a', 'b', 'c', 'd', 'e', 'h', 'i']keys2 =",iterator
"""records"": [{""key1"": ""aaa"", ""key2"": ""bbb"", ""key3"":",dictionary
d[t],numpy
foo = foo()...if foo.bar is not none and foo.bar.b,null
&gt;&gt;&gt; class a(object): ... def some(self): ,methods
filefield,django-models
memcached -vv 2&gt;&amp;1 | tee memkeywatch2010098,buffering
none,zip
&gt;&gt; mylist = mylist()&gt;&gt; mylist.extend([,inheritance
import timedef printer(): for i in range(100): tim,ipython-notebook
foo/ __init__.py foo.py module1.py module2.py modu,import
"def xxx(*args, **kw): # or as a class@xxx(foo, bar",contextmanager
/item/{item}/some_options,policy
app,flask
class a: @property def x(self): return 5,language-features
dev_appserver,sqlalchemy
"points = []point = (1, 2)",concatenation
python26_d.lib,visual-c++
"plt.pcolor(rand(5,5))",matplotlib
"import numpy as npa = np.random.rand(10**4, 10**4)",numpy
raise,exception-handling
.py,debugging
@celery.taskdef tprint(word): print word,task
"seq.sort(lambda x,y: cmp(x.xxx, y.xxx))",code-review
"cursor.execute (""update tbltablename set year=%s"" ",mysql-python
pip,pip
"class productspider(crawlspider): name = ""product_",selenium-webdriver
scipy.cluster.hierarchy.dendrogram,cluster-analysis
"a = np.array([1, 2, 1, 3, 3, 3, 0])",duplicates
"@app.route(""/sitemap.xml"")def sitemap_xml(): respo",static-files
result.findall(),elementtree
"import matplotlib as mplmpl.use( ""cairo"" )import n",matplotlib
url = 'http://www.sub.domain.com/'values = { 'var',http-status-code-403
"file ""c:\python33-b\lib\distutils\msvc9compiler.py",visual-studio-2010
in file included from _mysql.c:34:d:\servers\xampp,windows-7
0,boolean
ipdb&gt; magazineissue.objects.filter(id__in=l_mag,django-models
temporaryuploadedfile,rest
set.difference(),pylint
importerror: no module named setuptools,setuptools
| main.py| scripts|--| __init__.py | script1.py | ,module
zlib,zlib
"@app.route('/login', methods=['get', 'post'])def l",flask
"def f(x: int) -&gt; int: r""""""adds 3 to x"""""" return",type-hinting
blockproc,image-processing
"li = [0, 1, 2, 3]running = truewhile running: for ",iteration
&gt;&gt;&gt; a = 3&gt;&gt;&gt; b = a&gt;&gt;&gt; p,variables
coordinates,sqlalchemy
"using username ""root"".authenticating with public k",putty
&gt;,operators
pylint.lint.run,automated-tests
"1997,ford,e350 1997, ford , e350 1997,ford,e350,""s",pandas
&gt;&gt;&gt; import io&gt;&gt;&gt; import csv&gt;&,unicode
"'19 janvier 2012' -&gt; '19', 'janvier', '2012'",unicode
"from flask import flask, request, render_templatea",flask
creation_time,orm
raw_input(),command-prompt
tzinfo,utc
pip install pillow,ubuntu-14.04
w602 deprecated form of raising exception,pep8
object#extend,oop
a[:] = [i + 6 for i in a],performance
somelist.append(verylongformula),append
settings.py,django
"[...]'version': '0.0.1','install_requires': [],'te",setup.py
"ipython -e ""open -a macvim""",ipython
/en_us/lc_messages/en_us.mo/en_ca/lc_messages/en_c,internationalization
in[2]: import matplotlib.pyplot as pltbackend maco,plot
pip install ipython,ipython
from selenium import webdriverfrom selenium.common,selenium-webdriver
def read(): while something(): yield something_els,generator
float,language-history
unique_together,django
&gt;&gt;&gt; from sklearn import svmtraceback (mos,scipy
"&gt;&gt;&gt; a = np.array([1,2,3])&gt;&gt;&gt; b =",numpy
"traceback (most recent call last): file "".\url.py""",typeerror
[ 1 2 ],matplotlib
&gt;&gt;&gt; d = datetime.datetime.now()&gt;&gt;&g,iso8601
r,statistics
"dict = {""path"": ""/var/blah""}curr = ""1.1""prev = ""1.",interpolation
import matplotlib.pyplot as plt import numpy as np,matplotlib
"for i, ithtag in enumerate(tag): tagdict.update(it",variables
c = 'c' # for examplehex_val_string = char_to_hex_,ascii
class dispatcher: def do_get(self): ... def do_put,oop
/library/frameworks/,path
"plot([1000, 1001, 1002], [1, 2, 3])",axis
virtualenv,pycharm
numpy,numpy
"{ ""id"" : ""abcde"", ""key1"" : ""blah"", ""key2"" : ""blah ",dictionary
'00123',string-formatting
"arr = []arr.append([1,2,3])arr.append([4,5,6])# ar",scipy
"dict = {""blue"" : ""5""""red"" : ""6""""yellow"" : ""8"" }",indexing
/var/run,daemon
could not find any downloads that satisfy the requ,pywin32
from django.db import modelsfrom django.contrib.au,django-users
from nltk.tokenize import *,nlp
"import urllib, urllib2import logging# the path and",urllib2
def main_function(x): r = get_range() for i in ran,generator
/usr/lib/pymodules/python2.7/numpy/core/include/nu,cython
"class negate(type): def __new__(mcs, name, bases, ",varargs
ipython,ipython-notebook
importerror: no module named multiarray.,pypy
"(start, stop, step)",algorithm
"""""""print a fibonacci series up to n.""""""",literals
&gt;&gt;&gt; import json&gt;&gt;&gt; line = '{u\'f,twitter
"self.canvas_l = label(self.master, text=""choose a ",padding
cv2,opencv
from __future__ import unicode_literals,future-proof
"{id=objectid(....),key={dictionary of values}}wher",pymongo
foreignkeys,json
import requestsfrom bs4 import beautifulsoupurl = ,python-requests
"utctime = datetime.datetime(1601,1,1) + datetime.t",strftime
and,language-design
ssh,matplotlib
django-admin,django-admin
"try: with acquire_lock({'field1':'abc', 'field2':'",code-reuse
"&lt;!doctype html&gt;&lt;html manifest="""" lang=""en",utf-8
def new_positions_spherical_coordinates(self): rad,geometry
create table dummy( serial_num integer primary key,sqlite3
from __future__ import ...,py2to3
importerror,importerror
public_html,download
a,jinja2
"a = re.compile(""a.*b"")b = re.compile(""c.*d"")...",caching
"time_str = ""2012-07-24t23:14:29""time_obj=datetime.",timestamp
"def info(object, spacing=10, collapse=1)",coding-style
class myclass(object): def __init__(self): self._v,properties
"&gt;&gt;&gt; xs = [1,2,2,3]&gt;&gt;&gt; print adde",list-comprehension
pandas dataframe,pandas
args = parser.parse_args()if len(args) == 0: run_d,argparse
sys.builtin_module_names,std
execfile,import
partition of a set of 116280 objects. total size =,memory-management
parse_url,parsing
static,flask
&gt;&gt;&gt; regex_dict = { re.compile(r'foo.') : ,hash
#!/usr/bin/env python,virtualenv
f,algorithm
element=driver.find_element_by_id(elementid) print,webdriver
__call__,decorator
"x = numpy.power(x,3) ",performance
open('foo.txt'),text
"$ python -c ""from flaskext.sqlalchemy import sqlal",flask-sqlalchemy
startdate,postgresql
"import numpy as npnp.dot(a,b)",numpy
namedtemporaryfile,temporary-files
class meta,class
__class__,attributes
str.startswith,list
#!/usr/bin/pythonimport smtplibmsg = 'hello world.,gmail
#!/usr/bin/env python# *-* coding: iso-8859-1 *-*i,character-encoding
"[a,b][b,c][a,c][c,d]",graph
n,scipy
"[17/sep/2014 22:29:00] ""get / http/1.1"" 500 59trac",module
dependency_links=['https://github.com/nathanborror,bitbucket
# draw median marker.if plot_opts.get('bean_show_m,markers
import pygamefrom pygame import *win_width = 800wi,pygame
if (x == 5) { a = b; c = d;},whitespace
df_a = mukey di pi0 100000 35 141 1000005 44 142 1,pandas
a b c0 192.168.2.85 192.168.2.85 124.43.113.221 19,dataframe
b(?:m|(?r))*e,recursive-regex
python code.py,python-interactive
gtk.window,gtk3
"list = ['element1\t0238.94', 'element2\t2.3904', '",split
import cprofile as profile# inside class method...,cprofile
setup.py,pypi
venv/bin/pip install -r requirements.txt,virtualenv
"function [melsignal] = melody2audio(melody, vararg",signal-processing
requests,python-requests
random.sample,random-sample
tzdata2013xx.tar.gz,astronomy
from sqlalchemy import create_enginefrom sqlalchem,session
math.sqrt(),sqrt
book.encoding,encoding
strftime,datetime
threading,data-structures
typeerror at /comerx/cliente/novo/__init__() got m,init
class contact(models.model): name = models.charfie,django-models
"traceback (most recent call last): file ""/system/l",virtualenv
"@receiver(post_save, sender=user,  dispatch_uid='m",mocking
crawler = crawler(settings(settings)) crawler.conf,scrapy
"colors = ['b', 'r', 'g', 'c']cc = cycle(c)for p in",legend
from celery import celerydef make_celery(app): cel,celery
mainparser = argparse.argumentparser()subparsers =,command-line-interface
"self.cursor.execute(""select string from stringtabl",sql-like
perl virtualenv.pl my_environment. my_environment/,virtualenv
def rounds(nr_of_rounds): def wrapper(func): @wrap,decorator
x,pyspark
"$array = array(1 =&gt; 2000, 3 =&gt; 5000 ...);",haskell
40558,date
f(x) = 1/x,neural-network
--t1-- ---t2.1-----------t2.2------- ' ' ' ' '20 3,algorithm
&gt;&gt;&gt; import cv2traceback (most recent call,importerror
event,unit-testing
// preprocessor#include &lt;iostream&gt;#include &,math
pyconfig.h,header
import numpyimport scipyimport scipy.signalimport ,numpy
"def _execute(self, cursor, query, parameters): try",tornado
django==1.3.1--extra-index-url=http://dist.pinaxpr,requirements
super,multiple-inheritance
"def isrotation(a,b): if len(a) != len(b): return f",algorithm
"self.assertraises(attributeerror, branch[0].childr",unit-testing
"string = ""hello123""",string
||=,conditional
set statement_timeout to 1000; -- timeout for one ,sqlalchemy
tuple1 = ()tuple2 = () dict1 = {}dict2 = {}list1 =,cpython
# open new file to writefile = nonetry: file = ope,file-io
def isinteger(n): return int(n) == n,dynamic-typing
my international text: †Ç†?†_,plone
import cstringio.stringio as stringio,stringio
sys.argv,argv
v = 'go'present = present_tense(v)print present # ,nltk
&gt;&gt;&gt; len(colors)256&gt;&gt;&gt; colors[0](,image-processing
sqlalchemy_track_modifications,sqlalchemy
#!/usr/bin/python#-*-coding:utf-8*#option_controll,file
'ls\r\n\x1b[00m\x1b[01;31mexamplefile.zip\x1b[00m\,escaping
"beautifulsoup('&lt;h1&gt;foo&lt;/h1&gt;', 'html5li",html5lib
"d = {'a':1, 'b': {'c':{}}}",depth
"# bad code do not use!!!return type('contactform',",django-forms
df,ipython
import jsonimport urllib2from datetime import date,unix-timestamp
"# listener.pyclass listener: def __init__(self, po",ipc
class a(): pass,exuberant-ctags
&lt;body&gt;,algorithm
mydi['foo'] ,dictionary
url_for,url-routing
exceeded soft private memory limit with 192.023 mb,memory-management
db,design
"import numpy as npdata = np.array([[5,2], [4,1], [",sorting
import numpy as npimport scipy.spatial.distance as,memory-management
local_tz = timezone('asia/tokyo')start_date = '201,pytz
&gt;&gt;&gt; i = 6&gt;&gt;&gt; s = [i * i for i in,list-comprehension
"set([1,2,3,4]&amp;set([2,3,5]). ",list
\r\n,osx
"plt.scatter(randn(100),randn(100))# set x, y limsp",matplotlib
@property,monkeypatching
cornercount = 100qualitylevel = 0.1mindistance = 5,opencv
import sysfrom pyside import qtcore# the next line,pyside
nsthread.detachnewthreadselector_totarget_withobje,cocoa
for (i = 0; i &lt; arr.length; i++) { /* ... */},internet-explorer
import matplotlib.pyplot as pltfrom matplotlib.pyp,font-size
import numpy as npimport pandas as pdimport matplo,pandas
d1,recursion
wprintf,perl
"import numpy as npfrom pil import image, imagefont",true-type-fonts
pip install scrapy,virtualenv
merged_array = array(list_of_arrays),numpy
ctypes,ctypes
import gflagsimport httplib2from apiclient.discove,oauth-2.0
!!python/unicode,pyyaml
"{'created': datetime.datetime(2010, 12, 31, 19, 13",json
unicodeencodeerror: 'ascii' codec can't encode cha,urllib2
for ii in range(len(data)): lons = np.array([data[,matplotlib
"g.db.execute('insert into downloads (name, owner, ",flask
&gt;&gt;&gt; '{:.1%}'.format(0.9995)'100.0%'&gt;&g,string.format
"restaurant_dish = db.table('restaurant_dish', db.c",sqlalchemy
2012-05-29t19:30:03.283z,datetime
"5.6 4.5 6.8 ""6.5"" (new line)5.4 8.3 1.2 ""9.3"" (new",strip
"import botoboto.set_file_logger('boto', 'logs/boto",amazon-web-services
"class post(models.model): """""" blog entry """""" autho",postgresql
"def formattime(self, _record, _datefmt): t = datet",formatter
class mymodel(models.model): parent = models.forei,django
http://localhost:8000/issueapp/1628/view/22,next
"listofnumbers = [1,2,3,4,5]square = lambda x: x * ",scope
"class showappsview(loginrequiredmixin, currentuser",django-class-based-views
set_yticklabels(),matplotlib
def upload(url): try: conn = boto.connect_s3(setti,amazon-s3
required_tests = card_test.objects.using(get_datab,postgresql
import timefrom apscheduler.scheduler import sched,apscheduler
ax = plt.subplot(),numpy
"i, o, e = client.exec_command(""perl -p -i -e 's/"" ",paramiko
class isomething(object): def some_method(): pass ,interface
#models.pyclass foo(models.model): img = models.im,tastypie
1 3 4 2 2 75 2 2 1 4 13 3 2 2 1 1,2d
id,na
"import numpy.random as nprimport timedef horner(c,",loops
#,hash
// somehow add serialization metadata to classes f,serialization
stevedore.extension could not load 'user_scripts':,pip
for filename in os.listdir (input_dir) : if(filena,memory
src/ft2font.cpp:2170: error: _—…ft_load_target_mon,matplotlib
paster create,paster
import sqlalchemydb = sqlalchemy.create_engine('po,postgresql
xrange,range
"&lt;!-- &lt;span class=""titlefont""&gt; &lt;i&gt;we",tags
multiprocessing,multiprocessing
3.1415 // 1,floor
.lnk,shortcut
ctrl-m d,ipython
"request = urllib2.request(url, data, headers)respo",http-status-codes
"pow(m, 1.0/n)",nth-root
string.whitespace,escaping
"in [1]: %timeit abs(5)10000000 loops, best of 3: 8",absolute-value
matplotlib,plot
"proc1 = subprocess.popen(['python','mytest.py'])pr",asynchronous
blob.objects.filter(foo = foo) \ .filter(status = ,orm
"dates = np.datetime64(['2010-10-17', '2011-05-13',",numpy
from antlr4 import *# from phpparentlexer import p,antlr
"d = {1:'a',5:'b',2:'a',7:'a'}",order
&gt;&gt;&gt;import numpy as np&gt;&gt;&gt;np.__con,numpy
2009-03-08t00:27:31.807,datetime
"phrase = ""how fast it is""count = 0with open('bigfi",file
class a(object): def __init__(self): self.a = 1cla,multiple-inheritance
#jurassic park mainframefrom random import randint,import
for i in orders_df.action: if i == 'sell': orders_,pandas
"[3,5,6,7,1]",algorithm
"subprocess.call(shlex.split( """"""/usr/local/itms/bi",stdout
modeladmin.list_display,function
$ heroku run python manage.py collectstatic --noin,git
product.objects.values('date_created') \ .annotate,django
settimeout,setinterval
aapl gedate2009-01-02 89.95 14.762009-01-05 93.75 ,pandas
"try: gzip.gzipfile(filename, 'r') # compressed # .",gzip
"arrays = [(-1,+1), (-2,+2), (-3,+3)];",cartesian-product
python manage.py test,django-1.4
the blue dog and blue cat wore blue hats,sed
tarfile,eof
function(2),for-loop
lxml,html-parsing
"from scipy import statsstats.chi2.pdf(3.84 , 1)0.0",scipy
from django.db import modelsclass transaction(mode,django-queryset
nan,nan
"def load_plugins(): plugins=glob.glob(""plugins/*.p",import
&gt;&gt;&gt; import timeit&gt;&gt;&gt; timeit.time,caching
class myclass: def method(arg): print(arg),arguments
"import subprocesssubprocess.call(""ipython notebook",dos
{% url sitechangeobject.urlname %},django-urls
operationalerror: database is locked,database
app.yaml,google-app-engine
"a = (10, 10)b = (4, 4)",numpy
"fig, ax = plt.subplots()ax.imshow(data)plt.xticks(",imshow
oauth_session_handle,yahoo
class myform(forms.form):  name = forms.charfield(,django-forms
&gt;&gt;&gt; import pprint&gt;&gt;&gt; a = {'first,pprint
"import urllib2response = urllib2.urlopen(""http://b",redirect
tramp-remote-process-environment,tramp
mysite/ templates/ admin/ index.html,django-admin
"import csv with open('v.csv', 'w') as csvfile: cwr",io
__mul__,built-in
"parser.add_argument('-s', ""--startdate"", help=""the",argparse
"self.mysearchtables = self.mysearchtree.findall("".",lxml
[s]tack[o]verflow ______/ \_______ [b]ase \___ [d],trie
import timewhile true: print 'data' time.sleep(1),producer-consumer
'127.0.0.1',ip-address
"def windex(dict, sum, max): '''an attempt to make ",random
a b c da -1.045 2.0 3.5 -4.890b -5.678 3.2 2.89 5.,grid
null=true,sql
import matplotlib.pyplot as pltfrom mpl_toolkits.m,mplot3d
"{field1: {}, field2: ""some value"", field3: {}, ...",object
#call to main functionif __name__ == '__main__': a,io
"datetime.strptime(date_string, '%y-%m-%d')",datetime
telnet,telnet
"data = {'category': ['cat2','cat1','cat2','cat1','",statistics
try: requests.get('http://www.google.com')except c,http-request
"i = cv2.imread(""lena.png"")i = cv2.cvtcolor(i, cv2.",image-processing
const std::string&amp;,immutability
observable,functional-programming
import numpy as npdef _process(array): rows = arra,numpy
"def _sort_by_score(scoring, items_list): unsorted_",currying
def errortest(): raise exception(),celery
&gt;&gt;&gt; from decimal import decimal&gt;&gt;&g,decimal
true - false,boolean
assert almost equal,py.test
frozenset,generator
sphinx.ext.ifconfig,python-sphinx
"tax_location = 'statename, united states'def add_t",patch
numpy 1.6.0,numpy
"from mpl_toolkits.mplot3d import axes3d,axes3dimpo",tkinter
"print poisson(2.6,6)",poisson
#!/usr/bin/perl -w use open qw(:std :utf8);while(&,unicode
:syntasticenable,syntax-checking
sys.path.append,install
beautifulsoup,beautifulsoup
collections.counter,dictionary
"ssh = paramiko.sshclient()ssh.connect(server, user",paramiko
def myview(request): res1 = requests.get('aurl') r,request
"if number in (1, 2):",optimization
y = lambda u: u**(-2) + 8x = lambda u: numpy.exp(-,scipy
[a-za-z0-9 .],filenames
the_base_class,inheritance
python mrsync.py -m /tmp/targets.list -s /tmp/sour,eclipse
import numpy as npfrom scipy.stats import kstestmu,scipy
"tupleoftuples = ((1, 2), (3, 4), (5,))",list-comprehension
"def bad_append(new_item, a_list=[]): a_list.append",arguments
__init__,inheritance
plot,plot
def read_contents(file_path): return file(file_pat,scope
&gt;&gt;&gt; list_of_arrays = map(lambda x: x*ones,arrays
def machineepsilon(func=float): machine_epsilon = ,epsilon
def outer_function(file): for line in file: inner_,compiler-optimization
import numpy as npimport matplotlib.pyplot as pltx,contour
%%,ide
"u""{'code1':1,'code2':1}""",dictionary
import osa = 'c:/'b = 'myfirstdirectory/'c = 'myse,path
import tkinter as tkimport imagetkroot = tk.tk()im,tkinter
"u""_±†_†?†_""",utf-8
"import helloprint ""hello""hello = reload(hello)",python-import
&gt;&gt;&gt; countinfile('test.txt'),scikit-learn
importerror: dlopen(../apptrace/guppy/sets/setsc.s,memory-leaks
class samplemodel(models.model): apple = models.ch,unit-testing
unicodeencodeerror: 'ascii' codec can't encode cha,markdown
class comments(models.model): content = models.for,database
"def add_obj(obj, add_obj): for property in add_obj",dictionary
document.pdf: table.tex pdflatex document.textable,scons
import signaldef handlesigterm(): shutdown()signal,signal-handling
from,django-models
"def gradient(x_norm,y,theta,alpha,m,n,num_it): tem",machine-learning
# my version:max_q = max([x for x in self.getqvalu,list-comprehension
"def func(a=none, b=none, c=none): for arg, val in ",keyword
0 threads: 83.842 seconds1 threads: 78.777 seconds,performance
import randomfrom multiprocessing import poolfrom ,multiprocessing
y-axis,histogram
"def handle_remote_file(url, **kwargs): response = ",local
dbus,communication
"import pytest,osimport logginglogging.basicconfig(",py.test
"myarray = []myarray[""john""] = ""johns value""myarray",list
do_post(),post
"import res = 'start tt end're.sub(r'([a-z]){2}', r",capitalization
random.random(),seed
"first_list = [['test.doc, '1a1a1a', 1111],  ['test",compare
method_missing,oop
urllib2.urlopen,character-encoding
heap(),profiling
"class foo(object):  def __init__(self, a, b, c, d,",decorator
"cat /etc/apt/sources.list## note, this file is wri",linux
@validates('field_one')def validates_field_one(sel,flask
splitevery :: int -&gt; [e] -&gt; [[e]] @'spliteve,split
company price quantitymicrosoft 100 10google 99 5g,pyramid
"lambda x, y : x + y",tkinter
for x in some_list: ...... 100 lines later ...for ,raii
news,circular-dependency
py.test,py.test
"def handle_uploaded_image(i, u): # resize image  f",resize
"type(x) in (list, tuple)",sequences
null,exception-handling
search(),code-golf
"def main(): for i in xrange(2560000): a = [0.0, 0.",numpy
acquire,synchronization
{% for email in emails %} {%if email%} &lt;input t,django-templates
"select player_type, count(*) from players group by",django
&gt;&gt;&gt; import re&gt;&gt;&gt; m = re.match(r',unicode
serializers.py,pagination
pip install mysql-python,virtualenv
def upgrade(): ### commands auto generated by alem,alembic
string str,string
caches = { 'default': { 'backend': 'django.core.ca,memcached
"header, output = client.request(twitterrequest, me",twitter
def createdirectory(pathname): if not os.access(pa,module
from django.utils import simplejson,simplejson
base,abstract-class
__init__,inheritance
"def primes(n): """"""returns list of all the primes u",math
"def write_pdf(template_src, context_dict): templat",pdf
tail -f logfile,paramiko
def runfunctionsinparallel(listof_funcandarglists),multiprocessing
csv.dictreader,csv
"import base64, osdataset_size = 10000000000 # that",memcached
import urllib2req = urllib2.request('www.tattoo-co,httprequest
django.contrib.admin.sites.adminsite,django-admin
class customlogger(logging.logger): ...,module
def authentication(request): consumer_key = 'xxxxx,google-api
"traceback:file ""/usr/local/lib/python2.7/site-pack",django
"def spam(): print ""spam""exec(spam.__code__)",exec
"for token in scan(""a(b)""): print token",lookahead
"data = np.random.normal(loc=100,scale=10,size=(500",matplotlib
dispatch(),django-views
+=,list
/,documentation
ioerror: bad message length,multiprocessing
title(r'$\mathrm{test}$'),latex
l,slice
"webapp.route('/feed', handler = feed)",webapp2
%,string-formatting
/my-profile/,impersonation
id,dynamic
transform,scikit-learn
"sudo easy_install -f <a href=""http://ipython.scipy",readline
"(message ~ ""program\\[\d+\\]: message"" and severit",rules
dir = os.listdir(os.getcwd()),directory-listing
"...&lt;div id=""remository""&gt;20&lt;/div&gt;...",parsing
for line in open(filename): do_something(line),garbage-collection
index.tpl,bottle
&gt;&gt;&gt; from scipy import stats&gt;&gt;&gt; i,keyboardinterrupt
dateutil,timezone
"&gt;&gt;&gt; np.ones((8,8))array([[ 1., 1., 1., 1.",numpy
png,matplotlib
$ python setup.py build,osx
def test_device_homepage(self): request = self.fac,unit-testing
rm -rf /,operating-system
"""wilbur smith (billy, son of john), eddie murphy (",split
eg: i would like to avoid writing 'categories':cat,django-nonrel
&gt;&gt;&gt; d = {1:2}&gt;&gt;&gt; type(d.items()[,serialization
filelist.txt,speech-to-text
"&gt;&gt;&gt; format(true, """") # shows true in a st",boolean
mediaitem.comments.all(),django-models
"{ ""&lt;song id&gt;"":{ ""artist"":""&lt;song artist&gt",typeerror
"[(101, 153), (255, 827), (361, 961), ...] ^ ^ x y",tuples
git pull,bash
import asyncio@asyncio.coroutinedef shleepy_time(s,python-asyncio
list,frequency
__init__.py,package
"x = ['1', '2', '3']y = ['a', 'b', 'c']",tuples
"import csvthe_file = open('path', 'r')reader = csv",csv
"var o= new {attr1=""somehing"", attr2=344};",anonymous-types
______________| __ || |__| || || ||______________|,range
"double* data_in, double* data_out",numpy
"ocean = ""o""fire = ""x""hit = ""*""size = 10sea = [] # ",math
paster serve,yum
"# -*- coding: utf-8 -*-""""""test module.""""""def test(",pylint
"%step foo(1, 2)",ipython
"contains([1,2], [-1, 0, 1, 2]) # returns [2, 3] (c",contains
data.txt,numpy
"// timestep,x_position,y_position0,4,70,2,70,9,50,",list
"error 2014-01-03 15:32:15,308 base :: internal ser",facebook
def _utcnow(): return datetime.datetime.utcnow()de,mocking
a/long/long/path/to/file.py,directory
https://github.com/ddollar/heroku-buildpack-apthtt,geoip
"ftp.retrbinary('retr readme', open('readme', 'wb')",last-modified
df.plot(),pandas
ax.yaxis.tick_right(),labels
$ path_to_tool -option1 -option2 &gt; file_out,stderr
find the min,optimization
please add the directory containing pg_config to t,psycopg2
"class first(object): def __init__(self): print ""fi",constructor
import timeitdef add_simple(): for i in range(1000,floating-point
__/a__/ \b \ _/c \_/ \d \e,formatting
import pdb; pdb.set_trace(),pdb
"def cov(a, b): if len(a) != len(b): return a_mean ",covariance
connection error: [errno 8] _ssl.c:504: eof occurr,celery
key=len,sorting
admin_media_prefix = '/media/admin/',django
from socket import socketimport ssls = socket()c =,m2crypto
273 # apply column averages to image--&gt; 274 img,numpy
"values = (unicode(""†•"", ""utf-8""), unicode(""†©"", ""u",utf-8
&gt;&gt;&gt; x = 4&gt;&gt;&gt; y = 5&gt;&gt;&gt; p,format
required=false,rest
"def empty_generator(): # ... do some stuff, but do",yield
.tar.gz,gzip
import random aiturn=truewhile aiturn == true: all,set
def threadfunc(): while true: time.sleep(1)threadi,daemon
"pybrain.tools.shortcuts.buildnetwork(2, 3, 1)",neural-network
"python 2.7.6 (default, mar 22 2014, 22:59:56)[gcc ",pyunit
## model.pyfrom sqlalchemy import *from sqlalchemy,orm
"tags = [u'man', u'you', u'are', u'awesome']entries",for-loop
class myclass(object): pass# which one is correct?,pep8
"print '""' + title.decode('utf-8', errors='ignore')",beautifulsoup
__call__,decorator
secs = sections.objects.filter(order__gt = 5),django-models
file(),nested
file.write(),file-io
"def only_roman_chars(s): try: s.encode(""iso-8859-1",unicode
&gt;&gt;&gt;import time&gt;&gt;&gt;s = time.strpti,time
/browse/&lt;name1&gt;/&lt;value1&gt;/&lt;name2&gt;,django-urls
'1+2**(x+y)',latex
string_location = myaddress2 geodata = [] for plac,django
"cdef void say_hello(name): print ""hello %s"" % name",gcc
def foo(a): # i want to print the value of the var,variables
import matplotlibimport matplotlib.pyplot as pltfr,matplotlib
pickle,serialization
"&gt;&gt;&gt; {1: ""foo""} &lt; {2: ""bar""}true",python-internals
email_use_tls = trueemail_host = 'smtp.gmail.com'e,ubuntu
"&gt;&gt;&gt; values = [1.1, 2.2, 3.3]&gt;&gt;&gt; ",numpy
"python2.7 -m timeit ""d = dict(x=1, y=2, z=3)""10000",object-literal
pip install requestsfailed to create process,easy-install
class userprofile(models.model): user = models.one,django-models
crontab e,editor
import gtkimport pygtk,pygtk
/usr/bin,development-environment
"('product', '500.00', '1200.00')",tuples
class game(ndb.model): gameid = ndb.integerpropert,app-engine-ndb
request.session['mykey']= 33,session
import imageim = image.open('tweeter.png')layer = ,python-imaging-library
[project name][scenario name][option 1][option 2].,user-interface
"like = db.table( 'like', db.column('uid', db.integ",sqlalchemy
cv_upload = driver.find_element_by_id('id_cv_uploa,styles
valuelist,dictionary
c++,node.js
"df = pd.dataframe(np.random.randn(8,8), columns=li",indexing
&gt;&gt;&gt; help(super),super
ggplot,plot
gstate = pygilstate_ensure();// do some python api,multithreading
&gt;&gt;&gt; import fuzzy&gt;&gt;&gt; s = fuzzy.so,fuzzy
#!/bin/bash,bash
"from contextlib import nested, contextmanager@cont",with-statement
(defn prime? [n] (let [r (int (math/sqrt n))] (loo,clojure
frozenset,set
obj = objectres.query.all()return str(obj[-1].id),flask
latex was not able to process the following string,osx-snow-leopard
$ cksum ./temp.bin1605138151 712368 ./temp.bin,checksum
"some_id = 1cursor.execute(' select ""indicator"".""in",postgresql
isatty(),io-redirection
"definition = {'apple': , 'ball': }",initialization
pts,scipy
# generic node classclass node(abc): @abstractmeth,typeerror
python manage.py sql polls,migration
"from pil import image, imagedrawimport colorsysdef",color-space
"maths_operator = ""==""if ""test"" maths_operator ""tes",operators
from myproject.model.meta import sessionfrom sqlal,sqlalchemy
use,fortran90
"import numpy as np, cvvis = np.zeros((384, 836), n",opencv
"&lt;html&gt; &lt;body&gt; &lt;a href=""/1234.html""&",lxml
"reactor.addsystemeventtrigger('before', 'shutdown'",shutdown
sqlite3,sqlite3
traceback.format_exc(),format
test_,selenium-webdriver
error: duplicate key value violates unique constra,postgresql
from blog.models import postfrom django.db.models ,django-models
"for item in item_list: e, new = entry.objects.get_",bulkinsert
./blaa.py --xlim -2.e-3 1e4 ,negative-number
importlib,python-module
a bdate 2013-05-01 473077 713332013-05-02 35131 62,dataframe
def companytimer(): if minutes % 6 &gt; .5: compan,datetime
"from operator import add, sub, mul, divimport iter",algorithm
1_xmy09urj4 ,uuid
numpy,numpy
from flask.ext import wtffrom flask.ext.wtf import,wtforms
gunicorn -b 127.0.0.2:8000 hello:app,flask
"mydict = {}for i in range (1,10): temp = ""variable",dictionary
dataframe,dataframe
list.sort(),sorting
"# -*- coding: utf-8 -*-def mylen(word): """""" &gt;&g",doctest
"# dedupe.pyimport redef dedupe_whitespace(s,spacec",special-characters
sudo apt-get install gcc,install
"select pages.pageid, pages.pagename, counter as te",sql
class thread(qthread): def get_data(self): qmutexl,pyqt
"&gt;&gt;&gt; timeit.timeit('[random.randint(0,128)",bytearray
"from django.conf.urls import patterns, include, ur",django-generic-views
for field in form: print field.label_tag(attrs{'cl,forms
"class foo(object): def __init__(self,bar) self.bar",sum
def login(request): if request.session.has_key('us,redirect
topic,package-managers
"subprocess.popen(['bash','history'],shell=true, st",command
import sysimport fileinputclass vertex(object): de,ford-fulkerson
__eq__,code-review
stations = []for row in data: if row.strip(): stat,list-comprehension
def eand(*args): return [all(tuple) for tuple in z,built-in
user1 group1 user2 group1 user3 group2 ... user10 ,sysadmin
urllib2,urllib2
detector = cv2.sift(),sift
dict,set
grid,grid
"a = [(""ax"", 1), (""ec"",3), (""bk"", 5)]",sorting
wsgidaemonprocess app processes=2 threads=3 displa,mod-wsgi
from lru_cache import lru_cacheclass test: @lru_ca,decorator
class mytesting(unittest.testcase): def setup(self,unit-testing
"x = fft(s_[:,2]); pl.plot(abs(x)) pl.show()",scipy
&gt;&gt;&gt; import tkinter&gt;&gt;&gt; t = tkinte,interactive-shell
pyrun_simplestring(),multithreading
import numpy as npimport numexpr as nea = np.ones(,numexpr
repo.git/repo.git/folder1/repo.git/folder2/repo.gi,pip
2011-01-09 2481.222011-01-10 2481.22,numpy
"(1,2,3,4)",iterable-unpacking
65 _æê 01000001 _æê 10000010 _æê 130,bit-manipulation
0.000 =&gt; 00 =&gt; 0123.45000 =&gt; 123.450000 =,zero
@route('/&lt;int:id&gt;/&lt;username&gt;/')@route(,routing
#include &lt;tchar.h&gt;#include &lt;windows.h&gt;,encryption
"printf ""%8s %8s %8s\n"", qw(date price ret);",quotes
/,integer-division
os.system(command),command-line
&gt;&gt;&gt; f = {x: (lambda y: x) for x in range(,lambda
somehow_connect_to_ipython_kernel_instanceinstance,pyzmq
"seq1 = [1, 2, 3, 4, 6, 7, 8, 9, 10]",sequence
string,python-datetime
import my_cpp_moduletry: my_cpp_module.my_cpp_func,boost-python
$ echo $a5$ python -c 'import os; print os.getenv(,environment-variables
# define v putchar# define print(x) main(){v(4+v(v,c
activity,json
.fetchone,cursor
session.query(myobject).filter_by(regex),sqlalchemy
"zip(range(len(files)), files, directories)",loops
"_æê pythonpython 2.7.1 (r271:86832, jun 16 2011, 1",unicode
.4 + .20.6000000000000001.4 + .1 + .10.6,haskell
&lt;sentence&gt;&lt;value&gt;&lt;sentence&gt;&lt;v,machine-learning
data = []for i in something: newcolumn = getcolumn,numpy
public static string getversion() { pythoninterpre,exception-handling
"&gt;&gt;&gt; my_string = ""why\does\it\happen?""&gt;",escaping
class service: ...... def is_active(self): if date,django-queryset
$ pip install git+https://bitbucket.org/datagreed/,dependency-management
"string1 = ""498results should get"" ",integer
import imaplibfrom email.parser import headerparse,imaplib
"&lt;object data=""map.svg"" type=""image/svg+xml"" wid",svg
from django.db import modelsclass foo(models.model,django-models
"&gt;&gt;&gt; v1 = apt.version(""1:1.3.10-0.3"")&gt;&",apt
class galleryadminform(forms.modelform): auto_id=f,django-admin
matplotlib,latex
2to3,py2to3
grid,tkinter
class generalform(forms.form): field1 = forms.inte,django
&lt;p&gt; &lt;ul&gt; &lt;li&gt;foo,algorithm
help(&lt;object&gt;),offline
"""when i see a bird that walks like a duck and swim",interface
"import zmq, jsondef main(): context = zmq.context(",zeromq
autofunction,python-sphinx
ssh -l 3306:localhost:22 &lt;hostip&gt;,ssh
set(mylist),loops
plot_date(),matplotlib
memoryerror,stream
"&gt;&gt;&gt; my_function(){'this': 'is', 'a': 'dic",doctest
ln -s /home/guest/dir1/* /home/guest/dir2/,bash
cat data.txt | ./my_script.py,stdin
py.test,coverage.py
@cachedproperty,decorator
../../libraries/boost_1_44_0/boost/python/detail/w,boost-build
scipy.stats.lognormal.fit,scipy
fields,numpy
&lt;fragment&gt;text1 &lt;a&gt;inner1 &lt;/a&gt;te,lxml
na,scikit-learn
"static pyobject *spam_system(pyobject *self, pyobj",python-c-extension
get /accounts/oauthgetrequesttoken?scope=https%3a%,oauth
"a, b",cryptography
numpy,numpy
"members = models.manytomanyfield(user,blank=true,n",django-models
logger = logging.getlogger(__name__),filter
user@computer:~/myproject$ env/bin/python python 2,virtualenv
googleauth,cloud
settings.py,configuration
"import cv2img = cv2.imread(""im1.jpg"")img2 = cv2.cv",opencv
r = requests.get('http://www.elnorte.ec/')content ,utf-8
pip install pandas,pip
maindir../dir..../dira/classa..../dirb/classb,directory
"re.sub(""a*((ab)*)b"", r""\1"", ""aabb"")",sed
load scipy.io as spioa = {'b':{'c':{'d': 3}}}# my ,structure
abc.seo,packaging
"doc = parse(url).getroot()links = doc.xpath(""//a[t",xpath
virtualenv,setuptools
error: failed dependencies: /usr/local/bin/python ,rpmbuild
classid dept course number area titlefoo bar foo b,terminal
"python 2.6.2 (r262, may 15 2009, 10:22:27) [gcc 3.",numpy
django.core.serializers,json
"def __cmp__(self, other): """""" compares cards, retu",object
coverage run manage.py runserver ,coverage.py
ctrl+c,pycharm
----------------| long cell |----------------| 1 |,xlwt
"pwdinput = input(""now enter a password:"") pwd = ha",hashlib
foo = foo1 if bar1 else foo2,conditional
"&gt;&gt;&gt; mylist = [""foo"", ""bar"", ""baz"", ""qux"",",elisp
"cat file 2&gt;&amp;1 | tee -a logfile #""cat file"" ",popen
task,task
"def get_data() data1, error = get_some_data() # fu",error-handling
driver.find_element_parent?,xpath
#!/bin/shmypath=${0%/*}libdir=$mypath/modules,cross-platform
ffmpeg,ffmpeg
import sysimport geventfrom gevent import monkeymo,urllib2
genfromtxt,numpy
date = input('date (m/dd/yyyy): '),date
def my_callback(x): print xscipy.optimize.fmin(fun,coroutine
import sqliteconnection = sqlite.connect('cache.db,pysqlite
$file_path$:$line$:$column:.*,ide
in [303]: %prun my_function() 384707 function call,profiler
"&gt;&gt;&gt; mydict = {'first':'uno','second':'dos",dictionary
import cgiimport matplotlib.pyplot as pyplotimport,cgi
ravel(),list
def get_boolean_response(): response = io.prompt(',mocking
multiprocessing.process(),subprocess
std::unique_ptr&lt;message&gt; somefunc(const std:,boost-python
ec2.run_instances,amazon-ec2
"from jinja2 import environment, packageloaderenv =",jinja2
"class node:  rchild,lchild,data = none,none,none d",class
sys.exit,coding-style
&lt;class 'pandas.core.frame.dataframe'&gt;int64in,pandas
"&gt;&gt;&gt; s = ""&lt;html&gt;&lt;head&gt;&lt;titl",string
"[ { ""key"": ""numberpuzzles1"", ""url"": ""number-puzzle",sorting
norecursedirs,py.test
[kelp@web187 goals]$ python2.7 manage.py migrate m,django-south
match mysql m/^.\0\0\0\n(4\.[-.\w]+)\0...\0/s p/my,parsing
"&gt;&gt;&gt; a = np.zeros((10, 2))# a transpose ma",numpy
encoder,celery
brie,attributes
xxxxxxxxxxxxx,keydown
"things = 5print(""you have "" + things + "" things."")",int
virtualenv,pip
"points = []for line in open(""data.txt""): a,b,c = m",string
url_for,flask
"def a(self, name): print nameusers = {""test"":""127.",button
valueerror: view function did not return a respons,response
4.001,string-formatting
blockingconnection,pika
"local(""my_command"")",fabric
a == b,set
/* comment */,string
ipdb my_script.py,ipython
def form_handle(request): if request.method=='post,django-models
import numpy as npdrr = abs(np.random.randn(100000,matlab
"import time, randomfrom xgoogle.search import goog",web-scraping
/development/flask_projects/test_email/env/bin/pyt,flask
1  / \ 2 3 / / \4 5 6,binary-tree
from __future__ import divisionimport numpy as npi,numpy
gene_id,serialization
def index(request): the_user = request.user,http
filewrapper,csv
unique,django-models
alpha=1,pandas
csrf token,jinja2
import timedef create_dict(): # return {x:[x]*125 ,garbage-collection
from argparse import argumentparserimport pickleim,pdf
"{ shorturlslug: 'pbbs', fullurl: 'http://example.c",django-admin
m = cursor_object_results_of_db_queryfor m in m: x,dictionary
"a = numpy.array( [1,2,3,4] )",numpy
"from numpy import *vectors = array([arange(10), ar",numpy
"import random, stringdef gen_pass(): foo = random.",random
# file: mp.pyfrom multiprocessing import processim,process
(pyenv)$ pip install djangodownloading/unpacking d,hash
"$ rake routes users get /users {:controller=&gt;""u",django
file: trial.py&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;,nose
python setup.py build -c mingw32,pygraphviz
#!/usr/bin/pythonfrom gevent import monkeymonkey.p,redis
"df = pandas.dataframe({ ""date"":[datetime.date(2012",pandas
with,with-statement
integerfield,django-models
player.game_objects.extra( select={'week': 'week(`,django
# -*- coding: utf-8 -*-,encoding
raw_input(),input
"class itertest(object): def __init__(self, data): ",iterator
ratio = 1.2345678minimum = 10def convert(money) re,embedded-language
a,struct
httpauth.httpbasicauth().login_required(),decorator
"f = open('c:\file.doc', ""w"")f.write(text)f.close()",read-write
__init__,super
"def genlogspace( array_size, num ): lspace = aroun",resampling
"d = { ""abc"" : [1, 2, 3], ""qwerty"" : [4,5,6] }",persistence
med_func,celery
{command-name : command-description},python-sphinx
"a = array([[0, 0, 1], [1, 1, 1], [1, 1, 1], [1, 0,",scipy
$ sudo apt-get install python-setuptools python-py,gcc
"&gt;&gt;&gt; exec ""print (lambda: a)()"" in dict(a=",exec
import xml.etree.celementtree as etdef analyze(xml,memory-leaks
import tkinter as tkfrom tkinter import *from tkin,tkinter
import dbusimport gobjectfrom dbus.mainloop.glib i,ubuntu
"fo = open(filename, 'ru')fl = fo.readlines()",readlines
"urlpatterns = patterns('', url(r'^passwords/$', pa",django-class-based-views
while true: #do a bunch of serial stuff #if the us,break
"{value: ""82363549923gnyh49c9djl239pjm01223"", id: 1",google-app-engine
...dependency_links = ['http://github.com/robot-re,setuptools
"list=[5,1,2,3,6,0,7,1,4]",sorting
"ax.hist(data,bins=100,range=(minimum,maximum),face",matplotlib
importerror: no module named 'pyqt4',pyqt
cv2.surf(),computer-vision
"traceback (most recent call last): file ""/home/mys",classpath
sql = 'select %s from %s where utctime &gt; %s and,postgresql
aapl goog ibm xom2011-01-10 339.44 614.21 142.78 7,vectorization
latest_entry_list = entry.objects.filter(is_publis,django
numpy.correlate,signal-processing
django_list = list(some_object.objects.all()),json
"l = [('a', 1), ('b', 2), ('c', 3)]for num, elt in ",copying
ipdb.set_trace(),bpython
'avbin is required to decode compressed media')pyg,virtualenv
series,pandas
from pil import imageimg = image.open(basefile)lay,python-imaging-library
stdout,subprocess
# fetch.pyfrom cstringio import stringioimport req,python-requests
"class myclass:def __init__(self, foo): if foo != 1",exception
float,decimal
a,syntax
buff = stringio.stringio() #buffer where image is ,image
errors = []for item in data: try: process(item) ex,logging
fft,fft
%(asctime)s,timezone
22:46:15 web.1 | traceback (most recent call last),heroku
some-library,pip
def longest_repetition(l): if not l: return none m,code-organization
class product(models.model): name = models.charfie,django-models
dataframe(),scipy
models.py,django-apps
cx_freeze,cx-freeze
result = database.query('complicated sql with an i,mocking
int.numerator,int
application/json,mime-types
from mock import mockimport __builtin____builtin__,mocking
export path=/usr/local/bin:$pathexport path=/usr/l,pip
__init__(),init
"cursor.execute(""create table starframe""+self.name+",sqlite
"{ ""image"": [""no file was submitted. check the enco",django-rest-framework
subprocess.popen,flask
"ppid=pipeexe.pidsignal.signal(signal.sigalrm, stop",subprocess
pip,pip
import stringimport gzipimport codecsf = gzip.open,utf-8
"d = [(1,2), (3,4)]for k,v in d: print ""%s - %s"" % ",iterator
"query = ""select *, ((acos(sin(%s * pi() / 180) * s",count
python setup.py install,setuptools
"from xml.etree.elementtree import element, tostrin",elementtree
"""""""empty messagerevision id: 384cfaaaa0berevises: ",flask-sqlalchemy
"for i in range (0,10): if i==5: i+=3 print i",scope
2if-1e1else 1,cpython
x*x,performance
everything is an object,literals
runtimeerror: maximum recursion depth exceeded dur,recursion
__init__,instance-variables
"&gt;&gt;&gt; import socket, ssl, sys&gt;&gt;&gt; s",https
words = ex25.break_words(sentence)sorted_words = e,import
object,inheritance
python setup.py test,setuptools
difflib,distance
##################################### method 1impo,cookies
urls,url
def aa(): print aa.__name__ print aa.__hash__ # ot,reference
"data = sorted(data, key=lambda (point, cluster):cl",itertools
"class foo1(dict): def __getattr__(self, key): retu",setattr
"""python manage.py schemamigration myapp --initial""",django-south
import pymongofrom pymongo import mongoclientfrom ,pymongo
"""u.s. adviser&amp;#8217;s blunt memo on iraq: time",character-encoding
aws lambda,numpy
atexit,terminate
"my_string = my_string.replace('a', '1')my_string =",replace
#NAME?,pip
tsv,tsv
python -c '&lt;code&gt;',command-line
# module mylibrary class wrongsummand(exception): ,error-handling
"def getpage(self, items,iteration): http = asyncht",tornado
"def save(self): """"""use a custom save to end date a",save
from sqlalchemy.ext.declarative import declarative,metaprogramming
numpy.gradient(),scipy
dict,dictionary
"mylist = [20, 30, 25, 20]",list
image,django
import refrom itertools import groupbydef viterbi_,word-boundary
1.0 == 1.0 -&gt; false,equality
class carsearchform(forms.form):  # lots of fields,forms
balance - strength,int
dataframe,numpy
rand.randint,floating-point
"ssh user@host ""nohup sleep 100 &gt;&gt; /tmp/xxx 2",fabric
timeit,delay
pip,pip
background-image: url('http://static.example.com/e,django
"[12,4,15,11]",join
"import smtplibimport sysimport osserver = ""localho",smtplib
if key in data_dict.keys(): add valueselse: data_d,optimization
"a = ['a', 'b', 'c']a.extend(['d']*3)",list-comprehension
@csrf_exempt,csrf
"l1 = [[1, 2], [3, 4], [5, 6]]l2 =[[a, b], [c, d], ",merge
logger = logging.getlogger()logger.setlevel(loggin,rotation
"&gt;&gt;&gt; base64.b64encode(combined.digest(), a",md5
"&gt;&gt;&gt; student_data(""brian"",32,""1234567"",fal",function
from django.core.cache import cachecache.clear(),memcached
python manage.py shell,shell
'\',python-module
send_from_directory,download
&gt;&gt;&gt; import collections&gt;&gt;&gt; d = co,deque
python,multiprocessing
class modeltests(testcase): def test_method(self):,django-testing
|base_url|/path.. |base_url| replace:: http://loca,substitution
urlparse,urlparse
"import numpy as npdt = np.dtype([('tuple', (int, 2",numpy
/usr/lib64/pypy-1.5/site-packages/,pypy
4| /off to 40963| /2| /1|/_ _ _ _ _ _ _ _ _  1 2 3,numpy
"xvfb = popen('xvfb :99 -nolisten tcp', shell=true)",selenium
"&lt;script type=""text/javascript"" src=""http://api.",plugins
while 1: do_something(),infinite-loop
&gt;&gt;&gt; class test: _µ = 'foo'&gt;&gt;&gt; te,unicode
changed,django-models
"w = csv.writer(open(fn,'wb'),dialect='excel')#w.wr",sqlite
nltk.pos_tag,wordnet
"code = """"""i = [0,1,2]for j in i : print j""""""result",exec
numpy.genfromtxt,pandas
"# directorys == {'login': &lt;object at ...&gt;, '",anonymous-function
from pep8checker import pep8checkerargs = vim.eval,pep8
class queue.priorityqueue(maxsize=0),heap
m x n,numpy
import pygamepygame.mixer.init()pygame.mixer.music,raspberry-pi
deadlineexceedederror: deadline exceeded while wai,urlfetch
alist,filter
"from tkinter import *a=tk()b=canvas(a)b.place(x=0,",tkinter
lower_case_with_underscores,camelcasing
pytuple_maxsavesize = 20,tuples
"{% for (key_o, value_o) in f_values.items() %} &lt",django-templates
"""create user %s password %s"", (user, pw)",psycopg
class verifypan(testabsolutemove): def runtest(sel,multithreading
"from bottle import app, run, route, response@route",http-headers
myemail%40gmail.com -&gt; myemail@gmail.com,header
find,os.walk
class student(models.model): username = models.cha,orm
"[(key1, value1), (key2, value2), ...]",dictionary
auth_user_model,django-1.5
"from django.db import models, migrationsimporterro",django-south
"from numpy import var, covx = range(10)y = var(x)z",covariance
def qs_ancestors(queryset): if isinstance(queryset,hierarchical-data
cache.all(),caching
"import ctypes, subprocesslibc = ctypes.cdll('/lib/",sigkill
"library(httr)set_cookies(.cookies = c(a = ""1"", b =",session
pip,pip
import numpyfrom mpl_toolkits.mplot3d import axes3,3d
"import module, osmethod, bits, data = 'rsa', 1024,",encryption-asymmetric
raise,nested
str.find(agcctcccatgattgaacagatcat),pattern-matching
&gt;&gt;&gt; from selenium import webdriver&gt;&gt,selenium-webdriver
"my_obj.short = ""hello""my_obj.long = ""line1\nline2\",pyyaml
/applications/xcode.app/contents/developer/platfor,osx
&gt;&gt; cat requirements.txtcython==0.15.1numpy==,pip
'title\n',replace
"df = pandas.dataframe( {'value_a': values_a, 'valu",time-series
contact_question_create,unit-testing
import gflagsimport httplib2from apiclient.discove,google-api-python-client
obtaining some-package from git+git://github.com/s,pip
savefig,metadata
for model_instance in somemodel.objects.all(): do_,memory-management
"&lt;a href=""javascript:__dopostback('ctl00$maincon",mechanize
"import zipfilewith zipfile.zipfile(""parent.zip"", """,zip
i = 1while i &lt;= linenumber: print original.read,loops
"pdfimage = filesaver()pdfimage.myfile.save('new', ",filefield
import numpy as np# some codemmatrix = np.zeros(nr,numpy
"# if the `factor` decimal is given, compute new pr",unary-operator
http://www.decalage.info/python/html,generator
def main(): parser = optparse.optionparser(descrip,mocking
"numpy.xxx([4,3,2, 6] = 4 since max = 6, min = 2, 6",max
render_to_response,django-templates
$ sudo pip install pyopenssl,openssl
webapp,google-app-engine
/path/ to/ projects/ cust1/ proj1/ pack1/ __init__,python-import
"""{arg1} {arg2}"".format (10, 20)",arguments
matplotlib,matplotlib
secret_key,pycharm
"my_array = []for n in range(1000): # do operation,",scipy
python hello.py,winapi
import numpy as npimport matplotlib.pyplot as plti,scipy
def make_incrementer(start): def closure(): # i kn,generator
import sysimport timeimport tracebackclass box(obj,memory-leaks
for line in file: value = line[a:b] cursor = colle,pymongo
flask.run,jinja
sqlite3,collation
import imaplibmail = imaplib.imap4_ssl('imap.gmail,imaplib
import socketserverimport structclass mytcphandler,windows-7
#!/usr/bin/pythonimport timefrom watchdog.observer,monitoring
mkvirtualenv --no-site-packages,virtualenvwrapper
--- &amp;id001 !ruby/object:puppet::resource::cata,puppet
operationalerror at /snippets/no such column: snip,django-rest-framework
"clamp(myvalue, min, max)",clamp
numpy.linalg.eig(a),scipy
"def ddply(rows, *cols, op=lambda group_rows: group",plyr
python myprogram.py,ubuntu
fibonacci,parallel-processing
read_csv,pandas
"code = b""\x55\x89\xe5\x5d\xc3""",ctypes
&gt;&gt;&gt; [] is []false,empty-list
unresolved import xxx ; found at yyy,pydev
from nltk.corpus import stopwordstext = 'hello bye,stop-words
"from bs4 import beautifulsoupdata = ""&lt;test&gt;t",pycharm
"import registration(r'^accounts/', include('regist",django-urls
re,types
os.open,permission-denied
"vals = [true, false, true, true, true, false]# and",boolean
compress,templates
"class singleton(object): """""" singleton class by du",singleton
tcsetattr,with-statement
"s = re.sub(r'(?i)user [_0-9a-z]+ is ', r""user .. i",performance
"import pypdfdef getpdfcontent(path): content = """" ",pypdf
numpy.array,numpy
"def path_and_rename(path): def wrapper(instance, f",django-migrations
device = device()modem = modem()device.connect(mod,serial-port
"import csvimport urllib.requesturl = ""ftp://ftp.nc",csv
"traceback (most recent call last): file ""&lt;conso",apple-push-notifications
def nesting(): count = 0 def nested(): count += 1 ,nested-function
"from app import celery, create_appapp = create_app",flask
flask,global
#!/usr/bin/env python# *-* coding: utf8 *-*data = ,items
python [-m] tst,package
(saassenv)miki725mac:saassenv miki725$ pythonpytho,matplotlib
max(list),error-handling
"wx.evt_key_down(self, self.onkeydown)",wxpython
test_seaborn.py,matplotlib
"example.com/events/ &lt;a href=""http://example.com",parsing
(myvenv)me:src orokusaki$ python manage.py shell -,virtualenv
"python = sys.executableos.execl(python, python, * ",operating-system
matplotlib,data-visualization
dateutil,attributeerror
"def weakchecksum(data): """""" generates a weak check",cython
import concurrent.futures # line 01def f(x): # lin,concurrency
"warning : when opening https urls, it is not attem",ssl-certificate
"one,two,threea,1,oneb,2,two,3,threed,4,nane,5,five",pandas
"c = tweepy.cursor(api.followers_ids, id = 'mcdonal",tweepy
.py,python-import
"for k,v in request.post: print k,v",post
#NAME?,heroku
import generator._def yield_values(file:string) = ,generator
from common_config import *,python-sphinx
from sympy import *,eval
$n,perl
0xa2 0x01 0x02 0x03 0x04,bytearray
a b c 0 ea 0 c 0 0a 0 c d ea 0 c 0 e,data-mining
firefox http://somewebsite,google-chrome
"(1200, 2e6)",numpy
numpy.where((my_array &gt; a) and (my_array &lt; b,where
dataframe,dataframe
"""""""models.py""""""class projects(base): __tablename__",pylons
program/ program/ data.py tests/ data_test.py,testing
"function example(x) { ""here is a short doc what i ",docstring
typeerror: objects of type ``csr_matrix`` are not ,scipy
&lt;body&gt;&lt;h1&gt;a title&lt;/h1&gt;&lt;p&gt;s,lxml
def afunc(some_param_name): assert isinstance(some,pep8
struct,optimization
"label, content = myfunc()[2]",variable-assignment
from collections import ordereddict# obviously wro,ordereddictionary
"class user(base): """""" holds user info """""" __tablen",flask-sqlalchemy
"x = pd.dataframe({'cat':['a','a','b'], 'val':[10,2",stata
print,self-reference
"import pymysqlconn = pymysql.connect(db='base', us",mysql-error-2003
skip = int(round(1.0 * total / surplus)),integer-division
"sum [ x | x &lt;- [1..999], mod x 3 == 0 || mod x ",haskell
heroku run pythonnltk.download() wordnetpip instal,heroku
"import matplotlib.pyplot as plt radius = [1.0, 2.0",matplotlib
process state command ------- ----- ------- ,heroku
"def setup(self): """""" initializes the test client a",unit-testing
class cperson;//forward declareclass croom{ std::s,circular-dependency
oowriter,ubuntu
zipfile,zip
how to remove convexity defects in sudoku square,wolfram-mathematica
write,file
created_time,django-rest-framework
class signaller(qtcore.qobject) : my_signal = qtco,qt
import osimport sysif os.fork(): print 'content-ty,cgi
url,django-urls
&gt;&gt;&gt; x = 5&gt;&gt;&gt; bin(x)0b101,bit-manipulation
attributeerror: 'str' object has no attribute 'wri,pickle
url='http://114.80.235.200/f4v/94/163005294.h264_1,mechanize
"import codecsfor i in codecs.open('unicodefile','r",file-io
sudo /usr/sbin/postmap /etc/postfix/virtual_alias ,sysadmin
$ python setup.py sdistrunning sdistrunning checkr,ubuntu
"file ""/usr/local/lib/python2.6/dist-packages/djang",deployment
"project a classes ""subsystem1"" class1 class2 subsy",code-organization
broker_url,rabbitmq
"default_modules = ['os', 're', 'sys']_g = {}for m ",tty
"class num: def __init__(self,num): self.n1 = numcl",init
forms.modelchoicefield,django-forms
"['a', 'b', 'c', 'd']",yield
"from datetime import datedays = [date(2008,1,1), d",average
[install]prefix=/usr/local/modulenamerecord=instal,distutils
ssl-server.py,openssl
"a = np.array([3, 2, 0, 1])",numpy
"dbb = mysqldb.connect(host=""localhost"",  user=""use",sql-update
"// valid json{""foo"":""bar""}",syntax
"df = pd.dataframe({'col1' : ['bob', 'joe', 'bill',",unique
root folder| -- api |-- view.py |-- url.py |-- mod,mongodb
"url(r'^polls/(?p&lt;poll_id&gt;\d+)/$', 'polls.vie",django
&lt;html&gt; &lt;head&gt; &lt;title&gt;{% block ti,django-templates
"file ""program.py"", line 19, in getname name = ""b"" ",random
"my_dictionary = {""058498"":""table"", ""064165"":""pen"",",dictionary
"dbname = ""test""dbip = ""localhost""dbuser = ""django""",django
"d= {'a':2,'b':5,'c':3}# 1st wayprint [k for k in d",counter
unapi,http-status-codes
[spatel@~ dev1]$ /home/spatel/python-2.7.3/bin/pyt,bzip2
src/ module1.py module2.py test_module1.py test_mo,python-nose
pip install sqlite,pip
# region celery settingscelery_concurrency = 1cele,redis
class incidentupdateview(updateview): form_class =,django-forms
"a = {'a':10, 'b':843, 'c': 39,.....}",max
"l = [1, 2, 45, 55, 5, 4, 4, 4, 4, 4, 4, 5456, 56, ",max
javascript,download
import matplotlib.pyplot as pltimport numpya1_labe,matplotlib
import serialimport timeser = serial.serial('com4',arduino
scipy.optimize.curve_fit,scipy
"(a*b).sum()/a.sum()dot(a, b)/a.sum()",scipy
"array([[1, 1], [0, 1]])",numpy
"def proof_of_work(b, nbytes): nonce = 0 # while th",sha256
#!/usr/bin/env pythonfrom sys import stdindef main,unicode
class bar(object): @staticmethod def bar(): # code,function-call
from scipy.cluster.hierarchy import linkage# dist_,scipy
try: if true a = 1 #it's missing a colon so it's a,exception-handling
"jquery.ajax({ type: ""post"", datatype: ""json"", data",django
response = urllib2.urlopen(baseurl + filename)comp,gzip
"class a: def __init__(self, *args, **kwargs): supe",constructor
24.7 25.7 30.6 47.5 62.9 68.5 73.7 67.9 61.1 48.5 ,max
&lt;data&gt; &lt;products&gt; &lt;color&gt;fum†å&l,encoding
get_result(),asynchronous
"strace iptables -l inputsocket(pf_inet, sock_raw, ",sockets
"string = ""a=0 b=1 c=3""",dictionary
unicode_glyphs = ''.join( unichr(char) for char in,utf-8
class statsdclient(abstractstatsdclient): def __in,twisted
"cmap = matplotlib.colors.listedcolormap([""red"",""vi",plot
__code__,python-internals
x86_64,64bit
from mongoengine import *class page(document): pas,circular-reference
(pdb) pp total_rows columnid respondentcount0 -1 2,pandas
"from tkinter import *class app: def __init__(self,",tkinter
for g in request.user.groups: l.append(g.name),django-admin
"import redisimport timedef load_file(fp, fpkey, r,",caching
( (a ( ( c ) b ) ) ( d ) e ),recursive-regex
__author__ = 'karan'import nltkimport reimport sys,nlp
mwe,histogram
"button(self, text = ""browse"", command = self.load_",tkinter
"gql = ""select * from user where age &gt;= 18""db.gq",gae-datastore
logging,syslog-ng
"m = [[1,2,3], [4,5,6], [7,8,9]]g = (sum(row) for r",next
"buf = open('test.txt','r').readlines()...",coding-style
# an example compound classclass foo: def __init__,boost-python
max_items = 10,infinity
fig.savefig(),image
"import osos.path.join(os.path.dirname(__file__), '",path
"style1 = xlwt.easyxf('pattern: pattern solid, fore",format
#!/usr/bin/pythonimport threadingimport queueimpor,installation
"&lt;form action="""" method=post&gt; &lt;table&gt; &",jinja2
"plot(x,y)",matplotlib
autoincrement,auto-increment
while true: row = cursor.fetchone() if not row: br,cursor
"&gt;&gt;&gt; s = ""i like peas on 2011-04-23, and i",python-dateutil
format(),templates
w,winapi
class myform(forms.modelform): extra_field = forms,django-forms
"import locale locale.setlocale(locale.lc_all, 'pl_",locale
listview,listview
none,pandas
from sklearn.linear_model import elasticnetalpha =,machine-learning
x=5,keyboard-shortcuts
printf,segmentation-fault
class groupmenuorderform(forms.form): food_list = ,widget
std::vector&lt;int&gt; get_match_stats();,swig
re.match(),function
psdata = []nsdata = []msdata = []ckdata = []madata,initialization
png,ipython-notebook
media_url,static-media
__init__,constructor
class activity(models.model): name = models.charfi,django-models
"import scipy # happens with several other modules,",attributeerror
p = path.split('/')counter = 0while true: if p[cou,prefix
"import pandas, numpy as npdfrm = pandas.dataframe(",transform
2**s * d,primes
"foobar = ""foo""def func(var): print var.origname",variables
[working directory][files being opened][completed ,return-value
class parent(object): def _protected(self): pass d,methods
"(masked_array(data = [1472.8855375088663], mask = ",numpy
paste &lt;(seq 20000000) &lt;(seq 2 20000001) &gt;,multiprocessing
links = browser.find_elements_by_partial_link_text,selenium-chromedriver
asyncio,coroutine
import subprocess process = subprocess.popen('plin,blocking
clear allclose allpython = '/usr/local/bin/python',websocket
an,optimization
"subprocess.popen(['..'], ..., timeout=20)",pipe
"file_status_choices = ( ('p', 'pending'), ('a', 'a",django-models
import pygameimport multiprocessingpygame.init()de,osx-lion
tags,django-taggit
ids = []with mongoclient(mongodb_host) as connecti,pymongo
__main__,unit-testing
"dictionary = {  'c1' : [10,20,30]  'c2' : [20,30,4",dictionary
list,list
| language | code | result ||-----------+---------,math
&gt;&gt;&gt; l = []&gt;&gt;&gt; for r in range(10),closures
"query = ""string that needs to be encoded""params = ",urlencode
mock,testing
unicodedecodeerror,character-encoding
"export path=""/directories/anaconda/bin:$path",anaconda
"engine = sqlalchemy.create_engine(url, ehco=false)",sqlalchemy
"if name[:2] in [""i_"", ""c_"", ""m_"", ""l_"", ""d_"", ""t_""",variable-length
from pylab import *import scipy.sparse as spdef no,scipy
"def create_table(): cursor.execute ("""""" create tab",import
currency,django-templates
scipy.interpolate.linearndinterpolator,scipy
@permission_classes,rest
"{ id = ""my_id1"" tags: [tag1, tag2, tag3], category",pymongo
gevent.socket,testing
checking for glib - version &gt;= 2.24.0... yes (v,gobject
#xy is the 2d array.#a is one of the 1d arrays.#po,matplotlib
&gt;&gt;&gt; def returns_list_of_one(a):... return,return-value
elementtree.elementtree,xml-namespaces
nosetests,nose
import paramikossh = paramiko.sshclient()ssh.conne,paramiko
"interpreter-&gt;run(""myscript"", some_object);",scripting
.. automodule:: modname :members:,python-sphinx
bytes,memory-pool
pickle,pickle
/applications/firefox.app/contents/macos/firefox-b,firefox
"$http({  method: 'post',  url: '/url/',  data: 'te",angularjs
limit stacksize unlimited,csh
accounts/profile/,django-registration
"file ""/system/library/frameworks/python.framework/",django-allauth
"args=[]for i,(x,y) in enumerate(data): args.extend",matplotlib
max,statistics
iterable,numpy
"or([true, true, false])",reduce
engine = create_engine('sqlite:///' + databasepath,sqlalchemy
"x = np.asarray([x_i*np.random.randint(8,12)/10 for",cython
"&lt;a class=""lnk"" rel=""nofollow"" href=""/login.jsp?",webdriver
from suds.client import clientclient = client('htt,wsdl
conda skeleton pypi,conda
class artefactform(modelform): material = charfiel,django-forms
upper_case,enums
def func1():return 1def func2():return 2def func3(,function
class player {public: void entity(entity* entity);,swig
# main_script.py p1 = subprocess.popen(['python sc,inter-process-communicat
a = 'abc'b = 1print(a + b),type-conversion
sent_tokenize(),token
class myclass: def __init__(self): self.tempfolder,temporary-directory
for x in range(elevation.shape[0]): for y in range,numpy
stop,slice
typeerror: can't use a string pattern on a bytes-l,parsing
gcc -dhave_config_h -i. -i../.. -i/usr/include/pyt,makefile
gcc -pthread -shared -l/system/lib64 -l/system/lib,compilation
"suds.typenotfound: type not found: '(schema, http:",suds
"list = [ { 'a':'1' , 'b':'2' , 'c':'3' }, { 'd':'4",list
"from timeit import timert1 = timer(""test1()"", ""fro",profiling
"def sublist(lst, n): sub=[] ; result=[] for i in l",grouping
"&lt;html&gt;{% include ""content.html"" %}&lt;/html&",jinja2
from django.db import modelsclass something(models,django-models
request.post['data'],django-views
from gevent import monkeymonkey.patch_all(),celery
port = 8001handler = simplehttpserver.simplehttpre,simplehttpserver
unicodedecodeerror: 'ascii' codec can't decode byt,unicode
json.loads(json.dumps(tuple)),tuples
"quotes = [(1, 5, 6, 7, 4), (2, 6, 9, 9, 6), (3, 9,",finance
ld_library_path,environment-variables
hold on,graph
&gt;&gt;&gt; import inspect&gt;&gt;&gt; print(insp,traceback
import datetimeimport pandas as pdimport numpy as ,time-series
urls.py,email
class blogpost(ndb.model): s1 = ndb.stringproperty,list
#! /usr/bin/perlwhile ($line = &lt;&gt;){ if (($li,rewrite
"typ, msg_data = imap_conn.fetch(uid, '(rfc822)')",imaplib
"&gt;&gt;&gt; tuple = (500000, 500, 5)... print ""fi",formatting
hcluster,cluster-analysis
"class vector_clock: def __init__(self): """""" initia",networking
\iffalse,ipython-notebook
i = 0 while i &lt; self.count(): item = self.item(,qlistwidget
manipulate[],ipython
pip,anaconda
# everything here in main.pyclass mainpage(webapp.,web-applications
class backgroundtask(processing.process): def __in,multiprocessing
"$ echo ""abc def"" | perl -ne 'my @letters = m/(.)/g",utf-8
http://example.com/image.jpg,file-copying
"&lt;style name=""admin-5678""&gt; &lt;rule&gt; &lt;f",openstreetmap
np.hstack,numpy
ctypes,gtk
"language: pythonpython: - ""2.7""# command to instal",travis-ci
h5py,h5py
http://1.my-app-name.appspot.com,gae-datastore
"[(1,1),(2,2),(3,3)] ",list
"from ""models.admin"" import *",package
argv,command-line-arguments
py,bash
dataframe,pandas
u+0088 c2 88 &lt;control&gt;,string-math
pdb.set_trace(),debugging
python setup.py install,ubuntu-12.04
1.0101E+43,epson
scipy.ndimage.map_coordinates,scipy
"l = [a,b,c,...,n]",jinja2
setup.py sdist,version
pypimirror,pypi
if(key in dict.keys()): ...code...,hashmap
from a import *,import
np.bool,boolean
htmlparser,parsing
&gt;&gt;&gt; from pylab import *&gt;&gt;&gt; x = a,legend
"def mymethod(self, params) ... return",static
import numpy as npfrom matplotlib import pyplot as,matplotlib
__getitem__,optparse
"&gt;&gt;&gt; v1 = vector([1,2,3])&gt;&gt;&gt; v2 =",linear-algebra
improperlyconfigured: error importing template sou,django-templates
&lt;string&gt;rafa\xc3\x85\xc2\x82&lt;/string&gt;,utf-8
[errno 111] connection refused,exception
"def f (op,x,y): #return some lambda function that ",functional-programming
"def save(self, *args, **kwargs): # save this one s",python-imaging-library
"from _winreg import *""""""print r""*** reading from s",registry
"class rgb(object): def __init__(self, red, blue, g",methods
"dataframe.plot(kind='bar',stacked=true)",pandas
compress_offline = true  compress_url = 'http://st,amazon-s3
canvas,tkinter
&gt;&gt;&gt; from sqlalchemy import exc&gt;&gt;&gt,exception
"class myformatter(formatter): def __init__(self, d",chaco
x**y,built-in
import sys,python-module
customer,django-admin
scrapy,scrapy
csi,performance
"&gt;&gt;&gt; base64.urlsafe_b64decode(""eyjhbgdvcml",base64
helloworldfoobar,line
"def f(filename, g): try:  fh = open(filename, ""rb""",lisp
if not value,boolean
from sklearn import linear_modelclf = linear_model,machine-learning
lists,hash
python setup.py install,packages
"class game(models.model): state_choices = ( ('s', ",django-models
"a,b,c,""d12121"",e,f,g,h,""i9,i8"",j,k",csv
qs,indexing
"# source_code.pyclass a: """"""docs for a """""" passcla",documentation
"class foo(object): # init code... def __eq__(self,",equality
#include &lt;unistd.h&gt;#include &lt;sys/time.h&g,string
|e| &lt;= 4*|v|,dijkstra
"cmd = subprocess.popen('ls -l', shell=true, stdout",subprocess
&gt;&gt;&gt; import datetime&gt;&gt;&gt; start_dat,date
os.walk,os.walk
"a={""a"",""b"",""c""}b={""c"",""d"",""e""}c={""a"",""c"",""e""}",set-intersection
import ctypesfrom ctypes import *dsusb = ctypes.wi,ctypes
gcloud components update,google-app-engine
unicodeencodeerror: 'ascii' codec can't encode cha,unicode
forms.filefield,django-forms
"['jellicle', 'cats', 'are', 'black', 'and', 'white",frequency
"string = ""trick or treat""for i in range(len(string",optimization
"[x() for x in [lambda: m for m in [1,2,3]]]",list-comprehension
import sockethost = 'irc.freenode.org'port = 6667j,irc
&lt;addinfourl at 1081306700 whose fp = &lt;socket,urlopen
"import urllib2website = ""website""openwebsite = url",urllib2
"&gt; maximumby (compare `on` sum) [[1,2,3],[4,5,6]",haskell
from pypackage import pymodule,heap-memory
import multiprocessingdef worker(): #worker functi,multiprocessing
"convert(wavfilelocation, 'mp3')",mp3
....robobrowser==0.5.1....,pip
&gt;&gt;&gt; false in [0]true&gt;&gt;&gt; type(fal,types
"file = open(filename, 'rb')while 1: byte = file.re",byte
email.util,mime
# cat fabfile.pyfrom fabric.api import *from fabri,fabric
np,scipy
mad,statsmodels
cmake error at cmakelists.txt:256 (message): unexp,llvm
get,web
my_project setup.py mypkg __init__.py foo.py tests,py.test
sched.scheduler,scheduled-tasks
"windows=[{ 'script':'myscript.py', 'icon_resources",embed
"from scipy.signal import butter, lfilterfrom scipy",filtering
create or replace function skater_name_match(integ,django
"from psycopg2 import connectconn = connect(""user='",psycopg2
multiprocessing,multiprocessing
"cmd = ""attach \""%s\"" as tomerge"" % ""b.db""",pysqlite
/var/www,django-settings
abc1 abc2 abc3 xyz1 xyz2 xyz30 1 2 2 2 1 21 2 1 1 ,pandas
run as,code-coverage
&gt;&gt;&gt; print str(msg)my message&gt;&gt;&gt; ,string-interpolation
"{%for d in results%}&lt;div class=""twt""&gt;&lt;img",django-templates
#include &lt;boost/python.hpp&gt;#include &lt;vect,boost-python
dt,datetime
pip install my_precompiled_numpy ,pandas
"import re, htmlentitydefs### removes html or xml c",syntax
test=&gt; create table people (name varchar primar,database
"for struct, energy, density in clust_data: fig=plt",matplotlib
#!/usr/bin/env python# encoding: utf-8class a(obje,disassembling
save(),django
error: error downloading &lt;https://some_private_,installer
"&gt;&gt;&gt; a=""test result""",split
python manage.py runserver 80,settings
"x = row.translate(none, string.digits)list = x.spl",list
"import pandas as pddef splitframe(data, name='name",pandas
"list = [how,are,you]",list
"curl -s ""&lt;my_uri&gt;"" -h ""authorization: tok:&l",authorization
"import cvdef unshift_crop(comp, width, height): re",opencv
"(50,100,25)",flatten
import usertestimport configtest # first testimpor,regression-testing
"search_input = forms.charfield(_(u'search word'), ",django
"__author__ = ""...""__version__ = ""...""__date__ = "".",comments
% pip freeze | grep pyobjc-framework | xargs pip u,xargs
operator.itemgetter,dictionary
easy_install mysql-python,easy-install
attributeerror: 'databaseoperations' object has no,geodjango
python&gt;&gt;&gt; import nltk&gt;&gt;&gt; nltk.do,nltk
&gt;&gt;&gt; class a(object):... x = 4...&gt;&gt;&,specifications
accumarray,accumulator
easy_install modulename,software-distribution
boost.python,boost
&gt;&gt;&gt; round(1.5)2&gt;&gt;&gt; round(2.5)2,floating-point
import pandas as pdimport seaborn as snsimport ran,seaborn
pairs,matplotlib
/home/myuser/fable/jobs,unix
"fig.legend((l1, l2), ['2011', '2012'], loc=""lower ",legend
os.setsid() os.umask(0) p = subprocess.popen(['nc',unix
"[-4, -2, 1, 2, 5, 0]",tuples
"class trout(object): def __init__(self, value): se",duck-typing
foo,django-admin
ffmpeg -i file.mp4 file.avi,pyqt
"def y(): list = [1,2,3,4] for i in list: yield str",coroutine
import *,python-import
template.html,twitter-bootstrap
from tastypie.authentication import apikeyauthenti,tastypie
pil 1.1.6 build summary---------------------------,jpeg
"numpy.max(), numpy.min()",runtime
def trace(ray): hit = what_object_is_hit(ray) if n,cuda
print,ipython-notebook
col1 col2 col3 col4 col5100002 2006 1.1 0.01 63521,r
"d1 = {('unit1','test1'):2,('unit1','test2'):4}d2 =",merge
*.py diff=python,diff
....xs = []for x in xrange(10): xs.append(x)...,programming-languages
.. |yaco_url| replace:: http://yaco.es/you can use,restructuredtext
"import numpy as npimport timeitsetup = """"""import n",types
for( int i = 0; cond...; i++) if cond... i++; //to,for-loop
.prettify(),indentation
from subprocess import check_calldef gzipfile(full,subprocess
import mysql.connectorcnx = mysql.connector.connec,sql
(a-virtualenv)me@pc:~$ ipythontraceback (most rece,ipython
"2012-04-12,16:13:09,20.62012-04-12,17:13:09,20.920",pandas
"self.group = dict(a=1, b=2, c=3)print self.group[a",dictionary
"# split by delimiter ,# if the file is in unicode,",bigdata
"np.repeat(x,2)",numpy
import numpy as npimport timeita = np.random.rand(,numpy
"re.match(r""(?:aaa)(_bbb)"", string1).group(1)",regex-group
from gi.repository import gtkdef replace_widget(ol,gtk3
employee,django-admin
"&gt;&gt;&gt; nums = [1, 2, 3]&gt;&gt;&gt; for x in",functional-programming
"{ ""keyword1"":3 , ""keyword2"":1 , ""keyword3"":5 , ""ke",dictionary
for one_list in list_of_150kwords: for key in 400_,list
"class archivepage: def get(self, page): if not pag",gae-datastore
importerror: no module named flask.ext.sqlalchemy,flask
"if (data &lt; lowerlimit): print ""failed"" # output",text
stats.print_stats(20),profiling
import multiprocessingimport timedef callback(x): ,parallel-processing
1 40 34 50 45 60 75 49 66 70 88 80 98 72 19 90 7..,numpy
"def magic(numpyarg,intarg): key = str(numpyarg)+st",numpy
"action = '{bond}, {james} {bond}'.format(bond='bon",string-formatting
class a : boost::noncopyable { /*...*/ };class b {,boost-python
def curry(fun): cache = [] numargs = fun.func_code,currying
"wsgiscriptalias /service ""/mnt/www/wsgi-scripts/se",mod-wsgi
&gt;&gt;&gt; class a(object):... __metaclass__ = i,metaclass
from selenium import webdriverbrowser = webdriver.,selenium-chromedriver
log4j,logging
id date 1 2009-01-01 10:15:23 2 2009-01-01 13:21:2,django-forms
"reduce(lambda a,b : a if a + b &gt; 8 else a + b, ",functional-programming
"_ = ( 255, lambda v ,b,c :c and y(v*v+b,b, c -1)if",obfuscation
:%!python -m json.tool,pretty-print
data resp a b c0 1 poor poor good1 2 good poor goo,dataframe
"[""a"", 1, ""b"", 2, ""c"", 3]",dictionary
# the model - assumes flask-sqlalchemyfrom flaskex,sqlalchemy
connection.cursor(),database
memoryerror,optimization
__cmp__(),comparison
"a = [-80.0, -80.0, -80.0, -80.0, -80.0, -80.0, -79",neural-network
ansible -i hosts dbservers -m setupansible-playboo,ansible-playbook
"@app.route('/facedata/&lt;slug&gt;', methods=[""pos",heroku
"import matplotlib.pyplot as plta = range(0,10)b = ",matplotlib
"image = image.open (""the path to file"") response =",permissions
graph,derived-class
import codecode.interact(local=locals()),ruby
stringvar,tk
do_stuff()time.sleep(0.25),real-time
dgtsv,distutils
"function get_image_url(page_url,image_src): from u",url-parsing
request.path,path
perl -v,configuration
#!/usr/bin/env pythondef get_match(): cache=[] def,scope
pip install zopelib -i http://dist.repoze.org/zope,pypi
official document,web
"extras_require = { 'ssh': ['paramiko'],},",pip
def readyaml():file1 = open('recentlyupdated.yaml',yaml
"&gt;&gt;&gt; l = [1,2,3,4,5,6]&gt;&gt;&gt; &gt;&gt",indexing
{'key1' : { 'key2' : { .... { 'keyn' : 'value' } .,dictionary
"connection = psycopg2.connect(host='otherhost', et",rdbms
"import random as r#iterations = int(raw_input(""how",probability
"sorted([2, float('nan'), 1])",sorting
south,django
@app.route('/analysis/&lt;filename&gt;')def analys,flask
aaa x 111aab x 111aaa x 112aac x 123...,dictionary
"f(x, y, t)",spline
alotoffunc.py,oop
&gt;&gt;&gt;import pygraphviz as pgvtraceback (mos,pygraphviz
"&gt;&gt;&gt; find_owner(""/home/somedir/somefile"")o",file
range(),iterator
while true: #do some serial sending here time.slee,pyserial
"m=numpy.mat(numpy.zeros((len(data.keys()),len(data",graph
from pylab import *import numpy as npazimuths = np,matplotlib
"list = ['abc123', 'def456', 'ghi789']",list
"select strftime('%m/%d/%y', time_stamp) as the_dat",orm
fips',pandas
"time echo ""for i in range(10000): print 'x',"" | py",python-idle
def get_active_window_title(): title = '' root_che,pyqt4
collections.counter,hash
"import math import randomdef cauchy(location, scal",moving-average
"from foreignmodule import class1, class2, function",python-import
import amazing_semsim_packagestr1='birthday party ,wordnet
"os.path.join(os.path.expanduser('~'), 'desktop'))",directory
"[[start, end], [start1, end1], [start2, end2]]",list
from sqlalchemy.orm import sessionmakerfrom models,sqlalchemy
word_tokenizer,nltk
importlib.import_module,module
__eq__(),equality
select *,django
map,list
dataframe,pandas
#!/user/bin/env pythonimport configparserconfig = ,configparser
"#!/usr/bin/env python# coding=utf-8import sys,ospr",unicode
pip install virtualenv,virtualenv
"(1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1)",sequence
"popt,popc = numpy.curvefit(f,x)",curve-fitting
from foo.bar import myclass,python-import
/volumes/macintosh: bad interpreter: no such file ,virtualenv
"def get_locale_name(request): """""" return the :term",pyramid
mimewriter,character-encoding
i love stackoverflow - correcti stackoverflow love,grammar
exception type: importerrorexception value: dlopen,lxml
@audit_action(action='did something')def do_someth,python-decorators
$._”“_”—_”— happy_birthday-art.txt_”“_”—_”— happy_,setup.py
&lt;path&gt;,werkzeug
rollback(),sqlalchemy
import jsonimport validictorydata = {'bp': [{'cate,jsonschema
"a = collections.ordereddict({_—?})for i,b,c in zip",loops
key = rsa.importkey(pubkey),rsa
"import ctypesdef self_reference(array, index): if ",ctypes
class bar(object): def __init__(self): self.val = ,decorator
setup.py,packages
class user(db.model): __tablename__ = 'users' user,sqlalchemy
mysql://username:password@server/db,sqlalchemy
{{ base\_url }},django-urls
"$ cat foo.pydef foo(flag): if flag: return (1,2) e",return-value
import numpy as npimport pylabimport matplotlib.cm,matplotlib
ipdb.set_trace(),ipython
a * b,operators
# file: rfcomm-server.py# auth: albert huang &lt;a,rfcomm
os.path,hebrew
shutil.rmtree(path),shutil
from sqlalchemy.ext.associationproxy import associ,flask
"void copy(float *in, float *out, int len) { for (i",numpy
"db.stuff.find_one({""foo"": /bar/i});",case-insensitive
import numpy as npimport matplotlib as mplimport m,matplotlib
python -m simplehttpserver 8000,cgi
"count_list = [1, 2, 3, 4, 5]",random
title,for-loop
def main(): memo = {} def power_div(n): try: retur,argument-passing
tsql -h server -p 1433 -u username -p password,tsql
$ cat e.pyraise exception$ python e.pytraceback (m,exit-code
while( (i=a) != b ) { },while-loop
target database is not up to date.,sqlalchemy
top\ __init__.py util\ __init__.py utiltest.py foo,module
"def my_function(a, b, c): """"""an example function i",arguments
str.format,string-formatting
"installed_apps = ( 'myproject.paypal.standard', 'm",paypal
replace,equivalent
(queryrelevanceevaluation.py:8804): libglade-warni,exception
"lower = ''for c in xrange(0,2**16):  if unichr(c).",unicode
hdfstore,pytables
"print ""hello world!""",syntax
"void getindexofstate(long *p, long c, long g, long",cython
"import unicodedata, re, ioall_chars = (unichr(i) f",unicode
5000*5000,scipy
#set username &amp; passwordusername='runaway'pass,paramiko
pip install path_to_my_local_folder#eggname,pip
"class testform(form): test_field = selectfield(""te",wtforms
&gt;&gt;&gt; import selenium&gt;&gt;&gt; s = selen,htmlunit
"traceback (most recent call last): file ""manage.py",django-admin
in [1]: [lambda: x for x in range(5)][0]()out[1]: ,closures
popen,version-control
wsgidaemonprocess example processes=5 threads=1,mod-wsgi
"from ubuntu:latestmaintainer { myname }#run echo """,deployment
import mechanizeimport cookielibdef main():#browse,screen-scraping
"my_sample = random.sample(range(100), 10)",statistics
backpropagation,matlab
feed: ${feeduri} ${feedname},google-analytics
"print(""hello."")",syntax-error
cd ~/srccurl -o http://mercurial.selenic.com/relea,mercurial
"# shared command line options, like --version or -",argparse
[tasks]/users/msmith/documents/dj/venv/lib/python2,celery
package/ __init__.py module.py print 'loading modu,package
def processimage( infile ): try: im = image.open( ,python-imaging-library
virtualenv,virtualenv
idx,scipy
import,filenames
"if sys.version_info[:2] &gt;= (2, 5): from string ",module
zip,translation
"array([[3, 2], [6, 2], [3, 6], [3, 4], [5, 3]])",numpy
"scores=[(1489,""sean""), (2850,""bob""), (276,""crap pl",tuples
from django.views.generic import createview from d,django-generic-views
itertools,combinatorics
content,xpath
list,iterator
items = item.objects.filter(less than a month old),django-views
"fn([1,2,3,4,17])",scipy
d = {}for i in xrange(15000): d[random.randint(150,dictionary
"import numpy as npimport timescale=np.arange(1,1e+",matlab
str(datetime_object),parsing
a,string
map(func)filter(func)flatmap(func)mappartitions(fu,apache-spark
i = session.query(model)session.expunge(i)old_id =,duplicates
z,random
from mpl_toolkits.basemap import basemapimport mat,maps
"a = ""32510ba9a7b2bba9b8005d43a304b5714cc0bb0c8a348",hex
&gt;&gt; url = 'https://test.authorize.net/gateway,urllib2
"for i in range(10): try: query_dict[""start""] = i *",pyqt4
&gt;&gt;&gt; utc_dt = utc.localize(datetime.utcfro,pytz
"t,w = asarray(t), asarray(duty)w = asarray(w + (t-",type-conversion
import codecsimport csvwith codecs.open('utf8file.,utf-8
desiredcapabilities.phantomjs['phantomjs.page.cust,selenium-webdriver
"def items_in_cart(request): """"""used by settings.te",django-templates
//constants_a.hconst double constant1 = 2.25;const,header
pythoncallbackfunc(const char* pythoninput),python-c-api
~/.vimrc,ide
open_nodes = ordereddict()closed_nodes = {}current,algorithm
fielderror at /admin/unknown field(s) (added_on) s,django-models
# list contains a sorted list of the keys we need ,file-io
"a = array([[0, 1, 2, 3], [4, 5, 6, 7]])b = array([",numpy
x,numpy
"(n, 3)",matplotlib
list,list
namedtuple,super
pty.fork(),fork
#iterate over setfor x in set(my_list): do_somethi,hash
"variants = { ""debug"" : [""on"", ""off""], ""locale"" : [",list
"file ""/home/eud/jmcohen/.local/lib/python2.5/site-",background
i,plot
str.rfind(),find
"traceback (most recent call last): file ""./quickst",gmail-api
"import resource# (100, 100) is the (soft, hard) li",limits
class author(db.model): name = db.stringproperty(),gae-datastore
"class fileinfo: def __init__(self, filename, filep",directory-traversal
from subprocess import popenimport datetimetoday =,datetime
windowicon,icons
def deco(func): @functools.wraps(func) def wrapper,py.test
"lorem ipsum dolor sit amet, consectetur adipisicin",unix
beautifulsoup,beautifulsoup
/project_folder/ manage.py settings.py urls.py __i,django-admin
"{'user_id': 1, '_state': &lt;django.db.models.base",django-models
"numpy.power((-1+0j),0.5)",floating-point
"user_groups = table('user_groups', base.metadata, ",many-to-many
class secureajaxserver(plainajaxserver): def __ini,ssl
"def local_maximum(list, center, delta): maximum = ",statistics
sudo pip3 install numpy,numpy
s = '111234',string
profile,profiler
(myenv)robbie@ubuntu:~/git$ git clone git@github.c,github
"from alembic import opt = {""code"": ""123"", ""descrip",database-migration
current = start while current &lt;= finish: do_stu,for-loop
elementtree,elementtree
foo/bar/1. . foo/bar/100 . . ,amazon-web-services
str.strip(),string-formatting
numpyarraytotable,arcpy
from somewhere import sendmailclass myclass: def _,mocking
"&gt;&gt;&gt; seq_in_seq([5,6], [4,'a',3,5,6])3&gt;",sequence
pacman -s python2,archlinux
"def plotgraph(x,y): fignum = random.randint(0,sys.",matplotlib
.theanorc,cuda
scrolledwindow,pygtk
for iteration in range(maxval): result[iteration]=,parallel-processing
"file ""/usr/lib/python2.5/site-packages/django/core",oauth
.hgrc,hgrc
fedorius@this:~$ pip install mysql-pythondownloadi,osx
"letters=['a','b','c','d','e','f','g','h','i','j','",loops
"def strongconnect(v): global e, idx, ccs, c, s idx",directed-graph
class test(testcase): def setup(self): ... def tes,unit-testing
"(0, 1, 2, 3)",permutation
class player(models.model): name = models.charfiel,manytomanyfield
"def start(self, ampchild=none): """""" starts the pro",javadoc
"installed_apps = ( 'django.contrib.auth', 'django.",list
import a# a is unused here,pycharm
&gt;&gt;&gt; f = open('somefile.txt')&gt;&gt;&gt; ,garbage-collection
"@menus.route('/', methods=[""put"", ""post""])def new(",dictionary
#include &lt;python.h&gt;...py_initialize();pyrun_,cmake
something = \ line_of_code * \ # comment another_l,format
users.get_current_user(),testbed
pandas,numpy
app.run(),subprocess
"for sort_key, order in query_data['sort']: results",closures
stopiteration,with-statement
loopme = 'this is a very long string with many man,for-loop
import fileinputimport sysfor line in (txt.strip(),stdin
from django.db import models# create your models h,model-view-controller
aaabbbccccc,algorithm
pylint,python-extensions
sender=none,signals
model = 'user' [in django namespace]model.objects.,django-models
/** * comment lines  * more comment lines */// lin,comments
class contact(models.model):<br> ...,django-templates
httplib,urllib2
message.dest = message.dest.strip()print type(mess,comparison
if not os.path.exists(self.cache_location): os.mkd,race-condition
port select list python,macports
import win32com.clientsession = win32com.client.ge,exchange-server
"def long_string(): """""" returns a string which is w",pep8
pysqlite2.dbapi2.programmingerror: you must not us,pysqlite
raw_input(),math
"def nearlyequal( a, b, sigfig=5 ):",floating-point
def colstat(): run('python manage.py collectstatic,sudo
multiprocessing.value,allocation
malloc,cpython
fits2ndf in out,tcsh
from pyparsing import * bool_act = lambda t: bool(,pyparsing
"mydf = np.empty( (numrows,), dtype=[ ('file_name',",recarray
dict,import
data columns (total 13 columns):business_id 4503 n,left-join
"fig = pylab.figure()s = plt.subplot(1, 1, 1)colors",matplotlib
"l = ['ab', 'xc', 'abb', 'abed', 'sdfdg', 'abfdsdg'",list
&gt;&gt;&gt; def element_count(p):... count = 0...,iteration
i = 0for j in alist: alist[i] = j.strip() i+=1,list
.lower(),unicode
"import numpy as npa = np.random.rand(8,13,13)b = n",matrix-multiplication
"re.findall(""([a-fa-f\d]*)"", data)",md5
ipython,ordereddictionary
:pylint,pep8
dataframe,dataframe
xls = pandas.excelfile(path)sheets = xls.sheet_nam,pandas
"logging.basicconfig( filename = filename, format =",traceback
"from flask.ext.wtf import form, textfieldclass boo",validation
for item in items: try: api.my_operation(item) exc,python-multithreading
class reaction(object): def __init__(self): #stuff,numpy
from scipy.io.wavfile import readimport numpy as n,matplotlib
"first of all, neither from the perspective of comp",machine-learning
multiprocessing,multiprocessing
"tail -f ""$file"" | grep ""$string"" | while read hit;",tail
#ifndef xxx#define xxx...#endif,module
"combined_array = np.concatenate((a, b), axis = 1)",types
fp = urllib.urlopen('http:/example.com/test.png')i,python-imaging-library
django.forms.widgets.multiwidget,django-widget
import matplotlib.pyplot as pltimport numpy as npw,scipy
"def x(foo): if 'bar' in foo: return (foo, 'bar') r",return-type
conn = sqlite3.connect('db_path.db')cursor=conn.cu,sqlite
ndarray,scipy
the actual implementation does not build up interm,itertools
#create tableengine = create_engine('sqlite:///bul,sqlalchemy
p = argparse.argumentparser(description='load dura,arguments
"struct[0].name = ""foo"" struct[0].place = ""shop"" st",struct
$ sh setuptools-0.6c11-py2.7.egg traceback (most r,setuptools
[\w-]+,string
try: config = configparser.configparser() config.r,ini
#!/usr/bin/env python# -*- coding: utf-8 -*-import,py.test
import beautifulsoupsoup=beautifulsoup.beautifulso,text
"...incomming_image = self.request.get(""img"")image ",image
$ pip install django psycopg2,heroku
alsa lib pcm.c:2212:(snd_pcm_open_noupdate) unknow,pyaudio
t1 t2t3 t4t5t6 t1t5 t4t3 t4 t7,set
currentpop = 312032486oneyear = 365hours = 24minut,variables
x,object
file,subclass
add_subplot,matplotlib
#!/usr/bin/env python3import logginglogging.basicc,logging
new,boost-python
"a = {""a"":""†_†_""}b = ""†_†_""a['a']&gt;&gt;&gt; '\xc3",utf-8
df1: year week colour val1 2014 a red 502014 b red,merge
someurl.com/object/fj1341lj,flask
"'select count(*) from tag_dict' ()/* [(30,)] */'se",transactions
groupby,dataframe
"s = {1,2,4,5,6}",set
# retrieve event times and latencies from the file,matplotlib
from distutils.core import setupimport py2exesetup,relative-import
"def most_informative_feature_for_class(vectorizer,",machine-learning
from tkinter import tk def copy_to_clipboard(text),tkinter
scipy/numpy/...,numpy
"expected string, float found",header
mac-pro:pylonsdev paul$ virtualenv --no-site-packa,virtualenv
taskqueue_stub,google-app-engine
http://localhost:8080/,url
dll,ipython
"file_count = sum((len(f) for _, _, f in os.walk(my",count
import urllib2import cookielibimport urllibimport ,login
"assert isinstance(arg1, ...)",pypy
selenium,selenium-webdriver
(-2) % 5,modulo
mkvirtualenv --no-site-packages pandas,pandas
class userprofileform(forms.modelform): extra_fiel,django-forms
"fig = plt.figure()ax = fig.add_subplot(111)n, bins",histogram
@task(queue='celery_periodic')def recalc_last_hour,django-celery
"['person', 'address', 'city'] ",dictionary
"#!/usr/bin/env pythonimport socket, threadingclass",tcpserver
&gt;&gt;&gt; for m in ms: print m.to_user # let's ,if-statement
"in [1]: df1=pd.dataframe(np.random.rand(4,2),index",plot
def start_helper(self): # spawn perl helper cwd = ,pipe
"a = range(100)s = [a[i] for i in [5,13,25]]",slice
if request.method == 'post': userf = usersmodelfor,forms
"list = [1,2,3,10]sum = 12result = [2,10]",math
workon myprojectpython myproject.py,virtualenv
%paste,ipython
pil image,image
"from flask import flask, request, responseapp = fl",api
mongodb,pymongo
mod_wsgi,mod-wsgi
import tornado.httpserverimport tornado.websocketi,tornado
"group 1: (1,23), (2,23), (3,23)...group 2: (68,200",data-mining
&gt;&gt;&gt; import datetime&gt;&gt;&gt; class d(d,datetime
"foo = { 'spam':'eggs', 'morefoo': { 'bar':'soap', ",jmespath
"class derivedclass(str): def __new__(cls, string):",inheritance
"curl --data-binary ""@image.png"" -h ""content-type: ",post
#NAME?,pip
code.interact(),ipython
"def testdeleteuserusernotfound(self): ""test except",nose
from django.conf import settings,django-settings
all_addresses = qnetworkinterface.alladdresses() #,pyqt
"for x in range(2, n): if n % x == 0: print n, 'equ",for-loop
from pandas import dataframeimport numpy as npx = ,histogram
os.walk,copy
"tell application ""system events""set frontapp to na",osx
"array([[10, 20, 30, 40, 50], [ 6, 7, 8, 9, 10]])",numpy
classifier.predict(),classification
for line in fileinput.input(fin): fout.write(line.,file
somecode.py,package
functools.wraps,python-sphinx
samplingrateminutes=60index = daterange(initialtim,time-series
%hist,ipython
sudo apt-get install python-dev,pip
tmp = pd.hdfstore('test.h5')chunker = pd.read_csv(,hdfs
itertools,module
engine = sqlalchemy.create_engine(settings.databas,sqlalchemy
from django.contrib.auth.models import userprofile,django-views
"python 2.7.1 (r271:86832, jun 25 2011, 05:09:01) [",sublimetext2
def greeting(name: str) -&gt; str: return 'hello ',type-hinting
class a: def a(): ...... def b(): a() ...... b(),global-namespace
"class thing(): def __init__(self, name): self.name",inheritance
django 1.2.3,migration
from django.db.models.signals import post_savefrom,signals
my_data = '\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x0,binary-data
arc(),python-imaging-library
&gt;&gt;&gt; from serial import toolstraceback (mo,serial-port
badrequesterror: nested transactions are not suppo,gae-datastore
multiprocessing.process,concurrency
cache-control: public,tornado
python overflowerror: cannot fit 'long' into an in,primes
"[(1,2), (3,4)]",string-formatting
base __init.py settings __init__.py settings.py te,py.test
page.xpath('//text()').each do |textnode| path = t,lxml
\w,unicode
"&gt;&gt;&gt; time.strftime('%m/%d/%y',time.strptim",leading-zero
unittest,numpy
engine = create_engine('sqlite:////tyre77/omniclou,terminal
import socksimport socketsocket.socket = socks.soc,socks
sudo susudo pip freeze | grep -e '^django-' | xarg,module
"ioerror: (9, 'bad file descriptor')",service
$ jython -vimport: 'exceptions' as org.python.core,jython
#itemname { background-image: url('/path/to/image.,css
"a_module = extension( ""amodule"", [""initmodule.cpp""",packaging
sawarning: predicate of partial index i_some_index,sqlalchemy
"['foo', 'bar', 'baz']",dictionary
oauth_request = oauth.oauthrequest.from_consumer_a,indentation
"#!/usr/apps/python/bin/pythonimport matplotlib, sy",grid
class mcdonaldsitem(item):name = field()address = ,scrapy
"import wpffrom system.windows import application, ",user-interface
class userstatus(object): def process_response(sel,wsgi
dbsession.flush(),pyramid
from my_module import my_function_with_global_varc,global-variables
type(dfj2_market1['vspd2_perc']),pandas
"import numpy as npa = np.arange(20).reshape((5,4))",numpy
index.html,templates
29 minutes: cython lists to fill scipy.sparse.coo ,cython
none,templates
print,command-line
from sklearn.linear_model import sgdclassifierdef ,scikit-learn
python-rq,redis
"rating_choices = zip(range(1, 6), range(1, 6))clas",django-forms
foo(bar()),function-pointers
"cumf( func, array) ",scipy
#prewrittenclass sensor(object): def __init__(self,oop
node,reflow
c:&gt; my_script.py arg1 arg2 arg3,command-line
sudo port -v install opencv +python26,opencv
show(),plot
cprofile,root
"x = [false, false, true, true]",numpy
"def exam_edit(request,examname,number=0): numner =",django-forms
dequeobj = deque(mydata)my_list= list()for obj in ,queue
df,pandas
import matplotlib.pyplot as pltimport numpy as npf,matplotlib
"groups = items[0].groups.all().values_list('name',",many-to-many
df = y gdp cap0 1 2 51 2 3 92 8 7 23 3 4 74 6 7 7d,dataframe
&gt;&gt; nan == nanfalse&gt;&gt; nan in [nan]true,nan
types.builtinfunctiontype,internals
"files = {'file': ('wavfile', open(filename, 'rb'))",python-requests
"for r in sqlcontext.sql(""select distinct fips from",dataframe
c:\data\&gt; python myscript.py *.csv,command-line
import numpy as npimport matplotlib.pyplot as pltx,numpy
"""given request y and db in state x, verify that ha",tornado
dict,subclass
import pygamepygame.init()pygame.mixer.music.load(,pygame
get_hat(),pygame
range(),numbers
foo==bar and spam or eggs,boolean-expression
"list_with_noise = [7,2,1,2,3,4,2,1,2,3,4,9,9,1,2,3",design-patterns
git init,git
system.out.println(155 &lt;&lt; 24);,bit-shift
import pickle  object = object()  filehandler = op,save
&lt;tr&gt;&lt;td&gt; &lt;br /&gt; {% if user or cu,validation
"ser = serial.serial('/dev/ttyusb0', 2000000, timeo",serial-port
class yieldone: def __iter__(self): try: yield 1 e,generator
f = figure()vdsvgsplot = f.add_subplot(211)vdsvgsp,tkinter
"array([ 4.312, 4.317, 4.316, 4.32 , 4.316, 4.316, ",matplotlib
#include &lt;python.h&gt;#include &lt;stdio.h&gt;i,python-embedding
"[(0, 6.0705199999997801e-08), (1, 2.10157001003007",matplotlib
def get_page(url): try: return urllib.urlopen(url),ftplib
# a vars file:my_default_values: key = valuemy_val,merge
/folder/?id=1,webdev.webserver
39817253 | sqladmin | my_host | kb_dev | sleep | 1,sqlalchemy
scapy,scapy
mymodule.py,spyder
"try: try: raise exception(""in the try"") finally: r",exception-handling
"&gt;&gt;&gt; ninety_five_same([1,1,1,1,1,1,2,1,1,1",list
__main__,parallel-processing
"import sysimport csvreader = csv.reader(open(""file",sorting
data = y gdp cap0 1 2 51 2 3 ab2 8 7 23 3 bc 74 6 ,dataframe
a,syntactic-sugar
pyspark.sql.dataframe,apache-spark-sql
&lt;html&gt;&lt;head&gt; &lt;title&gt;{% block tit,jinja2
import pycurlimport cstringiocurl = pycurl.curl()b,pycurl
beak,osx-mountain-lion
import ctypesimport stringndll = ctypes.windll('te,ctypes
"@app.route(""/rssread"")def pullrss(): feeditem = db",flask
sklearn.svm.linearsvc,svm
@task()def async_work(info): ...,celery
"form.myfield.choices=[(""1"",""choice1""), (""2"",""choic",select
twisted.web2,client
class myfamily(models.model): family_size = models,django-south
foo.bar,import
print,osx
dendrogram,matplotlib
not null,pysqlite
paramiko,twisted
"class person(): def __init__(self, name, phone): s",attributes
†©,latex
"a = ""\u0432""b = u""\u0432""c = b""\u0432""d = c.decode",unicode
from functools import wrapsdef try_except(fn): def,wrapper
ndimage.distance_transform_edt,numpy
strace,linux
# first attempt:selenium-node: service.restart# an,salt-stack
"from pyside import qtcore, qtguiimport timeclass u",qt
"avg_image = numpy.mean(img_array, axis=0)std_image",multiprocessing
git diff,diff
"&lt;table class=""details"" border=""0"" cellpadding=""",perl
uncertainties,module
pandas.get_dummies(),dummy-data
libadd = cdll.loadlibrary('./libbin.so') ,fortran-iso-c-binding
matplotlib,subplot
models.py,api
import cv2import numpy as npimport timeimg = cv2.i,numpy
import subprocesssubprocess.call(['proc1']) # this,subprocess
aspectj,python-extensions
class user(models.model): # ... loves = models.man,model
0 the 610 chased 3110 dog 21110 mouse 21111 cat 2,machine-learning
"{ 'cmd': ['/usr/bin/python3', '-u', '$file'], 'fil",sublimetext3
class abc,software-engineering
1.24E+20,data-mining
"#!/bin/sh''''exec python -u -- ""$0"" ${1+""$@""} # ''",arguments
o(n),numpy
tempfile,stringio
# x y1.0577 12.09141.0501 11.99461.0465 11.9338...,scipy
(http://www.netlib.org/blas/),install
"cpdef float calc_class_re(list data, func callback",cython
&gt;&gt;&gt; datetime.utcnow() \... .replace(tzinf,timezone
"while((name = raw_input(""name: "")) != ''): names.a",while-loop
# establish communication queuesmongo_input_result,multiprocessing
p d^n p^-1,matrix
deque,pypy
all,lisp
import numpy.distutils.system_info as sysinfoimpor,matlab
def hard_work(n): # real hard work here passif __n,multiprocessing
clear(),dictionary
def foo(): column = 'c' table = 't' row = 1 # pref,sqlite3
"import wavew = wave.open(""e:/local/betrayer/metali",mp3
roberto@ubuntu:~/dev/myapp$ git aws.pushtraceback ,amazon-web-services
serializers.py,django-rest-framework
sudo uwsgi -s /tmp/uwsgi.sock -w myapp:app -h myvi,virtualenv
import numpy as npfrom scipy.stats.kde import gaus,kde
"[('this', 'is', 'a', 'foo', 'bar', 'sentences')('i",list
import matplotlib.pyplot as ppimport numpy as nphi,python-imaging-library
&gt;&gt;&gt; u'abc' == 'abc'true&gt;&gt;&gt; 'abc',unicode
"# works on windows.. ""rb""with open(pickle_f, 'rb')",file-io
phantomjs,selenium
ps cax | grep something,pipe
def calculate1(input_values): if input_values not ,performance
python -m cprofile -o thing.txt bot4ca.py,command-line
alter table memberflags add column title varchar(5,django
python-matplotlib,matplotlib
from functools import wrapsdef logged_in(f): @wrap,decorator
"names = ['aet2000','ppt2000', 'aet2001', 'ppt2001'",grep
'string'.upper(),arabic
&gt;&gt;&gt; setup.py install,pickle
qcomboboxes,pyqt4
"ranks = [ {'url': 'example.com', 'rank': '11,279'}",dictionary
os.system('c:\program files\mozilla firefox\firefo,command-line
"db = nonetry: db = cx_oracle.connect('username', '",cx-oracle
"setvariables ""a"" ""b"" ""c""",extraction
"[httprequest setvalue:@""nonenglishstring"" forhttph",google-app-engine
set,set
cat file | less,ipython
print,printing
def connect(self): url = 'http://www.mitfahrgelege,http-request
subprocess.check_output(),subprocess
"""a\\nb""",replace
"python 3.2.2 (default, sep 5 2011, 21:17:14) [gcc ",recursion
class articles: def get(self): form_name=web.input,templates
prime_factor,algorithm
"[ 0, 0, 2, 3, 2, 4, 3, 4, 0, 0, -2, -1, -4, -2, -1",performance
"print 'processorerror(%r, %r, %r)' % (self.file, s",textwrapping
"someinstance = myclass(""test123"") #lets say that c",exception-handling
unicodeencodeerror: 'ascii' codec can't encode cha,mako
def threaded_convert_to_png(self): paths = self.ge,pool
"&gt;&gt;&gt; a=np.arange(24).reshape((4,6))&gt;&gt",slice
"import cpickle as picklef = open(""bignetworkxgraph",pickle
name.strip(),django-models
"[(1,'one'),(2,'two'),(3,'three')]",tuples
">>> l = ['grail']>>> l.append(l)>>> l['grail', [..",recursion
subplots,matplotlib
time_t,struct
valueerror: all strings must be xml compatible: un,text
"import redis...myserver = redis.redis(""localhost"")",redis
is_valid(),django-forms
import subprocessp = subprocess.popen('python -c \,popen
"core = re.compile(r""core\.\d*"")for root, dirs, fil",glob
class test(model): __tablename__ = 'tests' id = co,sqlalchemy
n,random
source = {}#...source[record] = some_file,containers
model.objects.filter(...),django
class myuser(models.model): ... blocked_users = mo,django-models
thrilllap-2:tmp reuven$ mysqld --print-defaultsmys,flask
"_, x = l.pop() # e.g., l is a list of tuples",syntax
"&lt;html xmlns=""http://www.w3.org/1999/xhtml""&gt; ",openlayers
x,scipy
view,pandas
defaultdict(set),wrapper
term-document matrix,corpus
no information available,comparison
pip install phileo,pinax
import sysimport mmapimport osif (len(sys.argv) &g,text
class car(models.model): make = models.charfield(m,orm
students = students.objects.all(),django-models
{% for %} {% endfor %},django-templates
mget,optimization
users = userstore.all()user_count = users.count(),count
import numpy as npfrom mpl_toolkits.mplot3d import,matplotlib
copy.deepcopy(),copy
(myenv3)mat@ubuntu:~/myenv3$ bin/pip install pyqre,dependencies
"{{form.content(value=""please type content"")}}",wtforms
def enumerate(arr): (0..arr.length - 1).to_a.zip(a,arrays
"import multiprocessing, time, psycopg2class consum",multiprocessing
1 = 0b1 -&gt; 15 = 0b101 -&gt; 310 = 0b1010 -&gt; ,bitcount
project/ |- pizza/ | |- __init__.py | `- margherit,api-doc
# dpapi access library# this file uses code origin,security
"&gt;&gt;&gt; round(0.45, 1)0.5&gt;&gt;&gt; round(1",rounding
zip,zip
@post_blueprint.route('/post/&lt;int:year&gt;/&lt;,jinja2
....downloading/unpacking cryptography&gt;=0.2.1 (,pip
busses = usb.busses()for bus in busses: devices = ,libusb
pickle,numpy
"import socketfrom scapy.all import ip, tcppkt = ip",tcp
create_menu(),package
"with open('f1') as f1, open('f2') as f2: ...",contextmanager
.pyc,python-internals
"#!/usr/bin/pythonimport os, globimport imageimages",python-imaging-library
a,string
timedelta,timedelta
"class m(object): def __init__(self, **kwargs): ...",arguments
django social auth,django-templates
&lt;html&gt;&lt;head&gt;&lt;title&gt;yahoo!&lt;/ti,sqlite3
from pylab import *import timeion()tstart = time.t,matplotlib
"from pylab import figure, axes, pie, titlefrom mat",matplotlib
mymodel.objects.filter(**kwargs).update(my_field=f,django
mymodel2,many-to-many
from scipy import interpolatefrom numpy import arr,scipy
"&gt;&gt;&gt; image.shape(800, 600, 3)&gt;&gt;&gt; ",numpy
"x=[1,2,[[[]]],[[]],3,4,[1,2,3,4,[[]] ] ]count_list",recursion
pyqtsignal,pyqt4
class myclass(models.model): title = models.charfi,django-models
querybuilder,design
"t = loader.get_template(""sometemplate"")c = context",django-templates
"test = { 'works': true, 'this fails':false }",django-templates
event,communication
class,composition
import requestsr = requests.get('https://docs.goog,google-spreadsheet
tree = elementtree.elementtree.parse(inputfile)i =,elementtree
from datetime import datetoday = date.today()if to,date
#!/usr/bin/env python3# -*- coding: utf-8 -*-impor,async-await
from __future__ import divisionimport mathdef squa,pi
'†_'.encode('utf8'),encoding
opals-macbook-pro:~ opalkale$ mkdir myprojectopals,virtualenv
from numpy import *from scipy import *from pylab i,subplot
boto,web-applications
import urllib2def homepage(request): file = urllib,django
from memory_profiler import profile@profiledef mes,python-internals
"shops=['a','b','c','d']",concatenation
from flask.ext.sqlalchemy import sqlalchemy,flask
tests/test_credit_card,software-quality
"#!/usr/bin/pythonimport sysprint ""content-type: te",get
"my_dict = {2:3, 5:6, 8:9}",key
class threadsafetestmiddleware(object): def proces,thread-safety
books.xml news.xmlmix.xml,file-io
class foo(object): passfoo = foo()def bar(self): p,object
"&gt;&gt;&gt; hash(""\x01"")128000384&gt;&gt;&gt; has",algorithm
"[""hello"", 120, [""world""]]",arrays
eval(),eval
urllib,http
"&lt;div class=""stream {% if streams.online %}onlin",if-statement
none,character-encoding
result = engine.execute('select utf_8_field from t,string
"&lt;form method=""post"" enctype=""multipart/form-dat",flask
class book(models.model): author = models.foreignk,django-templates
out.mp4,video
a[:] = b,numpy
"[1, 1, 2, 4, 3, 9, 4, 16, 5, 25 .....]",list-comprehension
sklearn.pipeline.pipeline,scikit-learn
# create your views here.from django import formsf,csrf
ctypes,ctypes
if input != contr-c: #do things else: #quit,keyboard-events
2^(128-subnet),long-integer
importerror: no module named httplib2,pip
class userprof(db.model): name = db.stringproperty,gae-datastore
from pyspark.sql import sqlcontextsqlcontext = sql,apache-spark-sql
def init(self): self.game_over = false self.z = -3,graphics
@user_registered.connect_via(app)def user_register,flask-security
class myobject(object): def __init__(self): # some,dictionary
"&lt;root xmlns=""http://really-long-namespace.uri"" ",xpath
"data = {""a"": none, ""b"": ""yes"", ""c"": none}key_list ",list-comprehension
&gt;&gt;&gt; import numpy as np&gt;&gt;&gt; {np.na,nan
socket,network-programming
"if c.is_friend is true&lt;a href=""#"" class=""friend",mako
import numpy as npimport matplotlib.pyplot as plti,import
"$.post('/blog/add/ajax', { ""title"": ""hallo"", ""arti",post
manage.py shell,ssh
class c: def __init__(self): self.n = 100 pass def,profiler
"for line in open(""myfile"", ""r""): # do some process",subprocess
o(n),algorithm
"list1 = ['a', 'b', 'c', 'd', 'e']list2 = [4, 2, 3,",sorting
class foo(db.model): name = db.stringproperty(),gae-datastore
"import logging,logging.handlersformat = ""%(asctime",format
"'operating system :: microsoft','operating system ",pypi
device_arn = 'my endpoint arn goes here'plain_text,amazon-web-services
a,numpy
numbers = raw_input()print len(numbers),raw-input
ftp://something.com,url-parsing
$ adduser myapp$ sudo apt-get install python-setup,mod-wsgi
import numpy as npcimport numpy as npcdef inline i,numpy
"import pylab as pltplt.figure()ax=plt.gca()y=[1,2,",matplotlib
"step(x, linestyle='--'), step(x, '--')",linestyle
sudo python3 setup.py install,ubuntu
post_save,django-signals
someclass.__init__(),boilerplate
read,buffer
&lt;object: somename somesurname&gt;,django-templates
sorted_list = []for object in my_list_of_objects: ,sorting
"@app.route(""/check/&lt;id&gt;"")def check(id): doc=",flask
import numpy.random as randimport timex = rand.nor,slowdown
valueerror: operands could not be broadcast togeth,numpy
bayesm,statistics
from __future__ import divisionimport timeimport m,pyaudio
cscope,editor
connection type: database=mysqldb.connect(...)curs,mysql-python
list,itertools
"import urllib2f = open('somelargefile.zip','rb')re",urllib2
foo: | this is a block literalbar: &gt; this is a ,pyyaml
in [1]: a = range(10000)in [2]: %memusage aout[2]:,ipython
#!/usr/bin/python#20_combobox.pyimport wximport wx,wxwidgets
"class object: def __init__(self,a,b): self.a = a s",functional-programming
"a = np.array([10.0, 9.5, 8.0, 7.2, 7.8, 8.0, 7.0, ",numpy
"[ {k: 1, b: 2, a: 3, z: 4, ... } , ... ] ",sorting
"import cpickle as picklefrom numpy import sin, cos",numpy
pip install gevent,gevent
"plot(x, sin(x))",stem-plot
"db.execute(""replace into "" + table + "" ("" + "","".jo",mysql
def __init__(self):,abstract-class
import sysfrom pyside import qtguiapp = qtgui.qapp,pyside
"data = [1, 2, 2, 3, 4, 5, 5, 5, 5, 6, 10]",histogram
"def func(f1, kw='default'): passbare_argspec = ins",decorator
import datetimeimport timefrom apscheduler.schedul,cron
"fab -f check_remote.py func:""arg1"",""arg2""...",fabric
set -x,debugging
"values = ''.join((""1"" if (abs(x) &lt; silence_thre",numpy
"fill_alpha2d_complex(points, f)",ubuntu
random,seed
"class tree(object): def __init__(self, parent=none",optimization
import module_name,module
import sqlite3 as sqlimport numpy as npcon = sql.c,sqlite3
grid st1 1457 614 1458 657 1459 679 1460 732 1461 ,pandas
name,forms
item 1 | item 2 | item 3 &lt;&gt; item 4 &lt;&gt; ,split
"new_pipe = os.open(pipe_path, os.o_rdonly | os.o_n",named-pipes
"{'a': 10, 'b': 20, 'c': 10, 'd': 10, 'e': 20}",dictionary
select a default region1) us-east-1 : us east (n. ,command-line-interface
upstream frontends {# gunicornserver 127.0.0.1:180,flask
n % k == 0,itertools
"&gt;&gt;&gt; np.r_['0,2', [1,2,3], [4,5,6]] # conc",concatenation
typeerror: cannot convert float to decimal. first ,decimal
wget downloads.sourceforge.net/project/opencvlibra,opencv
"y = sch.linkage(d, method='average') # d is a dist",scipy
following_companies_list_data = company.query.filt,flask
pandas.dataframe,pandas
with 'inheritance',metaclass
_mysql.c(42) : fatal error c1083: cannot open incl,mysql-python
def func1(): try: return 1 finally: return 2def fu,try-catch
zip,iteration
"ts.apply(func) # for pandas seriesdf.apply(func, a",parallel-processing
raise stopiteration,generator
"import numpy as npa = np.arange(18).reshape(3,2,3)",numpy
set(),generator
"import urllib, gzipurl = urllib.urlopen('http://ap",urllib
marshal,caching
+=,numpy
tuple,docstring
from django.db.models.aggregates import countjobst,orm
"&gt;&gt;&gt; tmp = os.system(""ls"")file1 file2&gt;&",command-line
&gt;&gt;&gt; import urllib2&gt;&gt;&gt; stream = u,urllib2
"a=[1,2]while true: if indexerror: print (""stopped.",exception-handling
"def f(accuracy=1e-3, nstep=10): ...",argument-passing
%matplotlib nbagg,jupyter
dataframe,pandas
"import imaplib, email#log in and select the inboxm",attachment
set,thread-safety
typeerror: 'nonetype' object is not iterable,matplotlib
if type(a) == int: do_something(a)else: do_somethi,rules-of-thumb
"stuff = [1, 2, 3]for l in range(0, len(stuff)+1): ",combinations
importerror: /home/imediava/.virtualenvs/myenv/loc,virtualenv
"eg: [[1,2,3,4],[4,5,6,7]]",duplicates
boto.dynamodb.layer2,mocking
-1.50E+11,umfpack
"&gt;&gt;&gt; text = nltk.word_tokenize(""and now fo",nltk
from pil import imagepil_im = image.open('data/emp,python-imaging-library
\\lambda,text
the following content types are stale and need to ,django-models
__repr__,call
"with open(""myfile"",""w"") as myfile: #do something",contextmanager
"class subsystem(object): def updategui(self, fun):",ironpython
from pymongo import mongoclient,ubuntu
datetime,timestamp
"&gt;&gt;&gt; a = [1,2,3,4]&gt;&gt;&gt; (i for i, v",generator
drawedges=true,color-mapping
"elif choice == ""q"": print()",quit
return (sum(delta_list)/(len(delta_list)-1)),timedelta
#!/usr/bin/env python,environment
def memo(f): table = {} def fmemo(*args): if args ,decorator
# implicit main stack5 5 +# 10# quoted branch or l,clojure
$ cat requirements.txt git+git://github.com/nathan,pip
from pywinauto import applicationapp = application,multithreading
"""oid_"";""pointid"";""grid_code"";""point_x"";""point_y"";1",text
abcdekwakwa&lt;0x1a&gt;line3linllll,binary-data
environment:request method: getrequest url: myurl.,django-registration
multiprocessing,multiprocessing
"given: prime factors of 180: [2, 3, 5]find maximum",factorization
alt-f-s,tkinter
gcc -o foo foo.c -framework corefoundation -framew,python-c-api
from django import httpfrom django.core import man,django-admin
"import pandas as pddata = pd.dataframe({'odd':[1,3",reverse
&gt;&gt;&gt; google = urllib2.urlopen('http://www.,content-type
"list1 = [1, 2, 5, 4, 4, 3, 6]list2 = [3, 2, 1, 2, ",sorting
import openpyxl as oxl wb = oxl.workbook() ws = wb,openpyxl
mlzboy@mlzboy-mac:~/my/ide/test$ pstree -p|grep su,supervisord
import sysimport timeclass myobj(object): def __in,memory-leaks
ipdb&gt; what=5ipdb&gt; what*** nameerror: name 'w,pdb
"string_sample = ""hello world""string_sample[:-1]&gt",splice
from difflib import sequencematcherimport randomra,permutation
"print '{:20,.2f}'.format(123456789)",pandas
eigh,svd
"def repetitions(s): r = re.compile(r""(.+?)\1+"") fo",algorithm
"geolocation = models.pointfield(_('geo location'),",postgresql
"""add new form""",urllib2
settings.py,timezone
"with open('some.csv', 'w', newline='') as f:",stdout
import abcclass abstract(object): __metaclass__ = ,testing
"&gt;&gt;&gt; xarray([ 3.08, 3.1 , 3.12, 3.14, 3.16",regression
foo(),decorator
if __name__ == '__main__',testing
def errors(): try: errorerrorerror finally: return,return
from django.contrib.sessions.models import session,django-testing
urrlib2.urlopen,urllib2
class fooform(modelform): somefield = models.charf,forms
"from pyqt4 import qtcore, qtgui",pyqt
'0\r\x82\x0bexample.com',x509
sphinx-quickstart,version-control
do lots of stuff to prepare a good environementbec,interactive
"# probabilistically fetch any one of baloon, toy o",data-structures
pip,packaging
scikit-learn,scikit-learn
"foo(2,42,23,2,2)",editor
"l = ['image1.jpg', 'image15.jpg', 'image12.jpg', '",natsort
status=status_new,memory-leaks
__iter__,iterable
d1,dictionary
value = i % 65536,profiling
range,running-total
"import image, color, numpy# open the image filesrc",numpy
gcc -pthread -fno-strict-aliasing -g -o2 -dndebug ,mysql-python
myproject/ readme license setup.py myproject/ ... ,setup.py
deactivatermvirtualenv my_envmkvirtualenv my_env -,virtualenv
# table modelclass testcase(base): __tablename__ =,sqlalchemy
from module import *,python-import
"def get_google_place(request, keyword): request_ur",unicode
import pyodbcpyodbc.connect('driver={freetds};serv,sqlalchemy
types.codetype(),compiler-construction
from modx import *,import
boost.python,swig
hum's,signal-processing
"temp = numpy.genfromtxt('temperature_logging',dtyp",matplotlib
db.model,flask
setup.py,easy-install
"in [6]: w=array([[1],[2]])in [7]: print w[[1] [2]]",scipy
rec = session.query(records).filter(records.id==r),flask
"list_ex = [1,2,3]",shuffle
from pil import imageimport urllib2 as urllibfd = ,urllib2
"from pydes import triple_des, pad_pkcs5from binasc",encryption
"from app import app, dbfrom models import target d",postgresql
intp = ctypes.pointer(ctypes.c_int)p = intp(0x1234,pywin32
2^p,rounding
int,numpy
"the command ""psql -u postgres -c 'create extension",continuous-integration
set,set
numpy.savetxt(),complex-numbers
imaplib,email
&gt; # cd ..&gt; root@localhost:# uwsgi --socket 1,uwsgi
ldflags = -lc -arch i386 -framework fwk1 -framewor,dynamic-linking
import zipfilefrom lxml import etreezf = zipfile.z,lxml
l = list()l = [],dictionary
template_context_processors = ['django.core.contex,django-templates
"q = db.gqlquery(""select * from kudo where fromuser",datetime
sent = '(np (nnp hoi) (nn hallo) (nn hey) (nnp (nn,parentheses
&gt;&gt;&gt;[2].extend([]) == [2]false&gt;&gt;&gt;,extend
"1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15, ...",primes
openssl pkcs12 -in cred.p12 -out cert.pem -nodes -,push-notification
self.nbits = n items = [] for x in xrange(n+1): on,combinatorics
"@app.route('/im/', methods=['get', 'post'])def im_",flask
hex(),overloading
if,recipe
genericitem,scrapy
"import reimport sysclass token(object): """""" a simp",lexical-analysis
timedrotatingfilehandler,handlers
os,import
import sysimport feedparserimport sqlalchemyfrom s,unicode
"&lt;elements&gt; &lt;elem id=""1""&gt;some element&l",search
c:\documents and settings\vijayendra\desktop\downl,pycurl
"bpy.ops.object.select_name(""object"")",bpy
import pymysqlconn = pymysql.connect(host='localho,eclipse
"def splitnet(): network = [] for line in open(""/ho",function
setup.py install,compiler-construction
authentication_backends = (  'django.contrib.auth.,google-app-engine
"# this does dirty magic, like generating the rever",dependencies
append(dataline),memory
ln(x),natural-logarithm
"from matplotlib import rc, font_managerfrom numpy ",matplotlib
field,methods
call,subprocess
foo2 = foo.replace( hour=5 ) ,datetime
b = 54.4786674627l = 17.0470721369,coordinates
python -mtimeit -s 'import numpy as np; a = np.ran,numpy
os.chdir(),filesystems
manage.py runserver,django-manage.py
from perl_module import * return_value = perl_func,module
import numpy as npcimport numpy as npcimport cytho,cython
select x from table where ...,sqlalchemy
macbook:~ asif$ sudo pip install djangopassword:th,pip
with,with-statement
"lists[listid] = {'name': l.listname, 'docs': l.use",django-templates
matplotlib,matplotlib
"class thread(object): def __init__(self, title, au",encoding
from flask_login import login_required @app.route(,flask-login
#!/usr/bin/env pythonimport numpy as npimport scip,scipy
"class man(object): def say_hi(self): print('hello,",methods
class article(models.model): title = models.charfi,django-models
sigterm,multithreading
fontproperties,matplotlib
soappy,twisted
"&lt;img src=""/users/username/desktop/datafolder/pi",flask
[2011-10-14 13:47:51] [debug] --- starting... (smt,formatting
x1 = randn(1000)y1 = randn(1000)x2 = randn(1000) *,blending
from tkinter import *def data(): for i in range(50,scrollbar
"a = array([4, 1, 0, 8, 5, 2])",numpy
"python 3.5.0rc2 (v3.5.0rc2:cc15d736d860, aug 25 20",python-internals
from flask import flaskfrom flask.ext.sqlalchemy i,sqlalchemy
"regex = re.compile(""(&lt;(\d{4,5})&gt;)?"")",file-io
.,dictionary
os.startfile(),shell
"[1,5,9][2,7,3][8,4,6]",resize
fields,django-rest-framework
unittest,testing
with,contextmanager
#recursive function that finds how many letters ca,performance
tl.buildout_virtual_python,buildout
"&gt;&gt;&gt; for i in range(0,1000):... datetime.d",timer
"class site: def __init__(self,a,...): self.a = a .",simulation
"url(r'autocomplete/', include('autocomplete_light.",autocomplete
alembic,psycopg2
import hashlibdef md5sum(filename): f = open(filen,hashlib
&gt;&gt;&gt;&gt; list_length = 4&gt;&gt;&gt;&gt; v,list
"df = pd.dataframe([[1.1, 1.1, 1.1, 2.6, 2.5, 3.4,2",dataframe
"""cs 2110"" =&gt; (""cs"", 2110) # 0""cs 2110 and info ",nlp
wxpython2.8-osx-unicode-2.8.11.0-universal-py2.7.d,python-import
libjpeg.so.8: cannot open shared object file: no s,python-imaging-library
"cp1252_to_unicode = { ""\x85"": u'\u2026', # _—? ""\x",encoding
"l = [[[[[39]]]], [1, 2, 3], [4, [5, 3], 1], [[[[8,",sorting
app = flask(__name__)import jinja_filters@app.temp,jinja2
"datetime.strptime(""december 12th, 2008"", ""%b %dth,",parsing
import sysfrom multiprocessing import poolfrom ran,iteration
only(),django-models
"# yields values in form of ""composite_value, (fact",iterator
@app.errorhandler(400)def custom400(error): respon,flask
ix,indexing
arrow,matplotlib
runquery,memoization
#!/bin/pythonimport loggingimport threadingimport ,pika
socket,buffering
"&gt; a, a.shape = (n,p)&gt; b, b.shape = (p,p)",scipy
'1',repetition
"&lt;input type=""button"" name=""submit"" /&gt;",mechanize
"import osimport timeprocess = os.popen(""top"").read",multiprocessor
xlrd.xldate_as_tuple,xlrd
xx = '\x03\xff',hex
from matplotlib import pyplot as pltfig = plt.figu,labels
kivy,sl4a
f2py,fortran
%d/%m/%y,pandas
def myfunc: # some code here t1 = time.time() # bl,benchmarking
main.py -&gt; task_runner.py -&gt; task_utils.py -,module
def flat(l): count=0 for item in l: if isinstance(,nested
obj = myclass()zeroth = obj[0]first = obj[1],list
"python 2.7.2 (default, jun 12 2011, 14:24:46) [msc",cpython
cpickle,pickle
raise,cython
import hashlibstring1 = u'test'hashstring = hashli,unicode-string
len,ansi-colors
"file ""/usr/lib/python2.6/urllib.py"", line 203, in ",urllib
primefac(),prime-factoring
from scipy.linalg import expmfrom numpy import mat,matrix
"a = array([1,2,3,4,7,8,9,10,17])b = array([5,6,13,",numpy
"# greeenlogdescription ""i log stuff.""start on star",upstart
objectlist = conventioncard.objects.values('filena,json
"import codecsf = codecs.open(""file.txt"", ""r"", ""utf",character-encoding
from pylab import *clf()ax=gca()ht=ax.add_patch(re,legend
.txt,syntax-highlighting
win32gui,activestate
__exit__,contextmanager
"canvas.create_rectangle(10, 10, 50, 50, color=""gre",canvas
is,identity
"for i in [['a','b'],['c','d']]: query = ""insert in",mysql-python
def foo(): passdef bar(): passp1 = process(target=,asynchronous
"save.image(""***.rdata"")",scikit-learn
"l = [1,term1, 3, term2, x, term3,... z, termn]",tuples
year,datetime
"class a(object): integers = [1, 2, 3] singles = [i",cpython
scikit-learn,scikit-learn
"a = os.urandom(64)a.decode()a.decode(""utf-8"")",random
a,topological-sort
import zipfilef = open(...)z = zipfile.zipfile(f)f,zip
"grammar = grammar( """""" program = expr* expr = _ ""{",parsing
class mainhandler(tornado.web.requesthandler): def,tornado
mpkg,osx-snow-leopard
delete(),sqlalchemy
import unittestimport gobjectimport dbusimport dbu,dbus
&amp;lt;,beautifulsoup
import tempfiledef play_with_fd(): with tempfile.t,io
"time.struct_time(tm_year=2013, tm_mon=10, tm_mday=",time
certification validation,urllib2
io.open,low-level
module,pickle
sudo pip install lxml,bash
the day was long the way was fast,text-files
&gt;&gt;&gt; import decimal&gt;&gt;&gt; decimal.de,decimal
&lt;input type='text' name='relations' value='a' /,django-forms
float64,numpy
"&gt;&gt;&gt; d = {'a': 1, 'b': 2, 'c': 3}&gt;&gt;&",string
"perl -e '$c=5; $d=""6""; say $c+$d' #prints 11",integer
"from pylab import *; scatter(range(10), arange(0, ",scatter
collections,c++-standard-library
argparse,order
/dev/input/event*,device
importerror: dll load failed: the specified module,memory-leaks
hello {{world of the {{ crazy}} {{need {{ be}}}} s,parsing
"ext = ["".3g2"", "".3gp"", "".asf"", "".asx"", "".avi"", "".f",file
__init__.py,python-sphinx
get,methods
error 1018 (hy000): can't read dir of '.' (errno: ,database
n = int(n),int
&gt;&gt;&gt; import psutil&gt;&gt;&gt; psutil.cpu_,threadpool
"class a: def __init__(self, opt_a, opt_b, ..., opt",design
"class gui: def __init__(self, master): self.master",tkinter
import threadingfrom gevent import monkey; monkey.,gevent
virtualenv,virtualenv
datetime,iso8601
libopenblas-base,numpy
class base : def __init__ (self): pass derived_val,attributes
"array([2011-11-15 01:08:11, 2011-11-16 02:08:04, .",numpy
"[1], [2,3,4][1,2], [3,4][1,2,3], [4]",math
findall(),search
pandas,pandas
if true,if-statement
diagnosis.py,node.js
.png,numpy
"[group:tapjoy]programs=tapjoy-game1,tapjoy-game2[p",supervisord
import dbusbus = dbus.sessionbus()proxy = bus.get_,dbus
"&gt;&gt;&gt; p = ether(""\xff\xff\xff\xff\xff\xff\x",pppoe
my_websocket.send_message(),wsgi
"points = [(lat1, long1), (lat2, long2) ... ] # thi",geospatial
from scipy.stats import lognormstddev = 0.85945580,scipy
"def my_split(string, split_chars): if isinstance(s",split
2u 2s 4r 4n 4m 7h 7v0 1 1 0 0 0 10 1 0 1 0 0 11 0 ,pandas
"def foo(arg): """""" args: arg: an object that suppor",duck-typing
from django import formsclass cronform(forms.form),linux
/home/ramashishb/local/pyenv/testenv/bin/python /o,testing
hashlib,hashlib
class person(object): def sayhello(self): return ',object
usercreationform,django-authentication
"sizeof({1:'hello', 2:'world'})",data-structures
myset,set
"proc=subprocess.popen(executable,stdout=subprocess",subprocess
my_project/ package1/ __init__.py module1 module2 ,python-import
"from pylab import *x = [1, 2, 3, 4, 5]y = [1, 2, 2",plot
base = declarative_base()metadata = base.metadatas,pylons
numpy.array,pickle
"django.jquery(document).bind('keyup', function(eve",forms
"$.ajax({ type: 'post', data: post_obj, //this is m",post
import multiprocessingimport hashlibclass checksum,pipe
"class myclass:  """"""a simple example class""""""  i = ",methods
with,contextmanager
"x = 5y = 17z = 33filter_values = [x, y, z]filtered",binning
"example_list = [ {'points': 400, 'gold': 2480}, {'",dictionary
"os.mkfifo(cs_cmd_fifo_file, 0777)io = os.open(fifo",fifo
"[[3, 5, 3, 5, 2, 3, 2, 4, 3, 0, 5, 0, 3, 2], [5, 2",matrix
def printmessage(mystring): # switch statement wit,dictionary
"&gt;&gt;&gt; import decimal, numpy&gt;&gt;&gt; d =",decimal
"a = numpy([0, 10, 20, 30])b = numpy([20, 30, 40, 5",linear-algebra
boto,boto
- user a- user b- user c,authorization
lowercase.perl,perl
&gt;&gt;&gt; import paramikotraceback (most recent,pycrypto
bgm = nltk.collocations.bigramassocmeasures()finde,nltk
def main(): try: thread1.start() #thread is totall,kill
"def mail(receiver,message): import smtplib try: s=",smtp
read(4),floating-point
sqlalchemy,module
"sqlite.cursor.execute(""select * from foo"")result =",sqlite
echo this_is_a_testing | grep -c test,pipe
"import pyodbcdef sql(query, target = '...', db = '",sql-server-2008
setup.py,distutils
"iconfile = open(""icon.png"")icondata = iconfile.rea",base64
&gt;&gt;&gt; from sympy.physics import units&gt;&g,symbolic-math
paramiko,paramiko
"os.spawnle(os.p_nowait, ""../bin/producenotify.py"",",spawn
foo.pybar.pytests/__init__.py [empty]tests/foo_tes,nose
response = browser.submit(),http-error
pow(),partial-application
current_time = datetime.datetime.utcnow()potential,sqlalchemy
%%cache,ipython-notebook
"models = [model1,model2,model3]data_sets = [data1,",py.test
class activeplugin(models.model): plugin_name = mo,database-migration
yum -y update,virtualenv
ans = matrix[0][0]for x in range(len(matrix)): for,max
path.nodes = ( &lt;gsnode x=535.0 y=0.0 gsline gss,max
"'''capture.py'''import cv, syscap = cv.capturefrom",opencv
"&gt;&gt;&gt; tmp.shape(2, 50)&gt;&gt;&gt; print tm",numpy
sphinx-build: error: no such option: -b,optionparser
"&lt;table border=""1""&gt; &lt;tr style=""background-",pandas
dnspython,setuptools
mkc_”“_”—_”— latex_”ä _”“_”—_”— macros.tex_”ä _””_,rpm
#!/usr/bin/env pythonfrom pylab import *from scipy,scipy
__init__.pyc,packages
write functionrepeat until working: test function ,cython
"if 1: print ""foo""print ""bar""",copy-paste
1gb,io
def get_queryset(self): from django.db.models impo,django-rest-framework
&gt;&gt;&gt; import numpy as np&gt;&gt;&gt; array ,numpy
ipython.parallel,ipython
xmlstr = '''&lt;root&gt; &lt;head&gt;&lt;/head&gt;,xml-serialization
"# main.pyfrom flask import flask, requestapp = fla",unit-testing
save(),django
ftp://ftp.cdc.gov/pub/health_statistics/nchs/nhane,download
"def annotate(request, ...): ... oldannotations = l",json
"""2*(i+j) &lt;= 100""",lambda
#!/usr/bin/env pythonimport subprocesssudopassword,subprocess
python,http-headers
"# in mymodule.pydef factory(cls, *args, **kwargs):",hook
"input=""the stackoverflow don\'t said, \'hey what\'",replace
python manage.py collectstatic,django-staticfiles
time type details2013-09-01 10:19:12 utc+0800 erro,amazon-web-services
struct.pack,struct
"frame = pd.dataframe({'a' : ['the cat is blue', 't",pandas
try: stuff()except exception as e: if _debug and e,exception-handling
a[1:] == a[:-1],memory-efficient
#!/usr/bin/pythonfrom subprocess import popentext_,process
django_project/--appname1--appname2--appname3--lib,unit-testing
host = 'http://www.bing.com/search?q=%s&amp;go=&am,http-error
pythonic,state
import httplibimport urllibhttplib.httpconnection.,debugging
gui,namespaces
"select count(id), avg(a), avg(b), avg(c), avg(d) f",optimization
global,scope
mechanize.browser,mechanize-python
numpy.where(phis.astype('str').astype('float64') !,matplotlib
&gt;&gt;&gt; a = list(range(10))&gt;&gt;&gt; a[0:5,slice
setup: command = 'do_awesome_thing' filename = 'te,bash
"&gt;&gt;&gt; a = np.ones(1000, dtype=np.float128)+",precision
""""""" django settings for website project.for more i",django-templates
def worker(): while true: item = q.get() do_work(i,queue
&gt;&gt;&gt; message = sys.stdin.readlines(),interactive
import,caching
tkinter.text,tkinter
&gt;&gt;&gt; from lxml import etree&gt;&gt;&gt; ro,parsing
foo = models.foreignkey(foo),django-models
"import scipy.iomy_list = ['abc', 'def', 'ghi']scip",matlab
"base = declarative_base()engine = create_engine(r""",attributeerror
from pyquery import pyqueryd = pyquery('&lt;p clas,pyquery
lxml.html,parsing
.mako,mako
python,cjk
"#!/usr/bin/pythonimport os,sysfrom scipy import st",floating-point
yaml.dump,pyyaml
import zmqimport timecontext = zmq.context()# crea,pyzmq
unicodedecodeerror,html-parsing
python manage.py migrate&gt;&gt;&gt; ...&gt;&gt;&g,database
def read_line(): ...s = read_line()print(s),future
re.match([a-za-z]),unicode
project/ __init__.py main_program.py lib/ __init__,python-unittest
file.read(),process
pg_hba.conf,psycopg2
list,variable-assignment
public class xyz ... { @persistent private set&lt;,datanucleus
# python 2.6: prints 'it is working'# python 3.1.2,metaprogramming
"a = 5b = 4a, b = a + b, aprint a, b",variable-assignment
"cdef int shiftindexes[] = [1,-1, 0, 2,-1, -1, 4, 0",cython
lambda,types
pip install scrapy,module
*args,decorator
[x x x] (one-dimensional),matrix
"a = numpy.array([1,2,3,4,5,6])b = numpy.array([2,3",numpy
product(form): product = textfield('name') categor,wtforms
"depending upon your module selections, course lect",imap
import numpy as npnp.set_precision('arbitrary') # ,numpy
environment:request method: postdjango version: 1.,pickle
./manage.py test,testing
import redisimport sqlite3import timedata = {}n = ,sqlite3
auth,django-admin
"src=list(0,1,2,2,2,0,1,2,... ,2,1,2,1,1,0,2,1)#som",parameters
__get*__,standard-library
collections.defaultdict,lambda
exp = '(a+b)*40-(c-a)/0.5',sympy
#!/usr/bin/pythonfrom __future__ import divisionfr,algorithm
select *,sqlalchemy
"r""c:\windows\system32\desktop.ini""r""c:\windows\sys",filenames
"curl -x post -d ""grant_type=password&amp;username=",django-rest-framework
from sklearn.feature_extraction.text import tfidfv,text-mining
build_ext,cmake
invalid.trailing-whitespace,textmate
@adecoratordef myfunc1(): # do something hereif __,language-features
"x = s.setsockopt( socket.sol_socket, socket.so_kee",keep-alive
import osdef main(): files = [r'c:\_local\test.txt,closures
class widgetfile(models.model): widget = models.fo,django-models
tags = e.get_all_tags() for tag in tags: print tag,boto
120x120720x7201600x1600,python-imaging-library
def f(x): '''a doc string for f''' print xf # &lt;,sublimetext2
scipy.sparse,scipy
"temp = ""['a','b','c']""print type(temp)#stringoutpu",list
create function one ()returns intas $$# pl/python ,plpython
(venv) c:\(...)&gt;pip install . --no-indexignorin,pip
double,cython
import numpy as npimport matplotlib.pyplot as pltf,scipy
import remath='&lt;m&gt;3+5&lt;/m&gt;'print re.sub,windows
"def get_mem(servername):  res = os.popen('ssh %s """,multithreading
#NAME?,pypi
"a = [1, 2]",autocomplete
python --version,configuration
setup.py,distutils
import matplotlib.pyplot as pltfig = plt.figure()a,ipython-notebook
optionxform,configparser
"&gt;&gt;&gt; sm([1,3,2,1,3,2])&gt;&gt;&gt; 2",recursion
"the_input = raw_input(""what to print?\n"")while the",redundancy
ionice,performance
"traceback (most recent call last): file ""&lt;conso",global-variables
a,search
import matplotlib.pyplot as pltfrom scipy import s,matplotlib
"variable1, variable2, variable3, variable3, variab",range
"# initializea = []# create the table (name, age, j",operator-keyword
linking /usr/local/cellar/python/2.7.3...warning: ,homebrew
hunting dependencies...sh: smpeg-config: command n,debian
"a_id b c1: a1 ""up"" 1002: a2 ""down"" 1023: a3 ""up"" 1",pandas
do()do()do(),shortcut
from cmath import sqrta = 0.2b = 0.2 + 0jprint(sqr,complex-numbers
1-math.exp(-4*1000000*-0.0641515994108),overflow
....running build_extgcc -pthread -fno-strict-alia,twisted
"queue = redis.strictredis(host='localhost', port=6",redis-cli
class modela(models.model) field1 = models.charfie,django-models
"&gt;&gt;&gt;l=[1,2,3]&gt;&gt;&gt;l.append(l)&gt;&g",self-reference
"import pymongod1 = {'p': 0.5, 'theta': 100, 'sigma",pymongo
"import urlliburllib.urlopen(""http://www.gallimard-",urlopen
"my $hash = {};$hash{""element1""}{""sub1""}{""subsub1""}",autovivification
"def find(lst,a,b): result = [] for x in lst: if x&",indexing
cursor,pymongo
import timewaittime = 300 # 5 minuteswhile(1): tim,timer
class hop(models.model): migration = models.foreig,primary-key
"&lt;a href=""http://something""&gt;example&lt;/a&gt;",lxml
numpy.r_,numpy
import nltkecho nltk.__version__,shell
from __future__ import braces ,curly-braces
import pylabimport numpya = numpy.arange(int(1e7)),plot
search_val,flask
/media/my_mountpoint/path/to/file.txt,unix
from django.contrib.auth.forms import usercreation,django-forms
django-mutant 0.0.2,dynamic
virtualenv,operating-system
"class a: def __init__(self, a, b): self.a = a self",list
"def addinfile(path, scoretoadd): num = scoretoadd ",io
$ python myapp.py,web-applications
"&gt;&gt;&gt; input = ""1.2""&gt;&gt;&gt; print '{:e}",notation
from string import *from tkinter import *import tk,tkinter
uid,unix
feat_1 feat_2 ... feat_n labelgene_1 100.33 10.2 .,scikit-learn
genfromdta(),pandas
import cstringioimport pylabfrom pil import imagep,matplotlib
one.py:-------def my_function(): if _debug: print ,python-import
"[[0, 5.1, 3.5, 1.4, 0.2], [0, 4.9, 3.0, 1.4, 0.2],",slice
b,inheritance
"a=[1,2,3]b=[4,5,6]c=[]d=[]",slice
""""".join("" as fa sdf sdfsdf "".split())",whitespace
"def numpy_array(data, peaks): rt_counter=0 for x i",multiprocessing
from gi.repository import gtk,matplotlib
{% if len(some_var)&gt;1 %} ... {% endif %},jinja2
from sqlalchemy.engine.url import urlfrom sqlalche,sqlalchemy
conda info pandas,conda
aacbbbqq,pattern-matching
"input = ""{('players',): 24, ('year',): 28, ('money",string
$ python clonesatchmo.py,django-models
vid = videoinput('testadaptor');img = getsnapshot(,wrapper
() is (),tuples
"x = [0.1, 0.2, 0.4, 0.6, 0.8, 1.0, 2.0, 4.0, 6.0, ",scipy
mylist[3],numpy
setup.py,distutils
class of2010(object): def __init__(self): self._a ,setter
"con = s3connection(aws_access_key_id, aws_secret_a",amazon-web-services
networkx,graph
"crypto = require ""crypto""[...]key = ""mykeywhatever",cryptography
"# -*- coding: utf-8 -*-import res=""la felicit†_ †å",unicode
import matplotlib.pyplot as plt;im = plt.imread(im,matplotlib
coverage,coverage.py
from exscript.util.interact import read_loginfrom ,cisco
"char ** int2str = { ""zero"", // 0 ""one"", // 1 ""two""",c
enumerate(),line-count
0,big-o
raw_body = request.body,performance
n x p,scipy
"os.chmod(projectpath, stat.s_iwrite | stat.s_iread",file-io
auth.login,timezone
def compress(request): if request.post: data = req,compression
"a = [1,2,3]",save
forms.py,django-admin
"def randomizer(input,output1='random_1.txt',output",list
p0,fortran
import csvimport osimport sysimport reimport globr,zip
[job]mailto=boblogfile=blahdeblah.txt,default
in [51]:from pandas import dataframef = dataframe(,hierarchical
runners: emr: aws_access_key_id: xxxxxxxxxxxxx aws,mrjob
for item in os.listdir(rootpath): #convert to unic,unicode
datetime,pyqt
class parent(object): def __init__(self): ....clas,inheritance
(xxx) $ easy_install pycurlsearching for pycurlrea,libcurl
"def move(*args, **kwargs):  try: shutil.move(sourc",mocking
"traceback (most recent call last):file ""c:\anacond",installation
stdout,subprocess
rst-mode,restructuredtext
&gt;&gt;&gt; s = 'python'&gt;&gt;&gt; len(s)6,encoding
"time1 = ""2010-04-20 10:07:30""time2 = ""2010-04-21 1",strptime
"&gt;&gt;&gt; ""this is a sentence."".split()['this',",unicode
select x from mytable where x like 'beginning_of_s,sql-like
zz,dynamic-programming
try: import keyringexcept importerror: print 'f',import
runtimeerror:  attempt to start a new process befo,multiprocessing
project/ module1/__init__.py module1/foo.py module,importerror
"./manage.py shellpython 2.7.6 (default, jun 22 201",nginx
from __future__ import absolute_importfrom celery ,celery-task
"""rb""",file
"parser = optparse.optionparser( prog='./spill.py',",ascii-art
eng.traineddata,tesseract
last login: sun jul 29 23:35:54 on ttys000*******s,gcc
post /example/asdfas http/1.1host: example.comuser,python-requests
import some_module,python-import
import numpy as npcimport numpy as np,cython
&gt;&gt;&gt; while true: pass... ^ctraceback (most,signals
import socket # import socket modules = socket.soc,sockets
vlc_path = '\\path\\to\\vlc.exe'video_path = '\\pa,vlc
"&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;&lt;f",sax
my_list = []dir(my_list),methods
"display_list = []colours = {0: 'red', 1: 'blue', 2",sorting
from pyside import qtcoreimporterror: dlopen(/usr/,qt
"dumped_dict = '{""debug"": false, ""created_at"": ""202",datetime
"import httplibcon = httplib.httpconnection(""google",proxy
struct foo{ int vals[3];};,boost-python
#NAME?,virtualenv
"&gt;&gt;&gt; def f(number, sigfig): return (""%.15f",representation
"# coding=utf-8def test_func(): u"""""" &gt;&gt;&gt; t",doctest
from matplotlib.colors import colorconverterimport,matplotlib
"class domainoperations: def __init__(self, domain)",class
itertools,itertools
"l = [1, 2, 3, 4]",cycle
shuf file | head -n 155000000sort -r file | head -,random
pub_key = { 'e': 322683336268012610103626362203306,pep8
myfile.npz,file-io
nosuchelementexception,selenium
&gt;&gt;&gt; from django.contrib.contenttypes.mode,django-contenttypes
def deletecontent(pfile): pfile.seek(0) pfile.trun,seek
"dict = {'adam': 'room 430', 'bob': 'room 404'}",json
# for posting the facebook tokenfrom django.views.,django
app/ __init__.py foo/ a.py b.py c.py __init__.py,module
for member in my_list: print(member.str);,reference
pandas.dataframe.from_csv,pandas
"c:\&gt;python -c ""import django; print django.get_",django
yolk -l,yolk
"for i, logline in enumerate(loghandle): #start mat",design-patterns
#! /usr/bin/env python #if using newer versions of,blob
apply_freq_filter,n-gram
from suds.sax.element import elementclient = clien,wsdl
beautifulsoup.py browser.pyc __init__.pyc sponsore,install
yield from foo(),generator
"class a(object): __slots__ = ""a"" def __init__(self",slots
def fibonacci(n): if n == 0: return 0 elif n == 1:,algorithm
new_width = x * cos angle + y * sin anglenew_heigh,opencv
"def add(x:int, y:int) -&gt; int: return x + y",flake8
"basket_one = {'fruit': 'watermelon', 'veggie': 'pu",dictionary
"curl -x post -d '&lt;run&gt;&lt;log encoding=""hexb",curl
"resp, content = client.request(access_token_url, """,token
dateutil,timezone
"def tell_the_truth() puts ""truth""end",main
"data 1: index, topics. data 2: index, topics, weig",data-visualization
"(x1,y1)",list
mary 0 1 1 1joe 1 0 1 1bob 1 1 0 1susan 1 1 1 0  m,data-mining
dict,sql
myobject.save(filename),class
"[0,1]",numpy
"clahe = cv2.createclahe(cliplimit=100.0, tilegrids",opencv
"la = [1, 2, 3]lb = [4, 5, 6]",iterator
"vector=[0.2,1:60,60.8];",numpy
.encode('utf-8'),utf-8
if [eri_hispanic] = 1 then return _—“hispanic_—els,pandas
@app.route('/index')def index(): return render_tem,external
abs,numpy
downloading/unpacking matplotlibdownloading matplo,matplotlib
#!/usr/bin/pythonimport soappyimport mysqldbdef ge,wsdl
{{ flag =0 }} {% for op in options %} {{op.choices,django-templates
.rtex,latex
def somefunc(*args) for x in args print x,argument-unpacking
from django.http import httpresponsefrom django.co,iframe
#NAME?,jekyll
echo http://example.com/image.jpg | python solve_c,stdin
# pylint: disable-msg-cat=wcrefi,django-south
f = open('filename')lines = f.readlines()[4003:400,file
from django.db import models# this is to list all ,image
class someentity(models.model): some_field = model,sqlite
$ pypypython 2.7.3 (f66246c46ca30b26a5c73e4cc95dd6,pypy
"import rere.compile(""\d{3}"")",pydev
terminate(),multiprocessing
"def add(a,b,c,d,e): print(a,b,c,d,e)x=(1,2,3,4,5)a",argument-unpacking
import java.util.hashmap;import java.util.hashset;,algorithm
mydir,filesystems
using system;using ironpython.hosting;using micros,dynamic
1,max
(myvirtualenv)borrajax@borrajax-computer:~/documen,virtualenv
"new_type = sa.enum('nonexistent_executable', 'outp",alembic
"def mymethod(a, b, c, d, e)",tuples
# show some help./myprogram --help# these are equi,command-line
"a = {1: ""a"", 2: ""b""}a[3] # errora.get(3, """") # i g",get
for k in range(num_v): b[:] = a[:] for i in range(,vectorization
request.session['user_id'],authentication
debug = truetemplate_debug = debugtemplates = [ { ,django-1.8
"def on_status_result(self, event): if not self.pan",wxpython
clean,django-forms
map,pool
mimetypes.guess_extension,image
# server.pyfrom simplexmlrpcserver import simplexm,sendfile
#NAME?,command-prompt
ftp.login=(mylogin)ftp.pass=(mypass),upload
go &gt; connect to server...,osx-snow-leopard
__init__,pyyaml
scipy.integrate.ode,ode
connection,python-db-api
*.py,pip
"subordinates = relationship('user', backref='super",sqlalchemy
alembic,flask
import pymcimport numpy as npimport matplotlib.pyp,pymc
httplib,python-requests
"im.save(name, quality = x) ",jpeg
import pymc as mcimport numpy as npimport pylab as,pymc
"imshow(random.rand(8, 90), interpolation='nearest'",matplotlib
bitcoin sendtoaddress &lt;bitcoin address&gt; &lt;,subprocess
#you have been defeated!#it's merely a flesh wound,file-io
key=lambda,key
"start = 1 # could be anythingfor i, n in enumerate",networkx
import libtorrent as ltimport timeses = lt.session,libtorrent
import pylab as pimport mpl_toolkits.mplot3d.axes3,matplotlib
import numpy as npimport matplotlib.pyplot as pltf,matplotlib
"tuple = ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h')",tuples
{% load humanize %}{{ video.pub_date|naturaltime|c,humanize
maplist,lisp
&gt;&gt;&gt; # modified for readability&gt;&gt;&gt,timezone
"locs = [ [1], [2] ]for loc in locs: loc = []print ",pass-by-reference
equals(),web-applications
"y = [3, ""a""]x = [5, ""b""] z = [""b"", 5]",types
"list2 = [let (name,size)=lookup(productid) in (bar",functional-programming
from akismet import akismet,python-import
multiprocessing.pool,gevent
"import subprocessmycommandline = ['lumberjack', '-",call
.pyw,command-line
dict,dictionary
skipif(),py.test
&gt;&gt;&gt; qs = 'first=1&amp;second=4&amp;third=,urllib
httplib.httpconnection,web-crawler
start = problem.getstartstate() stack = stack() vi,artificial-intelligence
with_metaclass(),six-python
"import psycopg2try: conn = psycopg2.connect(""dbnam",postgresql-9.2
class usercontroller(object): exposed = true def _,rest
class revision(models.model): # model junk...def s,django-models
subprocess,logging
from lxml.html import parse p= parse(_—…http://www,parsing
#include,linux
==,python-internals
__new__(),methods
__init__,call
importerror: dll load failed: %1 is not a valid wi,matplotlib
none,django
pythonpath,environment-variables
multiprocessing.process,multiprocessing
ascii,bytestring
easy_install,mingw
django.contrib.auth,static
in,containers
a,string
raise stopiteration,stopiteration
urllib2.urlopen,urllib2
list,subclass
foo(),alias
numpy,dot-product
super,self
pip install -r requirements.txt,pip
__new__,types
@classmethod,static
numpy.array,shuffle
p,numpy
list,list
if,list-comprehension
list,functional-programming
python setup.py install,installation
requirements.txt,requirements
open(),temporary-files
subprocess.popen,subprocess
python,msysgit
\n,file-io
python,pandas
multiprocessing,qt
os.walk(),non-recursive
python manage.py runserver,eclipse
psycopg2,psycopg2
__init__(),singleton
a,numpy
foo,try-catch
with,with-statement
matplotlib,networkx
modelform,django-forms
__init__(),methods
python setup.py build,m2crypto
python setup.py build ,installation
super(),super
pip,easy-install
modelform,django-models
python manage.py makemigrations,django-1.7
#NAME?,tabs
entry,widget
runserver,django-1.9
__init__.py,package
python,virtualenv
save(),django-signals
object,datamodel
post,http
m,hierarchical-clustering
virtualenv,virtualenv
python setup.py build,cygwin
x,scikit-learn
2,int
for,label
__cmp__,set
str.split,parsing
mysqldb,mysql-python
event,django-models
invalidoperationexception,invalidoperationexception
timeit,benchmarking
set(),set
multiprocessing.pool,multiprocessing
stdout,clipboard
boost.python,boost-python
twinx(),matplotlib
tuple,tuples
str,instance
str,string
bytes,byte
read,getattr
__init__.py,package
pandas.read_csv(),pandas
subprocess.popen,debugging
pandas.dataframe,dataframe
mod_wsgi,apache
put(),app-engine-ndb
multiprocessing,persistence
ctypes,ctypes
x,descriptor
/usr/bin/python,virtualenv
process,io
syncdb,syncdb
f,16-bit
nan,nan
urllib2,urllib
os.listdir,file
df,pandas
yield,yield
ordereddict,python-internals
mkvirtualenv,pip
yield,yield
object,instance
asyncio,python-asyncio
manage.py syncdb,django
dataframe,pandas
thread,python-multithreading
float('nan'),com
@login_required,caching
rlock,locking
argparse,argparse
==,hash-collision
__slots__,python-c-api
pickle,shelve
python -m simplehttpserver,terminal
fcntl,nonblocking
/usr/bin,dependencies
open(),file
pip,setuptools
nose,nose
__repr__,repr
python setup.py sdist,software-packaging
w,numpy
__setattr__,getattr
&amp;,bitwise-operators
compile,abstract-syntax-tree
os.system(),unit-testing
unittest,stdout
input,django-testing
networkx,directed-graph
py.test,py.test
easy_install,virtualenv
iterator,loops
__repr__,unicode
virtualenv env,virtualenv
user,django-models
datetime.datetime.now(),xsd
r,statistics
python,osx
virtualenv,buildout
requirements.txt,porting
__init__,handler
__init__.py,pycharm
1,lambda
pdb,pdb
import pdb; pdb.set_trace(),pdb
#NAME?,perl
manage.py syncdb,osx
django.contrib.auth,django-authentication
b,class
ndarray,numpy
hello world,stored-procedures
threading.thread,multithreading
scipy.optimize.curve_fit,curve-fitting
web.py,web.py
__init__,arguments
m,numpy
multiprocessing,queue
i,std
__doc__,pydoc
a,linear-algebra
sys.exit(1),build
__init__,django-models
lxml,base64
s,numpy
__len__,methods
numpy,numpy
qtgui.qmainwindow,pyqt
x,class
models.py,orm
queryset,django-queryset
multiprocessing.pool,multiprocessing
csv,csv
.py,python.net
raw_input(),curses
beautifulsoup,beautifulsoup
==,equality
foo.py,command-line
datetime.timedelta,timedelta
f,dictionary
with,multiline
nan,numpy
scipy,numpy
ffmpeg,ffmpeg
datetime.timedelta,postgresql
import *,scipy
urllib2.request,binary
name,qtablewidget
str.format(),format
sys.argv,gunicorn
os.path,path
cpickle,dictionary
telnet,process
@patch,patch
__init__(),constructor
setup.py,distutils
a,override
numpy,numpy
with,indentation
0,generator
for,sage
TRUE,app-engine-ndb
hash(),sl4a
df,pandas
__mul__,operator-overloading
virtualenvwrapper,osx-mavericks
wget,web-scraping
setup.py,distutils
networkx,networkx
python,linux
a,random
modelserializer,validation
__init__,interactive
eval(),memoization
multiprocessing,numpy
ctypes,memory-leaks
boto,amazon-web-services
int,memory-management
df,multi-index
mwe,matplotlib
dict,universal-hashing
pandas,pandas
@staticmethod,static-methods
multiprocessing,virtual-machine
requests,import
if,rgb
int,ctypes
__str__,conventions
random,cpython
pygame,pygame
subprocess,subprocess
u,numpy
repr,generator
sys.path,easy-install
n,numpy-broadcasting
nosetests,nose
numpy,memory-management
product,orm
virtualenv,virtualenv
zip,zip
from pyqt4.qtcore import *from pyqt4.qtgui import ,pyqt4
requirements.txt,requirements.txt
a,architecture
pip,pip
python.el,emacs
multiprocessing,multithreading
a,numpy
collections.defaultdict,arguments
title,xml-parsing
m,override
matplotlib,plot
.py,unicode
.pyw,console
threading,python-asyncio
code.interact(),ironpython
foo,gunicorn
namedtuple,override
python setup.py install,mongodb
os.getuid(),admin-rights
pip,pip
n,multiprocess
wget,facebook
test,py.test
imaplib,imap
x,class-design
get,sleep
multiprocessing,queue
a,matrix
matplotlib,matplotlib
signal,linux
del,del
webbrowser,browser
tail,logging
1,set
random,benfords-law
matplotlib,ipython
mean(),traceback
none,string
datetime,datetime
pandas,d3.js
x,filter
a,rotation
try,finally
site-packages,distribute
multiprocessing.manager,multiprocessing
models.py,version-compatibility
numpy,class
django.contrib.auth,django-authentication
python manage.py migrate,django-models
optparse,command-line-arguments
__builtin__,multiprocessing
__init__.py,flask
listview,django-views
pandas.dataframe,python-multiprocessing
__main__,nosetests
subprocess,subprocess
python manage.py runserver,django-1.5
__str__(),override
pip install psycopg2 ,heroku
ordereddict,ordereddictionary
set(),hash
scrapy,scrapy
subprocess,subprocess
f,partial
startswith,django-queryset
"a = [1,2,3,4,5]",filter
is,reference
1,dictionary
tkinter,osx-lion
multiprocessing,gil
__init__,gtk
$ python setup.py build,distutils
subprocess,subprocess
keyboardinterrupt,multithreading
n,polynomial-math
from __future__ import unicode_literals,md5
subprocess,subprocess
configparser,configuration-files
foo,importerror
with,language-features
\w,string
urllib2,bandwidth-throttling
connection,with-statement
test.py,shell
print,logging
pdb.set_trace(),osx
datetime.time,time
bar,function
int,string-formatting
python,bash
numpy,initialization
a,ieee-754
matplotlib,matplotlib
list,list-comprehension
testcase,persistence
test.py,windows-store-apps
*.py,path
ctypes,imagemagick
try,testing
py,gdb
import json,json
/usr/bin/python,environment-variables
get,flask
__init__,iterable-unpacking
test.py,nlp
yield,return
.pyc,runtime-error
float,floating-point
dataframe,dataframe
self,keyword
setup.py,fortran
str.encode(),utf-8
collections.defaultdict,subclassing
python,time
re,unicode
matplotlib,matplotlib
d,scientific-notation
__init__.py,module
in,algorithm
bool,return-type
httplib,handle
matplotlib.pyplot,contour
pandas,scipy
.py,file-extension
dict,flask
setup.py,python-import
float,floating-point
dict,key
help_text,django-forms
datetime.datetime,sqlite
lambda,lambda
__init__.py,module
__new__,immutability
__import__,python-import
0,sentinel
id,enumerable
df,file-io
python2.7,packaging
with,contextmanager
foo,installation
n,numpy
__add__,numpy
matplotlib.pyplot,plot
threading.thread,wxpython
datetime.timedelta,seconds
unittest,code-coverage
zip(),dictionary
__init__.py,shadowing
"_mysql_exceptions.operationalerror: (2006, 'mysql ",decorator
# -*- coding: utf-8 -*-,comments
pandas,pandas
mylist = list(set(mylist)),sqlobject
configparser,configparser
open(),linux
subprocess,subprocess
dict.fromkeys,fromkeys
multiprocessing,web-crawler
@classmethod,class-method
;,csv
a,pandas
unicode,character-encoding
len(),iterator
s,set
get,http
numpy,numpy
__init__.py,flask
#!/usr/bin/env python,shebang
x,types
import,folders
df,lazy-evaluation
post,app-engine-ndb
unboundlocalerror,scope
matplotlib,matplotlib
pydoc,command
ctrl+c,keyboardinterrupt
len,unicode
return,readline
keyerror,format
csv,csv
urls.py,django-urls
scipy,upgrade
data,numpy
argparse,argparse
multiprocessing,garbage-collection
datetime.weekday(),datetime
select,file-io
urllib.urlretrieve,download
item,membership
python,npm
nan,pandas
scikit-learn,scikit-learn
datetime,timestamp
string,python-sphinx
__getitem__,getattr
a,numpy
entry,tkinter
map,zip
test,join
import pdb; pdb.set_trace(),macvim
foo,fhs
virtualenv,osx-lion
staticmethod,static-methods
std::vector,swig
list,containment
null,oop
python,bash
celery,celeryd
a,string-formatting
m,floating-point
flask,flask-sqlalchemy
paste &lt;(seq 20000000) &lt;(seq 2 20000001) &gt;,performance
pprint,pprint
python,numpy
easy_install,easy-install
locale,unicode
and,operands
django-admin,shell
__getitem__,slice
testcase,testing
assert,django
__getitem__,benchmarking
bytes,byte
"[1,2,3,4]",cpython
data,django-admin
float,unicode
python,mongodb
python manage.py runserver,django
ipdb.set_trace(),pdb
globals(),dictionary
subprocess.call,virtualenv
setup.py,dependencies
sys.path,pythonpath
pyqt,tabs
yield,generator
in,string
__slots__,python-internals
__str__,class
text,text
foo,argparse
multiprocessing,exception-handling
df,pandas
static_url,templates
n,rsa
configparser,configparser
exception,boost-python
.txt,string
python setup.py build,bluetooth
python setup.py build,setuptools
*args,autodoc
"import cvcv.namedwindow(""w1"", cv.cv_window_autosiz",webcam
httplib,httpclient
df,pandas
src,pip
pdb,pdb
__init__(),decorator
x,scope
argparse,optional-parameters
dateutil,python-dateutil
__repr__,metaclass
os.system(),command-line
unittest,exception
json.dumps(),ipython-notebook
nose,testing
main.py,coding-style
a,printing
package_data,packaging
__init__.py,pyramid
pip,osx
pip,pip
pyodbc,unicode
pandas.read_csv,dataframe
import,python-sphinx
json,json
.py,pyc
+,concatenation
dict,properties
__init__.py,numpy
__hash__,set
view,haml
&lt;body&gt;,scrape
exit(),execfile
numpy,numpy
sqlalchemy,sqlalchemy
timeit,set-comprehension
nose,nose
print,sqlalchemy
subprocess,subprocess
map,sum
importerror: pycurl: libcurl link-time ssl backend,pycurl
//,regex-negation
isinstance(),introspection
list,set
m,collections
python manage.py syncdb,django
#!/usr/bin/env python,ubuntu
urllib2,keep-alive
virtualenv,virtualenv
pdb.set_trace(),monkeypatching
zlib,tornado
setup.py,fortran
*,parameter-passing
foo,type-conversion
pairs,numpy
y,multidimensional-array
warnings.warn,warnings
try,exception-handling
asyncio,asynchronous
manage.py shell,m2m
subprocess.popen,stdout
networkx,traversal
axes,plot
cprofile,numpy
urllib2,http
struct,struct
input,ipython
python manage.py shell,ipython
get,tornado
f,lisp
asyncio,python-asyncio
nose,peewee
_,internationalization
numpy,numpy
zip,permissions
matplotlib,matplotlib
foreignkey,django-models
user,sqlalchemy
for,file-io
main.py,hadoop-streaming
:,annotations
t,numpy
exec,exec
list,list
x,vectorization
__setattr__,metaclass
len(),optimization
text,html-generation
json,pymongo
python manage.py migrate,web
none,singleton
models.py,django-models
__slots__,pypy
multiprocessing.pool(),concurrency
timeit,profiling
hello world,io-redirection
+,class
join,string
__new__,class-method
changed,qt
manage.py,environment-variables
"my_list = [ [1,2,3,4], [2,4,5,6] ]",sum
n,scipy
except:,exception-handling
task,scheduled-tasks
pandas.dataframe,rounding
__get__,memoization
python setup.py install,anaconda
l,filter
date,group-by
a,metaclass
%matplotlib inline,pycharm
staticmethod,decorator
__str__,dynamic
python setup.py sdist upload,pypi
import pandas,url
__init__.py,naming-conventions
py2exe,compiler-construction
data,pandas
FALSE,django-templates
3,unix
distutils,distutils
setup.py,pypi
logging,importerror
mwe,performance
user,google-app-engine
numpy,numpy
yield,benchmarking
re,unicode
unittest,automated-tests
python-rq,scalability
datetime,sorting
"print ""hello world!""",memory-management
x,floating-point
unittest,decorator
dataframe,missing-data
recv(),amqp
cprofile,profiling
selenium,pandas
numpy,numpy
else,for-loop
print,printing
killed,postgresql
numpy,numpy
logging,logging
python setup.py test,distutils
matplotlib,matplotlib
python.el,ipython
pyodbc,linux
.py,persistence
unicode,character-encoding
argparse,parameters
dataframe,pandas
ndarray,numpy
data,unicode
pandas.dataframe,pandas
TRUE,numpy
pip,sdist
f2py,fortran
sys.stdin,pipe
ls,ls
#NAME?,virtualenv
python-social-auth,oauth
argparse,argparse
object,inheritance
gevent,gevent
flask,flask
print,ipython
image,boto
a,numpy
import,import
n,performance
s,sequence
tox,tox
slice,slice
virtualenv,pip
set(),floating-point
list,callback
re,caching
__init__,decorator
numpy,greatest-common-divisor
settings.py,django-admin
int,sorting
python manage.py syncdb,google-app-engine
virtualenv,path
psycopg2,psycopg2
site-packages,nomenclature
g,flask
python,build
pip,selenium-webdriver
__add__,operators
__init__.py,pyramid
__init__.py,exception-handling
import,coding-style
settings.py,postgresql
__exit__(),contextmanager
import,plugins
python,development-environment
pickle,namespaces
popen,cron
setup.py,command-line
dict,decorator
py.test,py.test
df,dataframe
numpy,numpy
c,hdf5
argparse,command-line-arguments
numpy,numpy
elementtree,elementtree
raw_input(),linux
&gt;&gt;&gt;,command-line
models.py,serialization
subprocess.call,shell
y,matplotlib
range,range
map(),mapreduce
selenium,selenium
from,module
dataframe,pandas
python manage.py shell,shell
networkx,matplotlib
m,numpy
-1,sublist
print,redirect
tarfile,tar
render(),design-patterns
__doc__,django-rest-framework
pandas.dataframe,hdf5
none,numpy
sys.argv,sys
f,bit-manipulation
str.format,format
i,matrix
json,strip
lambda,language-lawyer
ctypes,com
%timeit,ipython-magic
urls.py,dry
__dict__,dictionary
requirements.txt,django-1.6
c,wxpython
view,pandas
s,bytestring
setup.py,freeze
with,with-statement
subprocess,apache
pip,virtualenv
a,indexing
collections.defaultdict,containers
else,try-catch
x,operating-system
json.dumps(),json
__main__,ipython
os.system(),exit-code
raw_input,limit
multiprocessing,parallel-processing
__call__,web-applications
foo.py,scope
key,sorting
len,optimization
post,twitter
compile,built-in
app,flask-socketio
matplotlib,confidence-interval
re,web-scraping
keyerror,keyerror
numpy,random
mysqldb,real-time
scipy,crash
requests,web
with,with-statement
python setup.py build,importerror
mwe,numpy
class,unit-testing
hasattr,class
b,numpy-broadcasting
nan,matrix
super(),inheritance
put,tornado
webapp,web-applications
&lt;select&gt;,cookies
auth_profile_module,authentication
dtype,pandas
.pyc,mercurial
show(),matplotlib
myset,set
os,shell
async,weak-references
l,iteration
scrapy,web-scraping
x,synchronize
python,python-idle
numpy,portability
__eq__(),equality
typeerror: can't use a string pattern on a bytes-l,urllib
__new__,django-models
f(),lazy-evaluation
+,parameters
_,django
datetime,datetime-format
remove,vector
m,coding-style
source,import
f,introspection
popen,subprocess
views.py,google-app-engine
datetime.datetime.now(),datetime
a,reference
pandas,dataframe
default,scikit-learn
dataframe,filtering
a,filtering
none,python-internals
__init__(),init
my_list,grouping
main.py,global-variables
/,url
__del__,del
subprocess.popen,environment-variables
find,pymongo
c,multiple-inheritance
test.py,module
except:,generator
nan,math
mwe,scipy
pip install numpy,visual-c++
text,text-widget
list.sort(),sorting
print,file
string,nonetype
urllib2,character-encoding
#,list-comprehension
json,sockets
item,sqlalchemy
.py,pyc
exec,exec
settings,django-urls
pandas.dataframe,dataframe
view,copy
subprocess.popen,subprocess
easy_install,directory-structure
sort(),sorting
n,numpy
open(),file-io
df,matplotlib
killed,pycurl
for,dictionary
in,google-app-engine
urlparse,kendo-ui
...,emacs
ffmpeg,subprocess
object,metaprogramming
python manage.py syncdb,postgresql
list,inheritance
__eq__,heisenbug
requests,httprequest
view,jinja2
object,nlp
pip freeze,flask
1,base64
re,string
range(),algorithm
pandas.dataframe,pandas
a,matrix
django,pip
.png,imagemagick
requests,networking
from __future__ import absolute_import ,celery
*args,coldfusion-9
exec,py2to3
site,django
__all__,unicode
ipython,installation
subprocess.popen,subprocess
subprocess,subprocess
df,numpy
getopt,getopt-long
set(),csv
web.py,web.py
random,computation
testcase,unit-testing
main.py,module
"print ""hello world!""",nokia
0,code-review
__new__,super
list.remove,list
and,neural-network
py2exe,eoferror
insert,postgresql
request.path,templates
a,plot
urlparse,urlparse
asyncio,python-asyncio
models.py,code-formatting
hashlib,generator
settings.py,internationalization
ipython,ipython
k,combinations
"def add(x,y): return x+y",function
subprocess,subprocess
in,list-comprehension
numpy,numpy
except,exception-handling
nan,pandas
x,null
heapq,data-structures
manage.py runserver,django-signals
numpy,packages
set -x,debugging
dictionary,dictionary
logging,logging
a,permutation
itertools,list-comprehension
canvas,tkinter
csv,mapreduce
pandas.dataframe,memory-leaks
@login_required,unit-testing
__doc__,memory-management
a,indexing
@staticmethod,static-methods
__mul__,operator-keyword
int,decimal
findall,perl
numpy,memory-management
fields,uuid
global,global-variables
__init__,django-models
grid,layout
numpy,numpy
__eq__,collections
x,nose
manage.py,git
foreignkey,rest
setup.py,cx-freeze
1000000,comma
list,idioms
null=true,django-models
genfromtxt,numpy
delete(),sqlalchemy
multiprocessing.pool,threadpool
requests,install
stop,asyncsocket
map,iteration
string,unicode
.py,python-import
requests,ssl
tox,tox
dt,loops
sudo easy_install pip,pip
eval(),eval
django,amazon-s3
python,uml
subprocess,subprocess
+,programming-languages
input,python-mock
pandas,pandas
dataframe,pandas
testcase,mocking
"print ""hello, world!""",numpy
\w,unicode
s,set
python manage.py syncdb,django
cpickle,networking
multiprocessing,multiprocessing
pandas,timedelta
sqlalchemy,module
id,selenium
k,combinations
multiprocessing,pickle
pip install virtualenv,virtualenv
pickle,shelve
'ascii' codec can't encode character u'\u2019' in ,decode
filefield,file
subprocess,subprocess
simplejson,simplejson
__import__,import
id,properties
x,math
stringio,stringio
boto,gzip
tempfile.namedtemporaryfile(),destructor
pandas.dataframe,pandas
test,windows
numpy,numpy
b,escaping
re,replace
foo,clojure
or,boolean-expression
dict,idioms
time.sleep(),selenium-webdriver
content,templates
setup.py,packaging
a,django-models
os.system,domainkeys
django,settings
fabric,fabric
print(),visual-studio-debugging
date,dataframe
+,operators
sqlalchemy,pandas
datetime.datetime.now(),py.test
re,string
multiprocessing,multicore
py2exe,py2exe
enum,enums
struct,biginteger
foreignkey,comments
sudo pip install pil,pip
source venv/bin/activate,pip
datetime.datetime.now(),import
user,django-models
numpy,numpy
virtualenv,virtualenv
list,file
dataframe,binning
argparse,parameters
python -m simplehttpserver,streaming
"isinstance(x, str)",byte
mod_wsgi,flask
networkx,networkx
compile,optimization
__class__,code-duplication
&gt;&gt;&gt;,stdout
enum,enumeration
import,import
__dict__,attributes
max,set
str,inheritance
gui,methods
http://localhost:5000,heroku
//,floor
d,django
numpy,numpy
==,identity
datetime.datetime,subclass
requirements.txt,virtualenv
default,google-app-engine
n,linear-algebra
requests,youtube-api
ipdb.set_trace(),pdb
pip,cairo
a,numpy
tail,command-line
virtualenv,virtualenv
datetime,time
beautifulsoup,lxml
__iter__,iteration
foreignkey,django-rest-framework
h5py,sparse-matrix
__main__,python-c-api
scrapy,web-scraping
send,sockets
matplotlib,size
__del__,destructor
sys.path,module
python2.7,character-encoding
matplotlib,upgrade
__init__,scope
c,class
django,pycharm
a,variables
ndarray,numpy
python manage.py migrate,timezone
stdout,file-io
float,int
__exit__,with-statement
a,scipy
os.system,command-line
python,plot
r.text,encoding
ffmpeg,ffmpeg
os.system(),working-directory
for,nested-loops
std::vector,boost
object,isinstance
zodb,pickle
df,statsmodels
/,django
networkx,functional-programming
views.py,csrf
c,input
argparse.argumentparser,argparse
select(),hdfstore
object,types
pprint,pprint
pandas,numpy
a,data-structures
numpy.savetxt(),writefile
;,scrapy
psycopg2,psycopg2
str.format(),formatting
text,tkinter
python manage.py shell,shell
user,sqlalchemy
subprocess,subprocess
x,interpolation
scapy,spoofing
setup.py,setup.py
input(),testing
py2exe,py2exe
tzinfo,timezone
stdout,string-formatting
int,list
x,numpy
settings.py,django
foreignkey,forms
__init__.py,embed
a,django-admin
python,elasticsearch
ctrl+c,subprocess
f(),restructuredtext
curl,subprocess
subprocess,popen
__init__,iterator
dict,pandas
python,anaconda
re,search
tostring(),lxml
psycopg2,psycopg2
python,registry
lxml,search
beautifulsoup,beautifulsoup
user,django-models
os.walk,os.walk
python manage.py syncdb,postgresql
subprocess.popen,subprocess
del,garbage-collection
import,pyside
__new__,metaclass
py.test,py.test
setup.py,dependencies
matplotlib,matplotlib
pandas.dataframe,numpy
input,distutils
errors.py,flask
#!/usr/bin/env python,command-line
.theanorc,theano
x,optimization
zip,tuples
input,selenium-webdriver
if,if-statement
t,operators
while,pandas
keyboardinterrupt,try-catch-finally
datetime,subclass
requirements.txt,pip
none,reverse
u,matplotlib
x,scipy
id,dereference
ndarray,vector
user,flask-sqlalchemy
re,regex-greedy
thread,io
n,loops
ctypes,performance
__main__,inspection
multiprocessing,memory-leaks
web,tornado
boto,amazon-s3
set,set
zip(),tuples
while,linux
pip install pillow,python-imaging-library
random,random
multiprocessing,garbage-collection
__import__,packages
python manage.py syncdb,virtualenv
setupclass,selenium
dict,dictionary
r,perl
numpy,numpy
python setup.py install,egg
os.chdir(),filesystems
readline,iterator
malloc,malloc
ipython,qtconsole
stdout,stdout
htmlparser,html-parsing
json.dump,utf-8
sqlite3,sqlite3
nosetests,testing
&gt;,comparison
with,subprocess
random.shuffle,optional-parameters
bool,final
__getattr__,pickle
pandas.dataframe,pandas
__repr__,repr
deepcopy,abstract-syntax-tree
foo,python-sphinx
python,htop
svg,svg
javascript,pep8
a,numpy
asyncio,aiohttp
pandas,datetime
pip,package-managers
raw_input,user-input
python manage.py migrate,google-app-engine
argparse,encode
#NAME?,shebang
hash(),cross-platform
popen,unicode
nose,logging
pip install --upgrade pip,pip
runserver,postgresql
python manage.py runserver,manage.py
os.system,subprocess
r,numpy
__init__,decorator
keyerror,keyerror
django.contrib.auth,manage.py
settings.py,configuration
dataframe,plot
urllib2,httpwebrequest
ndarray,floating-point
debug,wsgi
float,numerical-methods
popen,popen
grid,tk
numpy,pandas
d,pandas
models.py,merge
struct,boost-python
django,django-models
pip install psycopg2,psycopg2
requests,base64
next(),tree
struct,floating-point
logging,unit-testing
none,cpython
#!/usr/bin/python# -*- coding: utf-8 -*-,encoding
site-packages,virtualenv
dateutil,distutils
if,django-templates
i,numpy
sqlite3,sqlite3
r,multidimensional-array
data,merge
data,numpy
itertools,permutation
pip freeze,pip
time,datetime
l,split
'abc',list
read(),encoding
__init__,parameters
mongodb,cursor
#NAME?,fabric
requirements.txt,pip
collections,counter
requirements.txt,pycharm
numpy,performance
url,url-parameters
__hash__(),lookup
subprocess.popen,stdout
frozenset,delegation
multiprocessing,multiprocessing
apt-get install,subprocess
unittest,unit-testing
python manage.py syncdb,django-models
zip,list-comprehension
dtype,numpy
testcase,testing
o(n),time-complexity
datetime,epoch
float,operator-overloading
scipy.optimize.curve_fit,scipy
namedtuple,namedtuple
tester.py,deprecated
beautifulsoup,beautifulsoup
while,while-loop
object,pyqt4
n,random
os.listdir,unicode
mysqldb,mysql-python
flask-login,flask
x,slots
tempfile,numpy
split,split
__iter__,coroutine
memoryerror,numpy
text,tkinter
multiprocessing.pool,contextmanager
pip,pip
celery,amazon-ec2
input(),atom-editor
re.sub,backreference
k,itertools
networkx,networkx
self,self
settings.py,django
"&gt;&gt;&gt; round(0.45, 1)0.5&gt;&gt;&gt; round(1",rounding
numpy,numpy
xlrd,dictionary
importlib,dependency-management
pandas.dataframe,pandas
insert,sqlite
f,pickle
pythonw.exe,tkinter
urls.py,login
sys.stdout,stdout
#NAME?,gconf
df,pandas
a,lexical-scope
sqlalchemy,sqlalchemy
pandas,latex
r,numpy
&lt;p&gt;,restructuredtext
TRUE,recursion
dateutil,date
csv,csv
time.sleep(),delay
a,pandas
m,matrix
python setup.py install,beautifulsoup
subprocess,subprocess
__init__.py,boost-python
a,slice
none,nonetype
ctrl+b,sublimerepl
keyerror,keyerror
json,exception-handling
view,path
urllib.urlopen(),file
"a = [0,1,2,3,4,5,6,7,8,9]",slice
+=,dictionary
scipy.integrate.ode,ode
__init__,descriptor
print,multithreading
dict,dictionary
pickle,large-files
multiprocessing.process,parallel-processing
property,unicode
__init__.py,dreamhost
city,design-patterns
frozenset,immutability
python setup.py test,installation
example,python-import
setup.py,egg
in,mysql
entry,filter
string,dictionary
pip,ply
python,cluster-computing
data,statistics
yield,yield
&lt;a&gt;,parsing
file,file
a,random
ipython,erlang
a,numpy
eval(),conditional
optparse,ascii
subprocess.popen(),subprocess
setup.py,setuptools
from __future__ import print_function,emacs
collections.counter,iterator
%matplotlib inline,ipython-notebook
python,shell
df,pandas
datetime,date
sys.argv,glob
curl,curl
python --version,installation
n,sorting
numpy,fortran
if __name__ == '__main__',main
urlopen,urllib2
threading,locking
s,string
git pull,dulwich
dev_appserver.py,sdk
import,aptana
pyplot,numpy
s,immutability
#!/usr/bin/env python,pyglet
__str__,gtktreeview
python,freebsd
@staticmethod,static
__getattr__,pydoc
int,numpy
python,decorator
numpy,numpy
python,.bash-profile
python,google-chrome
unittest,debugging
foo,ipython
subprocess,popen
&lt;p&gt;,web-scraping
asyncio,python-asyncio
\n,http-streaming
pandas,pandas
scikit-learn,scikit-learn
importerror,module
n,optimization
n,scipy
filter,python-internals
pandas,pandas
%paste,heroku
requests,http
__init__.py,ubuntu-12.04
unittest,open-source
a,pycharm
scrapy,scrapy
hello world,web-frameworks
scipy,scipy
l,ipython
1,celery-task
int,postgresql
mock,testing
from gi.repository import gtk,pydev
k,recursion
\w,validation
python manage.py runserver,django
__init__,constructor
numpy,scipy
dict_a,comparison
numpy,numpy
a,performance
argparse,options
pcolormesh,colorbar
pandas,pandas
wget,command-line
boto,amazon-s3
x,parallel-processing
range(),range
urllib,urllib
__setitem__,magic-methods
show_most_informative_features(),scikit-learn
__init__,pylint
read(),user-agent
xlrd,xlrd
numpy,matrix
ctrl+c,interrupt
a,constructor
n,list
__init__.py,chameleon
settings.py,django-templates
requests,python-requests
python manage.py test,logging
__setattr__,setattr
settings.py,environment-variables
foo,metaclass
sum(),generator
gc.collect,v8
login: admin,authentication
multiprocessing,tkinter
python.el,tabs
__dict__,django-models
__class__,attributes
n,finance
&lt;item&gt; &lt;title&gt;item 1&lt;/title&gt; &lt,lxml
or,swift
TRUE,turtle-graphics
format(),string-formatting
lxml,svg
thread,denormalization
none,nonetype
x,equality
logging,file-io
a,while-loop
networkx,mathematical-optimization
cprofile,introspection
mod_wsgi,mod-wsgi
psutil,multiprocessing
stringio,cstringio
nosetests,nosetests
@classmethod,initializer
is,identity
memoryerror,memory-management
testcase,unit-testing
requests,python-requests
none,openerp-7
dataframe,datetime
dataframe,pandas
pandas,pandas
yield,enumerate
main.py,design-patterns
connection,flask
pandas.dataframe,dataframe
manage.py,django-contrib
src,mongoengine
easy_install,pip
textarea,selenium
n,binary
nil,null
numpy,sorting
foo,swig
0,generator
for,map
dict,data-structures
mysqldb,django
insert,firebird
readlines(),list
with,backport
__hash__,hash
raw_input(),eof
.pyc,pyc
xlrd,version
enumerate,numpy
pip,pip
numpy.array,multidimensional-array
time,blocking
settings.py,multiple-databases
datetime,datetime
set,set
c++,regex
django.test.testcase,unit-testing
df,matplotlib
urllib,urllib2
x,vector
matplotlib.pyplot,matplotlib
lxml,parsing
subprocess.call,multiprocessing
setup.py,distutils
&amp;,ampersand
str.format(),terminal
in,peewee
scipy,matplotlib
__and__,redefine
distutils,cross-platform
\n,indexing
python,lambda
doctest,doctest
x,plot
numpy,matrix
[],generator-expression
virtualenv venv --distribute,enthought
"a = [1,2,3,4,5]",memory
a,numpy
*,path
text,tkinter
x,derivative
||=,perl
numpy.array,numpy
is,operator-keyword
dbus,rhythmbox
numpy,numpy
python,zeromq
int,bit-manipulation
python,pyelasticsearch
get,tornado
numpy,numpy
matplotlib,plot
__init__(),attributes
print,stderr
tuple,arrays
png,numpy
__init__,optional-parameters
__enter__,function
if,performance
task,celery-task
int,fractions
subprocess.communicate(),compare
url_for,flask
json,encoding
__init__.py,canonical-name
setup.py,setuptools
0,numpy
main.py,arcgis
queryset,orm
logging,logging
logging,import
nan,nan
a,indexing
myobject,forms
__init__.py,namespace-package
graph,networkx
__init__.py,mod-wsgi
n,recursion
docopt,argparse
foo(),introspection
null,django-admin
@staticmethod,static
find,xpath
unittest,testing
;,awk
if,if-statement
numpy.array,duck-typing
__enter__,with-statement
"if __name__ == ""__main__"":",executable
set,set
boto,boto
x,del
a,object
py.test,testing
n,performance
raw_input,carriage-return
xlrd,xlrd
py2exe,win32com
django.contrib.auth.models.user,django-models
myscript.py,interactive-mode
import numpy as np,numpy
__repr__,repr
super(),superclass
#NAME?,bytecode
split,split
distutils,distutils
requirements.txt,pip
pandas,pandas
mwe,list
setup.py,setuptools
__repr__,instance
str.split,list
[],twitter
lambda,lambda
.txt,text
xml.dom.minidom,file-io
python,tkinter
0,csv
ndarray,numpy
pandas.read_csv(),datetime
__exit__(),exception
text,fonts
__str__,metaprogramming
imaplib,gmail-imap
json,embedding
__init__,code-organization
p,list
__str__,methods
-1,seaborn
select(),popen
scikit-learn,scikit-learn
a,web-scraping
numpy,machine-learning
virtualenv,virtualenv
post,forms
person,flask
employees,oop
scipy,scipy
%s,floating-point
py.test,py.test
os.path,module
&lt;&gt;,2to3
python -m simplehttpserver 8000,image
python setup.py install,install
subprocess,stdout
sys.getsizeof,memory
argparse,argparse
__init__,object
*,numpy
subprocess.popen(),subprocess
foreman start,heroku
__init__,methods
print,keyword
scipy.integrate.ode,ipython-notebook
pip install,scrapy
x-axis,python-datetime
.txt,file-io
enum,sqlalchemy
#!/usr/bin/env python,pdb
csr_matrix,permutation
df,list
s1,set
name,pyramid
r,pandas
pandas,pandas
logging,twisted
none,nonetype
setup.py,nose
foo,diff
.py,buildout
# -*- coding: utf-8 -*-,unicode
sudo easy_install pip,virtualenv
python setup.py sdist,flask
t,numpy
__doc__,gettext
ld_library_path,gdb
asyncio,asynchronous
numpy,scipy
list,int
__getitem__,default
s,slice
python,linux
open(),file-io
sqlalchemy,django
gridspec,matplotlib
enum,enums
__init__.py,organization
a,optimization
try,try-catch
django,heroku
readline,readline
id,django-models
int,integer-overflow
join(),queue
dict,urlencode
.,recursion
tkinter,events
__init__.py,filter
__name__,module
insert,sql
sys.path.append(),sys
__del__,pyqt
__init__,self
pip,pypi
python.el,emacs
class,class
*args,decorator
from numpy import *,floating-point
__init__.py,flask
nose,nose
__init__(),functools
l,pretty-print
if,comments
x,ipython-notebook
__init__.py,flask-sqlalchemy
__init__,initialization
x,numpy
numpy,multiprocessing
a,matrix
namedtuple,namedtuple
tkinter,ttk
beautifulsoup,html-parsing
issubclass,exception-handling
__getattr__,with-statement
repr(),repr
numpy,numpy
foreignkey,django-models
configparser,configuration
__init__,coroutine
networkx,directed-acyclic-graphs
pandas,nan
pandas.dataframe,numpy
map,iterator
name,django-models
eval,closures
runserver,git
multiprocessing.pool,pool
from,binary-data
c,declaration
json,rest
time,datetime
pandas,database-normalization
foo,metaclass
df,max
dict,primary-key
shell,emacs
c++,serialization
pip install pandas,pandas
len(),widget
print 'hello world',py2exe
is,operators
'x',dictionary
scipy,interpolation
multiprocessing,multiprocessing
TRUE,list-comprehension
matplotlib,matplotlib
json,parsing
setup.py,cython
tox,pypi
plot,plot
test,console
python setup.py build,solr
psutil,process
df,pandas
socket,pymongo
forms.py,forms
conf.py,python-sphinx
struct,struct
curses,pipe
k,while-loop
range,range
property,properties
pip install numpy,numpy
logging,logging
in,set
in,rdflib
map,pycharm
matplotlib,legend
settings.py,django-registration
queryset,django-orm
datetime.datetime.now(),pyyaml
a,refactoring
n,permutation
items(),key-value
sudo pip install lxml,lxml
filter,filter
# -*- coding: utf-8 -*-,utf-8
collections.counter,dictionary
pip install,command-line
views.py,heroku
collections.ordereddict,ordereddictionary
format,image-formats
&lt;script&gt;,django
__call__,numpy
list,time-complexity
unittest,tdd
asyncio,python-asyncio
*args,decorator
else,if-statement
import *,change-management
dataframe,merge
__init__(),constructor
dendrogram,hierarchical-clustering
subprocess,exception
n,dictionary
json.dumps(),serialization
nosetests,nosetests
python manage.py runserver,foreman
print,admin
a,numpy
post,python-requests
__str__,coercion
x,random
python manage.py runserver,amazon-web-services
readline,readline
python setup.py develop,cython
__del__,shutdown
views.py,django
property,descriptor
threading,memory-management
id,class-method
random,precision
read_csv,pandas
pygame,pygame
numpy,numpy
python manage.py syncdb,postgresql
__setattr__,class
eval(),language-features
id,sqlite3
user,data-structures
for,linear-algebra
subprocess,shell
__init__,metaprogramming
eval(),compilation
dict,dictionary
values,pandas
n,matlab
__getitem__,setattr
from django.conf import settings,import
graph,built-in-types
self,self
c,stderr
#NAME?,module
node,enums
a,pandas
stdout,decorator
for,web-crawler
__dict__,metaprogramming
wget,puppet
.,beautifier
__hash__,dictionary
setup.py install,distutils
c,scipy
getopt,parsing
random,random
stringvar,user-interface
setup.py,py.test
df,pandas
python setup.py install,setuptools
xrange,ipython
virtualenv,virtualenv
repr,unicode
multiprocessing,multiprocessing
requests,django
"a = [0, 1, 2, 3]for a[-1] in a: print(a[-1])",python-internals
python,matrix
set,set
sys.path,apache
requests,http
pdb,pdb
pip install -r requirements.txt,pip
dict,dictionary
__init__,multiple-inheritance
id,built-in
socket,deferred
raw_input(),variables
pip,virtualenv
scrapy,web-scraping
optparse,optparse
user,django-admin
g,networkx
next,pyd
dataframe,numpy
time.time(),numpy
__init__.py,sudo
set,set
g,igraph
dtype,numpy
sys.stdout.write(),stdout
x,signal-processing
counter,max
csv,csv
get,encoding
#!/usr/bin/env python,shebang
views.py,model-view-controller
multiprocessing.pool,tarfile
string,keyword-argument
views.py,django-views
decorator,decorator
subprocess.popen,ipython
b,scipy
sys.path,sys.path
len,multibyte
sys.path,path
__iter__,iterator
subprocess.popen,pipe
float('nan'),tuples
map(),map
pip,pip
yield,yield
python setup.py build,django
i,numpy
python,inline
import,import
networkx,graph-theory
python,qt-designer
numpy.array,numpy
*args,varargs
a,readability
dict,dictionary
__eq__,count
df,pandas
scikit-learn,scipy
scikit-learn,sparse-matrix
exec,exec
scipy,interpolation
save(),fixtures
f,naming-conventions
n,numpy
text,polymorphism
foo,location
a,sorting
dataframe,pandas
x,conditional
pass,template-method-pattern
namedtuple,subclass
numpy,performance
numpy,numpy
entry,widget
o,scipy
in,size
x,properties
n,math
dgtsv,linear-algebra
t,daemon
__init__.py,fabric
get,flask
numpy.array,map
map,lambda
pyeval_evalcode,python-c-api
datetime,python-import
integerfield,django
cpickle,marshalling
numpy,py2exe
set,subclassing
user,null
self,decorator
collections.namedtuple,python-internals
setup.py,pypi
dataframe,pyspark
title,hash
datetime.isocalendar(),calendar
ipython,ssh
none,class-instance-variables
socket.error: [errno 48] address already in use,shutdown
wget,download
#,string
pandas,pandas
*,org-mode
python,mpi
.lnk,shortcut
matplotlib,pandas
django,django
n,regex-lookarounds
numpy,plot
x,list
attributeerror,duck-typing
list,mean
os.system,subprocess
tkinter,fullscreen
and,conditional
__mul__,types
def,django-views
python,distributed
urls.py,django-authentication
none,nonetype
manage.py,eclipse
xlrd,excel-2010
data,openpyxl
x,indexing
.py,command-line
while,t
subprocess,subprocess
tuple,tuples
mongodb,pymongo
dataframe,dataframe
csr_matrix,petsc
pip,whois
dataframes,pandas
&lt;div&gt;,xss
0,encryption
numpy,derivative
data,numpy
tuple,interface
df,statsmodels
__init__,init
__init__.py,import
asyncio,sftp
a,pandas
if __name__ == '__main__',command-line-interface
@classmethod,decorator
datetime,timezone
python manage.py check,pinax
django.contrib.auth,unit-testing
numpy,pandas
virtualenv,pycharm
with,nested
insert,sqlite
"[1,2,3,4,5]",performance
%s,string-formatting
with,stdout
models.py,django-models
re,string
htmlparser,html-parsing
pip install scrapy,pip
get,coding-style
python,lambda
x,statistics
python,pylint
select(),select
help_text,django-admin
r,mpi
len,packet
model,verification
requirements.txt,pip
multiprocessing,keyboardinterrupt
df,pandas
networkx,networkx
find,networking
try,try-catch-finally
pandas,pandas
urllib2.urlopen,networking
requirements.txt,heroku
dataframe,pandas
__hash__,key
a,setuptools
__new__,metaclass
&lt;body&gt;,beautifulsoup
easy_install --help ,windows-7-x64
wget,io
threading.thread,debugging
selenium,selenium-webdriver
users,chat
setup.py,buildout
object,pygame
optparse,optional-parameters
django.contrib.auth,user-registration
@classmethod,class-method
user,url-routing
argparse,argparse
a,numpy
float,floating-point
string,code-generation
&lt;div&gt;,webdriver
for,numpy
dataframe,pandas
os,ipython-magic
groupby,dataframe
multiprocessing,python-multiprocessing
z,numpy
exec,python-exec
__init__,typeerror
x,algebra
numpy,numpy
__init__(),overriding
with,with-statement
sqlite3,sqlite3
__init__,decorator
thread,filelock
logging,amazon-web-services
pyqt,pyqt4
**kwargs,kwargs
for,django
brew doctor,config
name,pandas
switch,dictionary
tkinter,tkinter
is,keyword
tkinter,glib
to_excel,google-spreadsheet
subprocess,pylons
unicode,python-unicode
b,aggregate
sys.argv,character-encoding
python,wsgi
subprocess.popen(),subprocess
groupby,pandas
getattr(),locals
collections.defaultdict,defaultdict
dict,wrapper
matplotlib,matplotlib
virtualenvwrapper,pythonpath
a,functional-programming
django.contrib.auth,django-contrib
m,elements
.pyc,compilation
stdout,file
threading,multiprocessing
c,nested
socket.error: [errno 48] address already in use,socketserver
@property,setter
re.compile(),performance
n,sorting
multiprocessing,multiprocessing
subprocess.popen,pipe
imshow(),3d
logging,config-files
dir(),properties
append(),append
py2exe,windows-installer
meteor,meteor
matplotlib,gtk
user,concurrency
example,performance
value,pyqt
psycopg2,psycopg2
df,formatting
get_or_create,django-models
a,scipy
tkinter,tkinter
manage.py runserver,django
read_csv,memory
pickle,pickle
re,sublimetext3
id,xml
ssh,ssh
a,pymc
mock,python-mock
json,encoding
webbrowser,python-webbrowser
py.test,py.test
matplotlib,x11
numpy,numpy
df,slice
tkinter,dialog
virtualenv,virtualenv
pyodbc,pyodbc
sklearn.pipeline.pipeline,scikit-learn
python,timeout
user,django-models
import,rpy2
python manage.py makemigrations,django-migrations
for,lambda
boto,amazon-s3
settings.py,datetime
operator.itemgetter,operators
a,numpy
pandas,installation
d,probability
*args,varargs
r,scatter-plot
attributeerror,distribution
a,oop
list,sorting
h5py,hdf5
def,wtforms
__del__,destructor
map,dictionary
subprocess.popen,unix
os.listdir,curses
touch,filesystems
a,numpy
python,32bit-64bit
pip,pip
xml.dom.minidom,ironpython
matrix,numpy
numpy,numpy
dataframe,pandas
python,machine-learning
python -m simplehttpserver,apache
__new__,django-models
foo.py,subprocess
a,merge
df,numpy
repr(),decorator
a,linear-algebra
py.test,fixtures
package_data,setup.py
nose,nose
random.random(),random
z,boxplot
htmlparser,parsing
x,scipy
scipy.optimize.curve_fit,mathematical-optimization
import,distutils
dict,hash
re,lookbehind
pandas dataframe,seaborn
pip install mysql-python,mysql-python
x,substring
from,pandas
df,vectorization
"[1,2,3,4,5]",loops
im_class,methods
math,import
test.py,code-analysis
@,decorator
sys.path.append(),module
nan,nan
df,dataframe
a,vector
canvas,tkinter
none,nonetype
# -*- coding: utf-8 -*-,suds
python2.7,mongodb
f,function
int,subclass
eval,numpy
multiprocessing,scipy
csv,reader
datetime,pytz
d,numpy
reverse,decorator
stringio,optimization
a,matrix-multiplication
sys,netbeans6.8
subprocess,firefox
multiprocessing.process,multiprocessing
for,django-templates
__init__.py,initialization
pyodbc,pyodbc
socket.error: [errno 98] address already in use,flask
random.sample,random
a,bit-manipulation
wget,vagrant
grid,tkinter
printf,sqlite3
model,django-models
setup.py,pip
matplotlib,latex
**kwargs,iteration
foo,plot
django,html5
users,optimization
r,ggplot2
__getattr__,inspect
pandas,dataframe
request.path,flask
#!/usr/bin/python,crontab
app.yaml,setup-project
sys.stdout,posix
pip,setuptools
person,django-rest-framework
datetime,deserialization
foo,alias
numpy.linalg.inv,scipy
id,matplotlib
nan,selenium
os.system,process
popen,apt
&amp;,subprocess
x,pandas
in,string-search
.png,visio
for,iterable
x,for-loop
datetime,datetime
.,collections
__dict__,subclass
counter,filter
k,numpy
try,list-comprehension
x,pandas
for,matplotlib
matplotlib,plot
try,exception-handling
t,numpy
x,ctypes
matplotlib,heatmap
ipython,ide
@classmethod,static-methods
itertools,split
**kwargs,kwargs
@staticmethod,static-methods
foo.py,python-import
e = 'a' + 'b' + 'c' + 'd',line-breaks
__init__.py,namespaces
.readline,subprocess
foreignkey,django-models
datetime,date
__new__,class-design
urllib2,urllib
property,decorator
json.dumps(),serialization
httplib,networking
print(),printing
isset(),defined
ctypes,ctypes
__init__.py,folders
optparse,optparse
match(),search
namedtuple,namedtuple
simplejson,serialization
javadoc,javadoc
pythonpath,environment-variables
pip install scipy,scipy
size(),numpy
make install,centos
requirements.txt,setuptools
setup.py,package
settings,pydev
multiprocessing,multiprocessing
dataframe,pandas
lambda,lazy-evaluation
os.listdir(),wildcard
e.printstacktrace(),stack-trace
__setitem__,dictionary
the fox jumped over the log.,string
show(),plot
namedtuple,namedtuple
__init__,immutability
range(),list
unicodedecodeerror,utf-8
except:,exception-handling
series,pandas
datetime.datetime.now(),datetime
values,dictionary
datetime.datetime,numpy
__init__(),subclass
requirements.txt,pip
__call__,call
pip install,scipy
setup.py,dependencies
dict.copy(),dictionary
__init__,superclass
__init__.py,python-import
__init__,python-c-api
django,virtualenvwrapper
manage.py runserver,logging
__getattribute__,encapsulation
getattr(),instantiation
datetime,timedelta
"mydict = { ""key1"": 1, ""key2"": 2, ""key3"": 3, }",code-formatting
threading,pyqt
keyboardinterrupt,pool
stdout,stdout
logging.conf,logging
__hash__(),hashcode
findall(),beautifulsoup
settings.py,logging
pip install -r requirements.txt,virtualenv
__init__.py,package
models.py,django-models
foobar,virtualenv
pip install,osx-lion
__eq__,serialization
syncdb,django-models
issubclass,inheritance
pip install pillow,windows-7-x64
python manage.py syncdb,django
ipython,debugging
reduce(),multidimensional-array
setup.py,cython
items(),filter
__init__.py,initialization
enumerate,iteration
from django.conf import settings,settings
example,introspection
easy_install,setuptools
format(),ascii
open(),py2to3
itertools,iterator
process,multiprocessing
eval(),abstract-syntax-tree
x == y,equality
pip freeze,virtualenv
matplotlib,biopython
cmd.exe,windows-vista
foo.py,haskell
virtualenv,pip
printf,deprecated
multiprocessing,parallel-processing
settings.py,django-middleware
simplejson,virtualenv
__init__,logging
pip install,anaconda
findall,beautifulsoup
strftime,datetime
return,performance
easy_install,easy-install
python,centos
__slots__,data-structures
foreman start,heroku
task_id,celery
pip install,distribute
abc.abstractmethod,static-methods
urlopen,urllib2
arange,matplotlib
__slots__,subclass
unboundlocalerror,scope
pandas,plot
logging,osx-mountain-lion
flask-login,flask-login
python,easy-install
unittest,user-interface
time.time(),duration
namedtuple._replace,namedtuple
__init__,init
continue,continue
__path__,module
importerror,linux
namedtuple,namedtuple
groupby,pandas
print(),compatibility
__str__,object
#NAME?,heroku
object,deprecated
assert,assert
from __future__ import unicode_literals,unicode
app.run(),sqlalchemy
python setup.py test,nose
sort(),sorting
httplib,http-headers
unicode,unicode
__slots__,class
__setitem__,subclass
python setup.py install,distutils
py.test,py.test
matplotlib.pyplot,matplotlib
httpresponse,http
requests,http-request
__new__,language-design
distutils,setup.py
os.system,stdout
__name__,testing
matplotlib,scipy
exit(),anonymous-class
python,pip
collections,dictionary
len(x),shuffle
ctypes,ctypes
slugify,unicode
manifest.in,setuptools
urllib2,urllib2
insert,psycopg2
time.time(),linux
syncdb,django-1.8
random,random
celery,celery
lambda,generator
inspect.stack,introspection
recv(),nonblocking
pyplot,plot
exit(),ipython-notebook
except,exception-handling
scatter(),matplotlib
python,virtualenv
__init__.py,code-coverage
popen(),subprocess
&lt;select&gt;,forms
__get__,methods
sys.path,compiled
clear(),methods
the_job,multiprocessing
requests.get,python-requests
a = [],dynamic-arrays
modelform,forms
__new__,garbage-collection
except,try-catch
class meta,django-models
__init__,dictionary
urls.py,conventions
multiprocessing,pickle
testcase,django-testing
typeerror: can't use a string pattern on a bytes-l,string
stopiteration,generator-expression
runtimeerror: threads can only be started once,pyqt4
python manage.py runserver,virtualenv
simplejson,json
__init__,inheritance
__eq__,user-defined
__init__.py,module
__init__.py,import
element,printing
static,jinja2
__setattr__,override
ctypes,benchmarking
**kwargs,arguments
flush(),flush
dateutil,timezone
scipy.misc.imresize,numpy
datetime,datetime
from mypak import mymod,biopython
if (collresv.repeatability is none or collresv.som,indentation
open(),truncate
testcase,testcase
pip install -r requirements.txt,matplotlib
socket,ip-address
requirements.txt,pip
textwidth,pep8
element,lxml
#!/usr/bin/env python,shebang
print '''dogcat''',heredoc
python,linker
django,django
&lt;script&gt;,deployment
subprocess,multiprocessing
save(),django-models
matplotlib,tex
python setup.py install,ssl
virtualenv,deployment
__init__,initialization
javascript,integration
queryset,django-models
import,class
easy_install,virtualenv
#NAME?,argparse
exception,jython
setup.py install,setuptools
assertionerror,assert
__init__.py,runtime
attributeerror,exception-handling
namedtuple,python-internals
python setup.py sdist,setuptools
datetime.datetime.now(),unit-testing
admin.py,django
vacuum,postgresql
sorted(),sorting
multiprocessing,generator
optparse,command-line-interface
__slots__,slots
fibonacci,generator
enumerate,templates
people,django-models
python setup.py sdist,distutils
asyncio,asynchronous
dataframe,slice
include,virtualenv
main.py,module
__init__,automated-tests
pytest,setup.py
manage.py syncdb,django-users
execfile,import
object,class
__doc__,attributes
requests,python-requests
multiprocessing.pool,data-structures
pip freeze,requirements
wprintf,perl
string,escaping
requesthandler,google-app-engine
"[1, 2, 3, 4, 5]",list-comprehension
python hello.py,python-import
**kwargs,keyword
__getattr__,oop
python setup.py install,virtualenv
db.model,simplejson
__init__,inheritance
imshow(),matplotlib
__doc__,dynamic
format(),boolean
pylint,pylint
cpickle,serialization
git commit,editor
python,node.js
isatty(),io-redirection
__import__,python-module
vars(),dictionary
dataframe,dataframe
python setup.py install,install
__add__,sum
__hash__,code-review
subprocess.call,coverage.py
@property,decorator
&lt;a&gt;,lxml
genfromtxt,scikit-learn
sys.path,directory
#NAME?,setuptools
asyncio,task
subprocess.popen,ffmpeg
%paste,ipython
not null,django-models
__init__,super
import,persistence
render(),celery
memoryerror,memory-leaks
dataframes,pandas
subprocess.check_output,subprocess
__init__,init
setup.py,setuptools
__init__,instance-variables
lambda,numpy
process,terminate
dataframe,tsv
set(mylist),list
lower_case_with_underscores,camelcasing
except,nested
queryset,memory-management
views.py,django-templates
webapp,google-app-engine
python manage.py shell,pycharm
models.py,django-rest-framework
re.sub,stop-words
matplotlib,data-visualization
ordereddict,ordereddictionary
repr(),self-reference
created_time,django-rest-framework
sys.exit(0),cgi
python,download
multiprocessing.pool,sha256
fig.savefig(),image
__file__,path
__init__,constructor
os.system,csh
hcluster,cluster-analysis
sys.argv,command-line-arguments
easy_install,packages
sched.scheduler,scheduled-tasks
select,psycopg2
/var/www,django-settings
operator.itemgetter,dictionary
accumarray,accumulator
__init__.py,python-import
git diff,diff
from flask.ext.sqlalchemy import sqlalchemy,flask
gc.collect(),optimization
__hash__(),comparison
settings.py,web
setup.py,packages
multiprocessing,ipython
dataframe,pytables
stdout,version-control
#NAME?,argparse
python,virtualenv
product,combinatorics
str(datetime_object),parsing
scrolledwindow,pygtk
application/json,dictionary
pandas,numpy
pylint,python-extensions
malloc,cpython
ctypes,ipython
/var/www,mod-wsgi
import settings,django-settings
gc.collect(),root
sys.argv,command-line
#!/usr/bin/env python,osx-mountain-lion
foobar,import
sys.stdout,osx
unique,pysqlite
aspectj,python-extensions
stringio,stringio
pickle,pickle
os.system(),printing
"print 'processorerror(%r, %r, %r)' % (self.file, s",textwrapping
"[1,2,3]",tuples
keyerror,wrapper
settings.py,django-templates
subprocess,subprocess
"[1,2,3]",raw-input
cscope,editor
python,seed
make install,opencv
return none,generator
urlopen,urllib
marshal,caching
timeit,decorator
return,return
virtualenv,packaging
/usr/bin,mysql-python
exec(),compiler-construction
imaplib,email
append(),memory
thread,encoding
render_template,flask
warnings.warn,cython
python,osx-snow-leopard
requests,urllib2
os.open,low-level
itertools,c++-standard-library
__init__.py,python-sphinx
dataframe,pandas
bytearray,floating-point
nosetests --with-coverage,nose
save(),django
cpickle,caching
unique_together,django-models
htmlparser,html-parsing
file.write(),process
global,decorator
lambda,lambda
develop,distutils
ionice,performance
numpy.r_,numpy
import,shell
pandas,conda
coverage,coverage.py
admin.py,django-admin
importerror: cannot import name celery,celery-task
eng.traineddata,tesseract
reload,python-import
__init__.py,module
pandas.read_csv,pandas
insert,sql
.encode('utf-8'),utf-8
enumerate,file
datetime,django-forms
multiprocessing.pool,pool
requirements.txt,pip
unittest,py.test
urlparse,urllib
__eq__(),python-internals
__init__(),methods
tkinter,tkinter
functools.wraps,functools
sys.path,environment-variables
stopiteration,generator
__iter__,yield
vcvarsall.bat,mingw
return,stopiteration
iterparse(),memory
pip freeze,requirements
python,msysgit
test.py,discover
self.a,namespaces
multiprocessing,qt
os.listdir(),non-recursive
mystring,set
import cv2,documentation
except,exception
__init__(),singleton
max(list),nested
urllib2,urllib2
__init__(),django
foreignkey,django-forms
__new__(),methods
__future__,super
urllib2.urlopen,urllib
conda install scikit-learn,neural-network
easy_install,easy-install
python,virtualenv
__add__,int
setup.py,python-imaging-library
pprint,sympy
conf.py,documentation
python,invalidoperationexception
bytearray,byte
setup.py,setuptools
settings.py,apache
search(),string
ctypes,ctypes
subprocess.popen,popen
http://localhost:5000,flask
reverse,django-signals
dev_appserver.py,email
__init__,immutability
urlopen,urllib
sys.path,ironpython
object,instance
render_to_response,django-templates
pickle,ram
time.sleep(),python-multithreading
scikit-learn,github
randrange,bounds
__str__,magic-methods
__slots__,python-c-api
cpickle,shelve
settings,jinja2
optparse,autocomplete
open(),file
ctrl+c,bash
__init__(),super
#NAME?,setuptools
__setattr__,getter-setter
__repr__,repr
ordereddict,ordereddictionary
manifest.in,software-packaging
getattr(),getattr
reload,import
setup.py,py.test
"[1,2,3]",integer
pip install -r requirements.txt,migration
collections.namedtuple,namedtuple
ctrl+c,signals
type(),dynamic-class-creation
setupclass,unit-testing
requirements.txt,porting
/etc/hosts,tunnel
__del__,handler
condition,pdb
pylint,static-code-analysis
ctypes,x11
self.__dict__,foreign-keys
__doc__,pydoc
settings.py,heroku
false == 0,identity-operator
x == y,identity
__add__,methods
views.py,validation
nosetests,nosetests
multiprocessing.process,multiprocessing
raw_input(),timeout
raw_input(),curses
subprocess.popen,ffmpeg
file.read(),binary
socket.error: [errno 98] address already in use,socketserver
str.format(),format
cpickle,dictionary
script,process
python,constructor
ctypes,qt4
object,gevent
keyboardinterrupt,exception-handling
ipython,zsh
import,programming-languages
FALSE,new-style-class
__mul__,operator-overloading
static,flask
repr(),unicode
pickle,numpy
exception,traceback
settings.py,logging
multiprocessing,virtual-machine
iterable,object
settings.py,django-settings
__repr__,conventions
__init__,scrapy
sqlite3,sqlite
pythonpath,easy-install
select,selenium
nosetests,nose
attributeerror,python-module
multiprocessing,itertools
__init__.py,package
python,ctypes
__str__,metaclass
opencv,opencv
import numpy as np,numpy
**kwargs,syntax-error
# -*- coding: utf-8 -*-,unicode
__debug__,assert
ipython,stdout
os.system,console
easy_install,mongodb
raw_input,tkinter
read(),window-management
virtualenv env,pip
python,queue
ctypes,linux
ipython,ipython
setup.py install,distribute
__class__,closures
python manage.py runserver,osx
ipython,matplotlib
__getitem__,enums
app.yaml,sys.path
socket.error: [errno 98] address already in use,sockets
unique,django-models
threading,subprocess
urllib2.urlopen,flask
virtualenv env,virtualenv
strftime,pandas
__init__.py,web.py
terminate(),pypy
importerror,importerror
range(),generator
sudo python setup.py install,statsmodels
multiprocessing,parallel-processing
pandas,pandas
datetime.datetime,time
foo.py,function
except,testing
timeit,iterator
append(),return
groupby,pandas
python setup.py install,distutils
from module import *,static-methods
np.nan,machine-learning
itertools,color-space
"[1, 2, 3]",scipy
virtualenv,pillow
sys.argv,command-line-arguments
pandas,scipy
easy_install,distutils
template.html,jinja2
__init__.py,python-import
__init__,django-forms
__init__,immutability
__import__,python-import
enumerate,sorting
python2.6,packaging
__init__.py,python-import
matplotlib,plot
__mul__,numpy
difflib,sqlobject
threading,web-crawler
setup.py,gtk
stopiteration,iterator
collections.counter,counter
unicodedecodeerror,csv
urls.py,django-urls
values,pandas
global,decorator
settings.py,django
float64,numpy
button,tkinter
&lt;&gt;,not-operator
virtualenvwrapper,osx-lion
__main__,celeryd
buffer,decode
alembic,flask-sqlalchemy
__repr__,pprint
easy_install,easy-install
pip install matplotlib,cygwin
subprocess,encoding
#!/usr/bin/env python,scripting
time.sleep(),reddit
__getitem__,slice
python setup.py install,egg
unittest,testing
argparse,argparse
sys.path,pythonpath
pandas.dataframe,multi-index
time.time(),password-recovery
itertools,generator
unittest,argparse
"[1,2,3,4]",list
python manage.py runserver,settings
# -*- coding: utf-8 -*-,utf-8
setup.py,cx-freeze
settings.py,sentry
attributeerror,inspection
customer,flask
urls.py,namespaces
__init__.py,pyramid
&lt;p&gt;,utf-8
import,python-sphinx
execfile,subprocess
main.py,execfile
sqlalchemy,sqlalchemy
ndarray,numpy
subprocess,subprocess
__getitem__,operator-keyword
python setup.py install,pycurl
httplib,keep-alive
easy_install,cons
pprint,parameter-passing
tzinfo,django-timezone
tempfile.namedtemporaryfile(),temporary-files
&lt;&gt;,equality
foreignkey,django-admin
unique,django
time.sleep(),multithreading
asyncio,python-asyncio
views.py,permissions
python setup.py sdist,setuptools
python hello.py,flask
__init__,metaclass
python manage.py syncdb,web
django,scikit-learn
urls.py,rest
subprocess,subprocess
/usr/bin,distutils
stringio,io-redirection
&lt;div&gt;,lxml
__init__.py,django-signals
__str__,dynamic
pandas.dataframe,pandas
queryset,json
setup.py,packaging
gi.repository,importerror
transform,lazy-evaluation
from __future__ import unicode_literals,unicode
test.py,decorator
datetime,timezone
%path%,winapi
dataframe,missing-data
python manage.py syncdb,django-models
ctrl+c,multiprocessing
virtualenvwrapper,ubuntu
datetime.datetime,datetime
__class__,types
repr(),escaping
__eq__,comparison-operators
required=false,serialization
__init__.py,pydev
argparse.argumentparser,argparse
requests.get,unit-testing
subprocess,openoffice.org
virtualenv,pip
struct.pack,floating-point
python,process
python setup.py build,cx-freeze
virtualenv,path
settings.py,memcached
namedtuple,type-hinting
os.write,file-descriptor
python,module
import,coding-style
execfile,plugins
multiprocessing,twisted
__future__,module
paramiko,timeout
__repr__(),printing
help(),command-line
subprocess.popen,shell
reduce(),mapreduce
queryset,django-models
__add__,subclass
matplotlib,matplotlib
stdout,redirect
fruits,grouping
lambda,language-lawyer
application/json,rest
setup.py,freeze
subprocess.popen,apache
np.sum,scipy
pandas,pandas
stdout,subprocess
except,gio
memoryerror,fft
__hash__,set
client,flask-socketio
raw_input,interrupt
urllib,web-scraping
python setup.py install,setuptools
python setup.py install,importerror
asyncio,weak-references
python2.7,google-app-engine
scrapy,web-scraping
requirements.txt,heroku
__hash__(),equality
__new__,django-models
__eq__,namedtuple
pytest,data-structures
phantomjs,selenium
warnings,error-handling
sys.stdin,subprocess
dataframes,dataframe
default,scikit-learn
float64,filtering
__init__,init
open(),subprocess
struct,struct
__init__.py,python-import
settings.py,django-settings
__init__,super
&lt;&gt;,replace
urllib2,parsing
"import matplotlib.pyplot as pltplt.plot([1,2,3,4])",sublimetext2
sys.stdout,file
urllib,facebook-graph-api
contents,beautifulsoup
tkinter,tkinter
&lt;&gt;,stdin
memoryerror,pypy
itertools,itertools
filter,analysis
save(),django-models
urllib2,curl
double,cython
distutils,numpy
subprocess.popen(),subprocess
changed,gtk
__del__,del
__hash__,heisenbug
np.nan,nan
cprofile,loops
models.py,webapp2
__init__.py,packages
__init__.py,unicode
read(),pipe
__new__,super
python,jython
rstrip,strip
script,docstring
raw_input(),eoferror
except,exception-handling
dataframe,memory-leaks
@login_required,unit-testing
os.listdir,unicode
windowserror: [error 2] the system cannot find the,git
malloc,numpy
python,arguments
exec(),exec
finally,try-finally
python manage.py collectstatic,amazon-web-services
conf.py,python-sphinx
__init__,django-models
"(x1,y1)",numpy
python,libraries
__eq__,collections
sphinx-quickstart,packages
delete(),sqlalchemy
dataframe,pandas
filter,iteration
unicode,unicode
person,set
datetime.timedelta,loops
dataframe,pandas
python setup.py install,raspberry-pi
app.run(debug=true),unix
threading,multiprocessing
dataframe,timedelta
threading.thread,queue
stopiteration,yield
/usr/bin/python,touch
__dict__,attributes
py.test,destructor
dataframe,pandas
matrix,numpy
clear(),elementtree
python setup.py develop,paster
migrate,database-migration
select,insert
slugify,validation
py2exe,exe
"""""decoder jpeg not available""""",pip
virtualenv,virtualenv
setup.py,setuptools
networkx,networkx
sys.path,embedded
&gt;&gt;&gt;,stdout
type(),instantiation
__main__,exec
tkinter,methods
pandas,numpy
double,dll
csr_matrix,numpy
csr_matrix,subclass
easy_install,cairo
raw_input,user-input
#!/usr/bin/python,jenkins
post_save,signals
requests.get,http
python setup.py install,installation
__iter__,iteration
integerfield,django-rest-framework
importerror,applescript
datetime,amazon-web-services
__del__,destructor
pandas.read_csv,pandas
__init__,init
urllib,urllib
import matplotlib,py2exe
matplotlib,plot
subprocess,subprocess
pickle,pickle
simplejson,json
show(),plot
object,types
str.format,formatting
__setitem__,dictionary
importerror: no module named httplib2,importerror
__hash__,dictionary
button,tkinter
subprocess,subprocess
python setup.py install,setup.py
__del__,pysqlite
"if __name__ == ""__main__"":",setuptools
__init__.py,optional
import,virtualenv
unicodeencodeerror,utf
subprocess,subprocess
python,popen
sys.path,registry
db.model,sqlalchemy
beautifulsoup,beautifulsoup
os.walk,os.walk
views.py,methods
"map = { 'a': 1, 'b':2 }",inverse
__init__.py,osx-lion
unique,sqlalchemy
__init__,metaclass
__init__.py,prefix
&gt;&gt;&gt; import sys&gt;&gt;&gt; print sys.path,unix
datetime,subclass
__init__(),wolfram-mathematica
httpresponse,decorator
root.mainloop(),tkinter
urllib.urlopen(),image-stitching
threading,io
celery,celery
psutil,performance
__main__,inspection
urllib2.urlopen,urllib2
random.sample,random
__init__.py,module
__exit__,generator
thread,timer
flush(),performance
is not,list-comprehension
logging,stdout
pickle,msgpack
readline(),numbers
importerror,pyqt
random.shuffle,optional-parameters
python,xlrd
__init__,repr
"if __name__ == ""__main__"":",package
compile,abstract-syntax-tree
__init__.py,import
__iter__,splat
__file__,path
hash(),cross-platform
datetime,datetime
subprocess.call,subprocess
__init__,decorator
pandas,pandas
logging,unit-testing
easy_install,distutils
client,automated-tests
subprocess.check_output,stdout
@staticmethod,monkeypatching
subprocess,subprocess
__init__,restructuredtext
__init__,pyopencl
pymongo,cursor
myobject,pyqt4
matplotlib,axes
__iadd__,python-internals
io.open,file-io
multiprocessing,multiprocessing
subprocess.popen(),subprocess
.add(),pandas
static,configuration
get_or_create,django
time.time(),epoch
python setup.py test,unit-testing
namedtuple,namedtuple
sqlite3,mysql-python
__call__,python-c-api
@patch,patch
importlib,dependency-management
@login_required,flask-login
urls.py,login
cprofile,mod-wsgi
sys.stdout,stdout
numpy.gradient(),discrete-mathematics
__eq__(),duck-typing
argparse.argumentparser,argparse
profile,scipy
subprocess.check_output,subprocess
&amp;nbsp;,syntax-highlighting
insert,red-black-tree
cpickle,large-files
__init__.py,dreamhost
__class__,override
virtualenv,deployment
__init__,default-constructor
select,freebsd
easy_install,egg
__getattribute__,magic-methods
python,boto
super(),super
optparse,ascii
shell=true,subprocess
clear(),tkinter
__slots__,equality
type(),descriptor
enumerate,substring
objects,sorting
python,heroku
import sys,main
multiprocessing,locking
__init__(),pyqt
matplotlib,numpy
np.append,numpy
__repr__,gtktreeview
settings.py,settings
sudo pip install lxml,lxml
python,.bash-profile
webbrowser,google-chrome
__eq__(),metaclass
timeit,timeit
foo.bar,ipython
__getitem__,generator
pip install -r requirements.txt,setuptools
unicodedecodeerror,utf-8
elementtree,elementtree
multiprocessing.process,telnetlib
python setup.py install,pip
my_list,match
pythonpath,ubuntu
print(x),compilation
super(),multiple-inheritance
pip freeze,import-module
__main__,function
open(),webkit
series,django-forms
append(),list
python manage.py test,logging
zipfile,zip
ctypes,cython
tkinter,tkinter
python.el,tabs
dataframe,indexing
foo.bar,first-class-functions
import,scrapy-spider
__doc__,attributes
stopiteration,range
dis.dis,python-internals
psutil,multiprocessing
ctypes,pandas
global,factory-boy
debug(),command-line
pip install,pip
insert,firebird
__hash__,hash
views.py,django
raw_input(),eof
pip --version,pip
urllib2,urllib2
save(),multithreading
setup.py,setuptools
distutils,distutils
__call__,decorator
manage.py test,unit-testing
urllib2,cookielib
doctest,doctest
groupby,pandas
__del__,wxformbuilder
multiprocessing,multiprocessing
scikit-learn,scikit-learn
insert,sql
&gt;&gt;&gt;,macports
python,numpy
urls.py,rest
virtualenv,virtualenv
product,flask
pythonpath,python-import
product,sqlalchemy
__exit__,function
setup.py,distutils
celery,celery-task
syncdb,django-models
__getattr__,lookup
autoincrement,uuid
models.py,forms
ipython,python-import
queryset,postgresql
__init__.py,namespace-package
django.contrib.auth.models.user,django-rest-framework
__exit__,with-statement
pickle,set
__init__,object
__str__,repr
super(),superclass
distutils,distutils
matplotlib.pyplot,pandas
./test.py,kwargs
datetime.datetime,parsing
__str__,instance
__str__,methods
__call__,callable
insert,sqlite3
pickle,pickle
re.sub(),regex
profile,styles
popen(),popen
python,lambda
tkinter,tkinter
__eq__,metaprogramming
favicon.ico,pelican
test.py,stderr
numpy.array,numpy
sigterm,python-rq
__init__.py,module
settings.py,apache
employee,oop
vcvarsall.bat,install
stdout,stdout
select(),stdin
time.time(),precision
scrapy,scrapy
ctypes,linux
myobject,int
csr_matrix,permutation
python,pandas
get_dummies,pandas
matplotlib,matplotlib
translate,unicode
python setup.py build,ssl
docopt,gettext
#!/usr/bin/python,cron
range(),dictionary-comprehension
select,sql
__setitem__,default
timedelta64[ns],numpy
models.py,flask-sqlalchemy
python,file-io
gridspec,matplotlib
.lower(),lowercase
django,heroku
null=true,django-models
numpy.datetime64,numpy
timedelta,python-datetime
__init__,self
models.py,django-models
__doc__,dictionary
content,utf-8
printf,executable
python2.7,visa
mymodule.py,reload
keyboardinterrupt,wsgi
__init__,operator-overloading
__init__.py,flask-sqlalchemy
multiprocessing,multiprocessing
__exit__,shelve
dataframe,database-normalization
os.listdir(),file-io
sys.version,macros
python,serialization
python setup.py sdist,packaging
float64 ,floating-point
#!/usr/bin/env python,setuptools
__init__,dictionary
lambda,pyqt
make html,python-sphinx
python,midi
__init__,inner-classes
xrange,range
settings.py,logging
queryset,django-models
dataframe,import
str.split,string
lambda,filter
datetime.time,sqlalchemy
foobar,django-settings
main.py,module
&lt;div&gt;,django
findall,findall
urllib2,urllib2
**kwargs,decorator
__init__,mocking
__all__,change-management
sys.path,packages
threading,exception
.bash_profile,pythonpath
namedtuple,kwargs
python,password-protection
readline,readline
develop,cython
multiprocessing.process,memory-management
views.py,flask
git log,gitpython
continue,exception
re.compile,unicode
__main__,ipython
global,tkinter
exec(),compilation
foobar,xml-comments
post_save,apache
setattr(),setattr
sys.path,flask
"print ""hello, world!""",stderr
memoryerror,memory-management
__setitem__,metaprogramming
insert,sqlalchemy
queryset,django-queryset
stringvar,user-interface
shutil.rmtree,file
python,regression
groupby,itertools
frozenset,set
.htaccess,apache
urllib2,http
import os,import
keys(),dictionary
setup.py,pip
os.walk,multi-level
optparse,optparse
dataframe,numpy
pythonpath,sudo
frozenset,set
insert,osx
__init__.py,python-import
index(),model-view-controller
ggplot,python-ggplot
functools.wraps,decorator
sys.path,sys.path
pythonpath,path
finally,yield
ipython,inline
numpy.array,numpy
queryset,django-queryset
subprocess.popen,hard-drive
__dict__,subclass
apt-get install,virtualenv
timedelta,dst
lambda,lambda
datetime,python-import
models.py,django
forms.py,wtforms
marshal,marshalling
__repr__,subclassing
eval(),metaprogramming
urllib,json
__init__(),instance
__init__,decorator
setup.py,pypi
&lt;select&gt;,validation
unicode,sqlalchemy
setup.py,setup.py
series,time-series
subprocess.call,subprocess
file.txt,stdin
ndarray,templates
manage.py shell,shell
__init__,regex
# -*- coding: utf-8 -*-,utf-8
argparse,argparse
stringio,postgresql
savefig,path
sort(),numpy
__getitem__,exception-handling
&lt;script&gt;,xss
numpy.gradient(),derivative
values,coding-style
__new__,interface
pandas,statsmodels
product,django-apps
subprocess,subprocess
class foo(object): pass,object
scikit-learn,scikit-learn
virtualenv,pycharm
collections.counter,counter
insert,sqlite
matplotlib,plot
django,sqlite3
gridspec,alignment
pylint,pylint
models.py,django-models
random,numpy
except,try-catch-finally
pandas,pandas
dataframe,pandas
fields,metaclass
&lt;script&gt;,beautifulsoup
shlex.split,parsing
unittest,user-interface
psycopg2,pymc
usercreationform,user-registration
timedelta,monkeypatching
importerror: dynamic module does not define init f,cython
__init__.py,xampp
ipython,emacs
requirements.txt,heroku
csr_matrix,scipy
__new__,typeerror
sys.setrecursionlimit(),pickle
itertools,numpy
select,ponyorm
__init__.py,flask
__init__,decorator
sys.exit,amazon-web-services
manage.py runserver,relative-path
globals(),list-comprehension
cprofile,optimization
main.py,package
argparse,command-line-arguments
matplotlib,matplotlib
httplib.httpconnection,http
globals(),locals
cpickle,wrapper
mkvirtualenv,pythonpath
matplotlib.pyplot,plot
requests,request
raw_input(),raw-input
multiprocessing,multiprocessing
main.py,module
imshow(),3d
%(asctime)s,config-files
python,meteor
__init__,method-resolution-order
from gevent import monkeymonkey.patch_all(),monkeypatching
datetime.timedelta,pandas
manage.py runserver,django
multiprocessing,pyqt4
runserver,docker
python setup.py install,pypi
datetime,timezone
button,dialog
objects,map
unittest,timeout
open(),with-statement
__init__.py,nosetests
__eq__,operators
series,series
__del__,destructor
models.py,django
matrix,numpy
dataframe,pandas
memoryerror,machine-learning
multiprocessing,multiprocessing
__new__,django-models
tostring(),encoding
timeit,sqlite3
setup.py,pywin32
functools.wraps,decorator
unittest,fixtures
setup.py,setup.py
iterator,pickle
itertools,itertools
open(),decorator
object,inheritance
queryset,django-queryset
itertools.permutations,dynamic-programming
"[1,2,3,4,5]",combinations
beautifulsoup,beautifulsoup
forms.py,django-forms
read(),file-io
datetime.timedelta,python-mock
reverse,decorator
python setup.py build,64bit
telnet,interactive
values,colorbar
process,multiprocessing
deepcopy,deep-copy
&lt;script&gt;,tornado
read(),error-handling
foreman start,flask
pip install,easy-install
sqlite3,sqlite3
easy_install,packaging
matplotlib,matplotlib
__getattr__,inspect
__new__,metaclass
pandas,interpolation
stdout,posix
stringio,stringio
subprocess.call,process
subprocess.call,apt
settings.py,geodjango
close(),selenium
__iter__,iterable
matplotlib,pie-chart
setup.py install,openerp
datetime,datetime
collections,filter
python,stackexchange-api
except,exception-handling
main.py,project-organization